//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:47:17 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIMdcGarfieldDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "MdcGarfieldDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HMdcGarMacroMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HMdcGarMacroMaker(void *p = 0);
   static void *newArray_HMdcGarMacroMaker(Long_t size, void *p);
   static void delete_HMdcGarMacroMaker(void *p);
   static void deleteArray_HMdcGarMacroMaker(void *p);
   static void destruct_HMdcGarMacroMaker(void *p);
   static void streamer_HMdcGarMacroMaker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HMdcGarMacroMaker*)
   {
      ::HMdcGarMacroMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HMdcGarMacroMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HMdcGarMacroMaker", ::HMdcGarMacroMaker::Class_Version(), "././hmdcgarmacromaker.h", 10,
                  typeid(::HMdcGarMacroMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HMdcGarMacroMaker::Dictionary, isa_proxy, 0,
                  sizeof(::HMdcGarMacroMaker) );
      instance.SetNew(&new_HMdcGarMacroMaker);
      instance.SetNewArray(&newArray_HMdcGarMacroMaker);
      instance.SetDelete(&delete_HMdcGarMacroMaker);
      instance.SetDeleteArray(&deleteArray_HMdcGarMacroMaker);
      instance.SetDestructor(&destruct_HMdcGarMacroMaker);
      instance.SetStreamerFunc(&streamer_HMdcGarMacroMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HMdcGarMacroMaker*)
   {
      return GenerateInitInstanceLocal((::HMdcGarMacroMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HMdcGarMacroMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HMdcGarCal2Maker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HMdcGarCal2Maker(void *p = 0);
   static void *newArray_HMdcGarCal2Maker(Long_t size, void *p);
   static void delete_HMdcGarCal2Maker(void *p);
   static void deleteArray_HMdcGarCal2Maker(void *p);
   static void destruct_HMdcGarCal2Maker(void *p);
   static void streamer_HMdcGarCal2Maker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HMdcGarCal2Maker*)
   {
      ::HMdcGarCal2Maker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HMdcGarCal2Maker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HMdcGarCal2Maker", ::HMdcGarCal2Maker::Class_Version(), "././hmdcgarcal2maker.h", 13,
                  typeid(::HMdcGarCal2Maker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HMdcGarCal2Maker::Dictionary, isa_proxy, 0,
                  sizeof(::HMdcGarCal2Maker) );
      instance.SetNew(&new_HMdcGarCal2Maker);
      instance.SetNewArray(&newArray_HMdcGarCal2Maker);
      instance.SetDelete(&delete_HMdcGarCal2Maker);
      instance.SetDeleteArray(&deleteArray_HMdcGarCal2Maker);
      instance.SetDestructor(&destruct_HMdcGarCal2Maker);
      instance.SetStreamerFunc(&streamer_HMdcGarCal2Maker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HMdcGarCal2Maker*)
   {
      return GenerateInitInstanceLocal((::HMdcGarCal2Maker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HMdcGarCal2Maker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HMdcGarSignalReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HMdcGarSignalReader(void *p = 0);
   static void *newArray_HMdcGarSignalReader(Long_t size, void *p);
   static void delete_HMdcGarSignalReader(void *p);
   static void deleteArray_HMdcGarSignalReader(void *p);
   static void destruct_HMdcGarSignalReader(void *p);
   static void streamer_HMdcGarSignalReader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HMdcGarSignalReader*)
   {
      ::HMdcGarSignalReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HMdcGarSignalReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HMdcGarSignalReader", ::HMdcGarSignalReader::Class_Version(), "././hmdcgarsignalreader.h", 14,
                  typeid(::HMdcGarSignalReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HMdcGarSignalReader::Dictionary, isa_proxy, 0,
                  sizeof(::HMdcGarSignalReader) );
      instance.SetNew(&new_HMdcGarSignalReader);
      instance.SetNewArray(&newArray_HMdcGarSignalReader);
      instance.SetDelete(&delete_HMdcGarSignalReader);
      instance.SetDeleteArray(&deleteArray_HMdcGarSignalReader);
      instance.SetDestructor(&destruct_HMdcGarSignalReader);
      instance.SetStreamerFunc(&streamer_HMdcGarSignalReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HMdcGarSignalReader*)
   {
      return GenerateInitInstanceLocal((::HMdcGarSignalReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HMdcGarSignalReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HMdcGarEffMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HMdcGarEffMaker(void *p = 0);
   static void *newArray_HMdcGarEffMaker(Long_t size, void *p);
   static void delete_HMdcGarEffMaker(void *p);
   static void deleteArray_HMdcGarEffMaker(void *p);
   static void destruct_HMdcGarEffMaker(void *p);
   static void streamer_HMdcGarEffMaker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HMdcGarEffMaker*)
   {
      ::HMdcGarEffMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HMdcGarEffMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HMdcGarEffMaker", ::HMdcGarEffMaker::Class_Version(), "././hmdcgareffmaker.h", 12,
                  typeid(::HMdcGarEffMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HMdcGarEffMaker::Dictionary, isa_proxy, 0,
                  sizeof(::HMdcGarEffMaker) );
      instance.SetNew(&new_HMdcGarEffMaker);
      instance.SetNewArray(&newArray_HMdcGarEffMaker);
      instance.SetDelete(&delete_HMdcGarEffMaker);
      instance.SetDeleteArray(&deleteArray_HMdcGarEffMaker);
      instance.SetDestructor(&destruct_HMdcGarEffMaker);
      instance.SetStreamerFunc(&streamer_HMdcGarEffMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HMdcGarEffMaker*)
   {
      return GenerateInitInstanceLocal((::HMdcGarEffMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HMdcGarEffMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HMdcGarReader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HMdcGarReader(void *p = 0);
   static void *newArray_HMdcGarReader(Long_t size, void *p);
   static void delete_HMdcGarReader(void *p);
   static void deleteArray_HMdcGarReader(void *p);
   static void destruct_HMdcGarReader(void *p);
   static void streamer_HMdcGarReader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HMdcGarReader*)
   {
      ::HMdcGarReader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HMdcGarReader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HMdcGarReader", ::HMdcGarReader::Class_Version(), "././hmdcgarreader.h", 17,
                  typeid(::HMdcGarReader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HMdcGarReader::Dictionary, isa_proxy, 0,
                  sizeof(::HMdcGarReader) );
      instance.SetNew(&new_HMdcGarReader);
      instance.SetNewArray(&newArray_HMdcGarReader);
      instance.SetDelete(&delete_HMdcGarReader);
      instance.SetDeleteArray(&deleteArray_HMdcGarReader);
      instance.SetDestructor(&destruct_HMdcGarReader);
      instance.SetStreamerFunc(&streamer_HMdcGarReader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HMdcGarReader*)
   {
      return GenerateInitInstanceLocal((::HMdcGarReader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HMdcGarReader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HField_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HField(void *p = 0);
   static void *newArray_HField(Long_t size, void *p);
   static void delete_HField(void *p);
   static void deleteArray_HField(void *p);
   static void destruct_HField(void *p);
   static void streamer_HField(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HField*)
   {
      ::HField *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HField >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HField", ::HField::Class_Version(), "././hfield.h", 30,
                  typeid(::HField), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HField::Dictionary, isa_proxy, 0,
                  sizeof(::HField) );
      instance.SetNew(&new_HField);
      instance.SetNewArray(&newArray_HField);
      instance.SetDelete(&delete_HField);
      instance.SetDeleteArray(&deleteArray_HField);
      instance.SetDestructor(&destruct_HField);
      instance.SetStreamerFunc(&streamer_HField);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HField*)
   {
      return GenerateInitInstanceLocal((::HField*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HField*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HMdcGarMacroMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMdcGarMacroMaker::Class_Name()
{
   return "HMdcGarMacroMaker";
}

//______________________________________________________________________________
const char *HMdcGarMacroMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarMacroMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMdcGarMacroMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarMacroMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMdcGarMacroMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarMacroMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMdcGarMacroMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarMacroMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HMdcGarCal2Maker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMdcGarCal2Maker::Class_Name()
{
   return "HMdcGarCal2Maker";
}

//______________________________________________________________________________
const char *HMdcGarCal2Maker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarCal2Maker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMdcGarCal2Maker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarCal2Maker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMdcGarCal2Maker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarCal2Maker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMdcGarCal2Maker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarCal2Maker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HMdcGarSignalReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMdcGarSignalReader::Class_Name()
{
   return "HMdcGarSignalReader";
}

//______________________________________________________________________________
const char *HMdcGarSignalReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarSignalReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMdcGarSignalReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarSignalReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMdcGarSignalReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarSignalReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMdcGarSignalReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarSignalReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HMdcGarEffMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMdcGarEffMaker::Class_Name()
{
   return "HMdcGarEffMaker";
}

//______________________________________________________________________________
const char *HMdcGarEffMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarEffMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMdcGarEffMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarEffMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMdcGarEffMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarEffMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMdcGarEffMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarEffMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HMdcGarReader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMdcGarReader::Class_Name()
{
   return "HMdcGarReader";
}

//______________________________________________________________________________
const char *HMdcGarReader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarReader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMdcGarReader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarReader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMdcGarReader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarReader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMdcGarReader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMdcGarReader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HField::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HField::Class_Name()
{
   return "HField";
}

//______________________________________________________________________________
const char *HField::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HField*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HField::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HField*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HField::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HField*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HField::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HField*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HMdcGarMacroMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HMdcGarMacroMaker.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HMdcGarMacroMaker::IsA());
   } else {
      R__c = R__b.WriteVersion(HMdcGarMacroMaker::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HMdcGarMacroMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HMdcGarMacroMaker.
      TClass *R__cl = ::HMdcGarMacroMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameAsciiOut", &fNameAsciiOut);
      R__insp.InspectMember(fNameAsciiOut, "fNameAsciiOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameSignalOut", &fNameSignalOut);
      R__insp.InspectMember(fNameSignalOut, "fNameSignalOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameGasIn", &fNameGasIn);
      R__insp.InspectMember(fNameGasIn, "fNameGasIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*output", &output);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "postscript", &postscript);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "postscriptfile", &postscriptfile);
      R__insp.InspectMember(postscriptfile, "postscriptfile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "setup", &setup);
      R__insp.InspectMember(setup, "setup.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mdc", &mdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "temperature", &temperature);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pressure", &pressure);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "argon", &argon);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "helium", &helium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ibutane", &ibutane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "co2", &co2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mobility", &mobility);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avalanche", &avalanche);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "collisions", &collisions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trap_radius", &trap_radius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particle", &particle);
      R__insp.InspectMember(particle, "particle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "range", &range);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timebin", &timebin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTimeBin", &nTimeBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "angleDeg", &angleDeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "angleStep", &angleStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "angleStepSize", &angleStepSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printclusters", &printclusters);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSignals", &nSignals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "writeData", &writeData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printcell", &printcell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printoption", &printoption);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printgas", &printgas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printfield", &printfield);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printdrift", &printdrift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printsignal", &printsignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "print3d", &print3d);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cathode_foils", &cathode_foils);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doRungeKutta", &doRungeKutta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isochrones", &isochrones);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nLines", &nLines);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HMdcGarMacroMaker(void *p) {
      return  p ? new(p) ::HMdcGarMacroMaker : new ::HMdcGarMacroMaker;
   }
   static void *newArray_HMdcGarMacroMaker(Long_t nElements, void *p) {
      return p ? new(p) ::HMdcGarMacroMaker[nElements] : new ::HMdcGarMacroMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HMdcGarMacroMaker(void *p) {
      delete ((::HMdcGarMacroMaker*)p);
   }
   static void deleteArray_HMdcGarMacroMaker(void *p) {
      delete [] ((::HMdcGarMacroMaker*)p);
   }
   static void destruct_HMdcGarMacroMaker(void *p) {
      typedef ::HMdcGarMacroMaker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HMdcGarMacroMaker(TBuffer &buf, void *obj) {
      ((::HMdcGarMacroMaker*)obj)->::HMdcGarMacroMaker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HMdcGarMacroMaker

//______________________________________________________________________________
void HMdcGarCal2Maker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HMdcGarCal2Maker.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HMdcGarCal2Maker::IsA());
   } else {
      R__c = R__b.WriteVersion(HMdcGarCal2Maker::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HMdcGarCal2Maker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HMdcGarCal2Maker.
      TClass *R__cl = ::HMdcGarCal2Maker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameAsciiOut", &fNameAsciiOut);
      R__insp.InspectMember(fNameAsciiOut, "fNameAsciiOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*output", &output);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameRootIn", &fNameRootIn);
      R__insp.InspectMember(fNameRootIn, "fNameRootIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inputRoot", &inputRoot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outputHists", &outputHists);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slope", &slope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "voltage[4]", voltage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htime1", &htime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htime2", &htime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastvalidBin[4][18]", lastvalidBin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime1[4][18][100]", mtime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime2[4][18][100]", mtime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime1_err[4][18][100]", mtime1_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime2_err[4][18][100]", mtime2_err);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime1_corr[4][18][100]", mtime1_corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime2_corr[4][18][100]", mtime2_corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime1_err_corr[4][18][100]", mtime1_err_corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mtime2_err_corr[4][18][100]", mtime2_err_corr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max1[4][18]", max1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max2[4][18]", max2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max1bin[4][18]", max1bin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max2bin[4][18]", max2bin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold", &threshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepsize", &stepsize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isBatch", &isBatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "writeHists", &writeHists);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "printSpikes", &printSpikes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "writeascii", &writeascii);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxErrTime1", &maxErrTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxErrTime2", &maxErrTime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "removeSpike[4]", removeSpike);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold1", &threshold1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "threshold2", &threshold2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTimes[4]", nTimes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBin1D_dist", &nBin1D_dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBin2D_angle", &nBin2D_angle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBin2D_dist", &nBin2D_dist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minCopy", &minCopy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxCopy", &maxCopy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "activeHists_1D[4]", activeHists_1D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "activeHists_2D[4]", activeHists_2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*g[4][18][4][3]", &g);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "levelColors[4]", levelColors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeMdc[4]", makeMdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeType[4]", makeType);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HMdcGarCal2Maker(void *p) {
      return  p ? new(p) ::HMdcGarCal2Maker : new ::HMdcGarCal2Maker;
   }
   static void *newArray_HMdcGarCal2Maker(Long_t nElements, void *p) {
      return p ? new(p) ::HMdcGarCal2Maker[nElements] : new ::HMdcGarCal2Maker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HMdcGarCal2Maker(void *p) {
      delete ((::HMdcGarCal2Maker*)p);
   }
   static void deleteArray_HMdcGarCal2Maker(void *p) {
      delete [] ((::HMdcGarCal2Maker*)p);
   }
   static void destruct_HMdcGarCal2Maker(void *p) {
      typedef ::HMdcGarCal2Maker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HMdcGarCal2Maker(TBuffer &buf, void *obj) {
      ((::HMdcGarCal2Maker*)obj)->::HMdcGarCal2Maker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HMdcGarCal2Maker

//______________________________________________________________________________
void HMdcGarSignalReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class HMdcGarSignalReader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.ReadStaticArray((float*)minSignal);
      R__b.CheckByteCount(R__s, R__c, HMdcGarSignalReader::IsA());
   } else {
      R__c = R__b.WriteVersion(HMdcGarSignalReader::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.WriteArray(minSignal, 4);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HMdcGarSignalReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HMdcGarSignalReader.
      TClass *R__cl = ::HMdcGarSignalReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inputAscii", &inputAscii);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameAsciiIn", &fNameAsciiIn);
      R__insp.InspectMember(fNameAsciiIn, "fNameAsciiIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outputRoot", &outputRoot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameRootOut", &fNameRootOut);
      R__insp.InspectMember(fNameRootOut, "fNameRootOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSignals", &nSignals);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinSignal", &nBinSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rangeSignal", &rangeSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinDist", &nBinDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "binSizeDist", &binSizeDist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nStep", &nStep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stepsize", &stepsize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minSignal[4]", minSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdist_1[10]", &hdist_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hdist_2[10]", &hdist_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htime1[10]", &htime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htime2[10]", &htime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hminCharge[4]", &hminCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hminChargeSum[4]", &hminChargeSum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*myconfig", &myconfig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nmake", &nmake);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hresponse", &hresponse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "simResponse", &simResponse);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma1", &sigma1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigma2", &sigma2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "writehists[6]", writehists);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HMdcGarSignalReader(void *p) {
      return  p ? new(p) ::HMdcGarSignalReader : new ::HMdcGarSignalReader;
   }
   static void *newArray_HMdcGarSignalReader(Long_t nElements, void *p) {
      return p ? new(p) ::HMdcGarSignalReader[nElements] : new ::HMdcGarSignalReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_HMdcGarSignalReader(void *p) {
      delete ((::HMdcGarSignalReader*)p);
   }
   static void deleteArray_HMdcGarSignalReader(void *p) {
      delete [] ((::HMdcGarSignalReader*)p);
   }
   static void destruct_HMdcGarSignalReader(void *p) {
      typedef ::HMdcGarSignalReader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HMdcGarSignalReader(TBuffer &buf, void *obj) {
      ((::HMdcGarSignalReader*)obj)->::HMdcGarSignalReader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HMdcGarSignalReader

//______________________________________________________________________________
void HMdcGarEffMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HMdcGarEffMaker.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HMdcGarEffMaker::IsA());
   } else {
      R__c = R__b.WriteVersion(HMdcGarEffMaker::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HMdcGarEffMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HMdcGarEffMaker.
      TClass *R__cl = ::HMdcGarEffMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outputAscii", &outputAscii);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameAsciiOut", &fNameAsciiOut);
      R__insp.InspectMember(fNameAsciiOut, "fNameAsciiOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*inputRoot", &inputRoot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameRootIn", &fNameRootIn);
      R__insp.InspectMember(fNameRootIn, "fNameRootIn.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outputRoot", &outputRoot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNameRootOut", &fNameRootOut);
      R__insp.InspectMember(fNameRootOut, "fNameRootOut.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minSignal[4]", minSignal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSamples", &nSamples);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSteps", &nSteps);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*heff_time1", &heff_time1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*heff_max", &heff_max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*heff_max_distance", &heff_max_distance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*heff_cut[10]", &heff_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*heff_cut_trend", &heff_cut_trend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fitpars[4][18][2]", fitpars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "version", &version);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HMdcGarEffMaker(void *p) {
      return  p ? new(p) ::HMdcGarEffMaker : new ::HMdcGarEffMaker;
   }
   static void *newArray_HMdcGarEffMaker(Long_t nElements, void *p) {
      return p ? new(p) ::HMdcGarEffMaker[nElements] : new ::HMdcGarEffMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HMdcGarEffMaker(void *p) {
      delete ((::HMdcGarEffMaker*)p);
   }
   static void deleteArray_HMdcGarEffMaker(void *p) {
      delete [] ((::HMdcGarEffMaker*)p);
   }
   static void destruct_HMdcGarEffMaker(void *p) {
      typedef ::HMdcGarEffMaker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HMdcGarEffMaker(TBuffer &buf, void *obj) {
      ((::HMdcGarEffMaker*)obj)->::HMdcGarEffMaker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HMdcGarEffMaker

//______________________________________________________________________________
void HMdcGarReader::Streamer(TBuffer &R__b)
{
   // Stream an object of class HMdcGarReader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HMdcGarReader::IsA());
   } else {
      R__c = R__b.WriteVersion(HMdcGarReader::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HMdcGarReader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HMdcGarReader.
      TClass *R__cl = ::HMdcGarReader::IsA();
      if (R__cl || R__insp.IsA()) { }
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HMdcGarReader(void *p) {
      return  p ? new(p) ::HMdcGarReader : new ::HMdcGarReader;
   }
   static void *newArray_HMdcGarReader(Long_t nElements, void *p) {
      return p ? new(p) ::HMdcGarReader[nElements] : new ::HMdcGarReader[nElements];
   }
   // Wrapper around operator delete
   static void delete_HMdcGarReader(void *p) {
      delete ((::HMdcGarReader*)p);
   }
   static void deleteArray_HMdcGarReader(void *p) {
      delete [] ((::HMdcGarReader*)p);
   }
   static void destruct_HMdcGarReader(void *p) {
      typedef ::HMdcGarReader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HMdcGarReader(TBuffer &buf, void *obj) {
      ((::HMdcGarReader*)obj)->::HMdcGarReader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HMdcGarReader

//______________________________________________________________________________
void HField::Streamer(TBuffer &R__b)
{
   // Stream an object of class HField.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> nfz;
      R__b >> nfr;
      R__b >> nfp;
      R__b >> zflmin;
      R__b >> zflmax;
      R__b >> zfldel;
      R__b >> rflmin;
      R__b >> rflmax;
      R__b >> rfldel;
      R__b >> pflmin;
      R__b >> pflmax;
      R__b >> pfldel;
      R__b.ReadStaticArray((double*)tzfl);
      R__b.ReadStaticArray((double*)trfl);
      R__b.ReadStaticArray((double*)tpfl);
      R__b.CheckByteCount(R__s, R__c, HField::IsA());
   } else {
      R__c = R__b.WriteVersion(HField::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << nfz;
      R__b << nfr;
      R__b << nfp;
      R__b << zflmin;
      R__b << zflmax;
      R__b << zfldel;
      R__b << rflmin;
      R__b << rflmax;
      R__b << rfldel;
      R__b << pflmin;
      R__b << pflmax;
      R__b << pfldel;
      R__b.WriteArray((double*)tzfl, 708400);
      R__b.WriteArray((double*)trfl, 708400);
      R__b.WriteArray((double*)tpfl, 708400);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HField::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HField.
      TClass *R__cl = ::HField::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfz", &nfz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfr", &nfr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfp", &nfp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zflmin", &zflmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zflmax", &zflmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zfldel", &zfldel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rflmin", &rflmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rflmax", &rflmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rfldel", &rfldel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pflmin", &pflmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pflmax", &pflmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfldel", &pfldel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tzfl[161][176][25]", tzfl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trfl[161][176][25]", trfl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tpfl[161][176][25]", tpfl);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HField(void *p) {
      return  p ? new(p) ::HField : new ::HField;
   }
   static void *newArray_HField(Long_t nElements, void *p) {
      return p ? new(p) ::HField[nElements] : new ::HField[nElements];
   }
   // Wrapper around operator delete
   static void delete_HField(void *p) {
      delete ((::HField*)p);
   }
   static void deleteArray_HField(void *p) {
      delete [] ((::HField*)p);
   }
   static void destruct_HField(void *p) {
      typedef ::HField current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HField(TBuffer &buf, void *obj) {
      ((::HField*)obj)->::HField::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HField

/********************************************************
* ../build/pc/MdcGarfieldDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableMdcGarfieldDict();

extern "C" void G__set_cpp_environmentMdcGarfieldDict() {
  G__cpp_reset_tagtableMdcGarfieldDict();
}
#include <new>
extern "C" int G__cpp_dllrevMdcGarfieldDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HMdcGarMacroMaker */
static int G__MdcGarfieldDict_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarMacroMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarMacroMaker((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HMdcGarMacroMaker((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarMacroMaker((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HMdcGarMacroMaker((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarMacroMaker[n];
       } else {
         p = new((void*) gvp) HMdcGarMacroMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarMacroMaker;
       } else {
         p = new((void*) gvp) HMdcGarMacroMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setPrintSetup(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFileNameOut(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFileNameSignals(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFileNameGasFile(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setPsFileName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HMdcGarMacroMaker*) G__getstructoffset())->setWriteDataSets((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HMdcGarMacroMaker*) G__getstructoffset())->setWriteDataSets();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setMdcType((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setAngle((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCathodeFoil((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setAngleStepSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setBFieldComponents((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setTemperature((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setPressure((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setArgon((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setHelium((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setIButane((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCO2((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setArgonCO2((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setArgonIButane((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setHeliumIButane((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setMobility((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setParticle(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setRange((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setAvalanche((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setNCollisions((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setTrapRadius((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setUseRungeKutta((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setRungeKuttaMaxStep((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setMCDistance((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setNSignals((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setNLines((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setIsochrones((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCathodHvMod((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setSenseHvMod((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFieldHvMod((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCathodTh((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setSenseTh((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFieldTh((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCathodPitch((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setSensePitch((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFieldPitch((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCathodHv((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setSenseHv((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFieldHv((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setNCathod((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setNSense((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setNField((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCathodX((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setSenseX((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setFieldX((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setArea((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setMaxLoop((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setMinLoop((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCWire((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setCWireFoil((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setTimeUp((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setTimeLow((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setNTimeBin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setDC_S((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->setPrintClusters((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->printMacro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->printStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarMacroMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarMacroMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HMdcGarMacroMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HMdcGarMacroMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarMacroMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarMacroMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarMacroMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarMacroMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_194_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarMacroMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MdcGarfieldDict_194_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HMdcGarMacroMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HMdcGarMacroMaker(*(HMdcGarMacroMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HMdcGarMacroMaker G__THMdcGarMacroMaker;
static int G__MdcGarfieldDict_194_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HMdcGarMacroMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HMdcGarMacroMaker*) (soff+(sizeof(HMdcGarMacroMaker)*i)))->~G__THMdcGarMacroMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HMdcGarMacroMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HMdcGarMacroMaker*) (soff))->~G__THMdcGarMacroMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MdcGarfieldDict_194_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarMacroMaker* dest = (HMdcGarMacroMaker*) G__getstructoffset();
   *dest = *(HMdcGarMacroMaker*) libp->para[0].ref;
   const HMdcGarMacroMaker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HMdcGarCal2Maker */
static int G__MdcGarfieldDict_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarCal2Maker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarCal2Maker((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HMdcGarCal2Maker((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarCal2Maker((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HMdcGarCal2Maker((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarCal2Maker[n];
       } else {
         p = new((void*) gvp) HMdcGarCal2Maker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarCal2Maker;
       } else {
         p = new((void*) gvp) HMdcGarCal2Maker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setFileNameOut(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setFileNameIn(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setCutMax((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarCal2Maker*) G__getstructoffset())->getCutMax((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setSlope((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarCal2Maker*) G__getstructoffset())->getSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setThreshold((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setStepSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getStepSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setBatchMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getBatchMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setPrintMode((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getPrintMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setWriteHists((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getWriteHists());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setWriteAscii((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getWriteAscii());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setMaxErrTime1((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarCal2Maker*) G__getstructoffset())->getMaxErrTime1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setMaxErrTime2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarCal2Maker*) G__getstructoffset())->getMaxErrTime2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setSpikeTypes((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getSpikeTypes((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setSpikeThresholds((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarCal2Maker*) G__getstructoffset())->getSpikeThreshold1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarCal2Maker*) G__getstructoffset())->getSpikeThreshold2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setNTimes((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getNTimes((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setNBin1D_Dist((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getNBin1D_Dist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setNBin2D_Dist((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getNBin2D_Dist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setNBin2D_Angle((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getNBin2D_Angle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setMinCopy((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getMinCopy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setMaxCopy((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getMaxCopy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setHists_1D((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getHists_1D((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setHists_2D((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getHists_2D((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setMakeMdc((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getMakeMdc((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setMakeType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getMakeType((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setLevelColors((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getLevelColors((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setVoltage((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getVoltage((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->setMaxBinNumber((Int_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->getMaxBinNumber((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->printStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->readInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->fillArrays((TH1F*) G__int(libp->para[0]), (TH1F*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HMdcGarCal2Maker*) G__getstructoffset())->fillControl2D((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((HMdcGarCal2Maker*) G__getstructoffset())->fillControl2D((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HMdcGarCal2Maker*) G__getstructoffset())->fillControl1D((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((HMdcGarCal2Maker*) G__getstructoffset())->fillControl1D((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->findMax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->removeSpikes((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->copyToHist((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->copyToArray((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarCal2Maker*) G__getstructoffset())->coefSavGol2((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->do2dSavitzkyGolayFiltering((Float_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->smoothHist((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->fitHist((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->replaceBins((TH1F*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->createGraph((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->plotOverlay((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->writeAscii();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HMdcGarCal2Maker*) G__getstructoffset())->check((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->calcBounderies((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t*) G__int(libp->para[2]), (Float_t*) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->drawBorders((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->make();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarCal2Maker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarCal2Maker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HMdcGarCal2Maker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HMdcGarCal2Maker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarCal2Maker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarCal2Maker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarCal2Maker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarCal2Maker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_199_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarCal2Maker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MdcGarfieldDict_199_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HMdcGarCal2Maker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HMdcGarCal2Maker(*(HMdcGarCal2Maker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HMdcGarCal2Maker G__THMdcGarCal2Maker;
static int G__MdcGarfieldDict_199_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HMdcGarCal2Maker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HMdcGarCal2Maker*) (soff+(sizeof(HMdcGarCal2Maker)*i)))->~G__THMdcGarCal2Maker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HMdcGarCal2Maker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HMdcGarCal2Maker*) (soff))->~G__THMdcGarCal2Maker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MdcGarfieldDict_199_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarCal2Maker* dest = (HMdcGarCal2Maker*) G__getstructoffset();
   *dest = *(HMdcGarCal2Maker*) libp->para[0].ref;
   const HMdcGarCal2Maker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HMdcGarSignalReader */
static int G__MdcGarfieldDict_594_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarSignalReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarSignalReader((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HMdcGarSignalReader((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarSignalReader((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HMdcGarSignalReader((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarSignalReader[n];
       } else {
         p = new((void*) gvp) HMdcGarSignalReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarSignalReader;
       } else {
         p = new((void*) gvp) HMdcGarSignalReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setFileNameOut(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setFileNameIn(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setSigma1((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setSigma2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setSimResponse((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarSignalReader*) G__getstructoffset())->getSigma1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarSignalReader*) G__getstructoffset())->getSigma2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setNSignals((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarSignalReader*) G__getstructoffset())->getNSignals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setNBinSignal((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarSignalReader*) G__getstructoffset())->getNBinSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setRangeSignal((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarSignalReader*) G__getstructoffset())->getRangeSignal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setNBinDist((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarSignalReader*) G__getstructoffset())->getNBinDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setBinSizeDist((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarSignalReader*) G__getstructoffset())->getBinSizeDist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setNStep((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarSignalReader*) G__getstructoffset())->getNStep());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setStepSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarSignalReader*) G__getstructoffset())->getStepSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setMinSignal((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarSignalReader*) G__getstructoffset())->getMinSignal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->setWriteHists((Bool_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4]), (Bool_t) G__int(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->printStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->make((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->closeOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarSignalReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarSignalReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HMdcGarSignalReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HMdcGarSignalReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarSignalReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarSignalReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarSignalReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarSignalReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_594_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarSignalReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MdcGarfieldDict_594_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HMdcGarSignalReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HMdcGarSignalReader(*(HMdcGarSignalReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HMdcGarSignalReader G__THMdcGarSignalReader;
static int G__MdcGarfieldDict_594_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HMdcGarSignalReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HMdcGarSignalReader*) (soff+(sizeof(HMdcGarSignalReader)*i)))->~G__THMdcGarSignalReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HMdcGarSignalReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HMdcGarSignalReader*) (soff))->~G__THMdcGarSignalReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MdcGarfieldDict_594_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarSignalReader* dest = (HMdcGarSignalReader*) G__getstructoffset();
   *dest = *(HMdcGarSignalReader*) libp->para[0].ref;
   const HMdcGarSignalReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HMdcGarEffMaker */
static int G__MdcGarfieldDict_595_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarEffMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarEffMaker((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HMdcGarEffMaker((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarEffMaker((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HMdcGarEffMaker((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarEffMaker[n];
       } else {
         p = new((void*) gvp) HMdcGarEffMaker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarEffMaker;
       } else {
         p = new((void*) gvp) HMdcGarEffMaker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->setFileNameRootOut(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->setFileNameAsciiOut(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->setFileNameRootIn(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->setMinSignal((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMdcGarEffMaker*) G__getstructoffset())->getMinSignal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->setVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarEffMaker*) G__getstructoffset())->getVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->setNSamples((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarEffMaker*) G__getstructoffset())->getNSamples());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->setNSteps((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMdcGarEffMaker*) G__getstructoffset())->getNSteps());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->printStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->make();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarEffMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarEffMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HMdcGarEffMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HMdcGarEffMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarEffMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarEffMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarEffMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarEffMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_595_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarEffMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MdcGarfieldDict_595_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HMdcGarEffMaker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HMdcGarEffMaker(*(HMdcGarEffMaker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HMdcGarEffMaker G__THMdcGarEffMaker;
static int G__MdcGarfieldDict_595_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HMdcGarEffMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HMdcGarEffMaker*) (soff+(sizeof(HMdcGarEffMaker)*i)))->~G__THMdcGarEffMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HMdcGarEffMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HMdcGarEffMaker*) (soff))->~G__THMdcGarEffMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MdcGarfieldDict_595_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarEffMaker* dest = (HMdcGarEffMaker*) G__getstructoffset();
   *dest = *(HMdcGarEffMaker*) libp->para[0].ref;
   const HMdcGarEffMaker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HMdcGarReader */
static int G__MdcGarfieldDict_596_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarReader* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarReader((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HMdcGarReader((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMdcGarReader((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HMdcGarReader((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarReader[n];
       } else {
         p = new((void*) gvp) HMdcGarReader[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMdcGarReader;
       } else {
         p = new((void*) gvp) HMdcGarReader;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readXT(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readXTdiffusion(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readMagboltzVdrift(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readMagboltzGasPrint(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readMagboltzGasPrintVersion6(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readMatrix(*((TString*) G__int(libp->para[0])), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readMatrix1DToHist(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::readMatrix2DToHist(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1D(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1D(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1D(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1D(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1DToGraph(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1DToGraph(*((TString*) G__int(libp->para[0])), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1DToGraph(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1DToGraph(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1DToGraph(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HMdcGarReader::readHist1DToGraph(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) HMdcGarReader::readSignal(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HMdcGarReader::readSignal(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HMdcGarReader::readSignal(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HMdcGarReader::readSignal(*((TString*) G__int(libp->para[0])), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HMdcGarReader::readSignal(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) HMdcGarReader::readGraphE(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Bool_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) HMdcGarReader::readGraphE(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) HMdcGarReader::readGraphE(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) HMdcGarReader::readGraphE(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HMdcGarReader::readGraphE(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HMdcGarReader::readGraphE(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) HMdcGarReader::readGraphE(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMdcGarReader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarReader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HMdcGarReader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HMdcGarReader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMdcGarReader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarReader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarReader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMdcGarReader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_596_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMdcGarReader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MdcGarfieldDict_596_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HMdcGarReader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HMdcGarReader(*(HMdcGarReader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HMdcGarReader G__THMdcGarReader;
static int G__MdcGarfieldDict_596_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HMdcGarReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HMdcGarReader*) (soff+(sizeof(HMdcGarReader)*i)))->~G__THMdcGarReader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HMdcGarReader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HMdcGarReader*) (soff))->~G__THMdcGarReader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MdcGarfieldDict_596_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMdcGarReader* dest = (HMdcGarReader*) G__getstructoffset();
   *dest = *(HMdcGarReader*) libp->para[0].ref;
   const HMdcGarReader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HField */
static int G__MdcGarfieldDict_597_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HField* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HField((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HField((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HField((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HField((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HField[n];
       } else {
         p = new((void*) gvp) HField[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HField;
       } else {
         p = new((void*) gvp) HField;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HField*) G__getstructoffset())->init(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HField*) G__getstructoffset())->calcField((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HField*) G__getstructoffset())->initVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HField::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HField::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HField::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HField::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HField*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HField::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HField::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HField::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__MdcGarfieldDict_597_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HField::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__MdcGarfieldDict_597_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HField* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HField(*(HField*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HField G__THField;
static int G__MdcGarfieldDict_597_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HField*) (soff+(sizeof(HField)*i)))->~G__THField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HField*) (soff))->~G__THField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__MdcGarfieldDict_597_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HField* dest = (HField*) G__getstructoffset();
   *dest = *(HField*) libp->para[0].ref;
   const HField& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HMdcGarMacroMaker */

/* HMdcGarCal2Maker */

/* HMdcGarSignalReader */

/* HMdcGarEffMaker */

/* HMdcGarReader */

/* HField */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncMdcGarfieldDict {
 public:
  G__Sizep2memfuncMdcGarfieldDict(): p(&G__Sizep2memfuncMdcGarfieldDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncMdcGarfieldDict::*p)();
};

size_t G__get_sizep2memfuncMdcGarfieldDict()
{
  G__Sizep2memfuncMdcGarfieldDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceMdcGarfieldDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker))) {
     HMdcGarMacroMaker *G__Lderived;
     G__Lderived=(HMdcGarMacroMaker*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker))) {
     HMdcGarCal2Maker *G__Lderived;
     G__Lderived=(HMdcGarCal2Maker*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader))) {
     HMdcGarSignalReader *G__Lderived;
     G__Lderived=(HMdcGarSignalReader*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker))) {
     HMdcGarEffMaker *G__Lderived;
     G__Lderived=(HMdcGarEffMaker*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader))) {
     HMdcGarReader *G__Lderived;
     G__Lderived=(HMdcGarReader*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField))) {
     HField *G__Lderived;
     G__Lderived=(HField*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField),G__get_linked_tagnum(&G__MdcGarfieldDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableMdcGarfieldDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HMdcGarMacroMaker */
static void G__setup_memvarHMdcGarMacroMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker));
   { HMdcGarMacroMaker *p; p=(HMdcGarMacroMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameAsciiOut=",0,"! file name of ascii output file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameSignalOut=",0,"! file name of output file for signals");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameGasIn=",0,"! file name of gas Input file");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,2,"output=",0,"! file pointer to out put");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"postscript=",0,"! print pictures to ps");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"postscriptfile=",0,"! file name of ps output file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"setup=",0,"! contains the print options");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"cathodth[4]=",0,"! thickness of cathod per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"senseth[4]=",0,"! thickness of sense per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"fieldth[4]=",0,"! thickness of field per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"cathodpitch[4]=",0,"! pitch of cathod per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"sensepitch[4]=",0,"! pitch of sense per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"fieldpitch[4]=",0,"! pitch of field per chamber type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"cathodhv[4]=",0,"! hv of cathod per chamber type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"sensehv[4]=",0,"! hv of sense per chamber type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fieldhv[4]=",0,"! hv of field per chamber type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"cathodhvmod[4]=",0,"! hv of cathod for modification");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"sensehvmod[4]=",0,"! hv of sense  for modification");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fieldhvmod[4]=",0,"! hv of field for modification");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"ncathod[4]=",0,"! number of cathod wires per chamber type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"nsense[4]=",0,"! number of sense wires  per chamber type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"nfield[4]=",0,"! number of field wires per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"dc_s[4]=",0,"! distance cathod and sense wire plane");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"cathodx[4]=",0,"! x of cathod per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"sensex[4]=",0,"! x of sense per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"fieldx[4]=",0,"! x pitch of field per chamber type");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"area[4][4]=",0,"! window of interest");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"cwire[4]=",0,"! wire which is selected for read out");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"cwire_foil[4]=",0,"! wire which is selected for read out if cathode foil is used");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"time_up[4]=",0,"! upper limit of time window");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"time_low[4]=",0,"! lower limit of time window");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"maxLoop[4][18]=",0,"! upper limit for loop over distance");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"minLoop[4][18]=",0,"! lower limit for loop over distance");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"B_components[3]=",0,"! components of the magnetic field");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mdc=",0,"! module type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"temperature=",0,"! temperature of gas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"pressure=",0,"! pressure of gas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"argon=",0,"! fraction of argon in gas mixture (in %)      (allowed in combination with co2)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"helium=",0,"! fraction of helium in gas mixture (in %)     (allowed in combination with ibutane)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ibutane=",0,"! fraction of iso-butan in gas mixture (in %)  (allowed in combination with helium)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"co2=",0,"! fraction of co2 in gas mixture (in %)  (allowed in combination with argon)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mobility=",0,"! mobility for magboltz");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"avalanche=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"collisions=",0,"! number of collisions for monte carlo");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,2,"maxstep[4]=",0,"! maxstepsize of RungeKutta");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-2,2,"mc_dist[4]=",0,"! maxstepsize of monte carlo integration distance");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"trap_radius=",0,"! trap radius around th wire");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"particle=",0,"!");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"energy=",0,"! particle energy in GeV");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"range=",0,"! max track length;");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"timebin=",0,"! bin size of time window;");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nTimeBin=",0,"! number of bins for time window;");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"angleDeg=",0,"! impact angle of track;");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"angleStep=",0,"! impact angle of track (step of stepsizeAngle);");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"angleStepSize=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printclusters=",0,"! switch print option in SIGNAL");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nSignals=",0,"! number of signal per sample point");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"writeData=",0,"! flag for writing out datasets");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printcell=",0,"! switch print on/off for cell");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printoption=",0,"! switch print on/off for option");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printgas=",0,"! switch print on/off for gas");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printfield=",0,"! switch print on/off for field");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printdrift=",0,"! switch print on/off for drift");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printsignal=",0,"! switch print on/off for signal");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"print3d=",0,"! switch print on/off for 3d");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"cathode_foils=",0,"! use cathode foils instead of cathode wires");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doRungeKutta=",0,"! use rungeKutta by default, otherwise MC");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"isochrones=",0,"! distance of isochrones in musec");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nLines=",0,"! number of lines for isochrones plot");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HMdcGarCal2Maker */
static void G__setup_memvarHMdcGarCal2Maker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker));
   { HMdcGarCal2Maker *p; p=(HMdcGarCal2Maker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameAsciiOut=",0,"! file name of ascii output file");
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,2,"output=",0,"! file pointer to output");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameRootIn=",0,"! file name of root input file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TFile),-1,-1,2,"inputRoot=",0,"! root file pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TFile),-1,-1,2,"outputHists=",0,"! root file pointer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,2,"cutMax[4]=",0,"! cut at max drift time");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"slope=",0,"! slope of drift time/bin");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"voltage[4]=",0,"! HV voltage for mdc types");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"htime1=",0,"! hist pointer for time1");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"htime2=",0,"! hist pointer for time2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"lastvalidBin[4][18]=",0,"! counter of non empty bins");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"maxbinNumber[72]=",0,"max number of bins/hist");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime1[4][18][100]=",0,"! array of time1");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime2[4][18][100]=",0,"! array of time2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime1_err[4][18][100]=",0,"! array of error of time1");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime2_err[4][18][100]=",0,"! array of error of time2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime1_corr[4][18][100]=",0,"! array of corrected time1");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime2_corr[4][18][100]=",0,"! array of corrected time2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime1_err_corr[4][18][100]=",0,"! array of corrected error of time1");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"mtime2_err_corr[4][18][100]=",0,"! array of corrected error of time2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"max1[4][18]=",0,"! max 1");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"max2[4][18]=",0,"! max 2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"max1bin[4][18]=",0,"! bin max 1");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"max2bin[4][18]=",0,"! bin max 2");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"threshold=",0,"! threshold value (*stepsize=%)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"stepsize=",0,"! %/step");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isBatch=",0,"! switch batch/no batch mode");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"writeHists=",0,"! switch write Hists to cal2maker.root or not");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"printSpikes=",0,"! switch print spikes or not");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"writeascii=",0,"! switch for write/don't write asciie output");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"version=",0,"! old/new (1/2) file format");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"maxErrTime1=",0,"!");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"maxErrTime2=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"removeSpike[4]=",0,"! switch for removing spike types");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"threshold1=",0,"! threshold for spike removing");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"threshold2=",0,"! threshold for spike removing");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nTimes[4]=",0,"! number of smooth's per type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBin1D_dist=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBin2D_angle=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBin2D_dist=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"minCopy=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"maxCopy=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"activeHists_1D[4]=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"activeHists_2D[4]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph),-1,-1,2,"g[4][18][4][3]=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"levelColors[4]=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"makeMdc[4]=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"makeType[4]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HMdcGarSignalReader */
static void G__setup_memvarHMdcGarSignalReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader));
   { HMdcGarSignalReader *p; p=(HMdcGarSignalReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,2,"inputAscii=",0,"! file pointer to input");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameAsciiIn=",0,"! file name of root input file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TFile),-1,-1,2,"outputRoot=",0,"! root file pointer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameRootOut=",0,"! root file pointer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nSignals=",0,"! number of signals per sample point");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBinSignal=",0,"! number of bins of signal hist");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"rangeSignal=",0,"! upperrange signal hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBinDist=",0,"! number of bins of hist drift time vs distance");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"binSizeDist=",0,"! size of bin hist drift time vs distance (mm)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nStep=",0,"! number of threshold steps");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"stepsize=",0,"! size of threshold step");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"minSignal[4]=",0,"maximum charge per module type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"version=",0,"! read different GARFIELD versions (704,708 (skip))");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"hdist_1[10]=",0,"! distribution of time1 per threshold step");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"hdist_2[10]=",0,"! distribution of time2 per threshold step");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"htime1[10]=",0,"! hist for time1 vs distance per threshold step");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"htime2[10]=",0,"! hist for time2 vs distance per threshold step");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"hminCharge[4]=",0,"! hist for minimum charge per mdc type");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"hminChargeSum[4]=",0,"! hist for minimum charge from sum hist per mdc type");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TPaveText),-1,-1,2,"myconfig=",0,"! configuration discription");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nmake=",0,"! counter for calling make");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F),-1,-1,2,"hresponse=",0,"! response hist");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"simResponse=",0,"! switch simulate response of adc / simple integration");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"sigma1=",0,"! sigma 1 of reponse function of adc");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"sigma2=",0,"! sigma 2 of reponse function of adc");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"writehists[6]=",0,"! switch write on/off for signal");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HMdcGarEffMaker */
static void G__setup_memvarHMdcGarEffMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker));
   { HMdcGarEffMaker *p; p=(HMdcGarEffMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,69,0,0,-1,-1,-1,2,"outputAscii=",0,"! file pointer to output");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameAsciiOut=",0,"! file name ascii out");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TFile),-1,-1,2,"inputRoot=",0,"! root file pointer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameRootIn=",0,"! file name root un file pointer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TFile),-1,-1,2,"outputRoot=",0,"! root file pointer");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TString),-1,-1,2,"fNameRootOut=",0,"! file name root un file pointer");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"minSignal[4]=",0,"! minimum charge per mdc type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"colors[10]=",0,"! colors of hists");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nSamples=",0,"! number of sample points per angle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nSteps=",0,"! number of threshold steps");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1D),-1,-1,2,"heff_time1=",0,"! [mdc][angle]collected charge as function of distance to wire");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1D),-1,-1,2,"heff_max=",0,"! [mdc] maximum collected charge as function of angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1D),-1,-1,2,"heff_max_distance=",0,"! [mdc] distance of maximum charge as function of angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1D),-1,-1,2,"heff_cut[10]=",0,"! [step][mdc] maximum distance for a given threshold charge as function of angle");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1D),-1,-1,2,"heff_cut_trend=",0,"! [mdc][angle] distance as function of threshold charge per angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"fitpars[4][18][2]=",0,"! fitparameters for hists");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"version=",0,"! old/new format");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HMdcGarReader */
static void G__setup_memvarHMdcGarReader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader));
   { HMdcGarReader *p; p=(HMdcGarReader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HField */
static void G__setup_memvarHField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField));
   { HField *p; p=(HField*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nfz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nfr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nfp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"zflmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"zflmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"zfldel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"rflmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"rflmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"rfldel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pflmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pflmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"pfldel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"tzfl[161][176][25]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"trfl[161][176][25]=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"tpfl[161][176][25]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarMdcGarfieldDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHMdcGarMacroMaker(void) {
   /* HMdcGarMacroMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker));
   G__memfunc_setup("initVariables",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putOut",657,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openOutPut",1059,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeOutPut",1159,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printCell",941,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printOptions",1305,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printGeometry",1401,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printField",1041,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printMagnetic",1365,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printGas",840,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printDrift",1062,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printSignal",1163,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print3D",676,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printMetaHeader",1533,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printMetaTrailer",1671,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parseArguments",1489,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printKeyWords",1381,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMdcGarMacroMaker",1624,G__MdcGarfieldDict_194_0_18, 105, G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrintSetup",1386,G__MdcGarfieldDict_194_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameOut",1413,G__MdcGarfieldDict_194_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameSignals",1822,G__MdcGarfieldDict_194_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameGasFile",1768,G__MdcGarfieldDict_194_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPsFileName",1296,G__MdcGarfieldDict_194_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWriteDataSets",1648,G__MdcGarfieldDict_194_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMdcType",1026,G__MdcGarfieldDict_194_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAngle",819,G__MdcGarfieldDict_194_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCathodeFoil",1422,G__MdcGarfieldDict_194_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - foil", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAngleStepSize",1642,G__MdcGarfieldDict_194_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBFieldComponents",1944,G__MdcGarfieldDict_194_0_29, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - - f - 'Float_t' 0 - - "
"f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTemperature",1498,G__MdcGarfieldDict_194_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPressure",1189,G__MdcGarfieldDict_194_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArgon",835,G__MdcGarfieldDict_194_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHelium",944,G__MdcGarfieldDict_194_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - he", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIButane",1012,G__MdcGarfieldDict_194_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCO2",528,G__MdcGarfieldDict_194_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - co", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArgonCO2",1031,G__MdcGarfieldDict_194_0_36, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ar i - 'Int_t' 0 - co", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArgonIButane",1515,G__MdcGarfieldDict_194_0_37, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - ar i - 'Int_t' 0 - ib", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHeliumIButane",1624,G__MdcGarfieldDict_194_0_38, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - he i - 'Int_t' 0 - ib", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMobility",1173,G__MdcGarfieldDict_194_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParticle",1152,G__MdcGarfieldDict_194_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnergy",950,G__MdcGarfieldDict_194_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRange",825,G__MdcGarfieldDict_194_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAvalanche",1231,G__MdcGarfieldDict_194_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - a", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNCollisions",1465,G__MdcGarfieldDict_194_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrapRadius",1355,G__MdcGarfieldDict_194_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseRungeKutta",1667,G__MdcGarfieldDict_194_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - doit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRungeKuttaMaxStep",2072,G__MdcGarfieldDict_194_0_47, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - m0 d - 'Double_t' 0 - m1 "
"d - 'Double_t' 0 - m2 d - 'Double_t' 0 - m3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMCDistance",1287,G__MdcGarfieldDict_194_0_48, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - m0 d - 'Double_t' 0 - m1 "
"d - 'Double_t' 0 - m2 d - 'Double_t' 0 - m3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSignals",1131,G__MdcGarfieldDict_194_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNLines",917,G__MdcGarfieldDict_194_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ni", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIsochrones",1385,G__MdcGarfieldDict_194_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - ni", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCathodHvMod",1405,G__MdcGarfieldDict_194_0_52, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - hv i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSenseHvMod",1320,G__MdcGarfieldDict_194_0_53, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - hv i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFieldHvMod",1294,G__MdcGarfieldDict_194_0_54, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - hv i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCathodTh",1115,G__MdcGarfieldDict_194_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSenseTh",1030,G__MdcGarfieldDict_194_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFieldTh",1004,G__MdcGarfieldDict_194_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCathodPitch",1431,G__MdcGarfieldDict_194_0_58, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSensePitch",1346,G__MdcGarfieldDict_194_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFieldPitch",1320,G__MdcGarfieldDict_194_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCathodHv",1117,G__MdcGarfieldDict_194_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSenseHv",1032,G__MdcGarfieldDict_194_0_62, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFieldHv",1006,G__MdcGarfieldDict_194_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNCathod",1005,G__MdcGarfieldDict_194_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSense",920,G__MdcGarfieldDict_194_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNField",894,G__MdcGarfieldDict_194_0_66, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCathodX",1015,G__MdcGarfieldDict_194_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSenseX",930,G__MdcGarfieldDict_194_0_68, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFieldX",904,G__MdcGarfieldDict_194_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setArea",709,G__MdcGarfieldDict_194_0_70, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxLoop",1036,G__MdcGarfieldDict_194_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinLoop",1034,G__MdcGarfieldDict_194_0_72, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCWire",806,G__MdcGarfieldDict_194_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCWireFoil",1200,G__MdcGarfieldDict_194_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeUp",928,G__MdcGarfieldDict_194_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeLow",1037,G__MdcGarfieldDict_194_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTimeBin",1090,G__MdcGarfieldDict_194_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - number", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDC_S",645,G__MdcGarfieldDict_194_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrintClusters",1710,G__MdcGarfieldDict_194_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printMacro",1055,G__MdcGarfieldDict_194_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printStatus",1201,G__MdcGarfieldDict_194_0_81, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MdcGarfieldDict_194_0_82, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HMdcGarMacroMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MdcGarfieldDict_194_0_83, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarMacroMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MdcGarfieldDict_194_0_84, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HMdcGarMacroMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MdcGarfieldDict_194_0_85, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HMdcGarMacroMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MdcGarfieldDict_194_0_89, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MdcGarfieldDict_194_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarMacroMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MdcGarfieldDict_194_0_91, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarMacroMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MdcGarfieldDict_194_0_92, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarMacroMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MdcGarfieldDict_194_0_93, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarMacroMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMdcGarMacroMaker", 1624, G__MdcGarfieldDict_194_0_94, (int) ('i'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker), -1, 0, 1, 1, 1, 0, "u 'HMdcGarMacroMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMdcGarMacroMaker", 1750, G__MdcGarfieldDict_194_0_95, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MdcGarfieldDict_194_0_96, (int) ('u'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarMacroMaker), -1, 1, 1, 1, 1, 0, "u 'HMdcGarMacroMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHMdcGarCal2Maker(void) {
   /* HMdcGarCal2Maker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker));
   G__memfunc_setup("initVariables",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initArrays",1062,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMdcGarCal2Maker",1448,G__MdcGarfieldDict_199_0_3, 105, G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameOut",1413,G__MdcGarfieldDict_199_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameIn",1284,G__MdcGarfieldDict_199_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCutMax",926,G__MdcGarfieldDict_199_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - c0 f - 'Float_t' 0 - c1 "
"f - 'Float_t' 0 - c2 f - 'Float_t' 0 - c3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVersion",1062,G__MdcGarfieldDict_199_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVersion",1074,G__MdcGarfieldDict_199_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - vers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutMax",914,G__MdcGarfieldDict_199_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSlope",847,G__MdcGarfieldDict_199_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - s0", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlope",835,G__MdcGarfieldDict_199_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setThreshold",1273,G__MdcGarfieldDict_199_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - thresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getThreshold",1261,G__MdcGarfieldDict_199_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStepSize",1155,G__MdcGarfieldDict_199_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStepSize",1143,G__MdcGarfieldDict_199_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBatchMode",1203,G__MdcGarfieldDict_199_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBatchMode",1191,G__MdcGarfieldDict_199_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrintMode",1246,G__MdcGarfieldDict_199_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPrintMode",1234,G__MdcGarfieldDict_199_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWriteHists",1378,G__MdcGarfieldDict_199_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWriteHists",1366,G__MdcGarfieldDict_199_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWriteAscii",1344,G__MdcGarfieldDict_199_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWriteAscii",1332,G__MdcGarfieldDict_199_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxErrTime1",1371,G__MdcGarfieldDict_199_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxErrTime1",1359,G__MdcGarfieldDict_199_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxErrTime2",1372,G__MdcGarfieldDict_199_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxErrTime2",1360,G__MdcGarfieldDict_199_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSpikeTypes",1373,G__MdcGarfieldDict_199_0_28, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - s0 i - 'Int_t' 0 - s1 "
"i - 'Int_t' 0 - s2 i - 'Int_t' 0 - s3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpikeTypes",1361,G__MdcGarfieldDict_199_0_29, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSpikeThresholds",1896,G__MdcGarfieldDict_199_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - t1 f - 'Float_t' 0 - t2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpikeThreshold1",1818,G__MdcGarfieldDict_199_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSpikeThreshold2",1819,G__MdcGarfieldDict_199_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNTimes",924,G__MdcGarfieldDict_199_0_33, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - s0 i - 'Int_t' 0 - s1 "
"i - 'Int_t' 0 - s2 i - 'Int_t' 0 - s3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNTimes",912,G__MdcGarfieldDict_199_0_34, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBin1D_Dist",1307,G__MdcGarfieldDict_199_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBin1D_Dist",1295,G__MdcGarfieldDict_199_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBin2D_Dist",1308,G__MdcGarfieldDict_199_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBin2D_Dist",1296,G__MdcGarfieldDict_199_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBin2D_Angle",1391,G__MdcGarfieldDict_199_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBin2D_Angle",1379,G__MdcGarfieldDict_199_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinCopy",1035,G__MdcGarfieldDict_199_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinCopy",1023,G__MdcGarfieldDict_199_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxCopy",1037,G__MdcGarfieldDict_199_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxCopy",1025,G__MdcGarfieldDict_199_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHists_1D",1067,G__MdcGarfieldDict_199_0_45, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j "
"i - 'Int_t' 0 - k i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHists_1D",1055,G__MdcGarfieldDict_199_0_46, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHists_2D",1068,G__MdcGarfieldDict_199_0_47, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j "
"i - 'Int_t' 0 - k i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHists_2D",1056,G__MdcGarfieldDict_199_0_48, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakeMdc",990,G__MdcGarfieldDict_199_0_49, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j "
"i - 'Int_t' 0 - k i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakeMdc",978,G__MdcGarfieldDict_199_0_50, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMakeType",1132,G__MdcGarfieldDict_199_0_51, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j "
"i - 'Int_t' 0 - k i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMakeType",1120,G__MdcGarfieldDict_199_0_52, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLevelColors",1462,G__MdcGarfieldDict_199_0_53, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j "
"i - 'Int_t' 0 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLevelColors",1450,G__MdcGarfieldDict_199_0_54, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVoltage",1054,G__MdcGarfieldDict_199_0_55, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - s0 i - 'Int_t' 0 - s1 "
"i - 'Int_t' 0 - s2 i - 'Int_t' 0 - s3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVoltage",1042,G__MdcGarfieldDict_199_0_56, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxBinNumber",1524,G__MdcGarfieldDict_199_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "I - 'Int_t' 0 - array", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxBinNumber",1512,G__MdcGarfieldDict_199_0_58, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printStatus",1201,G__MdcGarfieldDict_199_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readInput",940,G__MdcGarfieldDict_199_0_60, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillArrays",1049,G__MdcGarfieldDict_199_0_61, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1F' - 0 - - U 'TH1F' - 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillControl2D",1278,G__MdcGarfieldDict_199_0_62, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TString' - 0 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillControl1D",1277,G__MdcGarfieldDict_199_0_63, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TString' - 0 '\"\"' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findMax",711,G__MdcGarfieldDict_199_0_64, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeSpikes",1277,G__MdcGarfieldDict_199_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyToHist",1046,G__MdcGarfieldDict_199_0_66, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1F' - 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyToArray",1149,G__MdcGarfieldDict_199_0_67, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1F' - 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("coefSavGol2",1051,G__MdcGarfieldDict_199_0_68, 102, -1, G__defined_typename("Float_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("do2dSavitzkyGolayFiltering",2670,G__MdcGarfieldDict_199_0_69, 121, -1, -1, 0, 4, 1, 1, 0, 
"F - 'Float_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("smoothHist",1074,G__MdcGarfieldDict_199_0_70, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TH1F' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitHist",731,G__MdcGarfieldDict_199_0_71, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1F' - 0 - h i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replaceBins",1128,G__MdcGarfieldDict_199_0_72, 121, -1, -1, 0, 4, 1, 1, 0, 
"U 'TH1F' - 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createGraph",1126,G__MdcGarfieldDict_199_0_73, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("plotOverlay",1185,G__MdcGarfieldDict_199_0_74, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeAscii",1044,G__MdcGarfieldDict_199_0_75, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("check",510,G__MdcGarfieldDict_199_0_76, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcBounderies",1443,G__MdcGarfieldDict_199_0_77, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"F - 'Float_t' 0 - - F - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawBorders",1151,G__MdcGarfieldDict_199_0_78, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make",414,G__MdcGarfieldDict_199_0_79, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MdcGarfieldDict_199_0_80, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HMdcGarCal2Maker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MdcGarfieldDict_199_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarCal2Maker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MdcGarfieldDict_199_0_82, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HMdcGarCal2Maker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MdcGarfieldDict_199_0_83, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HMdcGarCal2Maker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MdcGarfieldDict_199_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MdcGarfieldDict_199_0_88, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarCal2Maker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MdcGarfieldDict_199_0_89, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarCal2Maker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MdcGarfieldDict_199_0_90, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarCal2Maker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MdcGarfieldDict_199_0_91, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarCal2Maker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMdcGarCal2Maker", 1448, G__MdcGarfieldDict_199_0_92, (int) ('i'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker), -1, 0, 1, 1, 1, 0, "u 'HMdcGarCal2Maker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMdcGarCal2Maker", 1574, G__MdcGarfieldDict_199_0_93, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MdcGarfieldDict_199_0_94, (int) ('u'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarCal2Maker), -1, 1, 1, 1, 1, 0, "u 'HMdcGarCal2Maker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHMdcGarSignalReader(void) {
   /* HMdcGarSignalReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader));
   G__memfunc_setup("initVariables",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initHistArrays",1470,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createHistArrays",1662,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHistArrays",1589,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteHistArrays",1661,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHist",963,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TH1F' - 0 - h i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readInput",940,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("integrateHists",1486,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 6, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"U 'TH1F' - 0 - - U 'TH1F' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findThresholds",1473,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - - U 'TH1F' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillDriftTimeVersusDistance",2786,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"U 'TH1F' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createHists",1151,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - U 'TH1F' - 2 - - "
"U 'TH1F' - 2 - - U 'TH1F' - 2 - - "
"U 'TH1F' - 2 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createChargeHists",1737,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillChargeHists",1532,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - U 'TH1F' - 0 - - "
"U 'TH1F' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeChargeHists",1664,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteChargeHists",1736,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("response",879,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"f - 'Float_t' 0 - mean f - 'Float_t' 0 - scale", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("simulateResponse",1715,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'TH1F' - 0 - - U 'TH1F' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMdcGarSignalReader",1831,G__MdcGarfieldDict_594_0_19, 105, G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVersion",1074,G__MdcGarfieldDict_594_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - vers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameOut",1413,G__MdcGarfieldDict_594_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameIn",1284,G__MdcGarfieldDict_594_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma1",878,G__MdcGarfieldDict_594_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSigma2",879,G__MdcGarfieldDict_594_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSimResponse",1476,G__MdcGarfieldDict_594_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - sim", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma1",866,G__MdcGarfieldDict_594_0_26, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigma2",867,G__MdcGarfieldDict_594_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSignals",1131,G__MdcGarfieldDict_594_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSignals",1119,G__MdcGarfieldDict_594_0_29, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBinSignal",1297,G__MdcGarfieldDict_594_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBinSignal",1285,G__MdcGarfieldDict_594_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRangeSignal",1431,G__MdcGarfieldDict_594_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRangeSignal",1419,G__MdcGarfieldDict_594_0_33, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBinDist",1095,G__MdcGarfieldDict_594_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBinDist",1083,G__MdcGarfieldDict_594_0_35, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBinSizeDist",1428,G__MdcGarfieldDict_594_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinSizeDist",1416,G__MdcGarfieldDict_594_0_37, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNStep",822,G__MdcGarfieldDict_594_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNStep",810,G__MdcGarfieldDict_594_0_39, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStepSize",1155,G__MdcGarfieldDict_594_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStepSize",1143,G__MdcGarfieldDict_594_0_41, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinSignal",1230,G__MdcGarfieldDict_594_0_42, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - i f - 'Float_t' 0 - j "
"f - 'Float_t' 0 - k f - 'Float_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinSignal",1218,G__MdcGarfieldDict_594_0_43, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWriteHists",1378,G__MdcGarfieldDict_594_0_44, 121, -1, -1, 0, 6, 1, 1, 0, 
"g - 'Bool_t' 0 - signal g - 'Bool_t' 0 - signalint "
"g - 'Bool_t' 0 - sum g - 'Bool_t' 0 - dist "
"g - 'Bool_t' 0 - timedistance g - 'Bool_t' 0 - mincharge", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printStatus",1201,G__MdcGarfieldDict_594_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make",414,G__MdcGarfieldDict_594_0_46, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeOutput",1191,G__MdcGarfieldDict_594_0_47, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MdcGarfieldDict_594_0_48, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HMdcGarSignalReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MdcGarfieldDict_594_0_49, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarSignalReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MdcGarfieldDict_594_0_50, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HMdcGarSignalReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MdcGarfieldDict_594_0_51, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HMdcGarSignalReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MdcGarfieldDict_594_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MdcGarfieldDict_594_0_56, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarSignalReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MdcGarfieldDict_594_0_57, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarSignalReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MdcGarfieldDict_594_0_58, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarSignalReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MdcGarfieldDict_594_0_59, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarSignalReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMdcGarSignalReader", 1831, G__MdcGarfieldDict_594_0_60, (int) ('i'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader), -1, 0, 1, 1, 1, 0, "u 'HMdcGarSignalReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMdcGarSignalReader", 1957, G__MdcGarfieldDict_594_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MdcGarfieldDict_594_0_62, (int) ('u'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarSignalReader), -1, 1, 1, 1, 1, 0, "u 'HMdcGarSignalReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHMdcGarEffMaker(void) {
   /* HMdcGarEffMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker));
   G__memfunc_setup("initVariables",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createHists",1151,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHists",1078,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("deleteHists",1150,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHist",728,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F), -1, 0, 2, 1, 2, 0, 
"U 'TFile' - 0 - - u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillEffHist",1104,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillCutHist",1131,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillMaxHists",1240,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillTrendHists",1455,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fitTrendHists",1355,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readInput",940,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeAscii",1044,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetParams",1159,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMdcGarEffMaker",1399,G__MdcGarfieldDict_595_0_14, 105, G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameRootOut",1833,G__MdcGarfieldDict_595_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameAsciiOut",1902,G__MdcGarfieldDict_595_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFileNameRootIn",1704,G__MdcGarfieldDict_595_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMinSignal",1230,G__MdcGarfieldDict_595_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - i f - 'Float_t' 0 - j "
"f - 'Float_t' 0 - k f - 'Float_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinSignal",1218,G__MdcGarfieldDict_595_0_19, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVersion",1074,G__MdcGarfieldDict_595_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - vers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVersion",1062,G__MdcGarfieldDict_595_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSamples",1135,G__MdcGarfieldDict_595_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSamples",1123,G__MdcGarfieldDict_595_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNSteps",937,G__MdcGarfieldDict_595_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNSteps",925,G__MdcGarfieldDict_595_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printStatus",1201,G__MdcGarfieldDict_595_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make",414,G__MdcGarfieldDict_595_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MdcGarfieldDict_595_0_28, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HMdcGarEffMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MdcGarfieldDict_595_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarEffMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MdcGarfieldDict_595_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HMdcGarEffMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MdcGarfieldDict_595_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HMdcGarEffMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MdcGarfieldDict_595_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MdcGarfieldDict_595_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarEffMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MdcGarfieldDict_595_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarEffMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MdcGarfieldDict_595_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarEffMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MdcGarfieldDict_595_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarEffMaker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMdcGarEffMaker", 1399, G__MdcGarfieldDict_595_0_40, (int) ('i'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker), -1, 0, 1, 1, 1, 0, "u 'HMdcGarEffMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMdcGarEffMaker", 1525, G__MdcGarfieldDict_595_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MdcGarfieldDict_595_0_42, (int) ('u'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarEffMaker), -1, 1, 1, 1, 1, 0, "u 'HMdcGarEffMaker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHMdcGarReader(void) {
   /* HMdcGarReader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader));
   G__memfunc_setup("initVariables",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HMdcGarReader",1225,G__MdcGarfieldDict_596_0_2, 105, G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readXT",584,G__MdcGarfieldDict_596_0_3, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph), -1, 0, 2, 3, 1, 0, 
"u 'TString' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TString, Int_t))(&HMdcGarReader::readXT) ), 0);
   G__memfunc_setup("readXTdiffusion",1551,G__MdcGarfieldDict_596_0_4, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph), -1, 0, 2, 3, 1, 0, 
"u 'TString' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TString, Int_t))(&HMdcGarReader::readXTdiffusion) ), 0);
   G__memfunc_setup("readMagboltzVdrift",1867,G__MdcGarfieldDict_596_0_5, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph), -1, 0, 2, 3, 1, 0, 
"u 'TString' - 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TString, Int_t))(&HMdcGarReader::readMagboltzVdrift) ), 0);
   G__memfunc_setup("readMagboltzGasPrint",2052,G__MdcGarfieldDict_596_0_6, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph), -1, 0, 3, 3, 1, 0, 
"u 'TString' - 0 - - u 'TString' - 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TString, TString, Int_t))(&HMdcGarReader::readMagboltzGasPrint) ), 0);
   G__memfunc_setup("readMagboltzGasPrintVersion6",2848,G__MdcGarfieldDict_596_0_7, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph), -1, 0, 3, 3, 1, 0, 
"u 'TString' - 0 - - u 'TString' - 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TString, TString, Int_t))(&HMdcGarReader::readMagboltzGasPrintVersion6) ), 0);
   G__memfunc_setup("readMatrix",1041,G__MdcGarfieldDict_596_0_8, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TArrayD), -1, 0, 3, 3, 1, 0, 
"u 'TString' - 0 - - i - 'Int_t' 1 - - "
"i - 'Int_t' 1 - -", (char*)NULL, (void*) G__func2void( (TArrayD* (*)(TString, Int_t&, Int_t&))(&HMdcGarReader::readMatrix) ), 0);
   G__memfunc_setup("readMatrix1DToHist",1761,G__MdcGarfieldDict_596_0_9, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F), -1, 0, 3, 3, 1, 0, 
"u 'TString' - 0 - - f - 'Float_t' 0 - - "
"f - 'Float_t' 0 - -", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TString, Float_t, Float_t))(&HMdcGarReader::readMatrix1DToHist) ), 0);
   G__memfunc_setup("readMatrix2DToHist",1762,G__MdcGarfieldDict_596_0_10, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH2F), -1, 0, 5, 3, 1, 0, 
"u 'TString' - 0 - - f - 'Float_t' 0 - - "
"f - 'Float_t' 0 - - f - 'Float_t' 0 - - "
"f - 'Float_t' 0 - -", (char*)NULL, (void*) G__func2void( (TH2F* (*)(TString, Float_t, Float_t, Float_t, Float_t))(&HMdcGarReader::readMatrix2DToHist) ), 0);
   G__memfunc_setup("readHist1D",937,G__MdcGarfieldDict_596_0_11, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F), -1, 0, 3, 3, 1, 0, 
"u 'TString' - 0 - - f - 'Float_t' 0 '1.' scale "
"f - 'Float_t' 0 '1.' scalex", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TString, Float_t, Float_t))(&HMdcGarReader::readHist1D) ), 0);
   G__memfunc_setup("readHist1D",937,G__MdcGarfieldDict_596_0_12, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TH1F), -1, 0, 4, 3, 1, 0, 
"u 'TString' - 0 - - u 'TString' - 0 - - "
"f - 'Float_t' 0 '1.' scale f - 'Float_t' 0 '1.' scalex", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TString, TString, Float_t, Float_t))(&HMdcGarReader::readHist1D) ), 0);
   G__memfunc_setup("readHist1DToGraph",1630,G__MdcGarfieldDict_596_0_13, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph), -1, 0, 3, 3, 1, 0, 
"u 'TString' - 0 - - f - 'Float_t' 0 '1.' scale "
"f - 'Float_t' 0 '1.' scalex", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TString, Float_t, Float_t))(&HMdcGarReader::readHist1DToGraph) ), 0);
   G__memfunc_setup("readHist1DToGraph",1630,G__MdcGarfieldDict_596_0_14, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraphErrors), -1, 0, 4, 3, 1, 0, 
"u 'TString' - 0 - - u 'TString' - 0 - - "
"f - 'Float_t' 0 '1.' scale f - 'Float_t' 0 '1.' scalex", (char*)NULL, (void*) G__func2void( (TGraphErrors* (*)(TString, TString, Float_t, Float_t))(&HMdcGarReader::readHist1DToGraph) ), 0);
   G__memfunc_setup("readSignal",1018,G__MdcGarfieldDict_596_0_15, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TObjArray), -1, 0, 5, 3, 1, 0, 
"u 'TString' - 0 - inputname i - 'Int_t' 0 '1000' nbins "
"d - 'Double_t' 0 '0' xmin d - 'Double_t' 0 '1000' xmax "
"i - 'Int_t' 0 '708' version", (char*)NULL, (void*) G__func2void( (TObjArray* (*)(TString, Int_t, Double_t, Double_t, Int_t))(&HMdcGarReader::readSignal) ), 0);
   G__memfunc_setup("readGraphE",979,G__MdcGarfieldDict_596_0_16, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TGraph), -1, 0, 7, 3, 1, 0, 
"u 'TString' - 0 - inputName u 'TString' - 0 '\"x\"' dir "
"f - 'Float_t' 0 '-999999' min f - 'Float_t' 0 '-999999' max "
"i - 'Int_t' 0 '2' color f - 'Float_t' 0 '10' scale "
"g - 'Bool_t' 0 'kTRUE' suppressZero", (char*)NULL, (void*) G__func2void( (TGraph* (*)(TString, TString, Float_t, Float_t, Int_t, Float_t, Bool_t))(&HMdcGarReader::readGraphE) ), 0);
   G__memfunc_setup("Class",502,G__MdcGarfieldDict_596_0_17, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HMdcGarReader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MdcGarfieldDict_596_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarReader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MdcGarfieldDict_596_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HMdcGarReader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MdcGarfieldDict_596_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HMdcGarReader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MdcGarfieldDict_596_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MdcGarfieldDict_596_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarReader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MdcGarfieldDict_596_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarReader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MdcGarfieldDict_596_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMdcGarReader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MdcGarfieldDict_596_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMdcGarReader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMdcGarReader", 1225, G__MdcGarfieldDict_596_0_29, (int) ('i'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader), -1, 0, 1, 1, 1, 0, "u 'HMdcGarReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMdcGarReader", 1351, G__MdcGarfieldDict_596_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MdcGarfieldDict_596_0_31, (int) ('u'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HMdcGarReader), -1, 1, 1, 1, 1, 0, "u 'HMdcGarReader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHField(void) {
   /* HField */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField));
   G__memfunc_setup("HField",556,G__MdcGarfieldDict_597_0_1, 105, G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__MdcGarfieldDict_597_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcField",887,G__MdcGarfieldDict_597_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"D - 'Double_t' 0 - - D - 'Double_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initVariables",1357,G__MdcGarfieldDict_597_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__MdcGarfieldDict_597_0_5, 85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HField::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__MdcGarfieldDict_597_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HField::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__MdcGarfieldDict_597_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HField::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__MdcGarfieldDict_597_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HField::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__MdcGarfieldDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__MdcGarfieldDict_597_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__MdcGarfieldDict_597_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HField::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__MdcGarfieldDict_597_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HField::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__MdcGarfieldDict_597_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HField::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__MdcGarfieldDict_597_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HField::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HField", 556, G__MdcGarfieldDict_597_0_17, (int) ('i'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField), -1, 0, 1, 1, 1, 0, "u 'HField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HField", 682, G__MdcGarfieldDict_597_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__MdcGarfieldDict_597_0_19, (int) ('u'), G__get_linked_tagnum(&G__MdcGarfieldDictLN_HField), -1, 1, 1, 1, 1, 0, "u 'HField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncMdcGarfieldDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalMdcGarfieldDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcMdcGarfieldDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__MdcGarfieldDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_HMdcGarMacroMaker = { "HMdcGarMacroMaker" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_HMdcGarCal2Maker = { "HMdcGarCal2Maker" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_HMdcGarSignalReader = { "HMdcGarSignalReader" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_HMdcGarEffMaker = { "HMdcGarEffMaker" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_HMdcGarReader = { "HMdcGarReader" , 99 , -1 };
G__linked_taginfo G__MdcGarfieldDictLN_HField = { "HField" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableMdcGarfieldDict() {
  G__MdcGarfieldDictLN_TClass.tagnum = -1 ;
  G__MdcGarfieldDictLN_TBuffer.tagnum = -1 ;
  G__MdcGarfieldDictLN_TMemberInspector.tagnum = -1 ;
  G__MdcGarfieldDictLN_TObject.tagnum = -1 ;
  G__MdcGarfieldDictLN_TNamed.tagnum = -1 ;
  G__MdcGarfieldDictLN_TString.tagnum = -1 ;
  G__MdcGarfieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_TObjArray.tagnum = -1 ;
  G__MdcGarfieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_HMdcGarMacroMaker.tagnum = -1 ;
  G__MdcGarfieldDictLN_TFile.tagnum = -1 ;
  G__MdcGarfieldDictLN_TH1F.tagnum = -1 ;
  G__MdcGarfieldDictLN_TH2F.tagnum = -1 ;
  G__MdcGarfieldDictLN_TGraph.tagnum = -1 ;
  G__MdcGarfieldDictLN_HMdcGarCal2Maker.tagnum = -1 ;
  G__MdcGarfieldDictLN_TArrayD.tagnum = -1 ;
  G__MdcGarfieldDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__MdcGarfieldDictLN_TH1D.tagnum = -1 ;
  G__MdcGarfieldDictLN_TPaveText.tagnum = -1 ;
  G__MdcGarfieldDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__MdcGarfieldDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__MdcGarfieldDictLN_TGraphErrors.tagnum = -1 ;
  G__MdcGarfieldDictLN_HMdcGarSignalReader.tagnum = -1 ;
  G__MdcGarfieldDictLN_HMdcGarEffMaker.tagnum = -1 ;
  G__MdcGarfieldDictLN_HMdcGarReader.tagnum = -1 ;
  G__MdcGarfieldDictLN_HField.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableMdcGarfieldDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TString);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_HMdcGarMacroMaker),sizeof(HMdcGarMacroMaker),-1,62720,"Container for the MDC Calibrater1 parameters",G__setup_memvarHMdcGarMacroMaker,G__setup_memfuncHMdcGarMacroMaker);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TGraph);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_HMdcGarCal2Maker),sizeof(HMdcGarCal2Maker),-1,62720,"Class for producing the MDC Cal2 parameters",G__setup_memvarHMdcGarCal2Maker,G__setup_memfuncHMdcGarCal2Maker);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TPaveText);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_TGraphErrors);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_HMdcGarSignalReader),sizeof(HMdcGarSignalReader),-1,62720,"Class for producing the MDC Cal2 parameters",G__setup_memvarHMdcGarSignalReader,G__setup_memfuncHMdcGarSignalReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_HMdcGarEffMaker),sizeof(HMdcGarEffMaker),-1,62720,"Class for producing the MDC Cal2 parameters",G__setup_memvarHMdcGarEffMaker,G__setup_memfuncHMdcGarEffMaker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_HMdcGarReader),sizeof(HMdcGarReader),-1,62720,"Class for reading several GARFIELD formats",G__setup_memvarHMdcGarReader,G__setup_memfuncHMdcGarReader);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__MdcGarfieldDictLN_HField),sizeof(HField),-1,62720,"Class for Field Map",G__setup_memvarHField,G__setup_memfuncHField);
}
extern "C" void G__cpp_setupMdcGarfieldDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupMdcGarfieldDict()");
  G__set_cpp_environmentMdcGarfieldDict();
  G__cpp_setup_tagtableMdcGarfieldDict();

  G__cpp_setup_inheritanceMdcGarfieldDict();

  G__cpp_setup_typetableMdcGarfieldDict();

  G__cpp_setup_memvarMdcGarfieldDict();

  G__cpp_setup_memfuncMdcGarfieldDict();
  G__cpp_setup_globalMdcGarfieldDict();
  G__cpp_setup_funcMdcGarfieldDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncMdcGarfieldDict();
  return;
}
class G__cpp_setup_initMdcGarfieldDict {
  public:
    G__cpp_setup_initMdcGarfieldDict() { G__add_setup_func("MdcGarfieldDict",(G__incsetup)(&G__cpp_setupMdcGarfieldDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initMdcGarfieldDict() { G__remove_setup_func("MdcGarfieldDict"); }
};
G__cpp_setup_initMdcGarfieldDict G__cpp_setup_initializerMdcGarfieldDict;

