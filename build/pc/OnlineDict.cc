//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:49:19 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIOnlineDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "OnlineDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HOnlineMonHistAddon_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonHistAddon(void *p = 0);
   static void *newArray_HOnlineMonHistAddon(Long_t size, void *p);
   static void delete_HOnlineMonHistAddon(void *p);
   static void deleteArray_HOnlineMonHistAddon(void *p);
   static void destruct_HOnlineMonHistAddon(void *p);
   static void streamer_HOnlineMonHistAddon(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonHistAddon*)
   {
      ::HOnlineMonHistAddon *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonHistAddon >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonHistAddon", ::HOnlineMonHistAddon::Class_Version(), "././honlinemonhist.h", 19,
                  typeid(::HOnlineMonHistAddon), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonHistAddon::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonHistAddon) );
      instance.SetNew(&new_HOnlineMonHistAddon);
      instance.SetNewArray(&newArray_HOnlineMonHistAddon);
      instance.SetDelete(&delete_HOnlineMonHistAddon);
      instance.SetDeleteArray(&deleteArray_HOnlineMonHistAddon);
      instance.SetDestructor(&destruct_HOnlineMonHistAddon);
      instance.SetStreamerFunc(&streamer_HOnlineMonHistAddon);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonHistAddon*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonHistAddon*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonHistAddon*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonHist(void *p = 0);
   static void *newArray_HOnlineMonHist(Long_t size, void *p);
   static void delete_HOnlineMonHist(void *p);
   static void deleteArray_HOnlineMonHist(void *p);
   static void destruct_HOnlineMonHist(void *p);
   static void streamer_HOnlineMonHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonHist*)
   {
      ::HOnlineMonHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonHist", ::HOnlineMonHist::Class_Version(), "././honlinemonhist.h", 189,
                  typeid(::HOnlineMonHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonHist::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonHist) );
      instance.SetNew(&new_HOnlineMonHist);
      instance.SetNewArray(&newArray_HOnlineMonHist);
      instance.SetDelete(&delete_HOnlineMonHist);
      instance.SetDeleteArray(&deleteArray_HOnlineMonHist);
      instance.SetDestructor(&destruct_HOnlineMonHist);
      instance.SetStreamerFunc(&streamer_HOnlineMonHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonHist*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonHist2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonHist2(void *p = 0);
   static void *newArray_HOnlineMonHist2(Long_t size, void *p);
   static void delete_HOnlineMonHist2(void *p);
   static void deleteArray_HOnlineMonHist2(void *p);
   static void destruct_HOnlineMonHist2(void *p);
   static void streamer_HOnlineMonHist2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonHist2*)
   {
      ::HOnlineMonHist2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonHist2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonHist2", ::HOnlineMonHist2::Class_Version(), "././honlinemonhist.h", 222,
                  typeid(::HOnlineMonHist2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonHist2::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonHist2) );
      instance.SetNew(&new_HOnlineMonHist2);
      instance.SetNewArray(&newArray_HOnlineMonHist2);
      instance.SetDelete(&delete_HOnlineMonHist2);
      instance.SetDeleteArray(&deleteArray_HOnlineMonHist2);
      instance.SetDestructor(&destruct_HOnlineMonHist2);
      instance.SetStreamerFunc(&streamer_HOnlineMonHist2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonHist2*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonHist2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonHist2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonStack_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonStack(void *p = 0);
   static void *newArray_HOnlineMonStack(Long_t size, void *p);
   static void delete_HOnlineMonStack(void *p);
   static void deleteArray_HOnlineMonStack(void *p);
   static void destruct_HOnlineMonStack(void *p);
   static void streamer_HOnlineMonStack(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonStack*)
   {
      ::HOnlineMonStack *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonStack >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonStack", ::HOnlineMonStack::Class_Version(), "././honlinemonstack.h", 20,
                  typeid(::HOnlineMonStack), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonStack::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonStack) );
      instance.SetNew(&new_HOnlineMonStack);
      instance.SetNewArray(&newArray_HOnlineMonStack);
      instance.SetDelete(&delete_HOnlineMonStack);
      instance.SetDeleteArray(&deleteArray_HOnlineMonStack);
      instance.SetDestructor(&destruct_HOnlineMonStack);
      instance.SetStreamerFunc(&streamer_HOnlineMonStack);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonStack*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonStack*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonStack*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineTrendHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineTrendHist(void *p = 0);
   static void *newArray_HOnlineTrendHist(Long_t size, void *p);
   static void delete_HOnlineTrendHist(void *p);
   static void deleteArray_HOnlineTrendHist(void *p);
   static void destruct_HOnlineTrendHist(void *p);
   static void streamer_HOnlineTrendHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineTrendHist*)
   {
      ::HOnlineTrendHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineTrendHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineTrendHist", ::HOnlineTrendHist::Class_Version(), "././honlinetrendhist.h", 14,
                  typeid(::HOnlineTrendHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineTrendHist::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineTrendHist) );
      instance.SetNew(&new_HOnlineTrendHist);
      instance.SetNewArray(&newArray_HOnlineTrendHist);
      instance.SetDelete(&delete_HOnlineTrendHist);
      instance.SetDeleteArray(&deleteArray_HOnlineTrendHist);
      instance.SetDestructor(&destruct_HOnlineTrendHist);
      instance.SetStreamerFunc(&streamer_HOnlineTrendHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineTrendHist*)
   {
      return GenerateInitInstanceLocal((::HOnlineTrendHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineTrendHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineNamedLegend_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineNamedLegend(void *p = 0);
   static void *newArray_HOnlineNamedLegend(Long_t size, void *p);
   static void delete_HOnlineNamedLegend(void *p);
   static void deleteArray_HOnlineNamedLegend(void *p);
   static void destruct_HOnlineNamedLegend(void *p);
   static void streamer_HOnlineNamedLegend(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineNamedLegend*)
   {
      ::HOnlineNamedLegend *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineNamedLegend >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineNamedLegend", ::HOnlineNamedLegend::Class_Version(), "././honlinehistarray.h", 33,
                  typeid(::HOnlineNamedLegend), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineNamedLegend::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineNamedLegend) );
      instance.SetNew(&new_HOnlineNamedLegend);
      instance.SetNewArray(&newArray_HOnlineNamedLegend);
      instance.SetDelete(&delete_HOnlineNamedLegend);
      instance.SetDeleteArray(&deleteArray_HOnlineNamedLegend);
      instance.SetDestructor(&destruct_HOnlineNamedLegend);
      instance.SetStreamerFunc(&streamer_HOnlineNamedLegend);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineNamedLegend*)
   {
      return GenerateInitInstanceLocal((::HOnlineNamedLegend*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineNamedLegend*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineLegendDrawer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineLegendDrawer(void *p = 0);
   static void *newArray_HOnlineLegendDrawer(Long_t size, void *p);
   static void delete_HOnlineLegendDrawer(void *p);
   static void deleteArray_HOnlineLegendDrawer(void *p);
   static void destruct_HOnlineLegendDrawer(void *p);
   static void streamer_HOnlineLegendDrawer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineLegendDrawer*)
   {
      ::HOnlineLegendDrawer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineLegendDrawer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineLegendDrawer", ::HOnlineLegendDrawer::Class_Version(), "././honlinehistarray.h", 16,
                  typeid(::HOnlineLegendDrawer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineLegendDrawer::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineLegendDrawer) );
      instance.SetNew(&new_HOnlineLegendDrawer);
      instance.SetNewArray(&newArray_HOnlineLegendDrawer);
      instance.SetDelete(&delete_HOnlineLegendDrawer);
      instance.SetDeleteArray(&deleteArray_HOnlineLegendDrawer);
      instance.SetDestructor(&destruct_HOnlineLegendDrawer);
      instance.SetStreamerFunc(&streamer_HOnlineLegendDrawer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineLegendDrawer*)
   {
      return GenerateInitInstanceLocal((::HOnlineLegendDrawer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineLegendDrawer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineTrendArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineTrendArray(void *p = 0);
   static void *newArray_HOnlineTrendArray(Long_t size, void *p);
   static void delete_HOnlineTrendArray(void *p);
   static void deleteArray_HOnlineTrendArray(void *p);
   static void destruct_HOnlineTrendArray(void *p);
   static void streamer_HOnlineTrendArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineTrendArray*)
   {
      ::HOnlineTrendArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineTrendArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineTrendArray", ::HOnlineTrendArray::Class_Version(), "././honlinehistarray.h", 54,
                  typeid(::HOnlineTrendArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineTrendArray::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineTrendArray) );
      instance.SetNew(&new_HOnlineTrendArray);
      instance.SetNewArray(&newArray_HOnlineTrendArray);
      instance.SetDelete(&delete_HOnlineTrendArray);
      instance.SetDeleteArray(&deleteArray_HOnlineTrendArray);
      instance.SetDestructor(&destruct_HOnlineTrendArray);
      instance.SetStreamerFunc(&streamer_HOnlineTrendArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineTrendArray*)
   {
      return GenerateInitInstanceLocal((::HOnlineTrendArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineTrendArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineHistArray_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineHistArray(void *p = 0);
   static void *newArray_HOnlineHistArray(Long_t size, void *p);
   static void delete_HOnlineHistArray(void *p);
   static void deleteArray_HOnlineHistArray(void *p);
   static void destruct_HOnlineHistArray(void *p);
   static void streamer_HOnlineHistArray(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineHistArray*)
   {
      ::HOnlineHistArray *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineHistArray >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineHistArray", ::HOnlineHistArray::Class_Version(), "././honlinehistarray.h", 98,
                  typeid(::HOnlineHistArray), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineHistArray::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineHistArray) );
      instance.SetNew(&new_HOnlineHistArray);
      instance.SetNewArray(&newArray_HOnlineHistArray);
      instance.SetDelete(&delete_HOnlineHistArray);
      instance.SetDeleteArray(&deleteArray_HOnlineHistArray);
      instance.SetDestructor(&destruct_HOnlineHistArray);
      instance.SetStreamerFunc(&streamer_HOnlineHistArray);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineHistArray*)
   {
      return GenerateInitInstanceLocal((::HOnlineHistArray*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineHistArray*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineHistArray2_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineHistArray2(void *p = 0);
   static void *newArray_HOnlineHistArray2(Long_t size, void *p);
   static void delete_HOnlineHistArray2(void *p);
   static void deleteArray_HOnlineHistArray2(void *p);
   static void destruct_HOnlineHistArray2(void *p);
   static void streamer_HOnlineHistArray2(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineHistArray2*)
   {
      ::HOnlineHistArray2 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineHistArray2 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineHistArray2", ::HOnlineHistArray2::Class_Version(), "././honlinehistarray.h", 150,
                  typeid(::HOnlineHistArray2), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineHistArray2::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineHistArray2) );
      instance.SetNew(&new_HOnlineHistArray2);
      instance.SetNewArray(&newArray_HOnlineHistArray2);
      instance.SetDelete(&delete_HOnlineHistArray2);
      instance.SetDeleteArray(&deleteArray_HOnlineHistArray2);
      instance.SetDestructor(&destruct_HOnlineHistArray2);
      instance.SetStreamerFunc(&streamer_HOnlineHistArray2);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineHistArray2*)
   {
      return GenerateInitInstanceLocal((::HOnlineHistArray2*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineHistArray2*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineClientServerCom_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HOnlineClientServerCom(void *p);
   static void deleteArray_HOnlineClientServerCom(void *p);
   static void destruct_HOnlineClientServerCom(void *p);
   static void streamer_HOnlineClientServerCom(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineClientServerCom*)
   {
      ::HOnlineClientServerCom *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineClientServerCom >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineClientServerCom", ::HOnlineClientServerCom::Class_Version(), "././honlineclientservercom.h", 20,
                  typeid(::HOnlineClientServerCom), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineClientServerCom::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineClientServerCom) );
      instance.SetDelete(&delete_HOnlineClientServerCom);
      instance.SetDeleteArray(&deleteArray_HOnlineClientServerCom);
      instance.SetDestructor(&destruct_HOnlineClientServerCom);
      instance.SetStreamerFunc(&streamer_HOnlineClientServerCom);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineClientServerCom*)
   {
      return GenerateInitInstanceLocal((::HOnlineClientServerCom*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineClientServerCom*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientXML_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientXML(void *p = 0);
   static void *newArray_HOnlineMonClientXML(Long_t size, void *p);
   static void delete_HOnlineMonClientXML(void *p);
   static void deleteArray_HOnlineMonClientXML(void *p);
   static void destruct_HOnlineMonClientXML(void *p);
   static void streamer_HOnlineMonClientXML(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientXML*)
   {
      ::HOnlineMonClientXML *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientXML >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientXML", ::HOnlineMonClientXML::Class_Version(), "././honlinemonclientxml.h", 20,
                  typeid(::HOnlineMonClientXML), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientXML::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientXML) );
      instance.SetNew(&new_HOnlineMonClientXML);
      instance.SetNewArray(&newArray_HOnlineMonClientXML);
      instance.SetDelete(&delete_HOnlineMonClientXML);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientXML);
      instance.SetDestructor(&destruct_HOnlineMonClientXML);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientXML);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientXML*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientXML*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientXML*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientMainWin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientMainWin(void *p = 0);
   static void *newArray_HOnlineMonClientMainWin(Long_t size, void *p);
   static void delete_HOnlineMonClientMainWin(void *p);
   static void deleteArray_HOnlineMonClientMainWin(void *p);
   static void destruct_HOnlineMonClientMainWin(void *p);
   static void streamer_HOnlineMonClientMainWin(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientMainWin*)
   {
      ::HOnlineMonClientMainWin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientMainWin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientMainWin", ::HOnlineMonClientMainWin::Class_Version(), "././honlinemonclientmainwin.h", 16,
                  typeid(::HOnlineMonClientMainWin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientMainWin::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientMainWin) );
      instance.SetNew(&new_HOnlineMonClientMainWin);
      instance.SetNewArray(&newArray_HOnlineMonClientMainWin);
      instance.SetDelete(&delete_HOnlineMonClientMainWin);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientMainWin);
      instance.SetDestructor(&destruct_HOnlineMonClientMainWin);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientMainWin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientMainWin*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientMainWin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientMainWin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientDet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientDet(void *p = 0);
   static void *newArray_HOnlineMonClientDet(Long_t size, void *p);
   static void delete_HOnlineMonClientDet(void *p);
   static void deleteArray_HOnlineMonClientDet(void *p);
   static void destruct_HOnlineMonClientDet(void *p);
   static void streamer_HOnlineMonClientDet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientDet*)
   {
      ::HOnlineMonClientDet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientDet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientDet", ::HOnlineMonClientDet::Class_Version(), "././honlinemonclientdet.h", 10,
                  typeid(::HOnlineMonClientDet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientDet::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientDet) );
      instance.SetNew(&new_HOnlineMonClientDet);
      instance.SetNewArray(&newArray_HOnlineMonClientDet);
      instance.SetDelete(&delete_HOnlineMonClientDet);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientDet);
      instance.SetDestructor(&destruct_HOnlineMonClientDet);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientDet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientDet*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientDet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientDet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientTabWin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientTabWin(void *p = 0);
   static void *newArray_HOnlineMonClientTabWin(Long_t size, void *p);
   static void delete_HOnlineMonClientTabWin(void *p);
   static void deleteArray_HOnlineMonClientTabWin(void *p);
   static void destruct_HOnlineMonClientTabWin(void *p);
   static void streamer_HOnlineMonClientTabWin(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientTabWin*)
   {
      ::HOnlineMonClientTabWin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientTabWin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientTabWin", ::HOnlineMonClientTabWin::Class_Version(), "././honlinemonclienttabwin.h", 15,
                  typeid(::HOnlineMonClientTabWin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientTabWin::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientTabWin) );
      instance.SetNew(&new_HOnlineMonClientTabWin);
      instance.SetNewArray(&newArray_HOnlineMonClientTabWin);
      instance.SetDelete(&delete_HOnlineMonClientTabWin);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientTabWin);
      instance.SetDestructor(&destruct_HOnlineMonClientTabWin);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientTabWin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientTabWin*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientTabWin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientTabWin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientSimpleWin_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientSimpleWin(void *p = 0);
   static void *newArray_HOnlineMonClientSimpleWin(Long_t size, void *p);
   static void delete_HOnlineMonClientSimpleWin(void *p);
   static void deleteArray_HOnlineMonClientSimpleWin(void *p);
   static void destruct_HOnlineMonClientSimpleWin(void *p);
   static void streamer_HOnlineMonClientSimpleWin(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientSimpleWin*)
   {
      ::HOnlineMonClientSimpleWin *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientSimpleWin >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientSimpleWin", ::HOnlineMonClientSimpleWin::Class_Version(), "././honlinemonclientsimplewin.h", 14,
                  typeid(::HOnlineMonClientSimpleWin), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientSimpleWin::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientSimpleWin) );
      instance.SetNew(&new_HOnlineMonClientSimpleWin);
      instance.SetNewArray(&newArray_HOnlineMonClientSimpleWin);
      instance.SetDelete(&delete_HOnlineMonClientSimpleWin);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientSimpleWin);
      instance.SetDestructor(&destruct_HOnlineMonClientSimpleWin);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientSimpleWin);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientSimpleWin*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientSimpleWin*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientSimpleWin*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientTab_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientTab(void *p = 0);
   static void *newArray_HOnlineMonClientTab(Long_t size, void *p);
   static void delete_HOnlineMonClientTab(void *p);
   static void deleteArray_HOnlineMonClientTab(void *p);
   static void destruct_HOnlineMonClientTab(void *p);
   static void streamer_HOnlineMonClientTab(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientTab*)
   {
      ::HOnlineMonClientTab *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientTab >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientTab", ::HOnlineMonClientTab::Class_Version(), "././honlinemonclienttab.h", 13,
                  typeid(::HOnlineMonClientTab), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientTab::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientTab) );
      instance.SetNew(&new_HOnlineMonClientTab);
      instance.SetNewArray(&newArray_HOnlineMonClientTab);
      instance.SetDelete(&delete_HOnlineMonClientTab);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientTab);
      instance.SetDestructor(&destruct_HOnlineMonClientTab);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientTab);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientTab*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientTab*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientTab*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientCanvas_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientCanvas(void *p = 0);
   static void *newArray_HOnlineMonClientCanvas(Long_t size, void *p);
   static void delete_HOnlineMonClientCanvas(void *p);
   static void deleteArray_HOnlineMonClientCanvas(void *p);
   static void destruct_HOnlineMonClientCanvas(void *p);
   static void streamer_HOnlineMonClientCanvas(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientCanvas*)
   {
      ::HOnlineMonClientCanvas *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientCanvas >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientCanvas", ::HOnlineMonClientCanvas::Class_Version(), "././honlinemonclientcanvas.h", 14,
                  typeid(::HOnlineMonClientCanvas), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientCanvas::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientCanvas) );
      instance.SetNew(&new_HOnlineMonClientCanvas);
      instance.SetNewArray(&newArray_HOnlineMonClientCanvas);
      instance.SetDelete(&delete_HOnlineMonClientCanvas);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientCanvas);
      instance.SetDestructor(&destruct_HOnlineMonClientCanvas);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientCanvas);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientCanvas*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientCanvas*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientCanvas*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientHist_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientHist(void *p = 0);
   static void *newArray_HOnlineMonClientHist(Long_t size, void *p);
   static void delete_HOnlineMonClientHist(void *p);
   static void deleteArray_HOnlineMonClientHist(void *p);
   static void destruct_HOnlineMonClientHist(void *p);
   static void streamer_HOnlineMonClientHist(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientHist*)
   {
      ::HOnlineMonClientHist *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientHist >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientHist", ::HOnlineMonClientHist::Class_Version(), "././honlinemonclienthist.h", 11,
                  typeid(::HOnlineMonClientHist), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientHist::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientHist) );
      instance.SetNew(&new_HOnlineMonClientHist);
      instance.SetNewArray(&newArray_HOnlineMonClientHist);
      instance.SetDelete(&delete_HOnlineMonClientHist);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientHist);
      instance.SetDestructor(&destruct_HOnlineMonClientHist);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientHist);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientHist*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientHist*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientHist*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOnlineMonClientMain_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOnlineMonClientMain(void *p = 0);
   static void *newArray_HOnlineMonClientMain(Long_t size, void *p);
   static void delete_HOnlineMonClientMain(void *p);
   static void deleteArray_HOnlineMonClientMain(void *p);
   static void destruct_HOnlineMonClientMain(void *p);
   static void streamer_HOnlineMonClientMain(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOnlineMonClientMain*)
   {
      ::HOnlineMonClientMain *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOnlineMonClientMain >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOnlineMonClientMain", ::HOnlineMonClientMain::Class_Version(), "././honlinemonclientmain.h", 34,
                  typeid(::HOnlineMonClientMain), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOnlineMonClientMain::Dictionary, isa_proxy, 0,
                  sizeof(::HOnlineMonClientMain) );
      instance.SetNew(&new_HOnlineMonClientMain);
      instance.SetNewArray(&newArray_HOnlineMonClientMain);
      instance.SetDelete(&delete_HOnlineMonClientMain);
      instance.SetDeleteArray(&deleteArray_HOnlineMonClientMain);
      instance.SetDestructor(&destruct_HOnlineMonClientMain);
      instance.SetStreamerFunc(&streamer_HOnlineMonClientMain);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOnlineMonClientMain*)
   {
      return GenerateInitInstanceLocal((::HOnlineMonClientMain*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOnlineMonClientMain*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonHistAddon::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonHistAddon::Class_Name()
{
   return "HOnlineMonHistAddon";
}

//______________________________________________________________________________
const char *HOnlineMonHistAddon::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHistAddon*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonHistAddon::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHistAddon*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonHistAddon::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHistAddon*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonHistAddon::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHistAddon*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonHist::Class_Name()
{
   return "HOnlineMonHist";
}

//______________________________________________________________________________
const char *HOnlineMonHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonHist2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonHist2::Class_Name()
{
   return "HOnlineMonHist2";
}

//______________________________________________________________________________
const char *HOnlineMonHist2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonHist2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonHist2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonHist2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonHist2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonStack::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonStack::Class_Name()
{
   return "HOnlineMonStack";
}

//______________________________________________________________________________
const char *HOnlineMonStack::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonStack*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonStack::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonStack*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonStack::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonStack*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonStack::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonStack*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineTrendHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineTrendHist::Class_Name()
{
   return "HOnlineTrendHist";
}

//______________________________________________________________________________
const char *HOnlineTrendHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineTrendHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineTrendHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineTrendHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineNamedLegend::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineNamedLegend::Class_Name()
{
   return "HOnlineNamedLegend";
}

//______________________________________________________________________________
const char *HOnlineNamedLegend::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineNamedLegend*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineNamedLegend::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineNamedLegend*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineNamedLegend::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineNamedLegend*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineNamedLegend::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineNamedLegend*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineLegendDrawer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineLegendDrawer::Class_Name()
{
   return "HOnlineLegendDrawer";
}

//______________________________________________________________________________
const char *HOnlineLegendDrawer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineLegendDrawer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineLegendDrawer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineLegendDrawer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineLegendDrawer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineLegendDrawer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineLegendDrawer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineLegendDrawer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineTrendArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineTrendArray::Class_Name()
{
   return "HOnlineTrendArray";
}

//______________________________________________________________________________
const char *HOnlineTrendArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineTrendArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineTrendArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineTrendArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineTrendArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineHistArray::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineHistArray::Class_Name()
{
   return "HOnlineHistArray";
}

//______________________________________________________________________________
const char *HOnlineHistArray::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineHistArray::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineHistArray::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineHistArray::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineHistArray2::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineHistArray2::Class_Name()
{
   return "HOnlineHistArray2";
}

//______________________________________________________________________________
const char *HOnlineHistArray2::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray2*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineHistArray2::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray2*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineHistArray2::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray2*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineHistArray2::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineHistArray2*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineClientServerCom::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineClientServerCom::Class_Name()
{
   return "HOnlineClientServerCom";
}

//______________________________________________________________________________
const char *HOnlineClientServerCom::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineClientServerCom*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineClientServerCom::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineClientServerCom*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineClientServerCom::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineClientServerCom*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineClientServerCom::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineClientServerCom*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientXML::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientXML::Class_Name()
{
   return "HOnlineMonClientXML";
}

//______________________________________________________________________________
const char *HOnlineMonClientXML::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientXML*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientXML::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientXML*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientXML::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientXML*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientXML::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientXML*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientMainWin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientMainWin::Class_Name()
{
   return "HOnlineMonClientMainWin";
}

//______________________________________________________________________________
const char *HOnlineMonClientMainWin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMainWin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientMainWin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMainWin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientMainWin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMainWin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientMainWin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMainWin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientDet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientDet::Class_Name()
{
   return "HOnlineMonClientDet";
}

//______________________________________________________________________________
const char *HOnlineMonClientDet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientDet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientDet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientDet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientDet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientDet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientDet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientDet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientTabWin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientTabWin::Class_Name()
{
   return "HOnlineMonClientTabWin";
}

//______________________________________________________________________________
const char *HOnlineMonClientTabWin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTabWin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientTabWin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTabWin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientTabWin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTabWin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientTabWin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTabWin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientSimpleWin::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientSimpleWin::Class_Name()
{
   return "HOnlineMonClientSimpleWin";
}

//______________________________________________________________________________
const char *HOnlineMonClientSimpleWin::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientSimpleWin*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientSimpleWin::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientSimpleWin*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientSimpleWin::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientSimpleWin*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientSimpleWin::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientSimpleWin*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientTab::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientTab::Class_Name()
{
   return "HOnlineMonClientTab";
}

//______________________________________________________________________________
const char *HOnlineMonClientTab::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTab*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientTab::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTab*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientTab::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTab*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientTab::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientTab*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientCanvas::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientCanvas::Class_Name()
{
   return "HOnlineMonClientCanvas";
}

//______________________________________________________________________________
const char *HOnlineMonClientCanvas::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientCanvas*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientCanvas::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientCanvas*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientCanvas::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientCanvas*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientCanvas::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientCanvas*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientHist::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientHist::Class_Name()
{
   return "HOnlineMonClientHist";
}

//______________________________________________________________________________
const char *HOnlineMonClientHist::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientHist*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientHist::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientHist*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientHist::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientHist*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientHist::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientHist*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOnlineMonClientMain::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOnlineMonClientMain::Class_Name()
{
   return "HOnlineMonClientMain";
}

//______________________________________________________________________________
const char *HOnlineMonClientMain::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMain*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOnlineMonClientMain::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMain*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOnlineMonClientMain::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMain*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOnlineMonClientMain::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOnlineMonClientMain*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HOnlineMonHistAddon::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonHistAddon.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fIsActive;
      R__b >> fisResetable;
      R__b >> refreshrate;
      R__b >> send;
      R__b >> nBinsX;
      R__b >> Xlo;
      R__b >> Xup;
      R__b >> nBinsY;
      R__b >> Ylo;
      R__b >> Yup;
      R__b >> arraySize1;
      R__b >> arraySize2;
      XTitle.Streamer(R__b);
      YTitle.Streamer(R__b);
      ZTitle.Streamer(R__b);
      Option.Streamer(R__b);
      directory.Streamer(R__b);
      HistType.Streamer(R__b);
      format.Streamer(R__b);
      R__b >> stat;
      R__b >> max;
      R__b >> min;
      R__b >> linecol;
      R__b >> linestyle;
      R__b >> fillcol;
      R__b >> fillstyle;
      R__b >> markercol;
      R__b >> markerstyle;
      R__b >> markersize;
      R__b >> logX;
      R__b >> logY;
      R__b >> logZ;
      R__b >> gridX;
      R__b >> gridY;
      R__b >> drawSame;
      R__b >> legend;
      R__b >> legxmin;
      R__b >> legymin;
      R__b >> legxmax;
      R__b >> legymax;
      legform.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HOnlineMonHistAddon::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonHistAddon::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fIsActive;
      R__b << fisResetable;
      R__b << refreshrate;
      R__b << send;
      R__b << nBinsX;
      R__b << Xlo;
      R__b << Xup;
      R__b << nBinsY;
      R__b << Ylo;
      R__b << Yup;
      R__b << arraySize1;
      R__b << arraySize2;
      XTitle.Streamer(R__b);
      YTitle.Streamer(R__b);
      ZTitle.Streamer(R__b);
      Option.Streamer(R__b);
      directory.Streamer(R__b);
      HistType.Streamer(R__b);
      format.Streamer(R__b);
      R__b << stat;
      R__b << max;
      R__b << min;
      R__b << linecol;
      R__b << linestyle;
      R__b << fillcol;
      R__b << fillstyle;
      R__b << markercol;
      R__b << markerstyle;
      R__b << markersize;
      R__b << logX;
      R__b << logY;
      R__b << logZ;
      R__b << gridX;
      R__b << gridY;
      R__b << drawSame;
      R__b << legend;
      R__b << legxmin;
      R__b << legymin;
      R__b << legxmax;
      R__b << legymax;
      legform.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonHistAddon::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonHistAddon.
      TClass *R__cl = ::HOnlineMonHistAddon::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsActive", &fIsActive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fisResetable", &fisResetable);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refreshrate", &refreshrate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "send", &send);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinsX", &nBinsX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xlo", &Xlo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Xup", &Xup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nBinsY", &nBinsY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Ylo", &Ylo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Yup", &Yup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arraySize1", &arraySize1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arraySize2", &arraySize2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "XTitle", &XTitle);
      R__insp.InspectMember(XTitle, "XTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "YTitle", &YTitle);
      R__insp.InspectMember(YTitle, "YTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ZTitle", &ZTitle);
      R__insp.InspectMember(ZTitle, "ZTitle.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Option", &Option);
      R__insp.InspectMember(Option, "Option.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "directory", &directory);
      R__insp.InspectMember(directory, "directory.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HistType", &HistType);
      R__insp.InspectMember(HistType, "HistType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "format", &format);
      R__insp.InspectMember(format, "format.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "stat", &stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max", &max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "min", &min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "linecol", &linecol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "linestyle", &linestyle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fillcol", &fillcol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fillstyle", &fillstyle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "markercol", &markercol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "markerstyle", &markerstyle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "markersize", &markersize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logX", &logX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logY", &logY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logZ", &logZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gridX", &gridX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "gridY", &gridY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "drawSame", &drawSame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legend", &legend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legxmin", &legxmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legymin", &legymin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legxmax", &legxmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legymax", &legymax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "legform", &legform);
      R__insp.InspectMember(legform, "legform.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonHistAddon(void *p) {
      return  p ? new(p) ::HOnlineMonHistAddon : new ::HOnlineMonHistAddon;
   }
   static void *newArray_HOnlineMonHistAddon(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonHistAddon[nElements] : new ::HOnlineMonHistAddon[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonHistAddon(void *p) {
      delete ((::HOnlineMonHistAddon*)p);
   }
   static void deleteArray_HOnlineMonHistAddon(void *p) {
      delete [] ((::HOnlineMonHistAddon*)p);
   }
   static void destruct_HOnlineMonHistAddon(void *p) {
      typedef ::HOnlineMonHistAddon current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonHistAddon(TBuffer &buf, void *obj) {
      ((::HOnlineMonHistAddon*)obj)->::HOnlineMonHistAddon::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonHistAddon

//______________________________________________________________________________
void HOnlineMonHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HOnlineMonHistAddon::Streamer(R__b);
      R__b >> h;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonHist::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonHist::IsA(), kTRUE);
      HOnlineMonHistAddon::Streamer(R__b);
      R__b << h;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonHist.
      TClass *R__cl = ::HOnlineMonHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h", &h);
      HOnlineMonHistAddon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonHist(void *p) {
      return  p ? new(p) ::HOnlineMonHist : new ::HOnlineMonHist;
   }
   static void *newArray_HOnlineMonHist(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonHist[nElements] : new ::HOnlineMonHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonHist(void *p) {
      delete ((::HOnlineMonHist*)p);
   }
   static void deleteArray_HOnlineMonHist(void *p) {
      delete [] ((::HOnlineMonHist*)p);
   }
   static void destruct_HOnlineMonHist(void *p) {
      typedef ::HOnlineMonHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonHist(TBuffer &buf, void *obj) {
      ((::HOnlineMonHist*)obj)->::HOnlineMonHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonHist

//______________________________________________________________________________
void HOnlineMonHist2::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonHist2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HOnlineMonHistAddon::Streamer(R__b);
      R__b >> h;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonHist2::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonHist2::IsA(), kTRUE);
      HOnlineMonHistAddon::Streamer(R__b);
      R__b << h;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonHist2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonHist2.
      TClass *R__cl = ::HOnlineMonHist2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*h", &h);
      HOnlineMonHistAddon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonHist2(void *p) {
      return  p ? new(p) ::HOnlineMonHist2 : new ::HOnlineMonHist2;
   }
   static void *newArray_HOnlineMonHist2(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonHist2[nElements] : new ::HOnlineMonHist2[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonHist2(void *p) {
      delete ((::HOnlineMonHist2*)p);
   }
   static void deleteArray_HOnlineMonHist2(void *p) {
      delete [] ((::HOnlineMonHist2*)p);
   }
   static void destruct_HOnlineMonHist2(void *p) {
      typedef ::HOnlineMonHist2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonHist2(TBuffer &buf, void *obj) {
      ((::HOnlineMonHist2*)obj)->::HOnlineMonHist2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonHist2

//______________________________________________________________________________
void HOnlineTrendHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineTrendHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HOnlineMonHist::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HOnlineTrendHist::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineTrendHist::IsA(), kTRUE);
      HOnlineMonHist::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineTrendHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineTrendHist.
      TClass *R__cl = ::HOnlineTrendHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      HOnlineMonHist::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineTrendHist(void *p) {
      return  p ? new(p) ::HOnlineTrendHist : new ::HOnlineTrendHist;
   }
   static void *newArray_HOnlineTrendHist(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineTrendHist[nElements] : new ::HOnlineTrendHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineTrendHist(void *p) {
      delete ((::HOnlineTrendHist*)p);
   }
   static void deleteArray_HOnlineTrendHist(void *p) {
      delete [] ((::HOnlineTrendHist*)p);
   }
   static void destruct_HOnlineTrendHist(void *p) {
      typedef ::HOnlineTrendHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineTrendHist(TBuffer &buf, void *obj) {
      ((::HOnlineTrendHist*)obj)->::HOnlineTrendHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineTrendHist

//______________________________________________________________________________
void HOnlineNamedLegend::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineNamedLegend.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HOnlineNamedLegend::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineNamedLegend::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineNamedLegend::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineNamedLegend.
      TClass *R__cl = ::HOnlineNamedLegend::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*legend", &legend);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineNamedLegend(void *p) {
      return  p ? new(p) ::HOnlineNamedLegend : new ::HOnlineNamedLegend;
   }
   static void *newArray_HOnlineNamedLegend(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineNamedLegend[nElements] : new ::HOnlineNamedLegend[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineNamedLegend(void *p) {
      delete ((::HOnlineNamedLegend*)p);
   }
   static void deleteArray_HOnlineNamedLegend(void *p) {
      delete [] ((::HOnlineNamedLegend*)p);
   }
   static void destruct_HOnlineNamedLegend(void *p) {
      typedef ::HOnlineNamedLegend current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineNamedLegend(TBuffer &buf, void *obj) {
      ((::HOnlineNamedLegend*)obj)->::HOnlineNamedLegend::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineNamedLegend

//______________________________________________________________________________
void HOnlineLegendDrawer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineLegendDrawer.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HOnlineLegendDrawer::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineLegendDrawer::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineLegendDrawer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineLegendDrawer.
      TClass *R__cl = ::HOnlineLegendDrawer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineLegendDrawer(void *p) {
      return  p ? new(p) ::HOnlineLegendDrawer : new ::HOnlineLegendDrawer;
   }
   static void *newArray_HOnlineLegendDrawer(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineLegendDrawer[nElements] : new ::HOnlineLegendDrawer[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineLegendDrawer(void *p) {
      delete ((::HOnlineLegendDrawer*)p);
   }
   static void deleteArray_HOnlineLegendDrawer(void *p) {
      delete [] ((::HOnlineLegendDrawer*)p);
   }
   static void destruct_HOnlineLegendDrawer(void *p) {
      typedef ::HOnlineLegendDrawer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineLegendDrawer(TBuffer &buf, void *obj) {
      ((::HOnlineLegendDrawer*)obj)->::HOnlineLegendDrawer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineLegendDrawer

//______________________________________________________________________________
void HOnlineTrendArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineTrendArray.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HOnlineMonHistAddon::Streamer(R__b);
      R__b >> array;
      R__b.CheckByteCount(R__s, R__c, HOnlineTrendArray::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineTrendArray::IsA(), kTRUE);
      HOnlineMonHistAddon::Streamer(R__b);
      R__b << array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineTrendArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineTrendArray.
      TClass *R__cl = ::HOnlineTrendArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      HOnlineMonHistAddon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineTrendArray(void *p) {
      return  p ? new(p) ::HOnlineTrendArray : new ::HOnlineTrendArray;
   }
   static void *newArray_HOnlineTrendArray(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineTrendArray[nElements] : new ::HOnlineTrendArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineTrendArray(void *p) {
      delete ((::HOnlineTrendArray*)p);
   }
   static void deleteArray_HOnlineTrendArray(void *p) {
      delete [] ((::HOnlineTrendArray*)p);
   }
   static void destruct_HOnlineTrendArray(void *p) {
      typedef ::HOnlineTrendArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineTrendArray(TBuffer &buf, void *obj) {
      ((::HOnlineTrendArray*)obj)->::HOnlineTrendArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineTrendArray

//______________________________________________________________________________
void HOnlineHistArray::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineHistArray.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HOnlineMonHistAddon::Streamer(R__b);
      R__b >> array;
      R__b.CheckByteCount(R__s, R__c, HOnlineHistArray::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineHistArray::IsA(), kTRUE);
      HOnlineMonHistAddon::Streamer(R__b);
      R__b << array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineHistArray::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineHistArray.
      TClass *R__cl = ::HOnlineHistArray::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      HOnlineMonHistAddon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineHistArray(void *p) {
      return  p ? new(p) ::HOnlineHistArray : new ::HOnlineHistArray;
   }
   static void *newArray_HOnlineHistArray(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineHistArray[nElements] : new ::HOnlineHistArray[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineHistArray(void *p) {
      delete ((::HOnlineHistArray*)p);
   }
   static void deleteArray_HOnlineHistArray(void *p) {
      delete [] ((::HOnlineHistArray*)p);
   }
   static void destruct_HOnlineHistArray(void *p) {
      typedef ::HOnlineHistArray current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineHistArray(TBuffer &buf, void *obj) {
      ((::HOnlineHistArray*)obj)->::HOnlineHistArray::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineHistArray

//______________________________________________________________________________
void HOnlineHistArray2::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineHistArray2.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HOnlineMonHistAddon::Streamer(R__b);
      R__b >> array;
      R__b.CheckByteCount(R__s, R__c, HOnlineHistArray2::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineHistArray2::IsA(), kTRUE);
      HOnlineMonHistAddon::Streamer(R__b);
      R__b << array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineHistArray2::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineHistArray2.
      TClass *R__cl = ::HOnlineHistArray2::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      HOnlineMonHistAddon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineHistArray2(void *p) {
      return  p ? new(p) ::HOnlineHistArray2 : new ::HOnlineHistArray2;
   }
   static void *newArray_HOnlineHistArray2(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineHistArray2[nElements] : new ::HOnlineHistArray2[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineHistArray2(void *p) {
      delete ((::HOnlineHistArray2*)p);
   }
   static void deleteArray_HOnlineHistArray2(void *p) {
      delete [] ((::HOnlineHistArray2*)p);
   }
   static void destruct_HOnlineHistArray2(void *p) {
      typedef ::HOnlineHistArray2 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineHistArray2(TBuffer &buf, void *obj) {
      ((::HOnlineHistArray2*)obj)->::HOnlineHistArray2::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineHistArray2

//______________________________________________________________________________
void HOnlineMonStack::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonStack.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HOnlineMonHistAddon::Streamer(R__b);
      R__b >> stack;
      firstName.Streamer(R__b);
      {
         map<TString,TString> &R__stl =  options;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            TString R__t2;
            R__t2.Streamer(R__b);
            typedef TString Value_t;
            std::pair<Value_t const, TString > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b.CheckByteCount(R__s, R__c, HOnlineMonStack::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonStack::IsA(), kTRUE);
      HOnlineMonHistAddon::Streamer(R__b);
      R__b << stack;
      firstName.Streamer(R__b);
      {
         map<TString,TString> &R__stl =  options;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<TString,TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)((*R__k).first )).Streamer(R__b);
            ((TString&)((*R__k).second)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonStack::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonStack.
      TClass *R__cl = ::HOnlineMonStack::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stack", &stack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstName", &firstName);
      R__insp.InspectMember(firstName, "firstName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "options", (void*)&options);
      R__insp.InspectMember("map<TString,TString>", (void*)&options, "options.", false);
      HOnlineMonHistAddon::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonStack(void *p) {
      return  p ? new(p) ::HOnlineMonStack : new ::HOnlineMonStack;
   }
   static void *newArray_HOnlineMonStack(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonStack[nElements] : new ::HOnlineMonStack[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonStack(void *p) {
      delete ((::HOnlineMonStack*)p);
   }
   static void deleteArray_HOnlineMonStack(void *p) {
      delete [] ((::HOnlineMonStack*)p);
   }
   static void destruct_HOnlineMonStack(void *p) {
      typedef ::HOnlineMonStack current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonStack(TBuffer &buf, void *obj) {
      ((::HOnlineMonStack*)obj)->::HOnlineMonStack::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonStack

//______________________________________________________________________________
void HOnlineClientServerCom::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineClientServerCom.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      clientRequests.Streamer(R__b);
      R__b >> monitor;
      R__b >> serversocket;
      socketlist.Streamer(R__b);
      R__b >> masterClient;
      R__b >> fPort;
      fHostname.Streamer(R__b);
      R__b >> fTimeout;
      R__b >> fDebug;
      R__b >> eventLoopThread;
      R__b.CheckByteCount(R__s, R__c, HOnlineClientServerCom::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineClientServerCom::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      clientRequests.Streamer(R__b);
      R__b << monitor;
      R__b << serversocket;
      socketlist.Streamer(R__b);
      R__b << masterClient;
      R__b << fPort;
      fHostname.Streamer(R__b);
      R__b << fTimeout;
      R__b << fDebug;
      R__b << eventLoopThread;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineClientServerCom::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineClientServerCom.
      TClass *R__cl = ::HOnlineClientServerCom::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "clientRequests", &clientRequests);
      R__insp.InspectMember(clientRequests, "clientRequests.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*monitor", &monitor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*serversocket", &serversocket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "socketlist", &socketlist);
      R__insp.InspectMember(socketlist, "socketlist.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*masterClient", &masterClient);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPort", &fPort);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHostname", &fHostname);
      R__insp.InspectMember(fHostname, "fHostname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeout", &fTimeout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDebug", &fDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*eventLoopThread", &eventLoopThread);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HOnlineClientServerCom(void *p) {
      delete ((::HOnlineClientServerCom*)p);
   }
   static void deleteArray_HOnlineClientServerCom(void *p) {
      delete [] ((::HOnlineClientServerCom*)p);
   }
   static void destruct_HOnlineClientServerCom(void *p) {
      typedef ::HOnlineClientServerCom current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineClientServerCom(TBuffer &buf, void *obj) {
      ((::HOnlineClientServerCom*)obj)->::HOnlineClientServerCom::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineClientServerCom

//______________________________________________________________________________
void HOnlineMonClientMain::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientMain.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      listDetectors.Streamer(R__b);
      R__b >> clientmainwin;
      {
         map<TString,TString> &R__stl =  pad2hist;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            TString R__t;
            R__t.Streamer(R__b);
            TString R__t2;
            R__t2.Streamer(R__b);
            typedef TString Value_t;
            std::pair<Value_t const, TString > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      listHists.Streamer(R__b);
      listPads.Streamer(R__b);
      R__b >> updateThread;
      R__b >> socket;
      serverhost.Streamer(R__b);
      R__b >> serverport;
      R__b >> UpdateInterval;
      R__b >> doReconnect;
      configfile.Streamer(R__b);
      R__b >> updateComplete;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientMain::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientMain::IsA(), kTRUE);
      listDetectors.Streamer(R__b);
      R__b << clientmainwin;
      {
         map<TString,TString> &R__stl =  pad2hist;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<TString,TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            ((TString&)((*R__k).first )).Streamer(R__b);
            ((TString&)((*R__k).second)).Streamer(R__b);
            }
         }
      }
      listHists.Streamer(R__b);
      listPads.Streamer(R__b);
      R__b << updateThread;
      R__b << socket;
      serverhost.Streamer(R__b);
      R__b << serverport;
      R__b << UpdateInterval;
      R__b << doReconnect;
      configfile.Streamer(R__b);
      R__b << updateComplete;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientMain::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientMain.
      TClass *R__cl = ::HOnlineMonClientMain::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listDetectors", &listDetectors);
      R__insp.InspectMember(listDetectors, "listDetectors.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clientmainwin", &clientmainwin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pad2hist", (void*)&pad2hist);
      R__insp.InspectMember("map<TString,TString>", (void*)&pad2hist, "pad2hist.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listHists", &listHists);
      R__insp.InspectMember(listHists, "listHists.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listPads", &listPads);
      R__insp.InspectMember(listPads, "listPads.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*updateThread", &updateThread);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*socket", &socket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "serverhost", &serverhost);
      R__insp.InspectMember(serverhost, "serverhost.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "serverport", &serverport);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "UpdateInterval", &UpdateInterval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doReconnect", &doReconnect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "configfile", &configfile);
      R__insp.InspectMember(configfile, "configfile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "updateComplete", &updateComplete);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientMain(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HOnlineMonClientMain : new ::HOnlineMonClientMain;
   }
   static void *newArray_HOnlineMonClientMain(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HOnlineMonClientMain[nElements] : new ::HOnlineMonClientMain[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientMain(void *p) {
      delete ((::HOnlineMonClientMain*)p);
   }
   static void deleteArray_HOnlineMonClientMain(void *p) {
      delete [] ((::HOnlineMonClientMain*)p);
   }
   static void destruct_HOnlineMonClientMain(void *p) {
      typedef ::HOnlineMonClientMain current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientMain(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientMain*)obj)->::HOnlineMonClientMain::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientMain

//______________________________________________________________________________
void HOnlineMonClientHist::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientHist.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> histo;
      R__b >> subpadnumber;
      R__b >> active;
      R__b >> index_s;
      R__b >> index_m;
      type.Streamer(R__b);
      realname.Streamer(R__b);
      guiname.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientHist::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientHist::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << histo;
      R__b << subpadnumber;
      R__b << active;
      R__b << index_s;
      R__b << index_m;
      type.Streamer(R__b);
      realname.Streamer(R__b);
      guiname.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientHist::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientHist.
      TClass *R__cl = ::HOnlineMonClientHist::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histo", &histo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subpadnumber", &subpadnumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index_s", &index_s);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "index_m", &index_m);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "type", &type);
      R__insp.InspectMember(type, "type.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "realname", &realname);
      R__insp.InspectMember(realname, "realname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "guiname", &guiname);
      R__insp.InspectMember(guiname, "guiname.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientHist(void *p) {
      return  p ? new(p) ::HOnlineMonClientHist : new ::HOnlineMonClientHist;
   }
   static void *newArray_HOnlineMonClientHist(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientHist[nElements] : new ::HOnlineMonClientHist[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientHist(void *p) {
      delete ((::HOnlineMonClientHist*)p);
   }
   static void deleteArray_HOnlineMonClientHist(void *p) {
      delete [] ((::HOnlineMonClientHist*)p);
   }
   static void destruct_HOnlineMonClientHist(void *p) {
      typedef ::HOnlineMonClientHist current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientHist(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientHist*)obj)->::HOnlineMonClientHist::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientHist

//______________________________________________________________________________
void HOnlineMonClientCanvas::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientCanvas.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      listHists.Streamer(R__b);
      R__b >> rcanvas;
      R__b >> splitted;
      R__b >> active;
      R__b >> width;
      R__b >> height;
      R__b >> nx;
      R__b >> ny;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientCanvas::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientCanvas::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      listHists.Streamer(R__b);
      R__b << rcanvas;
      R__b << splitted;
      R__b << active;
      R__b << width;
      R__b << height;
      R__b << nx;
      R__b << ny;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientCanvas::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientCanvas.
      TClass *R__cl = ::HOnlineMonClientCanvas::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listHists", &listHists);
      R__insp.InspectMember(listHists, "listHists.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rcanvas", &rcanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "splitted", &splitted);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width", &width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "height", &height);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nx", &nx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ny", &ny);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientCanvas(void *p) {
      return  p ? new(p) ::HOnlineMonClientCanvas : new ::HOnlineMonClientCanvas;
   }
   static void *newArray_HOnlineMonClientCanvas(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientCanvas[nElements] : new ::HOnlineMonClientCanvas[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientCanvas(void *p) {
      delete ((::HOnlineMonClientCanvas*)p);
   }
   static void deleteArray_HOnlineMonClientCanvas(void *p) {
      delete [] ((::HOnlineMonClientCanvas*)p);
   }
   static void destruct_HOnlineMonClientCanvas(void *p) {
      typedef ::HOnlineMonClientCanvas current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientCanvas(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientCanvas*)obj)->::HOnlineMonClientCanvas::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientCanvas

//______________________________________________________________________________
void HOnlineMonClientTab::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientTab.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      listCanvases.Streamer(R__b);
      R__b >> tabFrame;
      R__b >> active;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientTab::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientTab::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      listCanvases.Streamer(R__b);
      R__b << tabFrame;
      R__b << active;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientTab::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientTab.
      TClass *R__cl = ::HOnlineMonClientTab::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listCanvases", &listCanvases);
      R__insp.InspectMember(listCanvases, "listCanvases.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tabFrame", &tabFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientTab(void *p) {
      return  p ? new(p) ::HOnlineMonClientTab : new ::HOnlineMonClientTab;
   }
   static void *newArray_HOnlineMonClientTab(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientTab[nElements] : new ::HOnlineMonClientTab[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientTab(void *p) {
      delete ((::HOnlineMonClientTab*)p);
   }
   static void deleteArray_HOnlineMonClientTab(void *p) {
      delete [] ((::HOnlineMonClientTab*)p);
   }
   static void destruct_HOnlineMonClientTab(void *p) {
      typedef ::HOnlineMonClientTab current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientTab(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientTab*)obj)->::HOnlineMonClientTab::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientTab

//______________________________________________________________________________
void HOnlineMonClientSimpleWin::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientSimpleWin.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      listCanvases.Streamer(R__b);
      detectorname.Streamer(R__b);
      R__b >> mainFrame;
      R__b >> statBar;
      R__b >> active;
      lastUpdate.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientSimpleWin::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientSimpleWin::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      listCanvases.Streamer(R__b);
      detectorname.Streamer(R__b);
      R__b << mainFrame;
      R__b << statBar;
      R__b << active;
      lastUpdate.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientSimpleWin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientSimpleWin.
      TClass *R__cl = ::HOnlineMonClientSimpleWin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listCanvases", &listCanvases);
      R__insp.InspectMember(listCanvases, "listCanvases.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorname", &detectorname);
      R__insp.InspectMember(detectorname, "detectorname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mainFrame", &mainFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*statBar", &statBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastUpdate", &lastUpdate);
      R__insp.InspectMember(lastUpdate, "lastUpdate.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientSimpleWin(void *p) {
      return  p ? new(p) ::HOnlineMonClientSimpleWin : new ::HOnlineMonClientSimpleWin;
   }
   static void *newArray_HOnlineMonClientSimpleWin(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientSimpleWin[nElements] : new ::HOnlineMonClientSimpleWin[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientSimpleWin(void *p) {
      delete ((::HOnlineMonClientSimpleWin*)p);
   }
   static void deleteArray_HOnlineMonClientSimpleWin(void *p) {
      delete [] ((::HOnlineMonClientSimpleWin*)p);
   }
   static void destruct_HOnlineMonClientSimpleWin(void *p) {
      typedef ::HOnlineMonClientSimpleWin current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientSimpleWin(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientSimpleWin*)obj)->::HOnlineMonClientSimpleWin::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientSimpleWin

//______________________________________________________________________________
void HOnlineMonClientTabWin::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientTabWin.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      listTabs.Streamer(R__b);
      detectorname.Streamer(R__b);
      R__b >> tabContainer;
      R__b >> mainFrame;
      R__b >> tabContainerFrame;
      R__b >> statBar;
      R__b >> active;
      lastUpdate.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientTabWin::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientTabWin::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      listTabs.Streamer(R__b);
      detectorname.Streamer(R__b);
      R__b << tabContainer;
      R__b << mainFrame;
      R__b << tabContainerFrame;
      R__b << statBar;
      R__b << active;
      lastUpdate.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientTabWin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientTabWin.
      TClass *R__cl = ::HOnlineMonClientTabWin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listTabs", &listTabs);
      R__insp.InspectMember(listTabs, "listTabs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorname", &detectorname);
      R__insp.InspectMember(detectorname, "detectorname.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tabContainer", &tabContainer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mainFrame", &mainFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tabContainerFrame", &tabContainerFrame);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*statBar", &statBar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lastUpdate", &lastUpdate);
      R__insp.InspectMember(lastUpdate, "lastUpdate.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientTabWin(void *p) {
      return  p ? new(p) ::HOnlineMonClientTabWin : new ::HOnlineMonClientTabWin;
   }
   static void *newArray_HOnlineMonClientTabWin(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientTabWin[nElements] : new ::HOnlineMonClientTabWin[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientTabWin(void *p) {
      delete ((::HOnlineMonClientTabWin*)p);
   }
   static void deleteArray_HOnlineMonClientTabWin(void *p) {
      delete [] ((::HOnlineMonClientTabWin*)p);
   }
   static void destruct_HOnlineMonClientTabWin(void *p) {
      typedef ::HOnlineMonClientTabWin current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientTabWin(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientTabWin*)obj)->::HOnlineMonClientTabWin::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientTabWin

//______________________________________________________________________________
void HOnlineMonClientDet::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientDet.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      listWindows.Streamer(R__b);
      R__b >> active;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientDet::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientDet::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      listWindows.Streamer(R__b);
      R__b << active;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientDet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientDet.
      TClass *R__cl = ::HOnlineMonClientDet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listWindows", &listWindows);
      R__insp.InspectMember(listWindows, "listWindows.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientDet(void *p) {
      return  p ? new(p) ::HOnlineMonClientDet : new ::HOnlineMonClientDet;
   }
   static void *newArray_HOnlineMonClientDet(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientDet[nElements] : new ::HOnlineMonClientDet[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientDet(void *p) {
      delete ((::HOnlineMonClientDet*)p);
   }
   static void deleteArray_HOnlineMonClientDet(void *p) {
      delete [] ((::HOnlineMonClientDet*)p);
   }
   static void destruct_HOnlineMonClientDet(void *p) {
      typedef ::HOnlineMonClientDet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientDet(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientDet*)obj)->::HOnlineMonClientDet::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientDet

//______________________________________________________________________________
void HOnlineMonClientMainWin::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientMainWin.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      listControlbuttons.Streamer(R__b);
      listOpenDetectors.Streamer(R__b);
      R__b >> gFrameRefreshRate;
      R__b >> numberEntryRefreshRate;
      R__b >> numberEntryAutoSaveRate;
      R__b >> fTextFilename;
      R__b >> fTextSnapshotPath;
      fTextSnapshotPathOnline.Streamer(R__b);
      R__b >> fTextSpeed;
      R__b >> fDataRate;
      R__b >> clientMainWindow;
      R__b >> clientMain;
      R__b >> width;
      R__b >> height;
      SnapShotPath.Streamer(R__b);
      R__b >> autoSaveRate;
      R__b >> gFrameSnapshot;
      R__b >> buttonSnapshot;
      R__b >> gFrameDetectors;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientMainWin::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientMainWin::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      listControlbuttons.Streamer(R__b);
      listOpenDetectors.Streamer(R__b);
      R__b << gFrameRefreshRate;
      R__b << numberEntryRefreshRate;
      R__b << numberEntryAutoSaveRate;
      R__b << fTextFilename;
      R__b << fTextSnapshotPath;
      fTextSnapshotPathOnline.Streamer(R__b);
      R__b << fTextSpeed;
      R__b << fDataRate;
      R__b << clientMainWindow;
      R__b << clientMain;
      R__b << width;
      R__b << height;
      SnapShotPath.Streamer(R__b);
      R__b << autoSaveRate;
      R__b << gFrameSnapshot;
      R__b << buttonSnapshot;
      R__b << gFrameDetectors;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientMainWin::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientMainWin.
      TClass *R__cl = ::HOnlineMonClientMainWin::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listControlbuttons", &listControlbuttons);
      R__insp.InspectMember(listControlbuttons, "listControlbuttons.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "listOpenDetectors", &listOpenDetectors);
      R__insp.InspectMember(listOpenDetectors, "listOpenDetectors.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gFrameRefreshRate", &gFrameRefreshRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*numberEntryRefreshRate", &numberEntryRefreshRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*numberEntryAutoSaveRate", &numberEntryAutoSaveRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextFilename", &fTextFilename);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextSnapshotPath", &fTextSnapshotPath);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTextSnapshotPathOnline", &fTextSnapshotPathOnline);
      R__insp.InspectMember(fTextSnapshotPathOnline, "fTextSnapshotPathOnline.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTextSpeed", &fTextSpeed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataRate", &fDataRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clientMainWindow", &clientMainWindow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clientMain", &clientMain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "width", &width);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "height", &height);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SnapShotPath", &SnapShotPath);
      R__insp.InspectMember(SnapShotPath, "SnapShotPath.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "autoSaveRate", &autoSaveRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gFrameSnapshot", &gFrameSnapshot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*buttonSnapshot", &buttonSnapshot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*gFrameDetectors", &gFrameDetectors);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientMainWin(void *p) {
      return  p ? new(p) ::HOnlineMonClientMainWin : new ::HOnlineMonClientMainWin;
   }
   static void *newArray_HOnlineMonClientMainWin(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientMainWin[nElements] : new ::HOnlineMonClientMainWin[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientMainWin(void *p) {
      delete ((::HOnlineMonClientMainWin*)p);
   }
   static void deleteArray_HOnlineMonClientMainWin(void *p) {
      delete [] ((::HOnlineMonClientMainWin*)p);
   }
   static void destruct_HOnlineMonClientMainWin(void *p) {
      typedef ::HOnlineMonClientMainWin current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientMainWin(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientMainWin*)obj)->::HOnlineMonClientMainWin::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientMainWin

//______________________________________________________________________________
void HOnlineMonClientXML::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOnlineMonClientXML.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> clientmain;
      R__b.CheckByteCount(R__s, R__c, HOnlineMonClientXML::IsA());
   } else {
      R__c = R__b.WriteVersion(HOnlineMonClientXML::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << clientmain;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HOnlineMonClientXML::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOnlineMonClientXML.
      TClass *R__cl = ::HOnlineMonClientXML::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*clientmain", &clientmain);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*currentDetector", &currentDetector);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOnlineMonClientXML(void *p) {
      return  p ? new(p) ::HOnlineMonClientXML : new ::HOnlineMonClientXML;
   }
   static void *newArray_HOnlineMonClientXML(Long_t nElements, void *p) {
      return p ? new(p) ::HOnlineMonClientXML[nElements] : new ::HOnlineMonClientXML[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOnlineMonClientXML(void *p) {
      delete ((::HOnlineMonClientXML*)p);
   }
   static void deleteArray_HOnlineMonClientXML(void *p) {
      delete [] ((::HOnlineMonClientXML*)p);
   }
   static void destruct_HOnlineMonClientXML(void *p) {
      typedef ::HOnlineMonClientXML current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOnlineMonClientXML(TBuffer &buf, void *obj) {
      ((::HOnlineMonClientXML*)obj)->::HOnlineMonClientXML::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOnlineMonClientXML

namespace ROOTDict {
   void maplETStringcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOTStringgR_Dictionary();
   static void *new_maplETStringcOTStringgR(void *p = 0);
   static void *newArray_maplETStringcOTStringgR(Long_t size, void *p);
   static void delete_maplETStringcOTStringgR(void *p);
   static void deleteArray_maplETStringcOTStringgR(void *p);
   static void destruct_maplETStringcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,TString>*)
   {
      map<TString,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,TString>", -2, "/cvmfs/hades.gsi.de/install/root-5.34.34/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETStringcOTStringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,TString>) );
      instance.SetNew(&new_maplETStringcOTStringgR);
      instance.SetNewArray(&newArray_maplETStringcOTStringgR);
      instance.SetDelete(&delete_maplETStringcOTStringgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOTStringgR);
      instance.SetDestructor(&destruct_maplETStringcOTStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TString,TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOTStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TString,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETStringcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString> : new map<TString,TString>;
   }
   static void *newArray_maplETStringcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,TString>[nElements] : new map<TString,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOTStringgR(void *p) {
      delete ((map<TString,TString>*)p);
   }
   static void deleteArray_maplETStringcOTStringgR(void *p) {
      delete [] ((map<TString,TString>*)p);
   }
   static void destruct_maplETStringcOTStringgR(void *p) {
      typedef map<TString,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TString,TString>

/********************************************************
* ../build/pc/OnlineDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableOnlineDict();

extern "C" void G__set_cpp_environmentOnlineDict() {
  G__cpp_reset_tagtableOnlineDict();
}
#include <new>
extern "C" int G__cpp_dllrevOnlineDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HOnlineMonHistAddon */
static int G__OnlineDict_288_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHistAddon* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHistAddon((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineMonHistAddon((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonHistAddon[n];
       } else {
         p = new((void*) gvp) HOnlineMonHistAddon[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonHistAddon;
       } else {
         p = new((void*) gvp) HOnlineMonHistAddon;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHistAddon* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineMonHistAddon((Text_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HOnlineMonHistAddon((Text_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setActive((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setResetable((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getResetable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setRefreshRate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getRefreshRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setSend((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getSend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setNBinsX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getNBinsX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setXLo((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HOnlineMonHistAddon*) G__getstructoffset())->getXLo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setXUp((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HOnlineMonHistAddon*) G__getstructoffset())->getXUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setNBinsY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getNBinsY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setYLo((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HOnlineMonHistAddon*) G__getstructoffset())->getYLo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setYUp((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HOnlineMonHistAddon*) G__getstructoffset())->getYUp());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setSize1((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getSize1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setSize2((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getSize2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setStat((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getStat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setMax((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getMax());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setMin((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getMin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setLineCol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getLineCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setLineStyle((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getLineStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setFillCol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getFillCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setFillStyle((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getFillStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setMarkerCol((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getMarkerCol());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setMarkerStyle((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getMarkerStyle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setMarkerSize((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HOnlineMonHistAddon*) G__getstructoffset())->getMarkerSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setLogX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getLogX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setLogY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getLogY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setLogZ((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getLogZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setGridX((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getGridX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setGridY((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getGridY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setDirectory(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonHistAddon*) G__getstructoffset())->getDirectory();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setXTitle(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonHistAddon*) G__getstructoffset())->getXTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setYTitle(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonHistAddon*) G__getstructoffset())->getYTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setZTitle(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonHistAddon*) G__getstructoffset())->getZTitle();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setOption(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonHistAddon*) G__getstructoffset())->getOption();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setHistType(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonHistAddon*) G__getstructoffset())->getHistType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setFormat(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonHistAddon*) G__getstructoffset())->getFormat();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setDrawSame((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getDrawSame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getLegend());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setLegend((TLegend*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->getLegDim(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(TString*) libp->para[4].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setLegDim((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, *((TString*) G__int(libp->para[4])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->copySet(*(HOnlineMonHistAddon*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->getSet(*(HOnlineMonHistAddon*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->read((const Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->getText((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setHist((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setHist((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->setCanvas((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->createHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HOnlineMonHistAddon*) G__getstructoffset())->draw((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HOnlineMonHistAddon*) G__getstructoffset())->draw();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->reset((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->add((HOnlineMonHistAddon*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getP((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getP((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((HOnlineMonHistAddon*) G__getstructoffset())->getP());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HOnlineMonHistAddon*) G__getstructoffset())->fill((Stat_t) G__double(libp->para[0]), (Stat_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HOnlineMonHistAddon*) G__getstructoffset())->fill((Stat_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((HOnlineMonHistAddon*) G__getstructoffset())->fill((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Stat_t) G__double(libp->para[2]), (Stat_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((HOnlineMonHistAddon*) G__getstructoffset())->fill((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Stat_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->getMinMax(*(Double_t*) G__Doubleref(&libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonHistAddon::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHistAddon::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonHistAddon::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonHistAddon::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHistAddon*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHistAddon::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonHistAddon::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHistAddon::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_288_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonHistAddon::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_288_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineMonHistAddon* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineMonHistAddon(*(HOnlineMonHistAddon*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonHistAddon G__THOnlineMonHistAddon;
static int G__OnlineDict_288_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonHistAddon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonHistAddon*) (soff+(sizeof(HOnlineMonHistAddon)*i)))->~G__THOnlineMonHistAddon();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonHistAddon*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonHistAddon*) (soff))->~G__THOnlineMonHistAddon();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_288_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHistAddon* dest = (HOnlineMonHistAddon*) G__getstructoffset();
   *dest = *(HOnlineMonHistAddon*) libp->para[0].ref;
   const HOnlineMonHistAddon& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonHist */
static int G__OnlineDict_289_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineMonHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineMonHist((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineMonHist((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonHist[n];
       } else {
         p = new((void*) gvp) HOnlineMonHist[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonHist;
       } else {
         p = new((void*) gvp) HOnlineMonHist;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineMonHist(*(HOnlineMonHistAddon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HOnlineMonHist(*(HOnlineMonHistAddon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHist*) G__getstructoffset())->create();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_289_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_289_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineMonHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineMonHist(*(HOnlineMonHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonHist G__THOnlineMonHist;
static int G__OnlineDict_289_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonHist*) (soff+(sizeof(HOnlineMonHist)*i)))->~G__THOnlineMonHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonHist*) (soff))->~G__THOnlineMonHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_289_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHist* dest = (HOnlineMonHist*) G__getstructoffset();
   *dest = *(HOnlineMonHist*) libp->para[0].ref;
   const HOnlineMonHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonHist2 */
static int G__OnlineDict_290_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHist2* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 10:
     //m: 10
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]), (Float_t) G__double(libp->para[9]));
     }
     break;
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonHist2((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineMonHist2((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonHist2[n];
       } else {
         p = new((void*) gvp) HOnlineMonHist2[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonHist2;
       } else {
         p = new((void*) gvp) HOnlineMonHist2;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHist2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineMonHist2(*(HOnlineMonHistAddon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HOnlineMonHist2(*(HOnlineMonHistAddon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHist2*) G__getstructoffset())->create();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonHist2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHist2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonHist2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonHist2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonHist2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHist2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonHist2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonHist2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_290_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonHist2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_290_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineMonHist2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineMonHist2(*(HOnlineMonHist2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonHist2 G__THOnlineMonHist2;
static int G__OnlineDict_290_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonHist2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonHist2*) (soff+(sizeof(HOnlineMonHist2)*i)))->~G__THOnlineMonHist2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonHist2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonHist2*) (soff))->~G__THOnlineMonHist2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_290_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonHist2* dest = (HOnlineMonHist2*) G__getstructoffset();
   *dest = *(HOnlineMonHist2*) libp->para[0].ref;
   const HOnlineMonHist2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonStack */
static int G__OnlineDict_533_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonStack* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonStack((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineMonStack((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonStack((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineMonStack((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonStack[n];
       } else {
         p = new((void*) gvp) HOnlineMonStack[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonStack;
       } else {
         p = new((void*) gvp) HOnlineMonStack;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonStack* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineMonStack(*(HOnlineMonStack*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HOnlineMonStack(*(HOnlineMonStack*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonStack*) G__getstructoffset())->getStack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HOnlineMonStack*) G__getstructoffset())->addToStack((TObject*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((HOnlineMonStack*) G__getstructoffset())->addToStack((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonStack*) G__getstructoffset())->addTimeStamp(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonStack::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonStack::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonStack::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonStack::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonStack*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonStack::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonStack::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonStack::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_533_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonStack::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonStack G__THOnlineMonStack;
static int G__OnlineDict_533_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonStack*) (soff+(sizeof(HOnlineMonStack)*i)))->~G__THOnlineMonStack();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonStack*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonStack*) (soff))->~G__THOnlineMonStack();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_533_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonStack* dest = (HOnlineMonStack*) G__getstructoffset();
   *dest = *(HOnlineMonStack*) libp->para[0].ref;
   const HOnlineMonStack& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineTrendHist */
static int G__OnlineDict_543_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineTrendHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     } else {
       p = new((void*) gvp) HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     } else {
       p = new((void*) gvp) HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineTrendHist(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendHist((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineTrendHist((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendHist((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineTrendHist((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineTrendHist[n];
       } else {
         p = new((void*) gvp) HOnlineTrendHist[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineTrendHist;
       } else {
         p = new((void*) gvp) HOnlineTrendHist;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineTrendHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineTrendHist(*(HOnlineMonHistAddon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HOnlineTrendHist(*(HOnlineMonHistAddon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineTrendHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineTrendHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineTrendHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineTrendHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineTrendHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineTrendHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineTrendHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineTrendHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_543_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineTrendHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_543_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineTrendHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineTrendHist(*(HOnlineTrendHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineTrendHist G__THOnlineTrendHist;
static int G__OnlineDict_543_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineTrendHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineTrendHist*) (soff+(sizeof(HOnlineTrendHist)*i)))->~G__THOnlineTrendHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineTrendHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineTrendHist*) (soff))->~G__THOnlineTrendHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_543_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineTrendHist* dest = (HOnlineTrendHist*) G__getstructoffset();
   *dest = *(HOnlineTrendHist*) libp->para[0].ref;
   const HOnlineTrendHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineNamedLegend */
static int G__OnlineDict_544_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineNamedLegend* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineNamedLegend(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (HOnlineMonHistAddon*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineNamedLegend(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (HOnlineMonHistAddon*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineNamedLegend((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineNamedLegend((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineNamedLegend((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineNamedLegend((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineNamedLegend[n];
       } else {
         p = new((void*) gvp) HOnlineNamedLegend[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineNamedLegend;
       } else {
         p = new((void*) gvp) HOnlineNamedLegend;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineNamedLegend*) G__getstructoffset())->getP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineNamedLegend::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineNamedLegend::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineNamedLegend::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineNamedLegend::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineNamedLegend*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineNamedLegend::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineNamedLegend::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineNamedLegend::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_544_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineNamedLegend::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_544_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineNamedLegend* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineNamedLegend(*(HOnlineNamedLegend*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineNamedLegend G__THOnlineNamedLegend;
static int G__OnlineDict_544_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineNamedLegend*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineNamedLegend*) (soff+(sizeof(HOnlineNamedLegend)*i)))->~G__THOnlineNamedLegend();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineNamedLegend*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineNamedLegend*) (soff))->~G__THOnlineNamedLegend();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_544_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineNamedLegend* dest = (HOnlineNamedLegend*) G__getstructoffset();
   *dest = *(HOnlineNamedLegend*) libp->para[0].ref;
   const HOnlineNamedLegend& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineLegendDrawer */
static int G__OnlineDict_545_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineLegendDrawer* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineLegendDrawer((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineLegendDrawer((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineLegendDrawer((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineLegendDrawer((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineLegendDrawer[n];
       } else {
         p = new((void*) gvp) HOnlineLegendDrawer[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineLegendDrawer;
       } else {
         p = new((void*) gvp) HOnlineLegendDrawer;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineLegendDrawer*) G__getstructoffset())->draw((HOnlineMonHistAddon*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineLegendDrawer*) G__getstructoffset())->add((HOnlineMonHistAddon*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineLegendDrawer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineLegendDrawer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineLegendDrawer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineLegendDrawer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineLegendDrawer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineLegendDrawer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineLegendDrawer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineLegendDrawer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_545_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineLegendDrawer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_545_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineLegendDrawer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineLegendDrawer(*(HOnlineLegendDrawer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineLegendDrawer G__THOnlineLegendDrawer;
static int G__OnlineDict_545_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineLegendDrawer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineLegendDrawer*) (soff+(sizeof(HOnlineLegendDrawer)*i)))->~G__THOnlineLegendDrawer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineLegendDrawer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineLegendDrawer*) (soff))->~G__THOnlineLegendDrawer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_545_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineLegendDrawer* dest = (HOnlineLegendDrawer*) G__getstructoffset();
   *dest = *(HOnlineLegendDrawer*) libp->para[0].ref;
   const HOnlineLegendDrawer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineTrendArray */
static int G__OnlineDict_546_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineTrendArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineTrendArray((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineTrendArray((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineTrendArray[n];
       } else {
         p = new((void*) gvp) HOnlineTrendArray[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineTrendArray;
       } else {
         p = new((void*) gvp) HOnlineTrendArray;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineTrendArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineTrendArray(*(HOnlineMonHistAddon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HOnlineTrendArray(*(HOnlineMonHistAddon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineTrendArray*) G__getstructoffset())->getDim((Int_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineTrendArray*) G__getstructoffset())->getSizeAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineTrendArray*) G__getstructoffset())->create();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HOnlineTrendArray*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HOnlineTrendArray*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HOnlineTrendArray*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HOnlineTrendArray*) G__getstructoffset())->drawAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineTrendArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineTrendArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineTrendArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineTrendArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineTrendArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineTrendArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineTrendArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineTrendArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_546_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineTrendArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_546_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineTrendArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineTrendArray(*(HOnlineTrendArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineTrendArray G__THOnlineTrendArray;
static int G__OnlineDict_546_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineTrendArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineTrendArray*) (soff+(sizeof(HOnlineTrendArray)*i)))->~G__THOnlineTrendArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineTrendArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineTrendArray*) (soff))->~G__THOnlineTrendArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_546_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineTrendArray* dest = (HOnlineTrendArray*) G__getstructoffset();
   *dest = *(HOnlineTrendArray*) libp->para[0].ref;
   const HOnlineTrendArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineHistArray */
static int G__OnlineDict_547_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineHistArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineHistArray(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineHistArray((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineHistArray((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineHistArray[n];
       } else {
         p = new((void*) gvp) HOnlineHistArray[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineHistArray;
       } else {
         p = new((void*) gvp) HOnlineHistArray;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineHistArray* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineHistArray(*(HOnlineMonHistAddon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HOnlineHistArray(*(HOnlineMonHistAddon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray*) G__getstructoffset())->getDim((Int_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineHistArray*) G__getstructoffset())->getSizeAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray*) G__getstructoffset())->setBinContent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Stat_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HOnlineHistArray*) G__getstructoffset())->getBinContent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray*) G__getstructoffset())->setBinError((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Stat_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HOnlineHistArray*) G__getstructoffset())->getBinError((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray*) G__getstructoffset())->create();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HOnlineHistArray*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HOnlineHistArray*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HOnlineHistArray*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HOnlineHistArray*) G__getstructoffset())->drawAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineHistArray::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineHistArray::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineHistArray::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineHistArray::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineHistArray::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineHistArray::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineHistArray::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_547_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineHistArray::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_547_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineHistArray* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineHistArray(*(HOnlineHistArray*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineHistArray G__THOnlineHistArray;
static int G__OnlineDict_547_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineHistArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineHistArray*) (soff+(sizeof(HOnlineHistArray)*i)))->~G__THOnlineHistArray();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineHistArray*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineHistArray*) (soff))->~G__THOnlineHistArray();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_547_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineHistArray* dest = (HOnlineHistArray*) G__getstructoffset();
   *dest = *(HOnlineHistArray*) libp->para[0].ref;
   const HOnlineHistArray& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineHistArray2 */
static int G__OnlineDict_548_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineHistArray2* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 9:
     //m: 9
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
     }
     break;
   case 8:
     //m: 8
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
     }
     break;
   case 7:
     //m: 7
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
     }
     break;
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineHistArray2((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOnlineHistArray2((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineHistArray2[n];
       } else {
         p = new((void*) gvp) HOnlineHistArray2[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineHistArray2;
       } else {
         p = new((void*) gvp) HOnlineHistArray2;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineHistArray2* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineHistArray2(*(HOnlineMonHistAddon*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HOnlineHistArray2(*(HOnlineMonHistAddon*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray2*) G__getstructoffset())->getDim((Int_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineHistArray2*) G__getstructoffset())->getSizeAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray2*) G__getstructoffset())->setBinContent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Stat_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HOnlineHistArray2*) G__getstructoffset())->getBinContent((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray2*) G__getstructoffset())->setBinError((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Stat_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HOnlineHistArray2*) G__getstructoffset())->getBinError((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray2*) G__getstructoffset())->create();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HOnlineHistArray2*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HOnlineHistArray2*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HOnlineHistArray2*) G__getstructoffset())->drawAll((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HOnlineHistArray2*) G__getstructoffset())->drawAll();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineHistArray2::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineHistArray2::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineHistArray2::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineHistArray2::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineHistArray2*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineHistArray2::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineHistArray2::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineHistArray2::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_548_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineHistArray2::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_548_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineHistArray2* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineHistArray2(*(HOnlineHistArray2*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineHistArray2 G__THOnlineHistArray2;
static int G__OnlineDict_548_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineHistArray2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineHistArray2*) (soff+(sizeof(HOnlineHistArray2)*i)))->~G__THOnlineHistArray2();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineHistArray2*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineHistArray2*) (soff))->~G__THOnlineHistArray2();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_548_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineHistArray2* dest = (HOnlineHistArray2*) G__getstructoffset();
   *dest = *(HOnlineHistArray2*) libp->para[0].ref;
   const HOnlineHistArray2& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineClientServerCom */
static int G__OnlineDict_648_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineClientServerCom* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOnlineClientServerCom(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HOnlineClientServerCom(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineClientServerCom));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineClientServerCom*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineClientServerCom*) G__getstructoffset())->processClientRequests());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineClientServerCom*) G__getstructoffset())->processClients(*(TList*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineClientServerCom*) G__getstructoffset())->sendHistToClient((TSocket*) G__int(libp->para[0]), (HOnlineMonHistAddon*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineClientServerCom*) G__getstructoffset())->sendTextToClient((TSocket*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineClientServerCom*) G__getstructoffset())->sendListToClient((TSocket*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineClientServerCom*) G__getstructoffset())->setDebug((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      HOnlineClientServerCom::setEvtCounterInterval((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      HOnlineClientServerCom::setEvtCounterInterval();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineClientServerCom*) G__getstructoffset())->eventLoop((vector<fillptrHOnlineClientServerCom>*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineClientServerCom::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineClientServerCom::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineClientServerCom::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineClientServerCom::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineClientServerCom*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineClientServerCom::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineClientServerCom::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineClientServerCom::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_648_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineClientServerCom::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineClientServerCom G__THOnlineClientServerCom;
static int G__OnlineDict_648_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineClientServerCom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineClientServerCom*) (soff+(sizeof(HOnlineClientServerCom)*i)))->~G__THOnlineClientServerCom();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineClientServerCom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineClientServerCom*) (soff))->~G__THOnlineClientServerCom();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientXML */
static int G__OnlineDict_738_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientXML* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientXML[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientXML[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientXML;
     } else {
       p = new((void*) gvp) HOnlineMonClientXML;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientXML*) G__getstructoffset())->ParseXMLFile(*((TString*) G__int(libp->para[0])), (HOnlineMonClientMain*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientXML::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientXML::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientXML::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientXML::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientXML*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientXML::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientXML::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientXML::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_738_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientXML::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_738_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineMonClientXML* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineMonClientXML(*(HOnlineMonClientXML*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientXML G__THOnlineMonClientXML;
static int G__OnlineDict_738_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientXML*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientXML*) (soff+(sizeof(HOnlineMonClientXML)*i)))->~G__THOnlineMonClientXML();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientXML*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientXML*) (soff))->~G__THOnlineMonClientXML();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_738_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientXML* dest = (HOnlineMonClientXML*) G__getstructoffset();
   *dest = *(HOnlineMonClientXML*) libp->para[0].ref;
   const HOnlineMonClientXML& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientMainWin */
static int G__OnlineDict_739_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientMainWin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientMainWin[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientMainWin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientMainWin;
     } else {
       p = new((void*) gvp) HOnlineMonClientMainWin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->CreateMainWin((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->DestroyMainWin((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->SetWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMainWin*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->SetHeight((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMainWin*) G__getstructoffset())->GetHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->SetSnapShotPath(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonClientMainWin*) G__getstructoffset())->GetSnapShotPath();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->SetAutoSaveRate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMainWin*) G__getstructoffset())->GetAutoSaveRate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonClientMainWin*) G__getstructoffset())->GetMainClient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->SetMainClient((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonClientMainWin*) G__getstructoffset())->GetMainWindow());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientMainWin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientMainWin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientMainWin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientMainWin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMainWin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientMainWin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientMainWin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientMainWin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_739_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientMainWin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientMainWin G__THOnlineMonClientMainWin;
static int G__OnlineDict_739_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientMainWin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientMainWin*) (soff+(sizeof(HOnlineMonClientMainWin)*i)))->~G__THOnlineMonClientMainWin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientMainWin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientMainWin*) (soff))->~G__THOnlineMonClientMainWin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientDet */
static int G__OnlineDict_740_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientDet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientDet[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientDet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientDet;
     } else {
       p = new((void*) gvp) HOnlineMonClientDet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientDet*) G__getstructoffset())->CreateDet((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientDet*) G__getstructoffset())->DestroyDet((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientDet*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientDet*) G__getstructoffset())->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientDet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientDet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientDet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientDet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientDet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientDet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientDet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientDet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_740_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientDet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientDet G__THOnlineMonClientDet;
static int G__OnlineDict_740_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientDet*) (soff+(sizeof(HOnlineMonClientDet)*i)))->~G__THOnlineMonClientDet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientDet*) (soff))->~G__THOnlineMonClientDet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientTabWin */
static int G__OnlineDict_741_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientTabWin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientTabWin[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientTabWin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientTabWin;
     } else {
       p = new((void*) gvp) HOnlineMonClientTabWin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTabWin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTabWin*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientTabWin*) G__getstructoffset())->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonClientTabWin*) G__getstructoffset())->GetLastUpdate();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTabWin*) G__getstructoffset())->SetLastUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTabWin*) G__getstructoffset())->SetStatusBarText(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTabWin*) G__getstructoffset())->CreateWindow((HOnlineMonClientMain*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTabWin*) G__getstructoffset())->DestroyWindow((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientTabWin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientTabWin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientTabWin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientTabWin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTabWin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientTabWin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientTabWin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientTabWin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_741_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientTabWin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientTabWin G__THOnlineMonClientTabWin;
static int G__OnlineDict_741_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientTabWin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientTabWin*) (soff+(sizeof(HOnlineMonClientTabWin)*i)))->~G__THOnlineMonClientTabWin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientTabWin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientTabWin*) (soff))->~G__THOnlineMonClientTabWin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientSimpleWin */
static int G__OnlineDict_742_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientSimpleWin* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientSimpleWin[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientSimpleWin[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientSimpleWin;
     } else {
       p = new((void*) gvp) HOnlineMonClientSimpleWin;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientSimpleWin));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientSimpleWin*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientSimpleWin*) G__getstructoffset())->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonClientSimpleWin*) G__getstructoffset())->GetLastUpdate();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientSimpleWin*) G__getstructoffset())->SetLastUpdate();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientSimpleWin*) G__getstructoffset())->SetStatusBarText(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientSimpleWin*) G__getstructoffset())->CreateWindow((HOnlineMonClientMain*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientSimpleWin*) G__getstructoffset())->DestroyWindow((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientSimpleWin::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientSimpleWin::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientSimpleWin::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientSimpleWin::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientSimpleWin*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientSimpleWin::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientSimpleWin::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientSimpleWin::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_742_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientSimpleWin::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientSimpleWin G__THOnlineMonClientSimpleWin;
static int G__OnlineDict_742_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientSimpleWin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientSimpleWin*) (soff+(sizeof(HOnlineMonClientSimpleWin)*i)))->~G__THOnlineMonClientSimpleWin();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientSimpleWin*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientSimpleWin*) (soff))->~G__THOnlineMonClientSimpleWin();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientTab */
static int G__OnlineDict_743_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientTab* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientTab[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientTab[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientTab;
     } else {
       p = new((void*) gvp) HOnlineMonClientTab;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTab));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTab*) G__getstructoffset())->CreateTab((HOnlineMonClientMain*) G__int(libp->para[0]), (HOnlineMonClientTabWin*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTab*) G__getstructoffset())->DestroyTab((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTab*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientTab*) G__getstructoffset())->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientTab::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientTab::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientTab::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientTab::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientTab*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientTab::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientTab::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientTab::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_743_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientTab::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientTab G__THOnlineMonClientTab;
static int G__OnlineDict_743_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientTab*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientTab*) (soff+(sizeof(HOnlineMonClientTab)*i)))->~G__THOnlineMonClientTab();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientTab*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientTab*) (soff))->~G__THOnlineMonClientTab();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientCanvas */
static int G__OnlineDict_744_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientCanvas* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientCanvas[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientCanvas[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientCanvas;
     } else {
       p = new((void*) gvp) HOnlineMonClientCanvas;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientCanvas));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->CreateCanvas((HOnlineMonClientMain*) G__int(libp->para[0]), (TGWindow*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->DestroyCanvas((HOnlineMonClientMain*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->GetCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->GetRCanvas());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->SetSplitted((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->IsSplitted());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->SetWidth((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->GetWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->SetHeight((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->GetHeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->SetNx((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->GetNx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->SetNy((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->GetNy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientCanvas*) G__getstructoffset())->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientCanvas::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientCanvas::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientCanvas::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientCanvas::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientCanvas*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientCanvas::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientCanvas::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientCanvas::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_744_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientCanvas::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientCanvas G__THOnlineMonClientCanvas;
static int G__OnlineDict_744_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientCanvas*) (soff+(sizeof(HOnlineMonClientCanvas)*i)))->~G__THOnlineMonClientCanvas();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientCanvas*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientCanvas*) (soff))->~G__THOnlineMonClientCanvas();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientHist */
static int G__OnlineDict_745_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientHist* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientHist[n];
     } else {
       p = new((void*) gvp) HOnlineMonClientHist[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientHist;
     } else {
       p = new((void*) gvp) HOnlineMonClientHist;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetHist((HOnlineMonHistAddon*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonClientHist*) G__getstructoffset())->GetHist());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetSubpadnumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientHist*) G__getstructoffset())->GetSubpadnumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOnlineMonClientHist*) G__getstructoffset())->IsActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetArrayIndexS((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientHist*) G__getstructoffset())->GetArrayIndexS());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetArrayIndexM((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientHist*) G__getstructoffset())->GetArrayIndexM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetType(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonClientHist*) G__getstructoffset())->GetType();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetRealName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonClientHist*) G__getstructoffset())->GetRealName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->SetGuiName(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonClientHist*) G__getstructoffset())->GetGuiName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientHist::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientHist::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientHist::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientHist::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientHist*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientHist::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientHist::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientHist::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_745_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientHist::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__OnlineDict_745_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOnlineMonClientHist* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOnlineMonClientHist(*(HOnlineMonClientHist*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientHist G__THOnlineMonClientHist;
static int G__OnlineDict_745_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientHist*) (soff+(sizeof(HOnlineMonClientHist)*i)))->~G__THOnlineMonClientHist();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientHist*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientHist*) (soff))->~G__THOnlineMonClientHist();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__OnlineDict_745_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientHist* dest = (HOnlineMonClientHist*) G__getstructoffset();
   *dest = *(HOnlineMonClientHist*) libp->para[0].ref;
   const HOnlineMonClientHist& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOnlineMonClientMain */
static int G__OnlineDict_746_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOnlineMonClientMain* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOnlineMonClientMain(*((TString*) G__int(libp->para[0])));
     } else {
       p = new((void*) gvp) HOnlineMonClientMain(*((TString*) G__int(libp->para[0])));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonClientMain[n];
       } else {
         p = new((void*) gvp) HOnlineMonClientMain[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOnlineMonClientMain;
       } else {
         p = new((void*) gvp) HOnlineMonClientMain;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMain));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((HOnlineMonClientMain*) G__getstructoffset())->Init((Bool_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((HOnlineMonClientMain*) G__getstructoffset())->Init((Bool_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HOnlineMonClientMain*) G__getstructoffset())->Init((Bool_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((HOnlineMonClientMain*) G__getstructoffset())->Init((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HOnlineMonClientMain*) G__getstructoffset())->Init();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->SetServerhost(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HOnlineMonClientMain*) G__getstructoffset())->GetServerhost();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->SetServerport((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMain*) G__getstructoffset())->GetServerport());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMain*) G__getstructoffset())->GetUpdateInterval());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientMain::SetAutoSaveInterval((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientMain::SetAutoSaveIntervalOnline((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->AddHist((HOnlineMonClientCanvas*) G__int(libp->para[0]), (HOnlineMonClientHist*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->RemoveHist((HOnlineMonClientCanvas*) G__int(libp->para[0]), (HOnlineMonClientHist*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleControlbuttonClick((char*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleSingleWindowClose((char*) G__int(libp->para[0]), (char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleRefreshRateChange();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleAutoSaveRateChange();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleMainWindowClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleSendStopServer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleSendResetHists();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleSnapshotSave();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleSnapshotSaveOnline();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleConnectionError();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->HandleTryClose();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HOnlineMonClientMain*) G__getstructoffset())->getMainThread());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMain*) G__getstructoffset())->IsMasterClient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMain*) G__getstructoffset())->GetMasterClient());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->SetIsMasterClient((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HOnlineMonClientMain*) G__getstructoffset())->GetReconnect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->SetReconnect((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOnlineMonClientMain::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientMain::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOnlineMonClientMain::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOnlineMonClientMain::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HOnlineMonClientMain*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOnlineMonClientMain*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientMain::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientMain::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOnlineMonClientMain::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__OnlineDict_746_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOnlineMonClientMain::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOnlineMonClientMain G__THOnlineMonClientMain;
static int G__OnlineDict_746_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOnlineMonClientMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOnlineMonClientMain*) (soff+(sizeof(HOnlineMonClientMain)*i)))->~G__THOnlineMonClientMain();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOnlineMonClientMain*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOnlineMonClientMain*) (soff))->~G__THOnlineMonClientMain();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HOnlineMonHistAddon */

/* HOnlineMonHist */

/* HOnlineMonHist2 */

/* HOnlineMonStack */

/* HOnlineTrendHist */

/* HOnlineNamedLegend */

/* HOnlineLegendDrawer */

/* HOnlineTrendArray */

/* HOnlineHistArray */

/* HOnlineHistArray2 */

/* HOnlineClientServerCom */

/* HOnlineMonClientXML */

/* HOnlineMonClientMainWin */

/* HOnlineMonClientDet */

/* HOnlineMonClientTabWin */

/* HOnlineMonClientSimpleWin */

/* HOnlineMonClientTab */

/* HOnlineMonClientCanvas */

/* HOnlineMonClientHist */

/* HOnlineMonClientMain */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncOnlineDict {
 public:
  G__Sizep2memfuncOnlineDict(): p(&G__Sizep2memfuncOnlineDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncOnlineDict::*p)();
};

size_t G__get_sizep2memfuncOnlineDict()
{
  G__Sizep2memfuncOnlineDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceOnlineDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon))) {
     HOnlineMonHistAddon *G__Lderived;
     G__Lderived=(HOnlineMonHistAddon*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist))) {
     HOnlineMonHist *G__Lderived;
     G__Lderived=(HOnlineMonHist*)0x1000;
     {
       HOnlineMonHistAddon *G__Lpbase=(HOnlineMonHistAddon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2))) {
     HOnlineMonHist2 *G__Lderived;
     G__Lderived=(HOnlineMonHist2*)0x1000;
     {
       HOnlineMonHistAddon *G__Lpbase=(HOnlineMonHistAddon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack))) {
     HOnlineMonStack *G__Lderived;
     G__Lderived=(HOnlineMonStack*)0x1000;
     {
       HOnlineMonHistAddon *G__Lpbase=(HOnlineMonHistAddon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist))) {
     HOnlineTrendHist *G__Lderived;
     G__Lderived=(HOnlineTrendHist*)0x1000;
     {
       HOnlineMonHist *G__Lpbase=(HOnlineMonHist*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HOnlineMonHistAddon *G__Lpbase=(HOnlineMonHistAddon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend))) {
     HOnlineNamedLegend *G__Lderived;
     G__Lderived=(HOnlineNamedLegend*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer))) {
     HOnlineLegendDrawer *G__Lderived;
     G__Lderived=(HOnlineLegendDrawer*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray))) {
     HOnlineTrendArray *G__Lderived;
     G__Lderived=(HOnlineTrendArray*)0x1000;
     {
       HOnlineMonHistAddon *G__Lpbase=(HOnlineMonHistAddon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray))) {
     HOnlineHistArray *G__Lderived;
     G__Lderived=(HOnlineHistArray*)0x1000;
     {
       HOnlineMonHistAddon *G__Lpbase=(HOnlineMonHistAddon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2))) {
     HOnlineHistArray2 *G__Lderived;
     G__Lderived=(HOnlineHistArray2*)0x1000;
     {
       HOnlineMonHistAddon *G__Lpbase=(HOnlineMonHistAddon*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2),G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineClientServerCom))) {
     HOnlineClientServerCom *G__Lderived;
     G__Lderived=(HOnlineClientServerCom*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineClientServerCom),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineClientServerCom),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML))) {
     HOnlineMonClientXML *G__Lderived;
     G__Lderived=(HOnlineMonClientXML*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin))) {
     HOnlineMonClientMainWin *G__Lderived;
     G__Lderived=(HOnlineMonClientMainWin*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet))) {
     HOnlineMonClientDet *G__Lderived;
     G__Lderived=(HOnlineMonClientDet*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTabWin))) {
     HOnlineMonClientTabWin *G__Lderived;
     G__Lderived=(HOnlineMonClientTabWin*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTabWin),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTabWin),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientSimpleWin))) {
     HOnlineMonClientSimpleWin *G__Lderived;
     G__Lderived=(HOnlineMonClientSimpleWin*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientSimpleWin),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientSimpleWin),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTab))) {
     HOnlineMonClientTab *G__Lderived;
     G__Lderived=(HOnlineMonClientTab*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTab),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTab),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientCanvas))) {
     HOnlineMonClientCanvas *G__Lderived;
     G__Lderived=(HOnlineMonClientCanvas*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientCanvas),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientCanvas),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist))) {
     HOnlineMonClientHist *G__Lderived;
     G__Lderived=(HOnlineMonClientHist*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist),G__get_linked_tagnum(&G__OnlineDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist),G__get_linked_tagnum(&G__OnlineDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableOnlineDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Stat_t",100,-1,0,-1);
   G__setnewtype(-1,"Statistics type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__OnlineDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__OnlineDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__OnlineDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__OnlineDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__OnlineDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString>",117,G__get_linked_tagnum(&G__OnlineDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,TString,less<TString> >",117,G__get_linked_tagnum(&G__OnlineDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TStreamerInfo*>",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__OnlineDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__OnlineDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<fillptrHOnlineClientServerCom>",117,G__get_linked_tagnum(&G__OnlineDictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HOnlineMonHistAddon */
static void G__setup_memvarHOnlineMonHistAddon(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon));
   { HOnlineMonHistAddon *p; p=(HOnlineMonHistAddon*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fIsActive=",0,"/< switch for active/inactive");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fisResetable=",0,"/< switch for resetable/not resetable");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"refreshrate=",0,"/< refreshrate of the hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"send=",0,"/< send/don't send to gui");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBinsX=",0,"/< number of bins in X");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"Xlo=",0,"/< min X range of hist");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"Xup=",0,"/< max X range of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nBinsY=",0,"/< number of bins in Y");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"Ylo=",0,"/< min Y range of hist");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"Yup=",0,"/< max Y range of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"arraySize1=",0,"/< size 1 of 2-Dim array (1 if only 1-Dim is reqested");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"arraySize2=",0,"/< size 2 of 2-Dim array");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"XTitle=",0,"/< X Title of hist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"YTitle=",0,"/< Y Title of hist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"ZTitle=",0,"/< Z Title of hist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"Option=",0,"/< draw option of hist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"directory=",0,"/< output directory of hist");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"HistType=",0,"/< 1S,1F,1D,2S,2F,2D hist types");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"format=",0,"/< mon,trend,array,trendarray");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"stat=",0,"/< switch for Stats option of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"max=",0,"/< max range of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"min=",0,"/< min range of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"linecol=",0,"/< line color of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"linestyle=",0,"/< line style of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fillcol=",0,"/< fill color of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fillstyle=",0,"/< fill style of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"markercol=",0,"/< marker color of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"markerstyle=",0,"/< marker style of hist");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"markersize=",0,"/< marker size of hist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"logX=",0,"/< log X option of canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"logY=",0,"/< log Y option of canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"logZ=",0,"/< log Z option of canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"gridX=",0,"/< grid X option of canvas");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"gridY=",0,"/< grid Y option of canvas");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"drawSame=",0,"/< draw same option on client side");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TLegend),-1,-1,2,"legend=",0,"/< legend for histogram arrays");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"legxmin=",0,"/< legend for histogram arrays");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"legymin=",0,"/< legend for histogram arrays");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"legxmax=",0,"/< legend for histogram arrays");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"legymax=",0,"/< legend for histogram arrays");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"legform=",0,"/< legend for histogram arrays");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonHist */
static void G__setup_memvarHOnlineMonHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist));
   { HOnlineMonHist *p; p=(HOnlineMonHist*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TH1),-1,-1,2,"h=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonHist2 */
static void G__setup_memvarHOnlineMonHist2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2));
   { HOnlineMonHist2 *p; p=(HOnlineMonHist2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TH2),-1,-1,2,"h=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonStack */
static void G__setup_memvarHOnlineMonStack(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack));
   { HOnlineMonStack *p; p=(HOnlineMonStack*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TObjArray),-1,-1,2,"stack=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,2,"firstName=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("map<TString,TString>"),-1,2,"options=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineTrendHist */
static void G__setup_memvarHOnlineTrendHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist));
   { HOnlineTrendHist *p; p=(HOnlineTrendHist*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineNamedLegend */
static void G__setup_memvarHOnlineNamedLegend(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend));
   { HOnlineNamedLegend *p; p=(HOnlineNamedLegend*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TLegend),-1,-1,2,"legend=",0,"!< pointer to internal TLegend");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineLegendDrawer */
static void G__setup_memvarHOnlineLegendDrawer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer));
   { HOnlineLegendDrawer *p; p=(HOnlineLegendDrawer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TObjArray),-1,-1,4,"array=",0,"!< object to keep the created Legend objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineTrendArray */
static void G__setup_memvarHOnlineTrendArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray));
   { HOnlineTrendArray *p; p=(HOnlineTrendArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TObjArray),-1,-1,2,"array=",0,"/ pointer to internal object array of hists");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineHistArray */
static void G__setup_memvarHOnlineHistArray(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray));
   { HOnlineHistArray *p; p=(HOnlineHistArray*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TObjArray),-1,-1,2,"array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineHistArray2 */
static void G__setup_memvarHOnlineHistArray2(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2));
   { HOnlineHistArray2 *p; p=(HOnlineHistArray2*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TObjArray),-1,-1,2,"array=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineClientServerCom */
static void G__setup_memvarHOnlineClientServerCom(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineClientServerCom));
   { HOnlineClientServerCom *p; p=(HOnlineClientServerCom*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->clientRequests)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TMap),-1,-1,1,"clientRequests=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TMonitor),-1,-1,4,"monitor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TServerSocket),-1,-1,4,"serversocket=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,4,"socketlist=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TSocket),-1,-1,4,"masterClient=",0,"master client connection (first socket)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPort=",0,"server port number");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"fHostname=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTimeout=",0,"timeout for socket handling");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fDebug=",0,"do some prints in debug mode");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"fEvtCtInterval=",0,"set the counter interval to print the eventnumber (-1 = no print)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-2,4,"fSpeed=",0,"speed in evts/s");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"isInit=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"doStop=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TThread),-1,-1,4,"eventLoopThread=",0,"thread to run the eventloop");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientXML */
static void G__setup_memvarHOnlineMonClientXML(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML));
   { HOnlineMonClientXML *p; p=(HOnlineMonClientXML*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMain),-1,-1,4,"clientmain=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet),-1,-1,4,"currentDetector=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientMainWin */
static void G__setup_memvarHOnlineMonClientMainWin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin));
   { HOnlineMonClientMainWin *p; p=(HOnlineMonClientMainWin*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->listControlbuttons)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listControlbuttons=",0,"holds the control checkboxes - each detector has a");
   G__memvar_setup((void*)((long)(&p->listOpenDetectors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listOpenDetectors=",0,"list of open detectors  (startup)");
   G__memvar_setup((void*)((long)(&p->gFrameRefreshRate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGGroupFrame),-1,-1,1,"gFrameRefreshRate=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->numberEntryRefreshRate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGNumberEntry),-1,-1,1,"numberEntryRefreshRate=",0,"number entry for refresh rate");
   G__memvar_setup((void*)((long)(&p->numberEntryAutoSaveRate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGNumberEntry),-1,-1,1,"numberEntryAutoSaveRate=",0,"number entry for auto save rate");
   G__memvar_setup((void*)((long)(&p->fTextFilename)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGTextEntry),-1,-1,1,"fTextFilename=",0,"widget for file name");
   G__memvar_setup((void*)((long)(&p->fTextSnapshotPath)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGTextEntry),-1,-1,1,"fTextSnapshotPath=",0,"widget for snapshot path");
   G__memvar_setup((void*)((long)(&p->fTextSnapshotPathOnline)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,1,"fTextSnapshotPathOnline=",0,"snapshot path online");
   G__memvar_setup((void*)((long)(&p->fTextSpeed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGTextEntry),-1,-1,1,"fTextSpeed=",0,"widget for speed [evts/s]");
   G__memvar_setup((void*)((long)(&p->fDataRate)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGTextEntry),-1,-1,1,"fDataRate=",0,"widget for kBytes/s");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGMainFrame),-1,-1,4,"clientMainWindow=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMain),-1,-1,4,"clientMain=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"width=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"height=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"SnapShotPath=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"autoSaveRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGGroupFrame),-1,-1,4,"gFrameSnapshot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGTextButton),-1,-1,4,"buttonSnapshot=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGGroupFrame),-1,-1,4,"gFrameDetectors=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientDet */
static void G__setup_memvarHOnlineMonClientDet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet));
   { HOnlineMonClientDet *p; p=(HOnlineMonClientDet*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->listWindows)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listWindows=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"active=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientTabWin */
static void G__setup_memvarHOnlineMonClientTabWin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTabWin));
   { HOnlineMonClientTabWin *p; p=(HOnlineMonClientTabWin*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->listTabs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listTabs=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->detectorname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,1,"detectorname=",0,"store detectorname");
   G__memvar_setup((void*)((long)(&p->tabContainer)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGTab),-1,-1,1,"tabContainer=",0,"the tab container, holds the tabs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGMainFrame),-1,-1,4,"mainFrame=",0,"main frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGCompositeFrame),-1,-1,4,"tabContainerFrame=",0,"frame for tab container");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGStatusBar),-1,-1,4,"statBar=",0,"status bar to display update timestamp");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"active=",0,"window open or not ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"lastUpdate=",0,"last update text");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientSimpleWin */
static void G__setup_memvarHOnlineMonClientSimpleWin(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientSimpleWin));
   { HOnlineMonClientSimpleWin *p; p=(HOnlineMonClientSimpleWin*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->listCanvases)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listCanvases=",0,"list of canvases");
   G__memvar_setup((void*)((long)(&p->detectorname)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,1,"detectorname=",0,"store the detector name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGMainFrame),-1,-1,4,"mainFrame=",0,"main frame");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGStatusBar),-1,-1,4,"statBar=",0,"status bar to display update timestamp");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"active=",0,"window open or not ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"lastUpdate=",0,"last update text");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientTab */
static void G__setup_memvarHOnlineMonClientTab(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTab));
   { HOnlineMonClientTab *p; p=(HOnlineMonClientTab*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->listCanvases)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listCanvases=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TGCompositeFrame),-1,-1,4,"tabFrame=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"active=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientCanvas */
static void G__setup_memvarHOnlineMonClientCanvas(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientCanvas));
   { HOnlineMonClientCanvas *p; p=(HOnlineMonClientCanvas*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->listHists)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listHists=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TRootEmbeddedCanvas),-1,-1,4,"rcanvas=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"splitted=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"active=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"width=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"height=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nx=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"ny=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientHist */
static void G__setup_memvarHOnlineMonClientHist(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist));
   { HOnlineMonClientHist *p; p=(HOnlineMonClientHist*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->histo)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon),-1,-1,1,"histo=",0,"histogram");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"subpadnumber=",0,"subpad for the histogram (splitted canvas)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"active=",0,"update the histogram ?");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"index_s=",0,"array index for histogram arrays");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"index_m=",0,"array index for histogram arrays");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"type=",0,"histogram type, \"single\" or \"array\"");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"realname=",0,"this is the real name from the config file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"guiname=",0,"name of the gui which orders the histogram");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOnlineMonClientMain */
static void G__setup_memvarHOnlineMonClientMain(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMain));
   { HOnlineMonClientMain *p; p=(HOnlineMonClientMain*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->listDetectors)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,1,"listDetectors=",0,"list of all detectors");
   G__memvar_setup((void*)((long)(&p->clientmainwin)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin),-1,-1,1,"clientmainwin=",0,"pointer to mainwindow class");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR),G__defined_typename("map<TString,TString>"),-1,4,"pad2hist=",0,"provide mapping between subpadname and histogram name");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,4,"listHists=",0,"global list to store the opened histograms.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TList),-1,-1,4,"listPads=",0,"global list to store the canvas subpads");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TThread),-1,-2,4,"mainThread=",0,"thread for the client program");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TThread),-1,-1,4,"updateThread=",0,"thread to update histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TSocket),-1,-1,4,"socket=",0,"socket for network communication");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"serverhost=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"serverport=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"UpdateInterval=",0,"update interval in secs.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"AutoSaveInterval=",0,"auto save interval in minutes.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"AutoSaveIntervalOnline=",0,"auto save interval in minutes.");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-2,4,"lastSaved=",0,"remember the time when last saved (in seconds since 1970)");
   G__memvar_setup((void*)0,108,0,0,-1,G__defined_typename("time_t"),-2,4,"lastSavedOnline=",0,"remember the time when last saved (in seconds since 1970)");
   G__memvar_setup((void*)0,109,0,0,-1,G__defined_typename("ULong64_t"),-2,4,"lastSumBytes=",0,"remember last number of bytes recieved");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,4,"isMasterClient=",0,"remember if it was a master client");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"doReconnect=",0,"0 = stop at crash, 1 = ask for reconnect (default), 2 = auto reconnect");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TString),-1,-1,4,"configfile=",0,"name of the xml config file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"updateComplete=",0,"after complete update of histograms, thread sets this to true");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__OnlineDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarOnlineDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHOnlineMonHistAddon(void) {
   /* HOnlineMonHistAddon */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon));
   G__memfunc_setup("HOnlineMonHistAddon",1877,G__OnlineDict_288_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon), -1, 0, 10, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '0' active i - 'Int_t' 0 '0' resetable "
"i - 'Int_t' 0 '0' nbinsX f - 'Float_t' 0 '0' xlo "
"f - 'Float_t' 0 '0' xup i - 'Int_t' 0 '0' nbinsY "
"f - 'Float_t' 0 '0' ylo f - 'Float_t' 0 '0' yup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineMonHistAddon",1877,G__OnlineDict_288_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setActive",936,G__OnlineDict_288_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - active", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActive",924,G__OnlineDict_288_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResetable",1251,G__OnlineDict_288_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - reset", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResetable",1239,G__OnlineDict_288_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRefreshRate",1447,G__OnlineDict_288_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - fresh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRefreshRate",1435,G__OnlineDict_288_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSend",726,G__OnlineDict_288_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSend",714,G__OnlineDict_288_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBinsX",894,G__OnlineDict_288_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBinsX",882,G__OnlineDict_288_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXLo",607,G__OnlineDict_288_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXLo",595,G__OnlineDict_288_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXUp",617,G__OnlineDict_288_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXUp",605,G__OnlineDict_288_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNBinsY",895,G__OnlineDict_288_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNBinsY",883,G__OnlineDict_288_0_18, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYLo",608,G__OnlineDict_288_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYLo",596,G__OnlineDict_288_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYUp",618,G__OnlineDict_288_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYUp",606,G__OnlineDict_288_0_22, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSize1",792,G__OnlineDict_288_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize1",780,G__OnlineDict_288_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSize2",793,G__OnlineDict_288_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize2",781,G__OnlineDict_288_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStat",744,G__OnlineDict_288_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStat",732,G__OnlineDict_288_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMax",626,G__OnlineDict_288_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMax",614,G__OnlineDict_288_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMin",624,G__OnlineDict_288_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMin",612,G__OnlineDict_288_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLineCol",1010,G__OnlineDict_288_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLineCol",998,G__OnlineDict_288_0_34, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLineStyle",1253,G__OnlineDict_288_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLineStyle",1241,G__OnlineDict_288_0_36, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFillCol",1009,G__OnlineDict_288_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFillCol",997,G__OnlineDict_288_0_38, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFillStyle",1252,G__OnlineDict_288_0_39, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFillStyle",1240,G__OnlineDict_288_0_40, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMarkerCol",1228,G__OnlineDict_288_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMarkerCol",1216,G__OnlineDict_288_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMarkerStyle",1471,G__OnlineDict_288_0_43, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMarkerStyle",1459,G__OnlineDict_288_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMarkerSize",1353,G__OnlineDict_288_0_45, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMarkerSize",1341,G__OnlineDict_288_0_46, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLogX",710,G__OnlineDict_288_0_47, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLogX",698,G__OnlineDict_288_0_48, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLogY",711,G__OnlineDict_288_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLogY",699,G__OnlineDict_288_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLogZ",712,G__OnlineDict_288_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLogZ",700,G__OnlineDict_288_0_52, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGridX",810,G__OnlineDict_288_0_53, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGridX",798,G__OnlineDict_288_0_54, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGridY",811,G__OnlineDict_288_0_55, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGridY",799,G__OnlineDict_288_0_56, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDirectory",1281,G__OnlineDict_288_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDirectory",1269,G__OnlineDict_288_0_58, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXTitle",934,G__OnlineDict_288_0_59, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXTitle",922,G__OnlineDict_288_0_60, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYTitle",935,G__OnlineDict_288_0_61, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYTitle",923,G__OnlineDict_288_0_62, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZTitle",936,G__OnlineDict_288_0_63, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZTitle",924,G__OnlineDict_288_0_64, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOption",965,G__OnlineDict_288_0_65, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOption",953,G__OnlineDict_288_0_66, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHistType",1158,G__OnlineDict_288_0_67, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHistType",1146,G__OnlineDict_288_0_68, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFormat",949,G__OnlineDict_288_0_69, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - form", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFormat",937,G__OnlineDict_288_0_70, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDrawSame",1120,G__OnlineDict_288_0_71, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - drawS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDrawSame",1108,G__OnlineDict_288_0_72, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLegend",911,G__OnlineDict_288_0_73, 85, G__get_linked_tagnum(&G__OnlineDictLN_TLegend), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLegend",923,G__OnlineDict_288_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TLegend' - 0 - leg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLegDim",882,G__OnlineDict_288_0_75, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 1 - xmin f - 'Float_t' 1 - ymin "
"f - 'Float_t' 1 - xmax f - 'Float_t' 1 - ymax "
"u 'TString' - 1 - form", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLegDim",894,G__OnlineDict_288_0_76, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - xmin f - 'Float_t' 0 - ymin "
"f - 'Float_t' 0 - xmax f - 'Float_t' 0 - ymax "
"u 'TString' - 0 - form", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copySet",743,G__OnlineDict_288_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSet",620,G__OnlineDict_288_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - add", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__OnlineDict_288_0_79, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getText",741,G__OnlineDict_288_0_80, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - txt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHist",740,G__OnlineDict_288_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH1' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHist",740,G__OnlineDict_288_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TH2' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCanvas",936,G__OnlineDict_288_0_83, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TCanvas' - 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createHist",1036,G__OnlineDict_288_0_84, 85, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,G__OnlineDict_288_0_85, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' allowHiddenZero", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset",547,G__OnlineDict_288_0_86, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,G__OnlineDict_288_0_87, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getP",400,G__OnlineDict_288_0_88, 85, G__get_linked_tagnum(&G__OnlineDictLN_TH1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' s i - 'Int_t' 0 '0' m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,G__OnlineDict_288_0_89, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Stat_t' 0 - i d - 'Stat_t' 0 '0' j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,G__OnlineDict_288_0_90, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Stat_t' 0 - - d - 'Stat_t' 0 '0' -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMinMax",906,G__OnlineDict_288_0_91, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_288_0_92, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonHistAddon::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_288_0_93, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHistAddon::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_288_0_94, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonHistAddon::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_288_0_95, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonHistAddon::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_288_0_99, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_288_0_100, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHistAddon::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_288_0_101, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonHistAddon::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_288_0_102, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHistAddon::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_288_0_103, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonHistAddon::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineMonHistAddon", 1877, G__OnlineDict_288_0_104, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonHistAddon", 2003, G__OnlineDict_288_0_105, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_288_0_106, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon), -1, 1, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonHist(void) {
   /* HOnlineMonHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist));
   G__memfunc_setup("HOnlineMonHist",1391,G__OnlineDict_289_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist), -1, 0, 7, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '0' active i - 'Int_t' 0 '0' resetable "
"i - 'Int_t' 0 '0' nbinsX f - 'Float_t' 0 '0' xlo "
"f - 'Float_t' 0 '0' xup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineMonHist",1391,G__OnlineDict_289_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getP",400,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TH1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' s i - 'Int_t' 0 '0' m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("create",628,G__OnlineDict_289_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' allowHiddenZero", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMinMax",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_289_0_9, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_289_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_289_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_289_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_289_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_289_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_289_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_289_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_289_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineMonHist", 1391, G__OnlineDict_289_0_21, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonHist", 1517, G__OnlineDict_289_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_289_0_23, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist), -1, 1, 1, 1, 1, 0, "u 'HOnlineMonHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonHist2(void) {
   /* HOnlineMonHist2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2));
   G__memfunc_setup("HOnlineMonHist2",1441,G__OnlineDict_290_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2), -1, 0, 10, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '0' active i - 'Int_t' 0 '0' resetable "
"i - 'Int_t' 0 '0' nbinsX f - 'Float_t' 0 '0' xlo "
"f - 'Float_t' 0 '0' xup i - 'Int_t' 0 '0' nbinsY "
"f - 'Float_t' 0 '0' ylo f - 'Float_t' 0 '0' yup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineMonHist2",1441,G__OnlineDict_290_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getP",400,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TH2), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' s i - 'Int_t' 0 '0' m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("create",628,G__OnlineDict_290_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' allowHiddenZero", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMinMax",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_290_0_9, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonHist2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_290_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHist2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_290_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonHist2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_290_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonHist2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_290_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_290_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHist2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_290_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonHist2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_290_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonHist2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_290_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonHist2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineMonHist2", 1441, G__OnlineDict_290_0_21, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHist2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonHist2", 1567, G__OnlineDict_290_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_290_0_23, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHist2), -1, 1, 1, 1, 1, 0, "u 'HOnlineMonHist2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonStack(void) {
   /* HOnlineMonStack */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack));
   G__memfunc_setup("HOnlineMonStack",1485,G__OnlineDict_533_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineMonStack",1485,G__OnlineDict_533_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonStack' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStack",822,G__OnlineDict_533_0_3, 85, G__get_linked_tagnum(&G__OnlineDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' allowHiddenZero", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("addToStack",994,G__OnlineDict_533_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TObject' - 0 - obj u 'TString' - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTimeStamp",1213,G__OnlineDict_533_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - timestamp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinMax",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_533_0_10, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonStack::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_533_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonStack::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_533_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonStack::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_533_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonStack::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_533_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_533_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonStack::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_533_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonStack::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_533_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonStack::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_533_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonStack::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonStack", 1611, G__OnlineDict_533_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_533_0_23, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonStack), -1, 1, 1, 1, 1, 0, "u 'HOnlineMonStack' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineTrendHist(void) {
   /* HOnlineTrendHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist));
   G__memfunc_setup("HOnlineTrendHist",1602,G__OnlineDict_543_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist), -1, 0, 7, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '0' active i - 'Int_t' 0 '0' resetable "
"i - 'Int_t' 0 '0' nBinsX f - 'Float_t' 0 '0' Xlo "
"f - 'Float_t' 0 '0' Xup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineTrendHist",1602,G__OnlineDict_543_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Stat_t' 0 - i d - 'Stat_t' 0 '0' j", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMinMax",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_543_0_5, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineTrendHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_543_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineTrendHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_543_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineTrendHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_543_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineTrendHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_543_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_543_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineTrendHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_543_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineTrendHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_543_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineTrendHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_543_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineTrendHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineTrendHist", 1602, G__OnlineDict_543_0_17, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist), -1, 0, 1, 1, 1, 0, "u 'HOnlineTrendHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineTrendHist", 1728, G__OnlineDict_543_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_543_0_19, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendHist), -1, 1, 1, 1, 1, 0, "u 'HOnlineTrendHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineNamedLegend(void) {
   /* HOnlineNamedLegend */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend));
   G__memfunc_setup("HOnlineNamedLegend",1761,G__OnlineDict_544_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"U 'HOnlineMonHistAddon' - 0 '0' -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getP",400,G__OnlineDict_544_0_2, 85, G__get_linked_tagnum(&G__OnlineDictLN_TLegend), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_544_0_3, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineNamedLegend::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_544_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineNamedLegend::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_544_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineNamedLegend::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_544_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineNamedLegend::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_544_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_544_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineNamedLegend::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_544_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineNamedLegend::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_544_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineNamedLegend::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_544_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineNamedLegend::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineNamedLegend", 1761, G__OnlineDict_544_0_15, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend), -1, 0, 1, 1, 1, 0, "u 'HOnlineNamedLegend' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineNamedLegend", 1887, G__OnlineDict_544_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_544_0_17, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend), -1, 1, 1, 1, 1, 0, "u 'HOnlineNamedLegend' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineLegendDrawer(void) {
   /* HOnlineLegendDrawer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer));
   G__memfunc_setup("HOnlineLegendDrawer",1889,G__OnlineDict_545_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,G__OnlineDict_545_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__OnlineDict_545_0_3, 85, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineNamedLegend), -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_545_0_4, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineLegendDrawer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_545_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineLegendDrawer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_545_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineLegendDrawer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_545_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineLegendDrawer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_545_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_545_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineLegendDrawer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_545_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineLegendDrawer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_545_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineLegendDrawer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_545_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineLegendDrawer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineLegendDrawer", 1889, G__OnlineDict_545_0_16, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer), -1, 0, 1, 1, 1, 0, "u 'HOnlineLegendDrawer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineLegendDrawer", 2015, G__OnlineDict_545_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_545_0_18, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineLegendDrawer), -1, 1, 1, 1, 1, 0, "u 'HOnlineLegendDrawer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineTrendArray(void) {
   /* HOnlineTrendArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray));
   G__memfunc_setup("HOnlineTrendArray",1705,G__OnlineDict_546_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray), -1, 0, 9, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '0' active i - 'Int_t' 0 '0' resetable "
"i - 'Int_t' 0 '1' size i - 'Int_t' 0 '1' size2 "
"i - 'Int_t' 0 '0' nBinsX f - 'Float_t' 0 '0' Xlo "
"f - 'Float_t' 0 '0' Xup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineTrendArray",1705,G__OnlineDict_546_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDim",602,G__OnlineDict_546_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"I - 'Int_t' 0 - i I - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSizeAll",1012,G__OnlineDict_546_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Stat_t' 0 - - d - 'Stat_t' 0 '0' val", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("create",628,G__OnlineDict_546_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawAll",711,G__OnlineDict_546_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 '1' allowHiddenZero d - 'Double_t' 0 '-1e200' min "
"d - 'Double_t' 0 '1e200' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' allowHiddenZero", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getP",400,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TH1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' s i - 'Int_t' 0 '0' m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMinMax",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_546_0_13, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineTrendArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_546_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineTrendArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_546_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineTrendArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_546_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineTrendArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_546_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_546_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineTrendArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_546_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineTrendArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_546_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineTrendArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_546_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineTrendArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineTrendArray", 1705, G__OnlineDict_546_0_25, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray), -1, 0, 1, 1, 1, 0, "u 'HOnlineTrendArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineTrendArray", 1831, G__OnlineDict_546_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_546_0_27, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineTrendArray), -1, 1, 1, 1, 1, 0, "u 'HOnlineTrendArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineHistArray(void) {
   /* HOnlineHistArray */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray));
   G__memfunc_setup("HOnlineHistArray",1604,G__OnlineDict_547_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray), -1, 0, 9, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '0' active i - 'Int_t' 0 '0' resetable "
"i - 'Int_t' 0 '1' size i - 'Int_t' 0 '1' size2 "
"i - 'Int_t' 0 '0' nBinsX f - 'Float_t' 0 '0' Xlo "
"f - 'Float_t' 0 '0' Xup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineHistArray",1604,G__OnlineDict_547_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDim",602,G__OnlineDict_547_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"I - 'Int_t' 0 - i I - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSizeAll",1012,G__OnlineDict_547_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Stat_t' 0 - - d - 'Stat_t' 0 '0' b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setBinContent",1344,G__OnlineDict_547_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - d - 'Stat_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinContent",1332,G__OnlineDict_547_0_7, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBinError",1135,G__OnlineDict_547_0_8, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - d - 'Stat_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinError",1123,G__OnlineDict_547_0_9, 100, -1, G__defined_typename("Stat_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("create",628,G__OnlineDict_547_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawAll",711,G__OnlineDict_547_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 '1' allowHiddenZero d - 'Double_t' 0 '-1e200' min "
"d - 'Double_t' 0 '1e200' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' allowHiddenZero", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getP",400,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TH1), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' s i - 'Int_t' 0 '0' m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMinMax",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_547_0_17, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineHistArray::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_547_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineHistArray::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_547_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineHistArray::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_547_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineHistArray::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_547_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_547_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineHistArray::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_547_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineHistArray::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_547_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineHistArray::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_547_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineHistArray::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineHistArray", 1604, G__OnlineDict_547_0_29, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray), -1, 0, 1, 1, 1, 0, "u 'HOnlineHistArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineHistArray", 1730, G__OnlineDict_547_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_547_0_31, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray), -1, 1, 1, 1, 1, 0, "u 'HOnlineHistArray' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineHistArray2(void) {
   /* HOnlineHistArray2 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2));
   G__memfunc_setup("HOnlineHistArray2",1654,G__OnlineDict_548_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2), -1, 0, 9, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '0' active i - 'Int_t' 0 '0' resetable "
"i - 'Int_t' 0 '1' size i - 'Int_t' 0 '1' size2 "
"i - 'Int_t' 0 '0' nBinsX f - 'Float_t' 0 '0' Xlo "
"f - 'Float_t' 0 '0' Xup", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HOnlineHistArray2",1654,G__OnlineDict_548_0_2, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonHistAddon' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDim",602,G__OnlineDict_548_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"I - 'Int_t' 0 - i I - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSizeAll",1012,G__OnlineDict_548_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,(G__InterfaceMethod) NULL,121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Stat_t' 0 - - d - 'Stat_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setBinContent",1344,G__OnlineDict_548_0_6, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Stat_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinContent",1332,G__OnlineDict_548_0_7, 100, -1, G__defined_typename("Stat_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBinError",1135,G__OnlineDict_548_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"d - 'Stat_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBinError",1123,G__OnlineDict_548_0_9, 100, -1, G__defined_typename("Stat_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("create",628,G__OnlineDict_548_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("drawAll",711,G__OnlineDict_548_0_11, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 '1' allowHiddenZero d - 'Double_t' 0 '-1e200' min "
"d - 'Double_t' 0 '1e200' max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("draw",430,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 '1' allowHiddenZero", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset",547,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - level i - 'Int_t' 0 - count", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - h2", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getP",400,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TH2), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '0' s i - 'Int_t' 0 '0' m", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMinMax",906,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 1 - min d - 'Double_t' 1 - max", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__OnlineDict_548_0_17, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineHistArray2::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_548_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineHistArray2::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_548_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineHistArray2::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_548_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineHistArray2::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_548_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_548_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineHistArray2::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_548_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineHistArray2::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_548_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineHistArray2::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_548_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineHistArray2::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineHistArray2", 1654, G__OnlineDict_548_0_29, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2), -1, 0, 1, 1, 1, 0, "u 'HOnlineHistArray2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineHistArray2", 1780, G__OnlineDict_548_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_548_0_31, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineHistArray2), -1, 1, 1, 1, 1, 0, "u 'HOnlineHistArray2' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineClientServerCom(void) {
   /* HOnlineClientServerCom */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineClientServerCom));
   G__memfunc_setup("HOnlineClientServerCom",2210,G__OnlineDict_648_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineClientServerCom), -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - hostname "
"i - 'Int_t' 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__OnlineDict_648_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processClientRequests",2234,G__OnlineDict_648_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processClients",1489,G__OnlineDict_648_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TList' - 1 - histPool", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sendHistToClient",1636,G__OnlineDict_648_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSocket' - 0 - socket U 'HOnlineMonHistAddon' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sendTextToClient",1649,G__OnlineDict_648_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSocket' - 0 - socket u 'TString' - 0 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sendListToClient",1640,G__OnlineDict_648_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'TSocket' - 0 - socket U 'TList' - 0 - list", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDebug",819,G__OnlineDict_648_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - dodebug", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvtCounterInterval",2208,G__OnlineDict_648_0_9, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '100' ct", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&HOnlineClientServerCom::setEvtCounterInterval) ), 0);
   G__memfunc_setup("eventLoop",956,G__OnlineDict_648_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'vector<void*,allocator<void*> >' 'vector<fillptrHOnlineClientServerCom>' 0 - fillfunctions", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ThreadEventLoop",1524,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 1, 3, 4, 0, "Y - - 0 - arg", "thread function, runs into the eventLoopThread", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_648_0_12, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineClientServerCom::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_648_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineClientServerCom::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_648_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineClientServerCom::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_648_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineClientServerCom::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_648_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_648_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineClientServerCom::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_648_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineClientServerCom::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_648_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineClientServerCom::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_648_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineClientServerCom::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineClientServerCom", 2336, G__OnlineDict_648_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientXML(void) {
   /* HOnlineMonClientXML */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML));
   G__memfunc_setup("HOnlineMonClientXML",1831,G__OnlineDict_738_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseXMLFile",1132,G__OnlineDict_738_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 - filename U 'HOnlineMonClientMain' - 0 - pclientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseConfigNode",1495,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseServerNode",1528,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TXMLNode' - 0 - node", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseMainWindowNode",1918,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'HOnlineMonClientMainWin' - 0 - clientmainwin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseDetectorNode",1723,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'HOnlineMonClientDet' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseWindowNode",1529,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'HOnlineMonClientDet' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseTabNode",1176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'HOnlineMonClientTabWin' - 0 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseCanvasNode",1501,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'HOnlineMonClientSimpleWin' - 0 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseCanvasNode",1501,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'HOnlineMonClientTabWin' - 0 - window "
"U 'HOnlineMonClientTab' - 0 - montab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ParseHistogramNode",1839,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'TXMLNode' - 0 - node U 'HOnlineMonClientCanvas' - 0 - canvas", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_738_0_12, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientXML::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_738_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientXML::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_738_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientXML::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_738_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientXML::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_738_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_738_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientXML::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_738_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientXML::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_738_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientXML::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_738_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientXML::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineMonClientXML", 1831, G__OnlineDict_738_0_24, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonClientXML' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientXML", 1957, G__OnlineDict_738_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_738_0_26, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientXML), -1, 1, 1, 1, 1, 0, "u 'HOnlineMonClientXML' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientMainWin(void) {
   /* HOnlineMonClientMainWin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin));
   G__memfunc_setup("HOnlineMonClientMainWin",2281,G__OnlineDict_739_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMainWin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateMainWin",1287,G__OnlineDict_739_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyMainWin",1437,G__OnlineDict_739_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWidth",812,G__OnlineDict_739_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__OnlineDict_739_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeight",901,G__OnlineDict_739_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeight",889,G__OnlineDict_739_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSnapShotPath",1513,G__OnlineDict_739_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - path", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSnapShotPath",1501,G__OnlineDict_739_0_9, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAutoSaveRate",1504,G__OnlineDict_739_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAutoSaveRate",1492,G__OnlineDict_739_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMainClient",1284,G__OnlineDict_739_0_12, 85, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMain), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMainClient",1296,G__OnlineDict_739_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - main", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMainWindow",1309,G__OnlineDict_739_0_14, 85, G__get_linked_tagnum(&G__OnlineDictLN_TGMainFrame), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_739_0_15, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientMainWin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_739_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientMainWin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_739_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientMainWin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_739_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientMainWin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_739_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_739_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientMainWin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_739_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientMainWin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_739_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientMainWin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_739_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientMainWin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientMainWin", 2407, G__OnlineDict_739_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientDet(void) {
   /* HOnlineMonClientDet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet));
   G__memfunc_setup("HOnlineMonClientDet",1875,G__OnlineDict_740_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientDet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateDet",881,G__OnlineDict_740_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyDet",1031,G__OnlineDict_740_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__OnlineDict_740_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__OnlineDict_740_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_740_0_6, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientDet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_740_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientDet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_740_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientDet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_740_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientDet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_740_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_740_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientDet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_740_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientDet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_740_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientDet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_740_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientDet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientDet", 2001, G__OnlineDict_740_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientTabWin(void) {
   /* HOnlineMonClientTabWin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTabWin));
   G__memfunc_setup("HOnlineMonClientTabWin",2171,G__OnlineDict_741_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTabWin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__OnlineDict_741_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__OnlineDict_741_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastUpdate",1303,G__OnlineDict_741_0_4, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastUpdate",1315,G__OnlineDict_741_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "erzeugt TTimeStamp*.", (void*) NULL, 0);
   G__memfunc_setup("SetStatusBarText",1642,G__OnlineDict_741_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - text", "set the status bar text", (void*) NULL, 0);
   G__memfunc_setup("CreateWindow",1228,G__OnlineDict_741_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'HOnlineMonClientMain' - 0 - clientmain u 'TString' - 0 - detectorname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyWindow",1378,G__OnlineDict_741_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_741_0_9, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientTabWin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_741_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientTabWin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_741_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientTabWin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_741_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientTabWin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_741_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_741_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientTabWin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_741_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientTabWin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_741_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientTabWin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_741_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientTabWin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientTabWin", 2297, G__OnlineDict_741_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientSimpleWin(void) {
   /* HOnlineMonClientSimpleWin */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientSimpleWin));
   G__memfunc_setup("HOnlineMonClientSimpleWin",2510,G__OnlineDict_742_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientSimpleWin), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__OnlineDict_742_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__OnlineDict_742_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetLastUpdate",1303,G__OnlineDict_742_0_4, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLastUpdate",1315,G__OnlineDict_742_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", "erzeugt TTimeStamp*.", (void*) NULL, 0);
   G__memfunc_setup("SetStatusBarText",1642,G__OnlineDict_742_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - text", "set the status bar text", (void*) NULL, 0);
   G__memfunc_setup("CreateWindow",1228,G__OnlineDict_742_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'HOnlineMonClientMain' - 0 - clientmain u 'TString' - 0 - detectorname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyWindow",1378,G__OnlineDict_742_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_742_0_9, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientSimpleWin::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_742_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientSimpleWin::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_742_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientSimpleWin::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_742_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientSimpleWin::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_742_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_742_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientSimpleWin::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_742_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientSimpleWin::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_742_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientSimpleWin::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_742_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientSimpleWin::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientSimpleWin", 2636, G__OnlineDict_742_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientTab(void) {
   /* HOnlineMonClientTab */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTab));
   G__memfunc_setup("HOnlineMonClientTab",1869,G__OnlineDict_743_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientTab), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateTab",875,G__OnlineDict_743_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'HOnlineMonClientMain' - 0 - clientmain U 'HOnlineMonClientTabWin' - 0 - clienttabwin", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyTab",1025,G__OnlineDict_743_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__OnlineDict_743_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__OnlineDict_743_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_743_0_6, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientTab::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_743_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientTab::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_743_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientTab::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_743_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientTab::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_743_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_743_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientTab::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_743_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientTab::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_743_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientTab::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_743_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientTab::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientTab", 1995, G__OnlineDict_743_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientCanvas(void) {
   /* HOnlineMonClientCanvas */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientCanvas));
   G__memfunc_setup("HOnlineMonClientCanvas",2194,G__OnlineDict_744_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateCanvas",1200,G__OnlineDict_744_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'HOnlineMonClientMain' - 0 - clientmain U 'TGWindow' - 0 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyCanvas",1350,G__OnlineDict_744_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonClientMain' - 0 - clientmain", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCanvas",892,G__OnlineDict_744_0_4, 85, G__get_linked_tagnum(&G__OnlineDictLN_TCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRCanvas",974,G__OnlineDict_744_0_5, 85, G__get_linked_tagnum(&G__OnlineDictLN_TRootEmbeddedCanvas), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSplitted",1141,G__OnlineDict_744_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - split", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSplitted",1029,G__OnlineDict_744_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetWidth",812,G__OnlineDict_744_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWidth",800,G__OnlineDict_744_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHeight",901,G__OnlineDict_744_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - height", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHeight",889,G__OnlineDict_744_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNx",498,G__OnlineDict_744_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNx",486,G__OnlineDict_744_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNy",499,G__OnlineDict_744_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ny", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNy",487,G__OnlineDict_744_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__OnlineDict_744_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__OnlineDict_744_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_744_0_18, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientCanvas::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_744_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientCanvas::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_744_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientCanvas::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_744_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientCanvas::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_744_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_744_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientCanvas::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_744_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientCanvas::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_744_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientCanvas::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_744_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientCanvas::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientCanvas", 2320, G__OnlineDict_744_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientHist(void) {
   /* HOnlineMonClientHist */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist));
   G__memfunc_setup("HOnlineMonClientHist",1998,G__OnlineDict_745_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetHist",708,G__OnlineDict_745_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOnlineMonHistAddon' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHist",696,G__OnlineDict_745_0_3, 85, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetSubpadnumber",1556,G__OnlineDict_745_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetSubpadnumber",1544,G__OnlineDict_745_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActive",904,G__OnlineDict_745_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActive",792,G__OnlineDict_745_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrayIndexS",1398,G__OnlineDict_745_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayIndexS",1386,G__OnlineDict_745_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetArrayIndexM",1392,G__OnlineDict_745_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetArrayIndexM",1380,G__OnlineDict_745_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetType",718,G__OnlineDict_745_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - histotype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetType",706,G__OnlineDict_745_0_13, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRealName",1073,G__OnlineDict_745_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - rname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRealName",1061,G__OnlineDict_745_0_15, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetGuiName",978,G__OnlineDict_745_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - rname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetGuiName",966,G__OnlineDict_745_0_17, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_745_0_18, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientHist::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_745_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientHist::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_745_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientHist::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_745_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientHist::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_745_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_745_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientHist::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_745_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientHist::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_745_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientHist::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_745_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientHist::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOnlineMonClientHist", 1998, G__OnlineDict_745_0_30, (int) ('i'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist), -1, 0, 1, 1, 1, 0, "u 'HOnlineMonClientHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientHist", 2124, G__OnlineDict_745_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__OnlineDict_745_0_32, (int) ('u'), G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientHist), -1, 1, 1, 1, 1, 0, "u 'HOnlineMonClientHist' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOnlineMonClientMain(void) {
   /* HOnlineMonClientMain */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMain));
   G__memfunc_setup("HOnlineMonClientMain",1979,G__OnlineDict_746_0_1, 105, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonClientMain), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Init",404,G__OnlineDict_746_0_2, 121, -1, -1, 0, 4, 1, 1, 0, 
"g - 'Bool_t' 0 'kFALSE' sendCmdOnly u 'TString' - 0 '\"\"' host "
"i - 'Int_t' 0 '0' port u 'TString' - 0 '\"\"' cmd", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetServerhost",1377,G__OnlineDict_746_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - host", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetServerhost",1365,G__OnlineDict_746_0_4, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetServerport",1384,G__OnlineDict_746_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetServerport",1372,G__OnlineDict_746_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUpdateInterval",1736,G__OnlineDict_746_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetAutoSaveInterval",1945,G__OnlineDict_746_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - minute", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&HOnlineMonClientMain::SetAutoSaveInterval) ), 0);
   G__memfunc_setup("SetAutoSaveIntervalOnline",2558,G__OnlineDict_746_0_9, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - minute", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&HOnlineMonClientMain::SetAutoSaveIntervalOnline) ), 0);
   G__memfunc_setup("AddHist",673,G__OnlineDict_746_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'HOnlineMonClientCanvas' - 0 - canvas U 'HOnlineMonClientHist' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RemoveHist",1030,G__OnlineDict_746_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'HOnlineMonClientCanvas' - 0 - canvas U 'HOnlineMonClientHist' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleControlbuttonClick",2479,G__OnlineDict_746_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 0 - detectorname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleSingleWindowClose",2332,G__OnlineDict_746_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 0 - windowname C - - 0 - detectorname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleRefreshRateChange",2285,G__OnlineDict_746_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleAutoSaveRateChange",2374,G__OnlineDict_746_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleMainWindowClose",2111,G__OnlineDict_746_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleSendStopServer",2035,G__OnlineDict_746_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", "send stop command to server", (void*) NULL, 0);
   G__memfunc_setup("HandleSendResetHists",2020,G__OnlineDict_746_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", "send rest all hists", (void*) NULL, 0);
   G__memfunc_setup("HandleSnapshotSave",1835,G__OnlineDict_746_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleSnapshotSaveOnline",2448,G__OnlineDict_746_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleConnectionError",2150,G__OnlineDict_746_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HandleTryClose",1409,G__OnlineDict_746_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMainThread",1309,G__OnlineDict_746_0_23, 85, G__get_linked_tagnum(&G__OnlineDictLN_TThread), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsMasterClient",1415,G__OnlineDict_746_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMasterClient",1515,G__OnlineDict_746_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsMasterClient",1715,G__OnlineDict_746_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - master", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetReconnect",1217,G__OnlineDict_746_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetReconnect",1229,G__OnlineDict_746_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - recon", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateClientConfig",1801,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - xmlfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CreateDetGui",1174,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HOnlineMonClientDet' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyDetGui",1324,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HOnlineMonClientDet' - 0 - detector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroySingleWindow",1988,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HOnlineMonClientSimpleWin' - 0 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroySingleWindow",1988,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HOnlineMonClientTabWin' - 0 - window", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Connect",714,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"u 'TString' - 0 - host i - 'Int_t' 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReConnect",897,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"u 'TString' - 0 - host i - 'Int_t' 0 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetHist",696,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__OnlineDictLN_HOnlineMonHistAddon), -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - histoname", "get histogram from network", (void*) NULL, 0);
   G__memfunc_setup("UpdateHist",1019,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 4, 0, "U 'HOnlineMonClientHist' - 0 - hist", "update a single histogram, calls GetHist to get new histo", (void*) NULL, 0);
   G__memfunc_setup("UpdateHists",1134,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "update all hists: iterates over visible histos and calls UpdateHist for each hist", (void*) NULL, 0);
   G__memfunc_setup("ThreadUpdateHists",1734,(G__InterfaceMethod) NULL, 89, -1, -1, 0, 1, 3, 4, 0, "Y - - 0 - arg", "thread function, runs into the updateThread", (void*) NULL, 0);
   G__memfunc_setup("GetListOfHistograms",1938,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__OnlineDictLN_TList), -1, 0, 0, 1, 4, 0, "", "get list of all available histograms from server", (void*) NULL, 0);
   G__memfunc_setup("SendCmdToServer",1496,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__OnlineDictLN_TString), -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - cmd", "send command to server and get a TString from server back", (void*) NULL, 0);
   G__memfunc_setup("SetUpdateInterval",1748,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - msec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__OnlineDict_746_0_43, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOnlineMonClientMain::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__OnlineDict_746_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientMain::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__OnlineDict_746_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOnlineMonClientMain::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__OnlineDict_746_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOnlineMonClientMain::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__OnlineDict_746_0_47, 85, G__get_linked_tagnum(&G__OnlineDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__OnlineDict_746_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__OnlineDict_746_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__OnlineDict_746_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__OnlineDict_746_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientMain::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__OnlineDict_746_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientMain::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__OnlineDict_746_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOnlineMonClientMain::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__OnlineDict_746_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOnlineMonClientMain::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HOnlineMonClientMain", 2105, G__OnlineDict_746_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncOnlineDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
}

static void G__cpp_setup_global8() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalOnlineDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
  G__cpp_setup_global8();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcOnlineDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__OnlineDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR = { "vector<void*,allocator<void*> >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TThread = { "TThread" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonHistAddon = { "HOnlineMonHistAddon" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonHist = { "HOnlineMonHist" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonHist2 = { "HOnlineMonHist2" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonStack = { "HOnlineMonStack" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR = { "map<TString,TString,less<TString>,allocator<pair<const TString,TString> > >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineTrendHist = { "HOnlineTrendHist" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineNamedLegend = { "HOnlineNamedLegend" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineLegendDrawer = { "HOnlineLegendDrawer" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineTrendArray = { "HOnlineTrendArray" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineHistArray = { "HOnlineHistArray" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineHistArray2 = { "HOnlineHistArray2" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TServerSocket = { "TServerSocket" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TMonitor = { "TMonitor" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR = { "vector<TStreamerInfo*,allocator<TStreamerInfo*> >" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TStreamerInfo*,allocator<TStreamerInfo*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TMap = { "TMap" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineClientServerCom = { "HOnlineClientServerCom" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGGroupFrame = { "TGGroupFrame" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientXML = { "HOnlineMonClientXML" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientMainWin = { "HOnlineMonClientMainWin" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientDet = { "HOnlineMonClientDet" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientTabWin = { "HOnlineMonClientTabWin" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientSimpleWin = { "HOnlineMonClientSimpleWin" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientTab = { "HOnlineMonClientTab" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientCanvas = { "HOnlineMonClientCanvas" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientHist = { "HOnlineMonClientHist" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_HOnlineMonClientMain = { "HOnlineMonClientMain" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TRootEmbeddedCanvas = { "TRootEmbeddedCanvas" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGTab = { "TGTab" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGStatusBar = { "TGStatusBar" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__OnlineDictLN_TXMLNode = { "TXMLNode" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableOnlineDict() {
  G__OnlineDictLN_TClass.tagnum = -1 ;
  G__OnlineDictLN_TBuffer.tagnum = -1 ;
  G__OnlineDictLN_TMemberInspector.tagnum = -1 ;
  G__OnlineDictLN_TObject.tagnum = -1 ;
  G__OnlineDictLN_TNamed.tagnum = -1 ;
  G__OnlineDictLN_TString.tagnum = -1 ;
  G__OnlineDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__OnlineDictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR.tagnum = -1 ;
  G__OnlineDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__OnlineDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlineDictLN_TList.tagnum = -1 ;
  G__OnlineDictLN_TObjArray.tagnum = -1 ;
  G__OnlineDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__OnlineDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlineDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__OnlineDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlineDictLN_TCanvas.tagnum = -1 ;
  G__OnlineDictLN_TLegend.tagnum = -1 ;
  G__OnlineDictLN_TThread.tagnum = -1 ;
  G__OnlineDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__OnlineDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__OnlineDictLN_TH1.tagnum = -1 ;
  G__OnlineDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__OnlineDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__OnlineDictLN_TH2.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonHistAddon.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonHist.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonHist2.tagnum = -1 ;
  G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonStack.tagnum = -1 ;
  G__OnlineDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__OnlineDictLN_HOnlineTrendHist.tagnum = -1 ;
  G__OnlineDictLN_HOnlineNamedLegend.tagnum = -1 ;
  G__OnlineDictLN_HOnlineLegendDrawer.tagnum = -1 ;
  G__OnlineDictLN_HOnlineTrendArray.tagnum = -1 ;
  G__OnlineDictLN_HOnlineHistArray.tagnum = -1 ;
  G__OnlineDictLN_HOnlineHistArray2.tagnum = -1 ;
  G__OnlineDictLN_TSocket.tagnum = -1 ;
  G__OnlineDictLN_TServerSocket.tagnum = -1 ;
  G__OnlineDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__OnlineDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlineDictLN_TMonitor.tagnum = -1 ;
  G__OnlineDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR.tagnum = -1 ;
  G__OnlineDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__OnlineDictLN_TMap.tagnum = -1 ;
  G__OnlineDictLN_HOnlineClientServerCom.tagnum = -1 ;
  G__OnlineDictLN_TGWindow.tagnum = -1 ;
  G__OnlineDictLN_TGCompositeFrame.tagnum = -1 ;
  G__OnlineDictLN_TGTextButton.tagnum = -1 ;
  G__OnlineDictLN_TGMainFrame.tagnum = -1 ;
  G__OnlineDictLN_TGGroupFrame.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientXML.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientMainWin.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientDet.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientTabWin.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientSimpleWin.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientTab.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientCanvas.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientHist.tagnum = -1 ;
  G__OnlineDictLN_HOnlineMonClientMain.tagnum = -1 ;
  G__OnlineDictLN_TRootEmbeddedCanvas.tagnum = -1 ;
  G__OnlineDictLN_TGTab.tagnum = -1 ;
  G__OnlineDictLN_TGStatusBar.tagnum = -1 ;
  G__OnlineDictLN_TGTextEntry.tagnum = -1 ;
  G__OnlineDictLN_TGNumberEntry.tagnum = -1 ;
  G__OnlineDictLN_TXMLNode.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableOnlineDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TString);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_vectorlEvoidmUcOallocatorlEvoidmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TList);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TLegend);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TThread);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TH2);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonHistAddon),sizeof(HOnlineMonHistAddon),-1,62720,"mon hist addidional features",G__setup_memvarHOnlineMonHistAddon,G__setup_memfuncHOnlineMonHistAddon);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonHist),sizeof(HOnlineMonHist),-1,62720,"mon hist",G__setup_memvarHOnlineMonHist,G__setup_memfuncHOnlineMonHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonHist2),sizeof(HOnlineMonHist2),-1,62720,"mon hist",G__setup_memvarHOnlineMonHist2,G__setup_memfuncHOnlineMonHist2);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonStack),sizeof(HOnlineMonStack),-1,63232,"mon hist",G__setup_memvarHOnlineMonStack,G__setup_memfuncHOnlineMonStack);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_maplETStringcOTStringcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOTStringgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineTrendHist),sizeof(HOnlineTrendHist),-1,62720,"trend hist",G__setup_memvarHOnlineTrendHist,G__setup_memfuncHOnlineTrendHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineNamedLegend),sizeof(HOnlineNamedLegend),-1,62720,"Named Legend",G__setup_memvarHOnlineNamedLegend,G__setup_memfuncHOnlineNamedLegend);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineLegendDrawer),sizeof(HOnlineLegendDrawer),-1,62720,"Legend drawer",G__setup_memvarHOnlineLegendDrawer,G__setup_memfuncHOnlineLegendDrawer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineTrendArray),sizeof(HOnlineTrendArray),-1,62720,"Mdc trend hist array",G__setup_memvarHOnlineTrendArray,G__setup_memfuncHOnlineTrendArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineHistArray),sizeof(HOnlineHistArray),-1,62720,"Mdc mon hist array",G__setup_memvarHOnlineHistArray,G__setup_memfuncHOnlineHistArray);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineHistArray2),sizeof(HOnlineHistArray2),-1,62720,"mon hist array",G__setup_memvarHOnlineHistArray2,G__setup_memfuncHOnlineHistArray2);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TSocket);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TServerSocket);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TMonitor);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_vectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_reverse_iteratorlEvectorlETStreamerInfomUcOallocatorlETStreamerInfomUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TMap);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineClientServerCom),sizeof(HOnlineClientServerCom),-1,62464,(char*)NULL,G__setup_memvarHOnlineClientServerCom,G__setup_memfuncHOnlineClientServerCom);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGGroupFrame);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientXML),sizeof(HOnlineMonClientXML),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientXML,G__setup_memfuncHOnlineMonClientXML);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientMainWin),sizeof(HOnlineMonClientMainWin),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientMainWin,G__setup_memfuncHOnlineMonClientMainWin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientDet),sizeof(HOnlineMonClientDet),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientDet,G__setup_memfuncHOnlineMonClientDet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientTabWin),sizeof(HOnlineMonClientTabWin),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientTabWin,G__setup_memfuncHOnlineMonClientTabWin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientSimpleWin),sizeof(HOnlineMonClientSimpleWin),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientSimpleWin,G__setup_memfuncHOnlineMonClientSimpleWin);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientTab),sizeof(HOnlineMonClientTab),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientTab,G__setup_memfuncHOnlineMonClientTab);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientCanvas),sizeof(HOnlineMonClientCanvas),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientCanvas,G__setup_memfuncHOnlineMonClientCanvas);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientHist),sizeof(HOnlineMonClientHist),-1,62720,(char*)NULL,G__setup_memvarHOnlineMonClientHist,G__setup_memfuncHOnlineMonClientHist);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__OnlineDictLN_HOnlineMonClientMain),sizeof(HOnlineMonClientMain),-1,1280,(char*)NULL,G__setup_memvarHOnlineMonClientMain,G__setup_memfuncHOnlineMonClientMain);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TRootEmbeddedCanvas);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGTab);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGStatusBar);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__OnlineDictLN_TXMLNode);
}
extern "C" void G__cpp_setupOnlineDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupOnlineDict()");
  G__set_cpp_environmentOnlineDict();
  G__cpp_setup_tagtableOnlineDict();

  G__cpp_setup_inheritanceOnlineDict();

  G__cpp_setup_typetableOnlineDict();

  G__cpp_setup_memvarOnlineDict();

  G__cpp_setup_memfuncOnlineDict();
  G__cpp_setup_globalOnlineDict();
  G__cpp_setup_funcOnlineDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncOnlineDict();
  return;
}
class G__cpp_setup_initOnlineDict {
  public:
    G__cpp_setup_initOnlineDict() { G__add_setup_func("OnlineDict",(G__incsetup)(&G__cpp_setupOnlineDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initOnlineDict() { G__remove_setup_func("OnlineDict"); }
};
G__cpp_setup_initOnlineDict G__cpp_setup_initializerOnlineDict;

