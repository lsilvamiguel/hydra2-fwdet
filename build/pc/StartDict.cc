//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:53:02 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIStartDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "StartDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HLatchUnpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HLatchUnpacker(void *p = 0);
   static void *newArray_HLatchUnpacker(Long_t size, void *p);
   static void delete_HLatchUnpacker(void *p);
   static void deleteArray_HLatchUnpacker(void *p);
   static void destruct_HLatchUnpacker(void *p);
   static void streamer_HLatchUnpacker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HLatchUnpacker*)
   {
      ::HLatchUnpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HLatchUnpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HLatchUnpacker", ::HLatchUnpacker::Class_Version(), "././hlatchunpacker.h", 6,
                  typeid(::HLatchUnpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HLatchUnpacker::Dictionary, isa_proxy, 0,
                  sizeof(::HLatchUnpacker) );
      instance.SetNew(&new_HLatchUnpacker);
      instance.SetNewArray(&newArray_HLatchUnpacker);
      instance.SetDelete(&delete_HLatchUnpacker);
      instance.SetDeleteArray(&deleteArray_HLatchUnpacker);
      instance.SetDestructor(&destruct_HLatchUnpacker);
      instance.SetStreamerFunc(&streamer_HLatchUnpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HLatchUnpacker*)
   {
      return GenerateInitInstanceLocal((::HLatchUnpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HLatchUnpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Cal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Cal(void *p = 0);
   static void *newArray_HStart2Cal(Long_t size, void *p);
   static void delete_HStart2Cal(void *p);
   static void deleteArray_HStart2Cal(void *p);
   static void destruct_HStart2Cal(void *p);
   static void streamer_HStart2Cal(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Cal*)
   {
      ::HStart2Cal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Cal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Cal", ::HStart2Cal::Class_Version(), "././hstart2cal.h", 6,
                  typeid(::HStart2Cal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Cal::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Cal) );
      instance.SetNew(&new_HStart2Cal);
      instance.SetNewArray(&newArray_HStart2Cal);
      instance.SetDelete(&delete_HStart2Cal);
      instance.SetDeleteArray(&deleteArray_HStart2Cal);
      instance.SetDestructor(&destruct_HStart2Cal);
      instance.SetStreamerFunc(&streamer_HStart2Cal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Cal*)
   {
      return GenerateInitInstanceLocal((::HStart2Cal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Cal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2CalRunPars_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2CalRunPars(void *p = 0);
   static void *newArray_HStart2CalRunPars(Long_t size, void *p);
   static void delete_HStart2CalRunPars(void *p);
   static void deleteArray_HStart2CalRunPars(void *p);
   static void destruct_HStart2CalRunPars(void *p);
   static void streamer_HStart2CalRunPars(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2CalRunPars*)
   {
      ::HStart2CalRunPars *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2CalRunPars >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2CalRunPars", ::HStart2CalRunPars::Class_Version(), "././hstart2calrunpar.h", 23,
                  typeid(::HStart2CalRunPars), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2CalRunPars::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2CalRunPars) );
      instance.SetNew(&new_HStart2CalRunPars);
      instance.SetNewArray(&newArray_HStart2CalRunPars);
      instance.SetDelete(&delete_HStart2CalRunPars);
      instance.SetDeleteArray(&deleteArray_HStart2CalRunPars);
      instance.SetDestructor(&destruct_HStart2CalRunPars);
      instance.SetStreamerFunc(&streamer_HStart2CalRunPars);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2CalRunPars*)
   {
      return GenerateInitInstanceLocal((::HStart2CalRunPars*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2CalRunPars*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2CalRunPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2CalRunPar(void *p = 0);
   static void *newArray_HStart2CalRunPar(Long_t size, void *p);
   static void delete_HStart2CalRunPar(void *p);
   static void deleteArray_HStart2CalRunPar(void *p);
   static void destruct_HStart2CalRunPar(void *p);
   static void streamer_HStart2CalRunPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2CalRunPar*)
   {
      ::HStart2CalRunPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2CalRunPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2CalRunPar", ::HStart2CalRunPar::Class_Version(), "././hstart2calrunpar.h", 71,
                  typeid(::HStart2CalRunPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2CalRunPar::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2CalRunPar) );
      instance.SetNew(&new_HStart2CalRunPar);
      instance.SetNewArray(&newArray_HStart2CalRunPar);
      instance.SetDelete(&delete_HStart2CalRunPar);
      instance.SetDeleteArray(&deleteArray_HStart2CalRunPar);
      instance.SetDestructor(&destruct_HStart2CalRunPar);
      instance.SetStreamerFunc(&streamer_HStart2CalRunPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2CalRunPar*)
   {
      return GenerateInitInstanceLocal((::HStart2CalRunPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2CalRunPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Calpar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Calpar(void *p = 0);
   static void *newArray_HStart2Calpar(Long_t size, void *p);
   static void delete_HStart2Calpar(void *p);
   static void deleteArray_HStart2Calpar(void *p);
   static void destruct_HStart2Calpar(void *p);
   static void streamer_HStart2Calpar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Calpar*)
   {
      ::HStart2Calpar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Calpar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Calpar", ::HStart2Calpar::Class_Version(), "././hstart2calpar.h", 96,
                  typeid(::HStart2Calpar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Calpar::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Calpar) );
      instance.SetNew(&new_HStart2Calpar);
      instance.SetNewArray(&newArray_HStart2Calpar);
      instance.SetDelete(&delete_HStart2Calpar);
      instance.SetDeleteArray(&deleteArray_HStart2Calpar);
      instance.SetDestructor(&destruct_HStart2Calpar);
      instance.SetStreamerFunc(&streamer_HStart2Calpar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Calpar*)
   {
      return GenerateInitInstanceLocal((::HStart2Calpar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Calpar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Calibrater_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Calibrater(void *p = 0);
   static void *newArray_HStart2Calibrater(Long_t size, void *p);
   static void delete_HStart2Calibrater(void *p);
   static void deleteArray_HStart2Calibrater(void *p);
   static void destruct_HStart2Calibrater(void *p);
   static void streamer_HStart2Calibrater(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Calibrater*)
   {
      ::HStart2Calibrater *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Calibrater >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Calibrater", ::HStart2Calibrater::Class_Version(), "././hstart2calibrater.h", 12,
                  typeid(::HStart2Calibrater), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Calibrater::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Calibrater) );
      instance.SetNew(&new_HStart2Calibrater);
      instance.SetNewArray(&newArray_HStart2Calibrater);
      instance.SetDelete(&delete_HStart2Calibrater);
      instance.SetDeleteArray(&deleteArray_HStart2Calibrater);
      instance.SetDestructor(&destruct_HStart2Calibrater);
      instance.SetStreamerFunc(&streamer_HStart2Calibrater);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Calibrater*)
   {
      return GenerateInitInstanceLocal((::HStart2Calibrater*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Calibrater*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2CalparCell_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2CalparCell(void *p = 0);
   static void *newArray_HStart2CalparCell(Long_t size, void *p);
   static void delete_HStart2CalparCell(void *p);
   static void deleteArray_HStart2CalparCell(void *p);
   static void destruct_HStart2CalparCell(void *p);
   static void streamer_HStart2CalparCell(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2CalparCell*)
   {
      ::HStart2CalparCell *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2CalparCell >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2CalparCell", ::HStart2CalparCell::Class_Version(), "././hstart2calpar.h", 9,
                  typeid(::HStart2CalparCell), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2CalparCell::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2CalparCell) );
      instance.SetNew(&new_HStart2CalparCell);
      instance.SetNewArray(&newArray_HStart2CalparCell);
      instance.SetDelete(&delete_HStart2CalparCell);
      instance.SetDeleteArray(&deleteArray_HStart2CalparCell);
      instance.SetDestructor(&destruct_HStart2CalparCell);
      instance.SetStreamerFunc(&streamer_HStart2CalparCell);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2CalparCell*)
   {
      return GenerateInitInstanceLocal((::HStart2CalparCell*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2CalparCell*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2CalparMod_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2CalparMod(void *p = 0);
   static void *newArray_HStart2CalparMod(Long_t size, void *p);
   static void delete_HStart2CalparMod(void *p);
   static void deleteArray_HStart2CalparMod(void *p);
   static void destruct_HStart2CalparMod(void *p);
   static void streamer_HStart2CalparMod(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2CalparMod*)
   {
      ::HStart2CalparMod *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2CalparMod >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2CalparMod", ::HStart2CalparMod::Class_Version(), "././hstart2calpar.h", 80,
                  typeid(::HStart2CalparMod), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2CalparMod::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2CalparMod) );
      instance.SetNew(&new_HStart2CalparMod);
      instance.SetNewArray(&newArray_HStart2CalparMod);
      instance.SetDelete(&delete_HStart2CalparMod);
      instance.SetDeleteArray(&deleteArray_HStart2CalparMod);
      instance.SetDestructor(&destruct_HStart2CalparMod);
      instance.SetStreamerFunc(&streamer_HStart2CalparMod);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2CalparMod*)
   {
      return GenerateInitInstanceLocal((::HStart2CalparMod*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2CalparMod*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Detector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Detector(void *p = 0);
   static void *newArray_HStart2Detector(Long_t size, void *p);
   static void delete_HStart2Detector(void *p);
   static void deleteArray_HStart2Detector(void *p);
   static void destruct_HStart2Detector(void *p);
   static void streamer_HStart2Detector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Detector*)
   {
      ::HStart2Detector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Detector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Detector", ::HStart2Detector::Class_Version(), "././hstart2detector.h", 10,
                  typeid(::HStart2Detector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Detector::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Detector) );
      instance.SetNew(&new_HStart2Detector);
      instance.SetNewArray(&newArray_HStart2Detector);
      instance.SetDelete(&delete_HStart2Detector);
      instance.SetDeleteArray(&deleteArray_HStart2Detector);
      instance.SetDestructor(&destruct_HStart2Detector);
      instance.SetStreamerFunc(&streamer_HStart2Detector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Detector*)
   {
      return GenerateInitInstanceLocal((::HStart2Detector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Detector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Hit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Hit(void *p = 0);
   static void *newArray_HStart2Hit(Long_t size, void *p);
   static void delete_HStart2Hit(void *p);
   static void deleteArray_HStart2Hit(void *p);
   static void destruct_HStart2Hit(void *p);
   static void streamer_HStart2Hit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Hit*)
   {
      ::HStart2Hit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Hit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Hit", ::HStart2Hit::Class_Version(), "././hstart2hit.h", 10,
                  typeid(::HStart2Hit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Hit::Dictionary, isa_proxy, 1,
                  sizeof(::HStart2Hit) );
      instance.SetNew(&new_HStart2Hit);
      instance.SetNewArray(&newArray_HStart2Hit);
      instance.SetDelete(&delete_HStart2Hit);
      instance.SetDeleteArray(&deleteArray_HStart2Hit);
      instance.SetDestructor(&destruct_HStart2Hit);
      instance.SetStreamerFunc(&streamer_HStart2Hit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Hit*)
   {
      return GenerateInitInstanceLocal((::HStart2Hit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Hit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2HitFPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2HitFPar(void *p = 0);
   static void *newArray_HStart2HitFPar(Long_t size, void *p);
   static void delete_HStart2HitFPar(void *p);
   static void deleteArray_HStart2HitFPar(void *p);
   static void destruct_HStart2HitFPar(void *p);
   static void streamer_HStart2HitFPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2HitFPar*)
   {
      ::HStart2HitFPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2HitFPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2HitFPar", ::HStart2HitFPar::Class_Version(), "././hstart2hitfpar.h", 18,
                  typeid(::HStart2HitFPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2HitFPar::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2HitFPar) );
      instance.SetNew(&new_HStart2HitFPar);
      instance.SetNewArray(&newArray_HStart2HitFPar);
      instance.SetDelete(&delete_HStart2HitFPar);
      instance.SetDeleteArray(&deleteArray_HStart2HitFPar);
      instance.SetDestructor(&destruct_HStart2HitFPar);
      instance.SetStreamerFunc(&streamer_HStart2HitFPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2HitFPar*)
   {
      return GenerateInitInstanceLocal((::HStart2HitFPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2HitFPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2HitF_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2HitF(void *p = 0);
   static void *newArray_HStart2HitF(Long_t size, void *p);
   static void delete_HStart2HitF(void *p);
   static void deleteArray_HStart2HitF(void *p);
   static void destruct_HStart2HitF(void *p);
   static void streamer_HStart2HitF(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2HitF*)
   {
      ::HStart2HitF *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2HitF >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2HitF", ::HStart2HitF::Class_Version(), "././hstart2hitf.h", 14,
                  typeid(::HStart2HitF), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2HitF::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2HitF) );
      instance.SetNew(&new_HStart2HitF);
      instance.SetNewArray(&newArray_HStart2HitF);
      instance.SetDelete(&delete_HStart2HitF);
      instance.SetDeleteArray(&deleteArray_HStart2HitF);
      instance.SetDestructor(&destruct_HStart2HitF);
      instance.SetStreamerFunc(&streamer_HStart2HitF);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2HitF*)
   {
      return GenerateInitInstanceLocal((::HStart2HitF*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2HitF*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2GeomPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2GeomPar(void *p = 0);
   static void *newArray_HStart2GeomPar(Long_t size, void *p);
   static void delete_HStart2GeomPar(void *p);
   static void deleteArray_HStart2GeomPar(void *p);
   static void destruct_HStart2GeomPar(void *p);
   static void streamer_HStart2GeomPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2GeomPar*)
   {
      ::HStart2GeomPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2GeomPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2GeomPar", ::HStart2GeomPar::Class_Version(), "././hstart2geompar.h", 9,
                  typeid(::HStart2GeomPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2GeomPar::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2GeomPar) );
      instance.SetNew(&new_HStart2GeomPar);
      instance.SetNewArray(&newArray_HStart2GeomPar);
      instance.SetDelete(&delete_HStart2GeomPar);
      instance.SetDeleteArray(&deleteArray_HStart2GeomPar);
      instance.SetDestructor(&destruct_HStart2GeomPar);
      instance.SetStreamerFunc(&streamer_HStart2GeomPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2GeomPar*)
   {
      return GenerateInitInstanceLocal((::HStart2GeomPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2GeomPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2DigiPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2DigiPar(void *p = 0);
   static void *newArray_HStart2DigiPar(Long_t size, void *p);
   static void delete_HStart2DigiPar(void *p);
   static void deleteArray_HStart2DigiPar(void *p);
   static void destruct_HStart2DigiPar(void *p);
   static void streamer_HStart2DigiPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2DigiPar*)
   {
      ::HStart2DigiPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2DigiPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2DigiPar", ::HStart2DigiPar::Class_Version(), "././hstart2digipar.h", 6,
                  typeid(::HStart2DigiPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2DigiPar::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2DigiPar) );
      instance.SetNew(&new_HStart2DigiPar);
      instance.SetNewArray(&newArray_HStart2DigiPar);
      instance.SetDelete(&delete_HStart2DigiPar);
      instance.SetDeleteArray(&deleteArray_HStart2DigiPar);
      instance.SetDestructor(&destruct_HStart2DigiPar);
      instance.SetStreamerFunc(&streamer_HStart2DigiPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2DigiPar*)
   {
      return GenerateInitInstanceLocal((::HStart2DigiPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2DigiPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2HitFSim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2HitFSim(void *p = 0);
   static void *newArray_HStart2HitFSim(Long_t size, void *p);
   static void delete_HStart2HitFSim(void *p);
   static void deleteArray_HStart2HitFSim(void *p);
   static void destruct_HStart2HitFSim(void *p);
   static void streamer_HStart2HitFSim(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2HitFSim*)
   {
      ::HStart2HitFSim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2HitFSim >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2HitFSim", ::HStart2HitFSim::Class_Version(), "././hstart2hitfsim.h", 17,
                  typeid(::HStart2HitFSim), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2HitFSim::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2HitFSim) );
      instance.SetNew(&new_HStart2HitFSim);
      instance.SetNewArray(&newArray_HStart2HitFSim);
      instance.SetDelete(&delete_HStart2HitFSim);
      instance.SetDeleteArray(&deleteArray_HStart2HitFSim);
      instance.SetDestructor(&destruct_HStart2HitFSim);
      instance.SetStreamerFunc(&streamer_HStart2HitFSim);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2HitFSim*)
   {
      return GenerateInitInstanceLocal((::HStart2HitFSim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2HitFSim*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Raw_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Raw(void *p = 0);
   static void *newArray_HStart2Raw(Long_t size, void *p);
   static void delete_HStart2Raw(void *p);
   static void deleteArray_HStart2Raw(void *p);
   static void destruct_HStart2Raw(void *p);
   static void streamer_HStart2Raw(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Raw*)
   {
      ::HStart2Raw *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Raw >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Raw", ::HStart2Raw::Class_Version(), "././hstart2raw.h", 6,
                  typeid(::HStart2Raw), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Raw::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Raw) );
      instance.SetNew(&new_HStart2Raw);
      instance.SetNewArray(&newArray_HStart2Raw);
      instance.SetDelete(&delete_HStart2Raw);
      instance.SetDeleteArray(&deleteArray_HStart2Raw);
      instance.SetDestructor(&destruct_HStart2Raw);
      instance.SetStreamerFunc(&streamer_HStart2Raw);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Raw*)
   {
      return GenerateInitInstanceLocal((::HStart2Raw*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Raw*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb2LookupChan_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb2LookupChan(void *p = 0);
   static void *newArray_HStart2Trb2LookupChan(Long_t size, void *p);
   static void delete_HStart2Trb2LookupChan(void *p);
   static void deleteArray_HStart2Trb2LookupChan(void *p);
   static void destruct_HStart2Trb2LookupChan(void *p);
   static void streamer_HStart2Trb2LookupChan(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb2LookupChan*)
   {
      ::HStart2Trb2LookupChan *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb2LookupChan >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb2LookupChan", ::HStart2Trb2LookupChan::Class_Version(), "././hstart2trb2lookup.h", 13,
                  typeid(::HStart2Trb2LookupChan), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb2LookupChan::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb2LookupChan) );
      instance.SetNew(&new_HStart2Trb2LookupChan);
      instance.SetNewArray(&newArray_HStart2Trb2LookupChan);
      instance.SetDelete(&delete_HStart2Trb2LookupChan);
      instance.SetDeleteArray(&deleteArray_HStart2Trb2LookupChan);
      instance.SetDestructor(&destruct_HStart2Trb2LookupChan);
      instance.SetStreamerFunc(&streamer_HStart2Trb2LookupChan);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb2LookupChan*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb2LookupChan*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb2LookupChan*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb2LookupBoard_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb2LookupBoard(void *p = 0);
   static void *newArray_HStart2Trb2LookupBoard(Long_t size, void *p);
   static void delete_HStart2Trb2LookupBoard(void *p);
   static void deleteArray_HStart2Trb2LookupBoard(void *p);
   static void destruct_HStart2Trb2LookupBoard(void *p);
   static void streamer_HStart2Trb2LookupBoard(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb2LookupBoard*)
   {
      ::HStart2Trb2LookupBoard *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb2LookupBoard >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb2LookupBoard", ::HStart2Trb2LookupBoard::Class_Version(), "././hstart2trb2lookup.h", 56,
                  typeid(::HStart2Trb2LookupBoard), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb2LookupBoard::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb2LookupBoard) );
      instance.SetNew(&new_HStart2Trb2LookupBoard);
      instance.SetNewArray(&newArray_HStart2Trb2LookupBoard);
      instance.SetDelete(&delete_HStart2Trb2LookupBoard);
      instance.SetDeleteArray(&deleteArray_HStart2Trb2LookupBoard);
      instance.SetDestructor(&destruct_HStart2Trb2LookupBoard);
      instance.SetStreamerFunc(&streamer_HStart2Trb2LookupBoard);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb2LookupBoard*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb2LookupBoard*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb2LookupBoard*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb2Lookup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb2Lookup(void *p = 0);
   static void *newArray_HStart2Trb2Lookup(Long_t size, void *p);
   static void delete_HStart2Trb2Lookup(void *p);
   static void deleteArray_HStart2Trb2Lookup(void *p);
   static void destruct_HStart2Trb2Lookup(void *p);
   static void streamer_HStart2Trb2Lookup(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb2Lookup*)
   {
      ::HStart2Trb2Lookup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb2Lookup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb2Lookup", ::HStart2Trb2Lookup::Class_Version(), "././hstart2trb2lookup.h", 78,
                  typeid(::HStart2Trb2Lookup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb2Lookup::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb2Lookup) );
      instance.SetNew(&new_HStart2Trb2Lookup);
      instance.SetNewArray(&newArray_HStart2Trb2Lookup);
      instance.SetDelete(&delete_HStart2Trb2Lookup);
      instance.SetDeleteArray(&deleteArray_HStart2Trb2Lookup);
      instance.SetDestructor(&destruct_HStart2Trb2Lookup);
      instance.SetStreamerFunc(&streamer_HStart2Trb2Lookup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb2Lookup*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb2Lookup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb2Lookup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb2Unpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb2Unpacker(void *p = 0);
   static void *newArray_HStart2Trb2Unpacker(Long_t size, void *p);
   static void delete_HStart2Trb2Unpacker(void *p);
   static void deleteArray_HStart2Trb2Unpacker(void *p);
   static void destruct_HStart2Trb2Unpacker(void *p);
   static void streamer_HStart2Trb2Unpacker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb2Unpacker*)
   {
      ::HStart2Trb2Unpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb2Unpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb2Unpacker", ::HStart2Trb2Unpacker::Class_Version(), "././hstart2trb2unpacker.h", 9,
                  typeid(::HStart2Trb2Unpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb2Unpacker::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb2Unpacker) );
      instance.SetNew(&new_HStart2Trb2Unpacker);
      instance.SetNewArray(&newArray_HStart2Trb2Unpacker);
      instance.SetDelete(&delete_HStart2Trb2Unpacker);
      instance.SetDeleteArray(&deleteArray_HStart2Trb2Unpacker);
      instance.SetDestructor(&destruct_HStart2Trb2Unpacker);
      instance.SetStreamerFunc(&streamer_HStart2Trb2Unpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb2Unpacker*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb2Unpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb2Unpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb3LookupChan_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb3LookupChan(void *p = 0);
   static void *newArray_HStart2Trb3LookupChan(Long_t size, void *p);
   static void delete_HStart2Trb3LookupChan(void *p);
   static void deleteArray_HStart2Trb3LookupChan(void *p);
   static void destruct_HStart2Trb3LookupChan(void *p);
   static void streamer_HStart2Trb3LookupChan(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb3LookupChan*)
   {
      ::HStart2Trb3LookupChan *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb3LookupChan >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb3LookupChan", ::HStart2Trb3LookupChan::Class_Version(), "././hstart2trb3lookup.h", 13,
                  typeid(::HStart2Trb3LookupChan), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb3LookupChan::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb3LookupChan) );
      instance.SetNew(&new_HStart2Trb3LookupChan);
      instance.SetNewArray(&newArray_HStart2Trb3LookupChan);
      instance.SetDelete(&delete_HStart2Trb3LookupChan);
      instance.SetDeleteArray(&deleteArray_HStart2Trb3LookupChan);
      instance.SetDestructor(&destruct_HStart2Trb3LookupChan);
      instance.SetStreamerFunc(&streamer_HStart2Trb3LookupChan);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb3LookupChan*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb3LookupChan*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb3LookupChan*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb3LookupTdc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb3LookupTdc(void *p = 0);
   static void *newArray_HStart2Trb3LookupTdc(Long_t size, void *p);
   static void delete_HStart2Trb3LookupTdc(void *p);
   static void deleteArray_HStart2Trb3LookupTdc(void *p);
   static void destruct_HStart2Trb3LookupTdc(void *p);
   static void streamer_HStart2Trb3LookupTdc(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb3LookupTdc*)
   {
      ::HStart2Trb3LookupTdc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb3LookupTdc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb3LookupTdc", ::HStart2Trb3LookupTdc::Class_Version(), "././hstart2trb3lookup.h", 56,
                  typeid(::HStart2Trb3LookupTdc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb3LookupTdc::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb3LookupTdc) );
      instance.SetNew(&new_HStart2Trb3LookupTdc);
      instance.SetNewArray(&newArray_HStart2Trb3LookupTdc);
      instance.SetDelete(&delete_HStart2Trb3LookupTdc);
      instance.SetDeleteArray(&deleteArray_HStart2Trb3LookupTdc);
      instance.SetDestructor(&destruct_HStart2Trb3LookupTdc);
      instance.SetStreamerFunc(&streamer_HStart2Trb3LookupTdc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb3LookupTdc*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb3LookupTdc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb3LookupTdc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb3Lookup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb3Lookup(void *p = 0);
   static void *newArray_HStart2Trb3Lookup(Long_t size, void *p);
   static void delete_HStart2Trb3Lookup(void *p);
   static void deleteArray_HStart2Trb3Lookup(void *p);
   static void destruct_HStart2Trb3Lookup(void *p);
   static void streamer_HStart2Trb3Lookup(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb3Lookup*)
   {
      ::HStart2Trb3Lookup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb3Lookup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb3Lookup", ::HStart2Trb3Lookup::Class_Version(), "././hstart2trb3lookup.h", 78,
                  typeid(::HStart2Trb3Lookup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb3Lookup::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb3Lookup) );
      instance.SetNew(&new_HStart2Trb3Lookup);
      instance.SetNewArray(&newArray_HStart2Trb3Lookup);
      instance.SetDelete(&delete_HStart2Trb3Lookup);
      instance.SetDeleteArray(&deleteArray_HStart2Trb3Lookup);
      instance.SetDestructor(&destruct_HStart2Trb3Lookup);
      instance.SetStreamerFunc(&streamer_HStart2Trb3Lookup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb3Lookup*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb3Lookup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb3Lookup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb3Unpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb3Unpacker(void *p = 0);
   static void *newArray_HStart2Trb3Unpacker(Long_t size, void *p);
   static void delete_HStart2Trb3Unpacker(void *p);
   static void deleteArray_HStart2Trb3Unpacker(void *p);
   static void destruct_HStart2Trb3Unpacker(void *p);
   static void streamer_HStart2Trb3Unpacker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb3Unpacker*)
   {
      ::HStart2Trb3Unpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb3Unpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb3Unpacker", ::HStart2Trb3Unpacker::Class_Version(), "././hstart2trb3unpacker.h", 9,
                  typeid(::HStart2Trb3Unpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb3Unpacker::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb3Unpacker) );
      instance.SetNew(&new_HStart2Trb3Unpacker);
      instance.SetNewArray(&newArray_HStart2Trb3Unpacker);
      instance.SetDelete(&delete_HStart2Trb3Unpacker);
      instance.SetDeleteArray(&deleteArray_HStart2Trb3Unpacker);
      instance.SetDestructor(&destruct_HStart2Trb3Unpacker);
      instance.SetStreamerFunc(&streamer_HStart2Trb3Unpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb3Unpacker*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb3Unpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb3Unpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStart2Trb3Calpar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStart2Trb3Calpar(void *p = 0);
   static void *newArray_HStart2Trb3Calpar(Long_t size, void *p);
   static void delete_HStart2Trb3Calpar(void *p);
   static void deleteArray_HStart2Trb3Calpar(void *p);
   static void destruct_HStart2Trb3Calpar(void *p);
   static void streamer_HStart2Trb3Calpar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStart2Trb3Calpar*)
   {
      ::HStart2Trb3Calpar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStart2Trb3Calpar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStart2Trb3Calpar", ::HStart2Trb3Calpar::Class_Version(), "././hstart2trb3calpar.h", 6,
                  typeid(::HStart2Trb3Calpar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStart2Trb3Calpar::Dictionary, isa_proxy, 0,
                  sizeof(::HStart2Trb3Calpar) );
      instance.SetNew(&new_HStart2Trb3Calpar);
      instance.SetNewArray(&newArray_HStart2Trb3Calpar);
      instance.SetDelete(&delete_HStart2Trb3Calpar);
      instance.SetDeleteArray(&deleteArray_HStart2Trb3Calpar);
      instance.SetDestructor(&destruct_HStart2Trb3Calpar);
      instance.SetStreamerFunc(&streamer_HStart2Trb3Calpar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStart2Trb3Calpar*)
   {
      return GenerateInitInstanceLocal((::HStart2Trb3Calpar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStart2Trb3Calpar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStartContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStartContFact(void *p = 0);
   static void *newArray_HStartContFact(Long_t size, void *p);
   static void delete_HStartContFact(void *p);
   static void deleteArray_HStartContFact(void *p);
   static void destruct_HStartContFact(void *p);
   static void streamer_HStartContFact(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStartContFact*)
   {
      ::HStartContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStartContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStartContFact", ::HStartContFact::Class_Version(), "././hstartcontfact.h", 9,
                  typeid(::HStartContFact), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStartContFact::Dictionary, isa_proxy, 0,
                  sizeof(::HStartContFact) );
      instance.SetNew(&new_HStartContFact);
      instance.SetNewArray(&newArray_HStartContFact);
      instance.SetDelete(&delete_HStartContFact);
      instance.SetDeleteArray(&deleteArray_HStartContFact);
      instance.SetDestructor(&destruct_HStartContFact);
      instance.SetStreamerFunc(&streamer_HStartContFact);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStartContFact*)
   {
      return GenerateInitInstanceLocal((::HStartContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStartContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStartParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HStartParAsciiFileIo(void *p);
   static void deleteArray_HStartParAsciiFileIo(void *p);
   static void destruct_HStartParAsciiFileIo(void *p);
   static void streamer_HStartParAsciiFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStartParAsciiFileIo*)
   {
      ::HStartParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStartParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStartParAsciiFileIo", ::HStartParAsciiFileIo::Class_Version(), "././hstartparasciifileio.h", 10,
                  typeid(::HStartParAsciiFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStartParAsciiFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HStartParAsciiFileIo) );
      instance.SetDelete(&delete_HStartParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_HStartParAsciiFileIo);
      instance.SetDestructor(&destruct_HStartParAsciiFileIo);
      instance.SetStreamerFunc(&streamer_HStartParAsciiFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStartParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::HStartParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStartParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStartParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HStartParRootFileIo(void *p);
   static void deleteArray_HStartParRootFileIo(void *p);
   static void destruct_HStartParRootFileIo(void *p);
   static void streamer_HStartParRootFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStartParRootFileIo*)
   {
      ::HStartParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStartParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStartParRootFileIo", ::HStartParRootFileIo::Class_Version(), "././hstartparrootfileio.h", 10,
                  typeid(::HStartParRootFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStartParRootFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HStartParRootFileIo) );
      instance.SetDelete(&delete_HStartParRootFileIo);
      instance.SetDeleteArray(&deleteArray_HStartParRootFileIo);
      instance.SetDestructor(&destruct_HStartParRootFileIo);
      instance.SetStreamerFunc(&streamer_HStartParRootFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStartParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::HStartParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStartParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HStartTaskSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HStartTaskSet(void *p = 0);
   static void *newArray_HStartTaskSet(Long_t size, void *p);
   static void delete_HStartTaskSet(void *p);
   static void deleteArray_HStartTaskSet(void *p);
   static void destruct_HStartTaskSet(void *p);
   static void streamer_HStartTaskSet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HStartTaskSet*)
   {
      ::HStartTaskSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HStartTaskSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HStartTaskSet", ::HStartTaskSet::Class_Version(), "././hstarttaskset.h", 6,
                  typeid(::HStartTaskSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HStartTaskSet::Dictionary, isa_proxy, 0,
                  sizeof(::HStartTaskSet) );
      instance.SetNew(&new_HStartTaskSet);
      instance.SetNewArray(&newArray_HStartTaskSet);
      instance.SetDelete(&delete_HStartTaskSet);
      instance.SetDeleteArray(&deleteArray_HStartTaskSet);
      instance.SetDestructor(&destruct_HStartTaskSet);
      instance.SetStreamerFunc(&streamer_HStartTaskSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HStartTaskSet*)
   {
      return GenerateInitInstanceLocal((::HStartTaskSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HStartTaskSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTBoxChan_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HTBoxChan(void *p = 0);
   static void *newArray_HTBoxChan(Long_t size, void *p);
   static void delete_HTBoxChan(void *p);
   static void deleteArray_HTBoxChan(void *p);
   static void destruct_HTBoxChan(void *p);
   static void streamer_HTBoxChan(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTBoxChan*)
   {
      ::HTBoxChan *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTBoxChan >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTBoxChan", ::HTBoxChan::Class_Version(), "././htboxchan.h", 13,
                  typeid(::HTBoxChan), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTBoxChan::Dictionary, isa_proxy, 0,
                  sizeof(::HTBoxChan) );
      instance.SetNew(&new_HTBoxChan);
      instance.SetNewArray(&newArray_HTBoxChan);
      instance.SetDelete(&delete_HTBoxChan);
      instance.SetDeleteArray(&deleteArray_HTBoxChan);
      instance.SetDestructor(&destruct_HTBoxChan);
      instance.SetStreamerFunc(&streamer_HTBoxChan);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTBoxChan*)
   {
      return GenerateInitInstanceLocal((::HTBoxChan*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTBoxChan*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTBoxDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HTBoxDetector(void *p = 0);
   static void *newArray_HTBoxDetector(Long_t size, void *p);
   static void delete_HTBoxDetector(void *p);
   static void deleteArray_HTBoxDetector(void *p);
   static void destruct_HTBoxDetector(void *p);
   static void streamer_HTBoxDetector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTBoxDetector*)
   {
      ::HTBoxDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTBoxDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTBoxDetector", ::HTBoxDetector::Class_Version(), "././htboxdetector.h", 9,
                  typeid(::HTBoxDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTBoxDetector::Dictionary, isa_proxy, 0,
                  sizeof(::HTBoxDetector) );
      instance.SetNew(&new_HTBoxDetector);
      instance.SetNewArray(&newArray_HTBoxDetector);
      instance.SetDelete(&delete_HTBoxDetector);
      instance.SetDeleteArray(&deleteArray_HTBoxDetector);
      instance.SetDestructor(&destruct_HTBoxDetector);
      instance.SetStreamerFunc(&streamer_HTBoxDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTBoxDetector*)
   {
      return GenerateInitInstanceLocal((::HTBoxDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTBoxDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTBoxUnpacker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HTBoxUnpacker(void *p = 0);
   static void *newArray_HTBoxUnpacker(Long_t size, void *p);
   static void delete_HTBoxUnpacker(void *p);
   static void deleteArray_HTBoxUnpacker(void *p);
   static void destruct_HTBoxUnpacker(void *p);
   static void streamer_HTBoxUnpacker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTBoxUnpacker*)
   {
      ::HTBoxUnpacker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTBoxUnpacker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTBoxUnpacker", ::HTBoxUnpacker::Class_Version(), "././htboxunpacker.h", 10,
                  typeid(::HTBoxUnpacker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTBoxUnpacker::Dictionary, isa_proxy, 0,
                  sizeof(::HTBoxUnpacker) );
      instance.SetNew(&new_HTBoxUnpacker);
      instance.SetNewArray(&newArray_HTBoxUnpacker);
      instance.SetDelete(&delete_HTBoxUnpacker);
      instance.SetDeleteArray(&deleteArray_HTBoxUnpacker);
      instance.SetDestructor(&destruct_HTBoxUnpacker);
      instance.SetStreamerFunc(&streamer_HTBoxUnpacker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTBoxUnpacker*)
   {
      return GenerateInitInstanceLocal((::HTBoxUnpacker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTBoxUnpacker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HLatchUnpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HLatchUnpacker::Class_Name()
{
   return "HLatchUnpacker";
}

//______________________________________________________________________________
const char *HLatchUnpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HLatchUnpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HLatchUnpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HLatchUnpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HLatchUnpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HLatchUnpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HLatchUnpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HLatchUnpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Cal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Cal::Class_Name()
{
   return "HStart2Cal";
}

//______________________________________________________________________________
const char *HStart2Cal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Cal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Cal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Cal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Cal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Cal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Cal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Cal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2CalRunPars::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2CalRunPars::Class_Name()
{
   return "HStart2CalRunPars";
}

//______________________________________________________________________________
const char *HStart2CalRunPars::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPars*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2CalRunPars::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPars*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2CalRunPars::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPars*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2CalRunPars::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPars*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2CalRunPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2CalRunPar::Class_Name()
{
   return "HStart2CalRunPar";
}

//______________________________________________________________________________
const char *HStart2CalRunPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2CalRunPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2CalRunPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2CalRunPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalRunPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Calpar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Calpar::Class_Name()
{
   return "HStart2Calpar";
}

//______________________________________________________________________________
const char *HStart2Calpar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calpar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Calpar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calpar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Calpar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calpar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Calpar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calpar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Calibrater::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Calibrater::Class_Name()
{
   return "HStart2Calibrater";
}

//______________________________________________________________________________
const char *HStart2Calibrater::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calibrater*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Calibrater::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calibrater*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Calibrater::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calibrater*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Calibrater::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Calibrater*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2CalparCell::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2CalparCell::Class_Name()
{
   return "HStart2CalparCell";
}

//______________________________________________________________________________
const char *HStart2CalparCell::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparCell*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2CalparCell::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparCell*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2CalparCell::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparCell*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2CalparCell::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparCell*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2CalparMod::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2CalparMod::Class_Name()
{
   return "HStart2CalparMod";
}

//______________________________________________________________________________
const char *HStart2CalparMod::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparMod*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2CalparMod::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparMod*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2CalparMod::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparMod*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2CalparMod::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2CalparMod*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Detector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Detector::Class_Name()
{
   return "HStart2Detector";
}

//______________________________________________________________________________
const char *HStart2Detector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Detector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Detector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Detector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Detector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Detector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Detector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Detector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Hit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Hit::Class_Name()
{
   return "HStart2Hit";
}

//______________________________________________________________________________
const char *HStart2Hit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Hit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Hit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Hit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Hit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Hit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Hit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Hit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2HitFPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2HitFPar::Class_Name()
{
   return "HStart2HitFPar";
}

//______________________________________________________________________________
const char *HStart2HitFPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2HitFPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2HitFPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2HitFPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2HitF::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2HitF::Class_Name()
{
   return "HStart2HitF";
}

//______________________________________________________________________________
const char *HStart2HitF::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitF*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2HitF::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitF*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2HitF::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitF*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2HitF::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitF*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2GeomPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2GeomPar::Class_Name()
{
   return "HStart2GeomPar";
}

//______________________________________________________________________________
const char *HStart2GeomPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2GeomPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2GeomPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2GeomPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2GeomPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2GeomPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2GeomPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2GeomPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2DigiPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2DigiPar::Class_Name()
{
   return "HStart2DigiPar";
}

//______________________________________________________________________________
const char *HStart2DigiPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2DigiPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2DigiPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2DigiPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2DigiPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2DigiPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2DigiPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2DigiPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2HitFSim::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2HitFSim::Class_Name()
{
   return "HStart2HitFSim";
}

//______________________________________________________________________________
const char *HStart2HitFSim::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFSim*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2HitFSim::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFSim*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2HitFSim::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFSim*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2HitFSim::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2HitFSim*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Raw::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Raw::Class_Name()
{
   return "HStart2Raw";
}

//______________________________________________________________________________
const char *HStart2Raw::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Raw*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Raw::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Raw*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Raw::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Raw*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Raw::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Raw*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb2LookupChan::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb2LookupChan::Class_Name()
{
   return "HStart2Trb2LookupChan";
}

//______________________________________________________________________________
const char *HStart2Trb2LookupChan::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupChan*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb2LookupChan::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupChan*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb2LookupChan::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupChan*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb2LookupChan::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupChan*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb2LookupBoard::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb2LookupBoard::Class_Name()
{
   return "HStart2Trb2LookupBoard";
}

//______________________________________________________________________________
const char *HStart2Trb2LookupBoard::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupBoard*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb2LookupBoard::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupBoard*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb2LookupBoard::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupBoard*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb2LookupBoard::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2LookupBoard*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb2Lookup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb2Lookup::Class_Name()
{
   return "HStart2Trb2Lookup";
}

//______________________________________________________________________________
const char *HStart2Trb2Lookup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Lookup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb2Lookup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Lookup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb2Lookup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Lookup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb2Lookup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Lookup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb2Unpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb2Unpacker::Class_Name()
{
   return "HStart2Trb2Unpacker";
}

//______________________________________________________________________________
const char *HStart2Trb2Unpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Unpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb2Unpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Unpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb2Unpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Unpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb2Unpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb2Unpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb3LookupChan::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb3LookupChan::Class_Name()
{
   return "HStart2Trb3LookupChan";
}

//______________________________________________________________________________
const char *HStart2Trb3LookupChan::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupChan*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb3LookupChan::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupChan*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb3LookupChan::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupChan*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb3LookupChan::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupChan*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb3LookupTdc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb3LookupTdc::Class_Name()
{
   return "HStart2Trb3LookupTdc";
}

//______________________________________________________________________________
const char *HStart2Trb3LookupTdc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupTdc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb3LookupTdc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupTdc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb3LookupTdc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupTdc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb3LookupTdc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3LookupTdc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb3Lookup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb3Lookup::Class_Name()
{
   return "HStart2Trb3Lookup";
}

//______________________________________________________________________________
const char *HStart2Trb3Lookup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Lookup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb3Lookup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Lookup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb3Lookup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Lookup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb3Lookup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Lookup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb3Unpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb3Unpacker::Class_Name()
{
   return "HStart2Trb3Unpacker";
}

//______________________________________________________________________________
const char *HStart2Trb3Unpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Unpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb3Unpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Unpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb3Unpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Unpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb3Unpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Unpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStart2Trb3Calpar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStart2Trb3Calpar::Class_Name()
{
   return "HStart2Trb3Calpar";
}

//______________________________________________________________________________
const char *HStart2Trb3Calpar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Calpar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStart2Trb3Calpar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Calpar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStart2Trb3Calpar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Calpar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStart2Trb3Calpar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStart2Trb3Calpar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStartContFact::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStartContFact::Class_Name()
{
   return "HStartContFact";
}

//______________________________________________________________________________
const char *HStartContFact::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStartContFact::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStartContFact::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStartContFact::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartContFact*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStartParAsciiFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStartParAsciiFileIo::Class_Name()
{
   return "HStartParAsciiFileIo";
}

//______________________________________________________________________________
const char *HStartParAsciiFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStartParAsciiFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStartParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStartParAsciiFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParAsciiFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStartParRootFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStartParRootFileIo::Class_Name()
{
   return "HStartParRootFileIo";
}

//______________________________________________________________________________
const char *HStartParRootFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStartParRootFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStartParRootFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStartParRootFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartParRootFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HStartTaskSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HStartTaskSet::Class_Name()
{
   return "HStartTaskSet";
}

//______________________________________________________________________________
const char *HStartTaskSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartTaskSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HStartTaskSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HStartTaskSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HStartTaskSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartTaskSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HStartTaskSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HStartTaskSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTBoxChan::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTBoxChan::Class_Name()
{
   return "HTBoxChan";
}

//______________________________________________________________________________
const char *HTBoxChan::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxChan*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTBoxChan::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxChan*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTBoxChan::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxChan*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTBoxChan::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxChan*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTBoxDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTBoxDetector::Class_Name()
{
   return "HTBoxDetector";
}

//______________________________________________________________________________
const char *HTBoxDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTBoxDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTBoxDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTBoxDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTBoxUnpacker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTBoxUnpacker::Class_Name()
{
   return "HTBoxUnpacker";
}

//______________________________________________________________________________
const char *HTBoxUnpacker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxUnpacker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTBoxUnpacker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxUnpacker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTBoxUnpacker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxUnpacker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTBoxUnpacker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTBoxUnpacker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HLatchUnpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HLatchUnpacker.

   HldUnpack::Streamer(R__b);
}

//______________________________________________________________________________
void HLatchUnpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HLatchUnpacker.
      TClass *R__cl = ::HLatchUnpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subEvtId", &subEvtId);
      HldUnpack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HLatchUnpacker(void *p) {
      return  p ? new(p) ::HLatchUnpacker : new ::HLatchUnpacker;
   }
   static void *newArray_HLatchUnpacker(Long_t nElements, void *p) {
      return p ? new(p) ::HLatchUnpacker[nElements] : new ::HLatchUnpacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HLatchUnpacker(void *p) {
      delete ((::HLatchUnpacker*)p);
   }
   static void deleteArray_HLatchUnpacker(void *p) {
      delete [] ((::HLatchUnpacker*)p);
   }
   static void destruct_HLatchUnpacker(void *p) {
      typedef ::HLatchUnpacker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HLatchUnpacker(TBuffer &buf, void *obj) {
      ((::HLatchUnpacker*)obj)->::HLatchUnpacker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HLatchUnpacker

//______________________________________________________________________________
void HStart2Cal::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Cal.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fMultiplicity;
      R__b >> fModule;
      R__b >> fStrip;
      R__b >> fTime1;
      R__b >> fWidth1;
      R__b >> fTime2;
      R__b >> fWidth2;
      R__b >> fTime3;
      R__b >> fWidth3;
      R__b >> fTime4;
      R__b >> fWidth4;
      R__b.CheckByteCount(R__s, R__c, HStart2Cal::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Cal::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fMultiplicity;
      R__b << fModule;
      R__b << fStrip;
      R__b << fTime1;
      R__b << fWidth1;
      R__b << fTime2;
      R__b << fWidth2;
      R__b << fTime3;
      R__b << fWidth3;
      R__b << fTime4;
      R__b << fWidth4;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Cal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Cal.
      TClass *R__cl = ::HStart2Cal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStrip", &fStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime1", &fTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth1", &fWidth1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime2", &fTime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth2", &fWidth2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime3", &fTime3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth3", &fWidth3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime4", &fTime4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth4", &fWidth4);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Cal(void *p) {
      return  p ? new(p) ::HStart2Cal : new ::HStart2Cal;
   }
   static void *newArray_HStart2Cal(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Cal[nElements] : new ::HStart2Cal[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Cal(void *p) {
      delete ((::HStart2Cal*)p);
   }
   static void deleteArray_HStart2Cal(void *p) {
      delete [] ((::HStart2Cal*)p);
   }
   static void destruct_HStart2Cal(void *p) {
      typedef ::HStart2Cal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Cal(TBuffer &buf, void *obj) {
      ((::HStart2Cal*)obj)->::HStart2Cal::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Cal

//______________________________________________________________________________
void HStart2Calibrater::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Calibrater.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HStart2Calibrater::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Calibrater.
      TClass *R__cl = ::HStart2Calibrater::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rawCat", &rawCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calCat", &calCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iter", &iter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loc", &loc);
      R__insp.InspectMember(loc, "loc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*calpar", &calpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runpar", &runpar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "correction", &correction);
      R__insp.InspectMember(correction, "correction.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "corrs[128]", corrs);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Calibrater(void *p) {
      return  p ? new(p) ::HStart2Calibrater : new ::HStart2Calibrater;
   }
   static void *newArray_HStart2Calibrater(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Calibrater[nElements] : new ::HStart2Calibrater[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Calibrater(void *p) {
      delete ((::HStart2Calibrater*)p);
   }
   static void deleteArray_HStart2Calibrater(void *p) {
      delete [] ((::HStart2Calibrater*)p);
   }
   static void destruct_HStart2Calibrater(void *p) {
      typedef ::HStart2Calibrater current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Calibrater(TBuffer &buf, void *obj) {
      ((::HStart2Calibrater*)obj)->::HStart2Calibrater::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Calibrater

//______________________________________________________________________________
void HStart2Calpar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Calpar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParSet::Streamer(R__b);
      R__b >> array;
      R__b.CheckByteCount(R__s, R__c, HStart2Calpar::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Calpar::IsA(), kTRUE);
      HParSet::Streamer(R__b);
      R__b << array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Calpar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Calpar.
      TClass *R__cl = ::HStart2Calpar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      HParSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Calpar(void *p) {
      return  p ? new(p) ::HStart2Calpar : new ::HStart2Calpar;
   }
   static void *newArray_HStart2Calpar(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Calpar[nElements] : new ::HStart2Calpar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Calpar(void *p) {
      delete ((::HStart2Calpar*)p);
   }
   static void deleteArray_HStart2Calpar(void *p) {
      delete [] ((::HStart2Calpar*)p);
   }
   static void destruct_HStart2Calpar(void *p) {
      typedef ::HStart2Calpar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Calpar(TBuffer &buf, void *obj) {
      ((::HStart2Calpar*)obj)->::HStart2Calpar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Calpar

//______________________________________________________________________________
void HStart2CalparCell::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2CalparCell.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> tdcSlope;
      R__b >> tdcOffset;
      R__b >> adcSlope;
      R__b >> adcOffset;
      R__b.CheckByteCount(R__s, R__c, HStart2CalparCell::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2CalparCell::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << tdcSlope;
      R__b << tdcOffset;
      R__b << adcSlope;
      R__b << adcOffset;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2CalparCell::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2CalparCell.
      TClass *R__cl = ::HStart2CalparCell::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcSlope", &tdcSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tdcOffset", &tdcOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcSlope", &adcSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "adcOffset", &adcOffset);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2CalparCell(void *p) {
      return  p ? new(p) ::HStart2CalparCell : new ::HStart2CalparCell;
   }
   static void *newArray_HStart2CalparCell(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2CalparCell[nElements] : new ::HStart2CalparCell[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2CalparCell(void *p) {
      delete ((::HStart2CalparCell*)p);
   }
   static void deleteArray_HStart2CalparCell(void *p) {
      delete [] ((::HStart2CalparCell*)p);
   }
   static void destruct_HStart2CalparCell(void *p) {
      typedef ::HStart2CalparCell current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2CalparCell(TBuffer &buf, void *obj) {
      ((::HStart2CalparCell*)obj)->::HStart2CalparCell::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2CalparCell

//______________________________________________________________________________
void HStart2CalparMod::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2CalparMod.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> array;
      R__b.CheckByteCount(R__s, R__c, HStart2CalparMod::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2CalparMod::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2CalparMod::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2CalparMod.
      TClass *R__cl = ::HStart2CalparMod::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2CalparMod(void *p) {
      return  p ? new(p) ::HStart2CalparMod : new ::HStart2CalparMod;
   }
   static void *newArray_HStart2CalparMod(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2CalparMod[nElements] : new ::HStart2CalparMod[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2CalparMod(void *p) {
      delete ((::HStart2CalparMod*)p);
   }
   static void deleteArray_HStart2CalparMod(void *p) {
      delete [] ((::HStart2CalparMod*)p);
   }
   static void destruct_HStart2CalparMod(void *p) {
      typedef ::HStart2CalparMod current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2CalparMod(TBuffer &buf, void *obj) {
      ((::HStart2CalparMod*)obj)->::HStart2CalparMod::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2CalparMod

//______________________________________________________________________________
void HStart2Detector::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Detector.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HDetector::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HStart2Detector::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Detector::IsA(), kTRUE);
      HDetector::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Detector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Detector.
      TClass *R__cl = ::HStart2Detector::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Detector(void *p) {
      return  p ? new(p) ::HStart2Detector : new ::HStart2Detector;
   }
   static void *newArray_HStart2Detector(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Detector[nElements] : new ::HStart2Detector[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Detector(void *p) {
      delete ((::HStart2Detector*)p);
   }
   static void deleteArray_HStart2Detector(void *p) {
      delete [] ((::HStart2Detector*)p);
   }
   static void destruct_HStart2Detector(void *p) {
      typedef ::HStart2Detector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Detector(TBuffer &buf, void *obj) {
      ((::HStart2Detector*)obj)->::HStart2Detector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Detector

//______________________________________________________________________________
void HStart2Hit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Hit.
      TClass *R__cl = ::HStart2Hit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStrip", &fStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &fWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFlag", &fFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCorrFlag", &fCorrFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fResolution", &fResolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSimWidth", &fSimWidth);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrack", &fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIteration", &fIteration);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime2", &fTime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nFirstCluster", &nFirstCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nSecondCluster", &nSecondCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstCluster[5]", fFirstCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondCluster[5]", fSecondCluster);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Hit(void *p) {
      return  p ? new(p) ::HStart2Hit : new ::HStart2Hit;
   }
   static void *newArray_HStart2Hit(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Hit[nElements] : new ::HStart2Hit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Hit(void *p) {
      delete ((::HStart2Hit*)p);
   }
   static void deleteArray_HStart2Hit(void *p) {
      delete [] ((::HStart2Hit*)p);
   }
   static void destruct_HStart2Hit(void *p) {
      typedef ::HStart2Hit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Hit(TBuffer &buf, void *obj) {
      ((::HStart2Hit*)obj)->::HStart2Hit::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Hit

//______________________________________________________________________________
void HStart2HitF::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2HitF.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HStart2HitF::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2HitF.
      TClass *R__cl = ::HStart2HitF::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSkipEvent", &fSkipEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatCal", &fCatCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatHit", &fCatHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loc", &loc);
      R__insp.InspectMember(loc, "loc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPar", &fPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstCluster", (void*)&firstCluster);
      R__insp.InspectMember("vector<Int_t>", (void*)&firstCluster, "firstCluster.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "secondCluster", (void*)&secondCluster);
      R__insp.InspectMember("vector<Int_t>", (void*)&secondCluster, "secondCluster.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSecondTime", &fSecondTime);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2HitF(void *p) {
      return  p ? new(p) ::HStart2HitF : new ::HStart2HitF;
   }
   static void *newArray_HStart2HitF(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2HitF[nElements] : new ::HStart2HitF[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2HitF(void *p) {
      delete ((::HStart2HitF*)p);
   }
   static void deleteArray_HStart2HitF(void *p) {
      delete [] ((::HStart2HitF*)p);
   }
   static void destruct_HStart2HitF(void *p) {
      typedef ::HStart2HitF current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2HitF(TBuffer &buf, void *obj) {
      ((::HStart2HitF*)obj)->::HStart2HitF::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2HitF

//______________________________________________________________________________
void HStart2HitFSim::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2HitFSim.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HStart2HitFSim::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2HitFSim.
      TClass *R__cl = ::HStart2HitFSim::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cellobjects", (void*)&cellobjects);
      R__insp.InspectMember("vector<celldata*>", (void*)&cellobjects, "cellobjects.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatHit", &fCatHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fresolution", &fresolution);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatGeantStart", &fCatGeantStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterGeantStart", &iterGeantStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatGeantKine", &fCatGeantKine);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeomPar", &fGeomPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDigiPar", &fDigiPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSpecGeomPar", &fSpecGeomPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "targetCenter", &targetCenter);
      R__insp.InspectMember(targetCenter, "targetCenter.");
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2HitFSim(void *p) {
      return  p ? new(p) ::HStart2HitFSim : new ::HStart2HitFSim;
   }
   static void *newArray_HStart2HitFSim(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2HitFSim[nElements] : new ::HStart2HitFSim[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2HitFSim(void *p) {
      delete ((::HStart2HitFSim*)p);
   }
   static void deleteArray_HStart2HitFSim(void *p) {
      delete [] ((::HStart2HitFSim*)p);
   }
   static void destruct_HStart2HitFSim(void *p) {
      typedef ::HStart2HitFSim current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2HitFSim(TBuffer &buf, void *obj) {
      ((::HStart2HitFSim*)obj)->::HStart2HitFSim::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2HitFSim

//______________________________________________________________________________
void HStart2HitFPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2HitFPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> fModules;
      R__b >> fStrips;
      fMeanTime.Streamer(R__b);
      fWidth.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HStart2HitFPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2HitFPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << fModules;
      R__b << fStrips;
      fMeanTime.Streamer(R__b);
      fWidth.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2HitFPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2HitFPar.
      TClass *R__cl = ::HStart2HitFPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModules", &fModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStrips", &fStrips);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMeanTime", &fMeanTime);
      R__insp.InspectMember(fMeanTime, "fMeanTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth", &fWidth);
      R__insp.InspectMember(fWidth, "fWidth.");
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2HitFPar(void *p) {
      return  p ? new(p) ::HStart2HitFPar : new ::HStart2HitFPar;
   }
   static void *newArray_HStart2HitFPar(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2HitFPar[nElements] : new ::HStart2HitFPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2HitFPar(void *p) {
      delete ((::HStart2HitFPar*)p);
   }
   static void deleteArray_HStart2HitFPar(void *p) {
      delete [] ((::HStart2HitFPar*)p);
   }
   static void destruct_HStart2HitFPar(void *p) {
      typedef ::HStart2HitFPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2HitFPar(TBuffer &buf, void *obj) {
      ((::HStart2HitFPar*)obj)->::HStart2HitFPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2HitFPar

//______________________________________________________________________________
void HStart2GeomPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2GeomPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HDetGeomPar::Streamer(R__b);
      R__b >> maxComponents;
      R__b >> maxCells;
      R__b >> labPos;
      R__b.CheckByteCount(R__s, R__c, HStart2GeomPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2GeomPar::IsA(), kTRUE);
      HDetGeomPar::Streamer(R__b);
      R__b << maxComponents;
      R__b << maxCells;
      R__b << labPos;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2GeomPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2GeomPar.
      TClass *R__cl = ::HStart2GeomPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxComponents", &maxComponents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxCells", &maxCells);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*labPos", &labPos);
      HDetGeomPar::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2GeomPar(void *p) {
      return  p ? new(p) ::HStart2GeomPar : new ::HStart2GeomPar;
   }
   static void *newArray_HStart2GeomPar(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2GeomPar[nElements] : new ::HStart2GeomPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2GeomPar(void *p) {
      delete ((::HStart2GeomPar*)p);
   }
   static void deleteArray_HStart2GeomPar(void *p) {
      delete [] ((::HStart2GeomPar*)p);
   }
   static void destruct_HStart2GeomPar(void *p) {
      typedef ::HStart2GeomPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2GeomPar(TBuffer &buf, void *obj) {
      ((::HStart2GeomPar*)obj)->::HStart2GeomPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2GeomPar

//______________________________________________________________________________
void HStart2DigiPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2DigiPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> sigmaT;
      R__b >> sigmaE;
      R__b >> deltaTimeE;
      R__b >> minEloss;
      R__b >> timeNoHit;
      R__b.CheckByteCount(R__s, R__c, HStart2DigiPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2DigiPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << sigmaT;
      R__b << sigmaE;
      R__b << deltaTimeE;
      R__b << minEloss;
      R__b << timeNoHit;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2DigiPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2DigiPar.
      TClass *R__cl = ::HStart2DigiPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaT", &sigmaT);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sigmaE", &sigmaE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "deltaTimeE", &deltaTimeE);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "minEloss", &minEloss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeNoHit", &timeNoHit);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2DigiPar(void *p) {
      return  p ? new(p) ::HStart2DigiPar : new ::HStart2DigiPar;
   }
   static void *newArray_HStart2DigiPar(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2DigiPar[nElements] : new ::HStart2DigiPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2DigiPar(void *p) {
      delete ((::HStart2DigiPar*)p);
   }
   static void deleteArray_HStart2DigiPar(void *p) {
      delete [] ((::HStart2DigiPar*)p);
   }
   static void destruct_HStart2DigiPar(void *p) {
      typedef ::HStart2DigiPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2DigiPar(TBuffer &buf, void *obj) {
      ((::HStart2DigiPar*)obj)->::HStart2DigiPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2DigiPar

//______________________________________________________________________________
void HStart2CalRunPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2CalRunPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      {
         map<Int_t,HStart2CalRunPars*> &R__stl =  fMRunID;
         R__stl.clear();
         TClass *R__tcl2 = TBuffer::GetClass(typeid(HStart2CalRunPars));
         if (R__tcl2==0) {
            Error("fMRunID streamer","Missing the TClass object for HStart2CalRunPars!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            HStart2CalRunPars* R__t2;
            R__t2 = (HStart2CalRunPars*)R__b.ReadObjectAny(R__tcl2);
            typedef int Value_t;
            std::pair<Value_t const, HStart2CalRunPars* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         vector<Int_t> &R__stl =  fVRunID;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      R__b.CheckByteCount(R__s, R__c, HStart2CalRunPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2CalRunPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      {
         map<Int_t,HStart2CalRunPars*> &R__stl =  fMRunID;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<Int_t,HStart2CalRunPars*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << ((*R__k).first );
            R__b << ((*R__k).second);
            }
         }
      }
      {
         vector<Int_t> &R__stl =  fVRunID;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Int_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2CalRunPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2CalRunPar.
      TClass *R__cl = ::HStart2CalRunPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMRunID", (void*)&fMRunID);
      R__insp.InspectMember("map<Int_t,HStart2CalRunPars*>", (void*)&fMRunID, "fMRunID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVRunID", (void*)&fVRunID);
      R__insp.InspectMember("vector<Int_t>", (void*)&fVRunID, "fVRunID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMIter", (void*)&fMIter);
      R__insp.InspectMember("map<int,HStart2CalRunPars*,less<int>,allocator<pair<const int,HStart2CalRunPars*> > >::iterator", (void*)&fMIter, "fMIter.", true);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2CalRunPar(void *p) {
      return  p ? new(p) ::HStart2CalRunPar : new ::HStart2CalRunPar;
   }
   static void *newArray_HStart2CalRunPar(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2CalRunPar[nElements] : new ::HStart2CalRunPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2CalRunPar(void *p) {
      delete ((::HStart2CalRunPar*)p);
   }
   static void deleteArray_HStart2CalRunPar(void *p) {
      delete [] ((::HStart2CalRunPar*)p);
   }
   static void destruct_HStart2CalRunPar(void *p) {
      typedef ::HStart2CalRunPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2CalRunPar(TBuffer &buf, void *obj) {
      ((::HStart2CalRunPar*)obj)->::HStart2CalRunPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2CalRunPar

//______________________________________________________________________________
void HStart2CalRunPars::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2CalRunPars.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> npars;
      offsets.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HStart2CalRunPars::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2CalRunPars::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << npars;
      offsets.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2CalRunPars::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2CalRunPars.
      TClass *R__cl = ::HStart2CalRunPars::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "npars", &npars);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offsets", &offsets);
      R__insp.InspectMember(offsets, "offsets.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2CalRunPars(void *p) {
      return  p ? new(p) ::HStart2CalRunPars : new ::HStart2CalRunPars;
   }
   static void *newArray_HStart2CalRunPars(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2CalRunPars[nElements] : new ::HStart2CalRunPars[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2CalRunPars(void *p) {
      delete ((::HStart2CalRunPars*)p);
   }
   static void deleteArray_HStart2CalRunPars(void *p) {
      delete [] ((::HStart2CalRunPars*)p);
   }
   static void destruct_HStart2CalRunPars(void *p) {
      typedef ::HStart2CalRunPars current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2CalRunPars(TBuffer &buf, void *obj) {
      ((::HStart2CalRunPars*)obj)->::HStart2CalRunPars::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2CalRunPars

//______________________________________________________________________________
void HStart2Raw::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Raw.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fMultiplicity;
      R__b >> fModule;
      R__b >> fStrip;
      R__b >> fTime1;
      R__b >> fWidth1;
      R__b >> fTime2;
      R__b >> fWidth2;
      R__b >> fTime3;
      R__b >> fWidth3;
      R__b >> fTime4;
      R__b >> fWidth4;
      R__b.CheckByteCount(R__s, R__c, HStart2Raw::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Raw::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fMultiplicity;
      R__b << fModule;
      R__b << fStrip;
      R__b << fTime1;
      R__b << fWidth1;
      R__b << fTime2;
      R__b << fWidth2;
      R__b << fTime3;
      R__b << fWidth3;
      R__b << fTime4;
      R__b << fWidth4;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Raw::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Raw.
      TClass *R__cl = ::HStart2Raw::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMultiplicity", &fMultiplicity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStrip", &fStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime1", &fTime1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth1", &fWidth1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime2", &fTime2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth2", &fWidth2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime3", &fTime3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth3", &fWidth3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime4", &fTime4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fWidth4", &fWidth4);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Raw(void *p) {
      return  p ? new(p) ::HStart2Raw : new ::HStart2Raw;
   }
   static void *newArray_HStart2Raw(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Raw[nElements] : new ::HStart2Raw[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Raw(void *p) {
      delete ((::HStart2Raw*)p);
   }
   static void deleteArray_HStart2Raw(void *p) {
      delete [] ((::HStart2Raw*)p);
   }
   static void destruct_HStart2Raw(void *p) {
      typedef ::HStart2Raw current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Raw(TBuffer &buf, void *obj) {
      ((::HStart2Raw*)obj)->::HStart2Raw::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Raw

//______________________________________________________________________________
void HStart2Trb2Lookup::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb2Lookup.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParSet::Streamer(R__b);
      R__b >> array;
      R__b >> arrayOffset;
      R__b.CheckByteCount(R__s, R__c, HStart2Trb2Lookup::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Trb2Lookup::IsA(), kTRUE);
      HParSet::Streamer(R__b);
      R__b << array;
      R__b << arrayOffset;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Trb2Lookup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb2Lookup.
      TClass *R__cl = ::HStart2Trb2Lookup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arrayOffset", &arrayOffset);
      HParSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb2Lookup(void *p) {
      return  p ? new(p) ::HStart2Trb2Lookup : new ::HStart2Trb2Lookup;
   }
   static void *newArray_HStart2Trb2Lookup(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb2Lookup[nElements] : new ::HStart2Trb2Lookup[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb2Lookup(void *p) {
      delete ((::HStart2Trb2Lookup*)p);
   }
   static void deleteArray_HStart2Trb2Lookup(void *p) {
      delete [] ((::HStart2Trb2Lookup*)p);
   }
   static void destruct_HStart2Trb2Lookup(void *p) {
      typedef ::HStart2Trb2Lookup current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb2Lookup(TBuffer &buf, void *obj) {
      ((::HStart2Trb2Lookup*)obj)->::HStart2Trb2Lookup::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb2Lookup

//______________________________________________________________________________
void HStart2Trb2LookupBoard::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb2LookupBoard.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> array;
      R__b.CheckByteCount(R__s, R__c, HStart2Trb2LookupBoard::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Trb2LookupBoard::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Trb2LookupBoard::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb2LookupBoard.
      TClass *R__cl = ::HStart2Trb2LookupBoard::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb2LookupBoard(void *p) {
      return  p ? new(p) ::HStart2Trb2LookupBoard : new ::HStart2Trb2LookupBoard;
   }
   static void *newArray_HStart2Trb2LookupBoard(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb2LookupBoard[nElements] : new ::HStart2Trb2LookupBoard[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb2LookupBoard(void *p) {
      delete ((::HStart2Trb2LookupBoard*)p);
   }
   static void deleteArray_HStart2Trb2LookupBoard(void *p) {
      delete [] ((::HStart2Trb2LookupBoard*)p);
   }
   static void destruct_HStart2Trb2LookupBoard(void *p) {
      typedef ::HStart2Trb2LookupBoard current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb2LookupBoard(TBuffer &buf, void *obj) {
      ((::HStart2Trb2LookupBoard*)obj)->::HStart2Trb2LookupBoard::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb2LookupBoard

//______________________________________________________________________________
void HStart2Trb2LookupChan::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb2LookupChan.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> module;
      R__b >> cell;
      R__b.CheckByteCount(R__s, R__c, HStart2Trb2LookupChan::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Trb2LookupChan::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << module;
      R__b << cell;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Trb2LookupChan::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb2LookupChan.
      TClass *R__cl = ::HStart2Trb2LookupChan::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell", &cell);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb2LookupChan(void *p) {
      return  p ? new(p) ::HStart2Trb2LookupChan : new ::HStart2Trb2LookupChan;
   }
   static void *newArray_HStart2Trb2LookupChan(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb2LookupChan[nElements] : new ::HStart2Trb2LookupChan[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb2LookupChan(void *p) {
      delete ((::HStart2Trb2LookupChan*)p);
   }
   static void deleteArray_HStart2Trb2LookupChan(void *p) {
      delete [] ((::HStart2Trb2LookupChan*)p);
   }
   static void destruct_HStart2Trb2LookupChan(void *p) {
      typedef ::HStart2Trb2LookupChan current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb2LookupChan(TBuffer &buf, void *obj) {
      ((::HStart2Trb2LookupChan*)obj)->::HStart2Trb2LookupChan::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb2LookupChan

//______________________________________________________________________________
void HStart2Trb2Unpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb2Unpacker.

   HTrb2Unpacker::Streamer(R__b);
}

//______________________________________________________________________________
void HStart2Trb2Unpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb2Unpacker.
      TClass *R__cl = ::HStart2Trb2Unpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loc", &loc);
      R__insp.InspectMember(loc, "loc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lookup", &lookup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeRef", &timeRef);
      HTrb2Unpacker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb2Unpacker(void *p) {
      return  p ? new(p) ::HStart2Trb2Unpacker : new ::HStart2Trb2Unpacker;
   }
   static void *newArray_HStart2Trb2Unpacker(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb2Unpacker[nElements] : new ::HStart2Trb2Unpacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb2Unpacker(void *p) {
      delete ((::HStart2Trb2Unpacker*)p);
   }
   static void deleteArray_HStart2Trb2Unpacker(void *p) {
      delete [] ((::HStart2Trb2Unpacker*)p);
   }
   static void destruct_HStart2Trb2Unpacker(void *p) {
      typedef ::HStart2Trb2Unpacker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb2Unpacker(TBuffer &buf, void *obj) {
      ((::HStart2Trb2Unpacker*)obj)->::HStart2Trb2Unpacker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb2Unpacker

//______________________________________________________________________________
void HStartContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStartContFact.

   HContFact::Streamer(R__b);
}

//______________________________________________________________________________
void HStartContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStartContFact.
      TClass *R__cl = ::HStartContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      HContFact::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStartContFact(void *p) {
      return  p ? new(p) ::HStartContFact : new ::HStartContFact;
   }
   static void *newArray_HStartContFact(Long_t nElements, void *p) {
      return p ? new(p) ::HStartContFact[nElements] : new ::HStartContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStartContFact(void *p) {
      delete ((::HStartContFact*)p);
   }
   static void deleteArray_HStartContFact(void *p) {
      delete [] ((::HStartContFact*)p);
   }
   static void destruct_HStartContFact(void *p) {
      typedef ::HStartContFact current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStartContFact(TBuffer &buf, void *obj) {
      ((::HStartContFact*)obj)->::HStartContFact::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStartContFact

//______________________________________________________________________________
void HStartParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStartParAsciiFileIo.

   HDetParAsciiFileIo::Streamer(R__b);
}

//______________________________________________________________________________
void HStartParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStartParAsciiFileIo.
      TClass *R__cl = ::HStartParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParAsciiFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HStartParAsciiFileIo(void *p) {
      delete ((::HStartParAsciiFileIo*)p);
   }
   static void deleteArray_HStartParAsciiFileIo(void *p) {
      delete [] ((::HStartParAsciiFileIo*)p);
   }
   static void destruct_HStartParAsciiFileIo(void *p) {
      typedef ::HStartParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStartParAsciiFileIo(TBuffer &buf, void *obj) {
      ((::HStartParAsciiFileIo*)obj)->::HStartParAsciiFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStartParAsciiFileIo

//______________________________________________________________________________
void HStartParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStartParRootFileIo.

   HDetParRootFileIo::Streamer(R__b);
}

//______________________________________________________________________________
void HStartParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStartParRootFileIo.
      TClass *R__cl = ::HStartParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParRootFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HStartParRootFileIo(void *p) {
      delete ((::HStartParRootFileIo*)p);
   }
   static void deleteArray_HStartParRootFileIo(void *p) {
      delete [] ((::HStartParRootFileIo*)p);
   }
   static void destruct_HStartParRootFileIo(void *p) {
      typedef ::HStartParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStartParRootFileIo(TBuffer &buf, void *obj) {
      ((::HStartParRootFileIo*)obj)->::HStartParRootFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStartParRootFileIo

//______________________________________________________________________________
void HStartTaskSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStartTaskSet.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HTaskSet::Streamer(R__b);
      R__b >> fSkipEvent;
      R__b >> fUseStartHit;
      R__b.CheckByteCount(R__s, R__c, HStartTaskSet::IsA());
   } else {
      R__c = R__b.WriteVersion(HStartTaskSet::IsA(), kTRUE);
      HTaskSet::Streamer(R__b);
      R__b << fSkipEvent;
      R__b << fUseStartHit;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStartTaskSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStartTaskSet.
      TClass *R__cl = ::HStartTaskSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSkipEvent", &fSkipEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseStartHit", &fUseStartHit);
      HTaskSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStartTaskSet(void *p) {
      return  p ? new(p) ::HStartTaskSet : new ::HStartTaskSet;
   }
   static void *newArray_HStartTaskSet(Long_t nElements, void *p) {
      return p ? new(p) ::HStartTaskSet[nElements] : new ::HStartTaskSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStartTaskSet(void *p) {
      delete ((::HStartTaskSet*)p);
   }
   static void deleteArray_HStartTaskSet(void *p) {
      delete [] ((::HStartTaskSet*)p);
   }
   static void destruct_HStartTaskSet(void *p) {
      typedef ::HStartTaskSet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStartTaskSet(TBuffer &buf, void *obj) {
      ((::HStartTaskSet*)obj)->::HStartTaskSet::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStartTaskSet

//______________________________________________________________________________
void HTBoxChan::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTBoxChan.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fChannel;
      R__b >> fScaler;
      R__b.CheckByteCount(R__s, R__c, HTBoxChan::IsA());
   } else {
      R__c = R__b.WriteVersion(HTBoxChan::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fChannel;
      R__b << fScaler;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HTBoxChan::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTBoxChan.
      TClass *R__cl = ::HTBoxChan::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChannel", &fChannel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScaler", &fScaler);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HTBoxChan(void *p) {
      return  p ? new(p) ::HTBoxChan : new ::HTBoxChan;
   }
   static void *newArray_HTBoxChan(Long_t nElements, void *p) {
      return p ? new(p) ::HTBoxChan[nElements] : new ::HTBoxChan[nElements];
   }
   // Wrapper around operator delete
   static void delete_HTBoxChan(void *p) {
      delete ((::HTBoxChan*)p);
   }
   static void deleteArray_HTBoxChan(void *p) {
      delete [] ((::HTBoxChan*)p);
   }
   static void destruct_HTBoxChan(void *p) {
      typedef ::HTBoxChan current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTBoxChan(TBuffer &buf, void *obj) {
      ((::HTBoxChan*)obj)->::HTBoxChan::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTBoxChan

//______________________________________________________________________________
void HTBoxDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTBoxDetector.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HDetector::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HTBoxDetector::IsA());
   } else {
      R__c = R__b.WriteVersion(HTBoxDetector::IsA(), kTRUE);
      HDetector::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HTBoxDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTBoxDetector.
      TClass *R__cl = ::HTBoxDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HTBoxDetector(void *p) {
      return  p ? new(p) ::HTBoxDetector : new ::HTBoxDetector;
   }
   static void *newArray_HTBoxDetector(Long_t nElements, void *p) {
      return p ? new(p) ::HTBoxDetector[nElements] : new ::HTBoxDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_HTBoxDetector(void *p) {
      delete ((::HTBoxDetector*)p);
   }
   static void deleteArray_HTBoxDetector(void *p) {
      delete [] ((::HTBoxDetector*)p);
   }
   static void destruct_HTBoxDetector(void *p) {
      typedef ::HTBoxDetector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTBoxDetector(TBuffer &buf, void *obj) {
      ((::HTBoxDetector*)obj)->::HTBoxDetector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTBoxDetector

//______________________________________________________________________________
void HTBoxUnpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTBoxUnpacker.

   HldUnpack::Streamer(R__b);
}

//______________________________________________________________________________
void HTBoxUnpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTBoxUnpacker.
      TClass *R__cl = ::HTBoxUnpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSubEvtId", &fSubEvtId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLoc", &fLoc);
      R__insp.InspectMember(fLoc, "fLoc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCat", &fCat);
      HldUnpack::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HTBoxUnpacker(void *p) {
      return  p ? new(p) ::HTBoxUnpacker : new ::HTBoxUnpacker;
   }
   static void *newArray_HTBoxUnpacker(Long_t nElements, void *p) {
      return p ? new(p) ::HTBoxUnpacker[nElements] : new ::HTBoxUnpacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HTBoxUnpacker(void *p) {
      delete ((::HTBoxUnpacker*)p);
   }
   static void deleteArray_HTBoxUnpacker(void *p) {
      delete [] ((::HTBoxUnpacker*)p);
   }
   static void destruct_HTBoxUnpacker(void *p) {
      typedef ::HTBoxUnpacker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTBoxUnpacker(TBuffer &buf, void *obj) {
      ((::HTBoxUnpacker*)obj)->::HTBoxUnpacker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTBoxUnpacker

//______________________________________________________________________________
void HStart2Trb3Lookup::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb3Lookup.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParSet::Streamer(R__b);
      R__b >> array;
      R__b >> arrayOffset;
      R__b.CheckByteCount(R__s, R__c, HStart2Trb3Lookup::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Trb3Lookup::IsA(), kTRUE);
      HParSet::Streamer(R__b);
      R__b << array;
      R__b << arrayOffset;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Trb3Lookup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb3Lookup.
      TClass *R__cl = ::HStart2Trb3Lookup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arrayOffset", &arrayOffset);
      HParSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb3Lookup(void *p) {
      return  p ? new(p) ::HStart2Trb3Lookup : new ::HStart2Trb3Lookup;
   }
   static void *newArray_HStart2Trb3Lookup(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb3Lookup[nElements] : new ::HStart2Trb3Lookup[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb3Lookup(void *p) {
      delete ((::HStart2Trb3Lookup*)p);
   }
   static void deleteArray_HStart2Trb3Lookup(void *p) {
      delete [] ((::HStart2Trb3Lookup*)p);
   }
   static void destruct_HStart2Trb3Lookup(void *p) {
      typedef ::HStart2Trb3Lookup current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb3Lookup(TBuffer &buf, void *obj) {
      ((::HStart2Trb3Lookup*)obj)->::HStart2Trb3Lookup::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb3Lookup

//______________________________________________________________________________
void HStart2Trb3LookupTdc::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb3LookupTdc.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> array;
      R__b.CheckByteCount(R__s, R__c, HStart2Trb3LookupTdc::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Trb3LookupTdc::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << array;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Trb3LookupTdc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb3LookupTdc.
      TClass *R__cl = ::HStart2Trb3LookupTdc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*array", &array);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb3LookupTdc(void *p) {
      return  p ? new(p) ::HStart2Trb3LookupTdc : new ::HStart2Trb3LookupTdc;
   }
   static void *newArray_HStart2Trb3LookupTdc(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb3LookupTdc[nElements] : new ::HStart2Trb3LookupTdc[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb3LookupTdc(void *p) {
      delete ((::HStart2Trb3LookupTdc*)p);
   }
   static void deleteArray_HStart2Trb3LookupTdc(void *p) {
      delete [] ((::HStart2Trb3LookupTdc*)p);
   }
   static void destruct_HStart2Trb3LookupTdc(void *p) {
      typedef ::HStart2Trb3LookupTdc current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb3LookupTdc(TBuffer &buf, void *obj) {
      ((::HStart2Trb3LookupTdc*)obj)->::HStart2Trb3LookupTdc::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb3LookupTdc

//______________________________________________________________________________
void HStart2Trb3LookupChan::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb3LookupChan.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> module;
      R__b >> cell;
      R__b.CheckByteCount(R__s, R__c, HStart2Trb3LookupChan::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Trb3LookupChan::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << module;
      R__b << cell;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Trb3LookupChan::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb3LookupChan.
      TClass *R__cl = ::HStart2Trb3LookupChan::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell", &cell);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb3LookupChan(void *p) {
      return  p ? new(p) ::HStart2Trb3LookupChan : new ::HStart2Trb3LookupChan;
   }
   static void *newArray_HStart2Trb3LookupChan(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb3LookupChan[nElements] : new ::HStart2Trb3LookupChan[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb3LookupChan(void *p) {
      delete ((::HStart2Trb3LookupChan*)p);
   }
   static void deleteArray_HStart2Trb3LookupChan(void *p) {
      delete [] ((::HStart2Trb3LookupChan*)p);
   }
   static void destruct_HStart2Trb3LookupChan(void *p) {
      typedef ::HStart2Trb3LookupChan current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb3LookupChan(TBuffer &buf, void *obj) {
      ((::HStart2Trb3LookupChan*)obj)->::HStart2Trb3LookupChan::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb3LookupChan

//______________________________________________________________________________
void HStart2Trb3Calpar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb3Calpar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HTrb3Calpar::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HStart2Trb3Calpar::IsA());
   } else {
      R__c = R__b.WriteVersion(HStart2Trb3Calpar::IsA(), kTRUE);
      HTrb3Calpar::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HStart2Trb3Calpar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb3Calpar.
      TClass *R__cl = ::HStart2Trb3Calpar::IsA();
      if (R__cl || R__insp.IsA()) { }
      HTrb3Calpar::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb3Calpar(void *p) {
      return  p ? new(p) ::HStart2Trb3Calpar : new ::HStart2Trb3Calpar;
   }
   static void *newArray_HStart2Trb3Calpar(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb3Calpar[nElements] : new ::HStart2Trb3Calpar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb3Calpar(void *p) {
      delete ((::HStart2Trb3Calpar*)p);
   }
   static void deleteArray_HStart2Trb3Calpar(void *p) {
      delete [] ((::HStart2Trb3Calpar*)p);
   }
   static void destruct_HStart2Trb3Calpar(void *p) {
      typedef ::HStart2Trb3Calpar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb3Calpar(TBuffer &buf, void *obj) {
      ((::HStart2Trb3Calpar*)obj)->::HStart2Trb3Calpar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb3Calpar

//______________________________________________________________________________
void HStart2Trb3Unpacker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HStart2Trb3Unpacker.

   HTrb3Unpacker::Streamer(R__b);
}

//______________________________________________________________________________
void HStart2Trb3Unpacker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HStart2Trb3Unpacker.
      TClass *R__cl = ::HStart2Trb3Unpacker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loc", &loc);
      R__insp.InspectMember(loc, "loc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*lookup", &lookup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeRef", &timeRef);
      HTrb3Unpacker::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HStart2Trb3Unpacker(void *p) {
      return  p ? new(p) ::HStart2Trb3Unpacker : new ::HStart2Trb3Unpacker;
   }
   static void *newArray_HStart2Trb3Unpacker(Long_t nElements, void *p) {
      return p ? new(p) ::HStart2Trb3Unpacker[nElements] : new ::HStart2Trb3Unpacker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HStart2Trb3Unpacker(void *p) {
      delete ((::HStart2Trb3Unpacker*)p);
   }
   static void deleteArray_HStart2Trb3Unpacker(void *p) {
      delete [] ((::HStart2Trb3Unpacker*)p);
   }
   static void destruct_HStart2Trb3Unpacker(void *p) {
      typedef ::HStart2Trb3Unpacker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HStart2Trb3Unpacker(TBuffer &buf, void *obj) {
      ((::HStart2Trb3Unpacker*)obj)->::HStart2Trb3Unpacker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HStart2Trb3Unpacker

namespace ROOTDict {
   void maplEintcOHStart2CalRunParsmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOHStart2CalRunParsmUgR_Dictionary();
   static void *new_maplEintcOHStart2CalRunParsmUgR(void *p = 0);
   static void *newArray_maplEintcOHStart2CalRunParsmUgR(Long_t size, void *p);
   static void delete_maplEintcOHStart2CalRunParsmUgR(void *p);
   static void deleteArray_maplEintcOHStart2CalRunParsmUgR(void *p);
   static void destruct_maplEintcOHStart2CalRunParsmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,HStart2CalRunPars*>*)
   {
      map<int,HStart2CalRunPars*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,HStart2CalRunPars*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,HStart2CalRunPars*>", -2, "/cvmfs/hades.gsi.de/install/root-5.34.34/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,HStart2CalRunPars*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOHStart2CalRunParsmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,HStart2CalRunPars*>) );
      instance.SetNew(&new_maplEintcOHStart2CalRunParsmUgR);
      instance.SetNewArray(&newArray_maplEintcOHStart2CalRunParsmUgR);
      instance.SetDelete(&delete_maplEintcOHStart2CalRunParsmUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOHStart2CalRunParsmUgR);
      instance.SetDestructor(&destruct_maplEintcOHStart2CalRunParsmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,HStart2CalRunPars*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,HStart2CalRunPars*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOHStart2CalRunParsmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,HStart2CalRunPars*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOHStart2CalRunParsmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,HStart2CalRunPars*> : new map<int,HStart2CalRunPars*>;
   }
   static void *newArray_maplEintcOHStart2CalRunParsmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,HStart2CalRunPars*>[nElements] : new map<int,HStart2CalRunPars*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOHStart2CalRunParsmUgR(void *p) {
      delete ((map<int,HStart2CalRunPars*>*)p);
   }
   static void deleteArray_maplEintcOHStart2CalRunParsmUgR(void *p) {
      delete [] ((map<int,HStart2CalRunPars*>*)p);
   }
   static void destruct_maplEintcOHStart2CalRunParsmUgR(void *p) {
      typedef map<int,HStart2CalRunPars*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,HStart2CalRunPars*>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/cvmfs/hades.gsi.de/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* ../build/pc/StartDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableStartDict();

extern "C" void G__set_cpp_environmentStartDict() {
  G__cpp_reset_tagtableStartDict();
}
#include <new>
extern "C" int G__cpp_dllrevStartDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HLatchUnpacker */
static int G__StartDict_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HLatchUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HLatchUnpacker((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HLatchUnpacker((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HLatchUnpacker[n];
       } else {
         p = new((void*) gvp) HLatchUnpacker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HLatchUnpacker;
       } else {
         p = new((void*) gvp) HLatchUnpacker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HLatchUnpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HLatchUnpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HLatchUnpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HLatchUnpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HLatchUnpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HLatchUnpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HLatchUnpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HLatchUnpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_172_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HLatchUnpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_172_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HLatchUnpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HLatchUnpacker(*(HLatchUnpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HLatchUnpacker G__THLatchUnpacker;
static int G__StartDict_172_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HLatchUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HLatchUnpacker*) (soff+(sizeof(HLatchUnpacker)*i)))->~G__THLatchUnpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HLatchUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HLatchUnpacker*) (soff))->~G__THLatchUnpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HLatchUnpacker* dest = (HLatchUnpacker*) G__getstructoffset();
   *dest = *(HLatchUnpacker*) libp->para[0].ref;
   const HLatchUnpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Cal */
static int G__StartDict_173_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Cal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Cal[n];
     } else {
       p = new((void*) gvp) HStart2Cal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Cal;
     } else {
       p = new((void*) gvp) HStart2Cal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Cal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Cal*) G__getstructoffset())->getMaxMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Cal*) G__getstructoffset())->getMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Cal*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Cal*) G__getstructoffset())->getStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Cal*) G__getstructoffset())->getTime((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Cal*) G__getstructoffset())->getWidth((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Cal*) G__getstructoffset())->getAddress(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Cal*) G__getstructoffset())->getTimeAndWidth((const Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Cal*) G__getstructoffset())->setModule((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Cal*) G__getstructoffset())->setStrip((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Cal*) G__getstructoffset())->setAddress((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Cal*) G__getstructoffset())->setTimeAndWidth((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Cal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Cal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Cal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Cal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Cal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Cal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Cal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Cal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_173_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Cal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_173_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Cal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Cal(*(HStart2Cal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Cal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Cal G__THStart2Cal;
static int G__StartDict_173_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Cal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Cal*) (soff+(sizeof(HStart2Cal)*i)))->~G__THStart2Cal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Cal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Cal*) (soff))->~G__THStart2Cal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_173_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Cal* dest = (HStart2Cal*) G__getstructoffset();
   *dest = *(HStart2Cal*) libp->para[0].ref;
   const HStart2Cal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2CalRunPars */
static int G__StartDict_456_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalRunPars* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2CalRunPars((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2CalRunPars((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2CalRunPars[n];
       } else {
         p = new((void*) gvp) HStart2CalRunPars[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2CalRunPars;
       } else {
         p = new((void*) gvp) HStart2CalRunPars;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2CalRunPars*) G__getstructoffset())->getNVals());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPars*) G__getstructoffset())->setSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPars*) G__getstructoffset())->setVal((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2CalRunPars*) G__getstructoffset())->getVal((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPars*) G__getstructoffset())->copyVals((HStart2CalRunPars*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPars*) G__getstructoffset())->getVals((HStart2CalRunPars*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HStart2CalRunPars*) G__getstructoffset())->print((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HStart2CalRunPars*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 68, (long) ((HStart2CalRunPars*) G__getstructoffset())->data());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPars*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2CalRunPars::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalRunPars::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2CalRunPars::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2CalRunPars::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPars*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalRunPars::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalRunPars::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalRunPars::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_456_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalRunPars::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_456_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2CalRunPars* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2CalRunPars(*(HStart2CalRunPars*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2CalRunPars G__THStart2CalRunPars;
static int G__StartDict_456_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2CalRunPars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2CalRunPars*) (soff+(sizeof(HStart2CalRunPars)*i)))->~G__THStart2CalRunPars();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2CalRunPars*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2CalRunPars*) (soff))->~G__THStart2CalRunPars();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_456_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalRunPars* dest = (HStart2CalRunPars*) G__getstructoffset();
   *dest = *(HStart2CalRunPars*) libp->para[0].ref;
   const HStart2CalRunPars& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2CalRunPar */
static int G__StartDict_457_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalRunPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2CalRunPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2CalRunPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2CalRunPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2CalRunPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2CalRunPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2CalRunPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2CalRunPar[n];
       } else {
         p = new((void*) gvp) HStart2CalRunPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2CalRunPar;
       } else {
         p = new((void*) gvp) HStart2CalRunPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2CalRunPar*) G__getstructoffset())->findRunID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HStart2CalRunPar*) G__getstructoffset())->removeRun((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HStart2CalRunPar*) G__getstructoffset())->removeRun((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HStart2CalRunPar*) G__getstructoffset())->addRun((Int_t) G__int(libp->para[0]), (HStart2CalRunPars*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HStart2CalRunPar*) G__getstructoffset())->addRun((Int_t) G__int(libp->para[0]), (HStart2CalRunPars*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2CalRunPar*) G__getstructoffset())->getRun((Int_t) G__int(libp->para[0]), (HStart2CalRunPars*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPar*) G__getstructoffset())->finishRunList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2CalRunPar*) G__getstructoffset())->getRangeRunID(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2CalRunPar*) G__getstructoffset())->getNRunIDs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HStart2CalRunPar*) G__getstructoffset())->getRunIDList((TArrayI*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HStart2CalRunPar*) G__getstructoffset())->getRunIDList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPar*) G__getstructoffset())->printRunIDList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPar*) G__getstructoffset())->printRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HStart2CalRunPar*) G__getstructoffset())->reset((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HStart2CalRunPar*) G__getstructoffset())->reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2CalRunPar*) G__getstructoffset())->write(*(fstream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPar*) G__getstructoffset())->putAsciiHeader(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2CalRunPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalRunPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2CalRunPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2CalRunPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalRunPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalRunPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalRunPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalRunPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_457_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalRunPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_457_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2CalRunPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2CalRunPar(*(HStart2CalRunPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2CalRunPar G__THStart2CalRunPar;
static int G__StartDict_457_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2CalRunPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2CalRunPar*) (soff+(sizeof(HStart2CalRunPar)*i)))->~G__THStart2CalRunPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2CalRunPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2CalRunPar*) (soff))->~G__THStart2CalRunPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_457_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalRunPar* dest = (HStart2CalRunPar*) G__getstructoffset();
   *dest = *(HStart2CalRunPar*) libp->para[0].ref;
   const HStart2CalRunPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Calpar */
static int G__StartDict_470_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Calpar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Calpar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2Calpar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Calpar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2Calpar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Calpar[n];
       } else {
         p = new((void*) gvp) HStart2Calpar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Calpar;
       } else {
         p = new((void*) gvp) HStart2Calpar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HStart2CalparMod& obj = ((HStart2Calpar*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Calpar*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Calpar*) G__getstructoffset())->printParam();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Calpar*) G__getstructoffset())->readline((const Char_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Calpar*) G__getstructoffset())->putAsciiHeader(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Calpar*) G__getstructoffset())->writeline((Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Calpar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Calpar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Calpar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Calpar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Calpar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Calpar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Calpar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Calpar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_470_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Calpar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_470_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Calpar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Calpar(*(HStart2Calpar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Calpar G__THStart2Calpar;
static int G__StartDict_470_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Calpar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Calpar*) (soff+(sizeof(HStart2Calpar)*i)))->~G__THStart2Calpar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Calpar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Calpar*) (soff))->~G__THStart2Calpar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_470_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Calpar* dest = (HStart2Calpar*) G__getstructoffset();
   *dest = *(HStart2Calpar*) libp->para[0].ref;
   const HStart2Calpar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Calibrater */
static int G__StartDict_471_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Calibrater* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Calibrater[n];
     } else {
       p = new((void*) gvp) HStart2Calibrater[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Calibrater;
     } else {
       p = new((void*) gvp) HStart2Calibrater;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Calibrater* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HStart2Calibrater((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HStart2Calibrater((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Calibrater::setCorrection((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HStart2Calibrater::getCorrection());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Calibrater::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Calibrater::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Calibrater::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Calibrater::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Calibrater*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Calibrater::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Calibrater::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Calibrater::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_471_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Calibrater::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Calibrater G__THStart2Calibrater;
static int G__StartDict_471_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Calibrater*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Calibrater*) (soff+(sizeof(HStart2Calibrater)*i)))->~G__THStart2Calibrater();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Calibrater*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Calibrater*) (soff))->~G__THStart2Calibrater();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2CalparCell */
static int G__StartDict_472_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalparCell* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2CalparCell[n];
     } else {
       p = new((void*) gvp) HStart2CalparCell[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2CalparCell;
     } else {
       p = new((void*) gvp) HStart2CalparCell;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2CalparCell*) G__getstructoffset())->getTdcSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2CalparCell*) G__getstructoffset())->getTdcOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2CalparCell*) G__getstructoffset())->getAdcSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2CalparCell*) G__getstructoffset())->getAdcOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->getData((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->setTdcSlope((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->setTdcOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->setAdcSlope((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->setAdcOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->fill((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->fill((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->fill(*(HStart2CalparCell*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2CalparCell::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalparCell::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2CalparCell::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2CalparCell::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparCell*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalparCell::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalparCell::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalparCell::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_472_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalparCell::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_472_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2CalparCell* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2CalparCell(*(HStart2CalparCell*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2CalparCell G__THStart2CalparCell;
static int G__StartDict_472_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2CalparCell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2CalparCell*) (soff+(sizeof(HStart2CalparCell)*i)))->~G__THStart2CalparCell();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2CalparCell*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2CalparCell*) (soff))->~G__THStart2CalparCell();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_472_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalparCell* dest = (HStart2CalparCell*) G__getstructoffset();
   *dest = *(HStart2CalparCell*) libp->para[0].ref;
   const HStart2CalparCell& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2CalparMod */
static int G__StartDict_473_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalparMod* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2CalparMod((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2CalparMod((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2CalparMod[n];
       } else {
         p = new((void*) gvp) HStart2CalparMod[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2CalparMod;
       } else {
         p = new((void*) gvp) HStart2CalparMod;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HStart2CalparCell& obj = ((HStart2CalparMod*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2CalparMod*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2CalparMod::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalparMod::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2CalparMod::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2CalparMod::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2CalparMod*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalparMod::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalparMod::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2CalparMod::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_473_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2CalparMod::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_473_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2CalparMod* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2CalparMod(*(HStart2CalparMod*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2CalparMod G__THStart2CalparMod;
static int G__StartDict_473_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2CalparMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2CalparMod*) (soff+(sizeof(HStart2CalparMod)*i)))->~G__THStart2CalparMod();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2CalparMod*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2CalparMod*) (soff))->~G__THStart2CalparMod();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_473_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2CalparMod* dest = (HStart2CalparMod*) G__getstructoffset();
   *dest = *(HStart2CalparMod*) libp->para[0].ref;
   const HStart2CalparMod& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Detector */
static int G__StartDict_475_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Detector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Detector[n];
     } else {
       p = new((void*) gvp) HStart2Detector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Detector;
     } else {
       p = new((void*) gvp) HStart2Detector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HStart2Detector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HStart2Detector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HStart2Detector*) G__getstructoffset())->buildLinearCategory((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Detector*) G__getstructoffset())->getMaxModInSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Detector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Detector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Detector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Detector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Detector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Detector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Detector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Detector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_475_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Detector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_475_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Detector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Detector(*(HStart2Detector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Detector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Detector G__THStart2Detector;
static int G__StartDict_475_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Detector*) (soff+(sizeof(HStart2Detector)*i)))->~G__THStart2Detector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Detector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Detector*) (soff))->~G__THStart2Detector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_475_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Detector* dest = (HStart2Detector*) G__getstructoffset();
   *dest = *(HStart2Detector*) libp->para[0].ref;
   const HStart2Detector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Hit */
static int G__StartDict_476_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Hit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Hit[n];
     } else {
       p = new((void*) gvp) HStart2Hit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Hit;
     } else {
       p = new((void*) gvp) HStart2Hit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setFlag((const Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setCorrFlag((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setMultiplicity((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setAddress((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setTimeAndWidth((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setResolution((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setSimWidth((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setTrack((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setIteration((const UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HStart2Hit*) G__getstructoffset())->getFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Hit*) G__getstructoffset())->getCorrFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Hit*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Hit*) G__getstructoffset())->getStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Hit*) G__getstructoffset())->getMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Hit*) G__getstructoffset())->getTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Hit*) G__getstructoffset())->getWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->getAddress(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->getTimeAndWidth(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Hit*) G__getstructoffset())->getResolution());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Hit*) G__getstructoffset())->getSimWidth());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Hit*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((const HStart2Hit*) G__getstructoffset())->getIteration());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->setSecondTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2Hit*) G__getstructoffset())->getSecondTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HStart2Hit*) G__getstructoffset())->resetClusterStrip((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HStart2Hit*) G__getstructoffset())->resetClusterStrip();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Hit*) G__getstructoffset())->setClusterStrip((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Hit*) G__getstructoffset())->setClusterStrip((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Hit*) G__getstructoffset())->getClusterStrip((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Hit*) G__getstructoffset())->getClusterStrip((UInt_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Hit*) G__getstructoffset())->getFirstClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Hit*) G__getstructoffset())->getSecondClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Hit*) G__getstructoffset())->getMaxClusterSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Hit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Hit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Hit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Hit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Hit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Hit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Hit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Hit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_476_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Hit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_476_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Hit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Hit(*(HStart2Hit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Hit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Hit G__THStart2Hit;
static int G__StartDict_476_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Hit*) (soff+(sizeof(HStart2Hit)*i)))->~G__THStart2Hit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Hit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Hit*) (soff))->~G__THStart2Hit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_476_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Hit* dest = (HStart2Hit*) G__getstructoffset();
   *dest = *(HStart2Hit*) libp->para[0].ref;
   const HStart2Hit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2HitFPar */
static int G__StartDict_477_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2HitFPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitFPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2HitFPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitFPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2HitFPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitFPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2HitFPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2HitFPar[n];
       } else {
         p = new((void*) gvp) HStart2HitFPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2HitFPar;
       } else {
         p = new((void*) gvp) HStart2HitFPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HStart2HitFPar*) G__getstructoffset())->getModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HStart2HitFPar*) G__getstructoffset())->getStrips());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2HitFPar*) G__getstructoffset())->getMeanTime((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HStart2HitFPar*) G__getstructoffset())->getWidth((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2HitFPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitFPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2HitFPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2HitFPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2HitFPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitFPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2HitFPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitFPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_477_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2HitFPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2HitFPar G__THStart2HitFPar;
static int G__StartDict_477_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2HitFPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2HitFPar*) (soff+(sizeof(HStart2HitFPar)*i)))->~G__THStart2HitFPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2HitFPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2HitFPar*) (soff))->~G__THStart2HitFPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2HitF */
static int G__StartDict_478_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2HitF* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitF[n];
     } else {
       p = new((void*) gvp) HStart2HitF[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitF;
     } else {
       p = new((void*) gvp) HStart2HitF;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2HitF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2HitF* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitF(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2HitF(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitF((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2HitF((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2HitF));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2HitF::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitF::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2HitF::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2HitF::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2HitF*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitF::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2HitF::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitF::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_478_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2HitF::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2HitF G__THStart2HitF;
static int G__StartDict_478_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2HitF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2HitF*) (soff+(sizeof(HStart2HitF)*i)))->~G__THStart2HitF();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2HitF*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2HitF*) (soff))->~G__THStart2HitF();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2GeomPar */
static int G__StartDict_480_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2GeomPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2GeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2GeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2GeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2GeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2GeomPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2GeomPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2GeomPar[n];
       } else {
         p = new((void*) gvp) HStart2GeomPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2GeomPar;
       } else {
         p = new((void*) gvp) HStart2GeomPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2GeomPar*) G__getstructoffset())->getMaxComponents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2GeomPar*) G__getstructoffset())->getMaxCells());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2GeomPar*) G__getstructoffset())->getCellIndex((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HStart2GeomPar*) G__getstructoffset())->getLabPos((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2GeomPar*) G__getstructoffset())->calcLabPositions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2GeomPar*) G__getstructoffset())->printLabPositions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2GeomPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2GeomPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2GeomPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2GeomPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2GeomPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2GeomPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2GeomPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2GeomPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_480_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2GeomPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_480_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2GeomPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2GeomPar(*(HStart2GeomPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2GeomPar G__THStart2GeomPar;
static int G__StartDict_480_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2GeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2GeomPar*) (soff+(sizeof(HStart2GeomPar)*i)))->~G__THStart2GeomPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2GeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2GeomPar*) (soff))->~G__THStart2GeomPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_480_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2GeomPar* dest = (HStart2GeomPar*) G__getstructoffset();
   *dest = *(HStart2GeomPar*) libp->para[0].ref;
   const HStart2GeomPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2DigiPar */
static int G__StartDict_481_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2DigiPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2DigiPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2DigiPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2DigiPar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2DigiPar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2DigiPar((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2DigiPar((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2DigiPar[n];
       } else {
         p = new((void*) gvp) HStart2DigiPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2DigiPar;
       } else {
         p = new((void*) gvp) HStart2DigiPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2DigiPar*) G__getstructoffset())->getSigmaT());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2DigiPar*) G__getstructoffset())->getSigmaE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2DigiPar*) G__getstructoffset())->getDeltaTimeE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2DigiPar*) G__getstructoffset())->getMinEloss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2DigiPar*) G__getstructoffset())->getTimeNoHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2DigiPar*) G__getstructoffset())->fill((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2DigiPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2DigiPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2DigiPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2DigiPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2DigiPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2DigiPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2DigiPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2DigiPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_481_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2DigiPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_481_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2DigiPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2DigiPar(*(HStart2DigiPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2DigiPar G__THStart2DigiPar;
static int G__StartDict_481_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2DigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2DigiPar*) (soff+(sizeof(HStart2DigiPar)*i)))->~G__THStart2DigiPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2DigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2DigiPar*) (soff))->~G__THStart2DigiPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_481_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2DigiPar* dest = (HStart2DigiPar*) G__getstructoffset();
   *dest = *(HStart2DigiPar*) libp->para[0].ref;
   const HStart2DigiPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2HitFSim */
static int G__StartDict_483_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2HitFSim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitFSim[n];
     } else {
       p = new((void*) gvp) HStart2HitFSim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitFSim;
     } else {
       p = new((void*) gvp) HStart2HitFSim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2HitFSim* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitFSim(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2HitFSim(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2HitFSim((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2HitFSim((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2HitFSim::getHitFinder());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2HitFSim::setDoGeantHit((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2HitFSim*) G__getstructoffset())->setResolution((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2HitFSim::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitFSim::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2HitFSim::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2HitFSim::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2HitFSim*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitFSim::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2HitFSim::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2HitFSim::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_483_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2HitFSim::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2HitFSim G__THStart2HitFSim;
static int G__StartDict_483_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2HitFSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2HitFSim*) (soff+(sizeof(HStart2HitFSim)*i)))->~G__THStart2HitFSim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2HitFSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2HitFSim*) (soff))->~G__THStart2HitFSim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Raw */
static int G__StartDict_502_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Raw* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Raw[n];
     } else {
       p = new((void*) gvp) HStart2Raw[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Raw;
     } else {
       p = new((void*) gvp) HStart2Raw;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Raw*) G__getstructoffset())->getMaxMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Raw*) G__getstructoffset())->getMultiplicity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Raw*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HStart2Raw*) G__getstructoffset())->getStrip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Raw*) G__getstructoffset())->getTime((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HStart2Raw*) G__getstructoffset())->getWidth((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->getTimeAndWidth((const Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->getAddress(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->setModule((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->setStrip((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->setAddress((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Raw*) G__getstructoffset())->setTimeAndWidth((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Raw::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Raw::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Raw::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Raw::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Raw::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Raw::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Raw::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Raw::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->setModule((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_502_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Raw*) G__getstructoffset())->setStrip((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_502_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Raw* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Raw(*(HStart2Raw*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Raw));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Raw G__THStart2Raw;
static int G__StartDict_502_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Raw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Raw*) (soff+(sizeof(HStart2Raw)*i)))->~G__THStart2Raw();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Raw*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Raw*) (soff))->~G__THStart2Raw();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_502_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Raw* dest = (HStart2Raw*) G__getstructoffset();
   *dest = *(HStart2Raw*) libp->para[0].ref;
   const HStart2Raw& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb2LookupChan */
static int G__StartDict_505_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2LookupChan* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2LookupChan[n];
     } else {
       p = new((void*) gvp) HStart2Trb2LookupChan[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2LookupChan;
     } else {
       p = new((void*) gvp) HStart2Trb2LookupChan;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb2LookupChan*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb2LookupChan*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupChan*) G__getstructoffset())->getAddress(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupChan*) G__getstructoffset())->fill((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupChan*) G__getstructoffset())->fill(*(HStart2Trb2LookupChan*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupChan*) G__getstructoffset())->setModule((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupChan*) G__getstructoffset())->setCell((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupChan*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb2LookupChan::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2LookupChan::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb2LookupChan::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb2LookupChan::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupChan*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2LookupChan::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2LookupChan::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2LookupChan::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_505_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2LookupChan::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_505_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb2LookupChan* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb2LookupChan(*(HStart2Trb2LookupChan*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb2LookupChan G__THStart2Trb2LookupChan;
static int G__StartDict_505_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb2LookupChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb2LookupChan*) (soff+(sizeof(HStart2Trb2LookupChan)*i)))->~G__THStart2Trb2LookupChan();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb2LookupChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb2LookupChan*) (soff))->~G__THStart2Trb2LookupChan();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_505_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2LookupChan* dest = (HStart2Trb2LookupChan*) G__getstructoffset();
   *dest = *(HStart2Trb2LookupChan*) libp->para[0].ref;
   const HStart2Trb2LookupChan& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb2LookupBoard */
static int G__StartDict_506_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2LookupBoard* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2LookupBoard[n];
     } else {
       p = new((void*) gvp) HStart2Trb2LookupBoard[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2LookupBoard;
     } else {
       p = new((void*) gvp) HStart2Trb2LookupBoard;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HStart2Trb2LookupBoard*) G__getstructoffset())->getChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HStart2Trb2LookupChan& obj = ((HStart2Trb2LookupBoard*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb2LookupBoard*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupBoard*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb2LookupBoard::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2LookupBoard::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb2LookupBoard::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb2LookupBoard::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2LookupBoard*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2LookupBoard::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2LookupBoard::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2LookupBoard::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_506_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2LookupBoard::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_506_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb2LookupBoard* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb2LookupBoard(*(HStart2Trb2LookupBoard*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb2LookupBoard G__THStart2Trb2LookupBoard;
static int G__StartDict_506_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb2LookupBoard*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb2LookupBoard*) (soff+(sizeof(HStart2Trb2LookupBoard)*i)))->~G__THStart2Trb2LookupBoard();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb2LookupBoard*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb2LookupBoard*) (soff))->~G__THStart2Trb2LookupBoard();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_506_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2LookupBoard* dest = (HStart2Trb2LookupBoard*) G__getstructoffset();
   *dest = *(HStart2Trb2LookupBoard*) libp->para[0].ref;
   const HStart2Trb2LookupBoard& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb2Lookup */
static int G__StartDict_507_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2Lookup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HStart2Trb2Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HStart2Trb2Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2Trb2Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2Lookup((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2Trb2Lookup((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2Lookup((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2Trb2Lookup((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb2Lookup[n];
       } else {
         p = new((void*) gvp) HStart2Trb2Lookup[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb2Lookup;
       } else {
         p = new((void*) gvp) HStart2Trb2Lookup;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HStart2Trb2Lookup*) G__getstructoffset())->getBoard((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HStart2Trb2Lookup*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb2Lookup*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb2Lookup*) G__getstructoffset())->getArrayOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2Lookup*) G__getstructoffset())->printParam();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Trb2Lookup*) G__getstructoffset())->fill((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Trb2Lookup*) G__getstructoffset())->readline((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2Lookup*) G__getstructoffset())->putAsciiHeader(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2Lookup*) G__getstructoffset())->write(*(fstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb2Lookup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2Lookup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb2Lookup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb2Lookup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2Lookup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2Lookup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2Lookup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2Lookup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_507_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2Lookup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_507_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb2Lookup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb2Lookup(*(HStart2Trb2Lookup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb2Lookup G__THStart2Trb2Lookup;
static int G__StartDict_507_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb2Lookup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb2Lookup*) (soff+(sizeof(HStart2Trb2Lookup)*i)))->~G__THStart2Trb2Lookup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb2Lookup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb2Lookup*) (soff))->~G__THStart2Trb2Lookup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_507_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2Lookup* dest = (HStart2Trb2Lookup*) G__getstructoffset();
   *dest = *(HStart2Trb2Lookup*) libp->para[0].ref;
   const HStart2Trb2Lookup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb2Unpacker */
static int G__StartDict_511_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2Unpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb2Unpacker((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2Trb2Unpacker((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb2Unpacker[n];
       } else {
         p = new((void*) gvp) HStart2Trb2Unpacker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb2Unpacker;
       } else {
         p = new((void*) gvp) HStart2Trb2Unpacker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2Unpacker*) G__getstructoffset())->disableTimeRef();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb2Unpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2Unpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb2Unpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb2Unpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb2Unpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2Unpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2Unpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb2Unpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_511_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb2Unpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_511_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb2Unpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb2Unpacker(*(HStart2Trb2Unpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb2Unpacker G__THStart2Trb2Unpacker;
static int G__StartDict_511_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb2Unpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb2Unpacker*) (soff+(sizeof(HStart2Trb2Unpacker)*i)))->~G__THStart2Trb2Unpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb2Unpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb2Unpacker*) (soff))->~G__THStart2Trb2Unpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_511_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb2Unpacker* dest = (HStart2Trb2Unpacker*) G__getstructoffset();
   *dest = *(HStart2Trb2Unpacker*) libp->para[0].ref;
   const HStart2Trb2Unpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb3LookupChan */
static int G__StartDict_512_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3LookupChan* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3LookupChan[n];
     } else {
       p = new((void*) gvp) HStart2Trb3LookupChan[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3LookupChan;
     } else {
       p = new((void*) gvp) HStart2Trb3LookupChan;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb3LookupChan*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb3LookupChan*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupChan*) G__getstructoffset())->getAddress(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupChan*) G__getstructoffset())->fill((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupChan*) G__getstructoffset())->fill(*(HStart2Trb3LookupChan*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupChan*) G__getstructoffset())->setModule((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupChan*) G__getstructoffset())->setCell((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupChan*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb3LookupChan::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3LookupChan::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb3LookupChan::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb3LookupChan::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupChan*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3LookupChan::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3LookupChan::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3LookupChan::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_512_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3LookupChan::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_512_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb3LookupChan* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb3LookupChan(*(HStart2Trb3LookupChan*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb3LookupChan G__THStart2Trb3LookupChan;
static int G__StartDict_512_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb3LookupChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb3LookupChan*) (soff+(sizeof(HStart2Trb3LookupChan)*i)))->~G__THStart2Trb3LookupChan();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb3LookupChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb3LookupChan*) (soff))->~G__THStart2Trb3LookupChan();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_512_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3LookupChan* dest = (HStart2Trb3LookupChan*) G__getstructoffset();
   *dest = *(HStart2Trb3LookupChan*) libp->para[0].ref;
   const HStart2Trb3LookupChan& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb3LookupTdc */
static int G__StartDict_513_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3LookupTdc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3LookupTdc[n];
     } else {
       p = new((void*) gvp) HStart2Trb3LookupTdc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3LookupTdc;
     } else {
       p = new((void*) gvp) HStart2Trb3LookupTdc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb3LookupTdc*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HStart2Trb3LookupTdc*) G__getstructoffset())->getChannel((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HStart2Trb3LookupChan& obj = ((HStart2Trb3LookupTdc*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupTdc*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb3LookupTdc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3LookupTdc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb3LookupTdc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb3LookupTdc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3LookupTdc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3LookupTdc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3LookupTdc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3LookupTdc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_513_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3LookupTdc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_513_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb3LookupTdc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb3LookupTdc(*(HStart2Trb3LookupTdc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb3LookupTdc G__THStart2Trb3LookupTdc;
static int G__StartDict_513_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb3LookupTdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb3LookupTdc*) (soff+(sizeof(HStart2Trb3LookupTdc)*i)))->~G__THStart2Trb3LookupTdc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb3LookupTdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb3LookupTdc*) (soff))->~G__THStart2Trb3LookupTdc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_513_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3LookupTdc* dest = (HStart2Trb3LookupTdc*) G__getstructoffset();
   *dest = *(HStart2Trb3LookupTdc*) libp->para[0].ref;
   const HStart2Trb3LookupTdc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb3Lookup */
static int G__StartDict_514_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3Lookup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HStart2Trb3Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HStart2Trb3Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2Trb3Lookup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Lookup((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2Trb3Lookup((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Lookup((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2Trb3Lookup((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb3Lookup[n];
       } else {
         p = new((void*) gvp) HStart2Trb3Lookup[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb3Lookup;
       } else {
         p = new((void*) gvp) HStart2Trb3Lookup;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HStart2Trb3Lookup*) G__getstructoffset())->getTdc((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HStart2Trb3Lookup*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb3Lookup*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HStart2Trb3Lookup*) G__getstructoffset())->getArrayOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3Lookup*) G__getstructoffset())->printParam();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Trb3Lookup*) G__getstructoffset())->fill((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStart2Trb3Lookup*) G__getstructoffset())->readline((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3Lookup*) G__getstructoffset())->putAsciiHeader(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3Lookup*) G__getstructoffset())->write(*(fstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb3Lookup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Lookup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb3Lookup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb3Lookup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3Lookup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Lookup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3Lookup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Lookup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_514_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3Lookup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_514_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb3Lookup* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb3Lookup(*(HStart2Trb3Lookup*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb3Lookup G__THStart2Trb3Lookup;
static int G__StartDict_514_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb3Lookup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb3Lookup*) (soff+(sizeof(HStart2Trb3Lookup)*i)))->~G__THStart2Trb3Lookup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb3Lookup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb3Lookup*) (soff))->~G__THStart2Trb3Lookup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_514_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3Lookup* dest = (HStart2Trb3Lookup*) G__getstructoffset();
   *dest = *(HStart2Trb3Lookup*) libp->para[0].ref;
   const HStart2Trb3Lookup& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb3Unpacker */
static int G__StartDict_528_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3Unpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Unpacker((UInt_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2Trb3Unpacker((UInt_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb3Unpacker[n];
       } else {
         p = new((void*) gvp) HStart2Trb3Unpacker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb3Unpacker;
       } else {
         p = new((void*) gvp) HStart2Trb3Unpacker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3Unpacker*) G__getstructoffset())->disableTimeRef();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb3Unpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Unpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb3Unpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb3Unpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3Unpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Unpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3Unpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Unpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_528_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3Unpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_528_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb3Unpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb3Unpacker(*(HStart2Trb3Unpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb3Unpacker G__THStart2Trb3Unpacker;
static int G__StartDict_528_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb3Unpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb3Unpacker*) (soff+(sizeof(HStart2Trb3Unpacker)*i)))->~G__THStart2Trb3Unpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb3Unpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb3Unpacker*) (soff))->~G__THStart2Trb3Unpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_528_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3Unpacker* dest = (HStart2Trb3Unpacker*) G__getstructoffset();
   *dest = *(HStart2Trb3Unpacker*) libp->para[0].ref;
   const HStart2Trb3Unpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStart2Trb3Calpar */
static int G__StartDict_529_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3Calpar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HStart2Trb3Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HStart2Trb3Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HStart2Trb3Calpar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Calpar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HStart2Trb3Calpar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStart2Trb3Calpar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HStart2Trb3Calpar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb3Calpar[n];
       } else {
         p = new((void*) gvp) HStart2Trb3Calpar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HStart2Trb3Calpar;
       } else {
         p = new((void*) gvp) HStart2Trb3Calpar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStart2Trb3Calpar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Calpar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStart2Trb3Calpar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStart2Trb3Calpar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStart2Trb3Calpar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Calpar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3Calpar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStart2Trb3Calpar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_529_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStart2Trb3Calpar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_529_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStart2Trb3Calpar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStart2Trb3Calpar(*(HStart2Trb3Calpar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStart2Trb3Calpar G__THStart2Trb3Calpar;
static int G__StartDict_529_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStart2Trb3Calpar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStart2Trb3Calpar*) (soff+(sizeof(HStart2Trb3Calpar)*i)))->~G__THStart2Trb3Calpar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStart2Trb3Calpar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStart2Trb3Calpar*) (soff))->~G__THStart2Trb3Calpar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_529_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStart2Trb3Calpar* dest = (HStart2Trb3Calpar*) G__getstructoffset();
   *dest = *(HStart2Trb3Calpar*) libp->para[0].ref;
   const HStart2Trb3Calpar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStartContFact */
static int G__StartDict_532_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStartContFact[n];
     } else {
       p = new((void*) gvp) HStartContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStartContFact;
     } else {
       p = new((void*) gvp) HStartContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStartContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStartContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStartContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStartContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_532_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_532_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStartContFact* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStartContFact(*(HStartContFact*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStartContFact G__THStartContFact;
static int G__StartDict_532_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStartContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStartContFact*) (soff+(sizeof(HStartContFact)*i)))->~G__THStartContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStartContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStartContFact*) (soff))->~G__THStartContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_532_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartContFact* dest = (HStartContFact*) G__getstructoffset();
   *dest = *(HStartContFact*) libp->para[0].ref;
   const HStartContFact& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStartParAsciiFileIo */
static int G__StartDict_534_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HStartParAsciiFileIo((fstream*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HStartParAsciiFileIo((fstream*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStartParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStartParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStartParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStartParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_534_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_534_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStartParAsciiFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStartParAsciiFileIo(*(HStartParAsciiFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStartParAsciiFileIo G__THStartParAsciiFileIo;
static int G__StartDict_534_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStartParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStartParAsciiFileIo*) (soff+(sizeof(HStartParAsciiFileIo)*i)))->~G__THStartParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStartParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStartParAsciiFileIo*) (soff))->~G__THStartParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_534_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartParAsciiFileIo* dest = (HStartParAsciiFileIo*) G__getstructoffset();
   *dest = *(HStartParAsciiFileIo*) libp->para[0].ref;
   const HStartParAsciiFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStartParRootFileIo */
static int G__StartDict_570_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HStartParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HStartParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HStartParRootFileIo*) G__getstructoffset())->read((HStart2Calpar*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStartParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStartParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStartParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStartParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_570_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_570_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HStartParRootFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HStartParRootFileIo(*(HStartParRootFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStartParRootFileIo G__THStartParRootFileIo;
static int G__StartDict_570_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStartParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStartParRootFileIo*) (soff+(sizeof(HStartParRootFileIo)*i)))->~G__THStartParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStartParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStartParRootFileIo*) (soff))->~G__THStartParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_570_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartParRootFileIo* dest = (HStartParRootFileIo*) G__getstructoffset();
   *dest = *(HStartParRootFileIo*) libp->para[0].ref;
   const HStartParRootFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HStartTaskSet */
static int G__StartDict_575_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartTaskSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStartTaskSet[n];
     } else {
       p = new((void*) gvp) HStartTaskSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HStartTaskSet;
     } else {
       p = new((void*) gvp) HStartTaskSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HStartTaskSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HStartTaskSet((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HStartTaskSet((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HStartTaskSet*) G__getstructoffset())->make((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HStartTaskSet*) G__getstructoffset())->make((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((HStartTaskSet*) G__getstructoffset())->make());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HStartTaskSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartTaskSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HStartTaskSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HStartTaskSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HStartTaskSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartTaskSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartTaskSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HStartTaskSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_575_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HStartTaskSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HStartTaskSet G__THStartTaskSet;
static int G__StartDict_575_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HStartTaskSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HStartTaskSet*) (soff+(sizeof(HStartTaskSet)*i)))->~G__THStartTaskSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HStartTaskSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HStartTaskSet*) (soff))->~G__THStartTaskSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTBoxChan */
static int G__StartDict_576_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTBoxChan* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTBoxChan[n];
     } else {
       p = new((void*) gvp) HTBoxChan[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTBoxChan;
     } else {
       p = new((void*) gvp) HTBoxChan;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HTBoxChan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTBoxChan*) G__getstructoffset())->setScalerData((const Int_t) G__int(libp->para[0]), (const UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTBoxChan*) G__getstructoffset())->getScalerData(*(Int_t*) G__Intref(&libp->para[0]), *(UInt_t*) G__UIntref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HTBoxChan*) G__getstructoffset())->getChannel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTBoxChan::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxChan::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTBoxChan::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTBoxChan::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTBoxChan*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxChan::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTBoxChan::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxChan::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_576_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTBoxChan::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_576_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HTBoxChan* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HTBoxChan(*(HTBoxChan*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HTBoxChan));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTBoxChan G__THTBoxChan;
static int G__StartDict_576_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTBoxChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTBoxChan*) (soff+(sizeof(HTBoxChan)*i)))->~G__THTBoxChan();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTBoxChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTBoxChan*) (soff))->~G__THTBoxChan();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_576_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTBoxChan* dest = (HTBoxChan*) G__getstructoffset();
   *dest = *(HTBoxChan*) libp->para[0].ref;
   const HTBoxChan& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTBoxDetector */
static int G__StartDict_577_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTBoxDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTBoxDetector[n];
     } else {
       p = new((void*) gvp) HTBoxDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTBoxDetector;
     } else {
       p = new((void*) gvp) HTBoxDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTBoxDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HTBoxDetector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HTBoxDetector((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTBoxDetector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTBoxDetector*) G__getstructoffset())->buildLinearCategory((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HTBoxDetector*) G__getstructoffset())->getMaxModInSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTBoxDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTBoxDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTBoxDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTBoxDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTBoxDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_577_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTBoxDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_577_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HTBoxDetector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HTBoxDetector(*(HTBoxDetector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTBoxDetector G__THTBoxDetector;
static int G__StartDict_577_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTBoxDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTBoxDetector*) (soff+(sizeof(HTBoxDetector)*i)))->~G__THTBoxDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTBoxDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTBoxDetector*) (soff))->~G__THTBoxDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_577_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTBoxDetector* dest = (HTBoxDetector*) G__getstructoffset();
   *dest = *(HTBoxDetector*) libp->para[0].ref;
   const HTBoxDetector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTBoxUnpacker */
static int G__StartDict_578_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTBoxUnpacker* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTBoxUnpacker((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HTBoxUnpacker((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HTBoxUnpacker[n];
       } else {
         p = new((void*) gvp) HTBoxUnpacker[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HTBoxUnpacker;
       } else {
         p = new((void*) gvp) HTBoxUnpacker;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTBoxUnpacker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxUnpacker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTBoxUnpacker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTBoxUnpacker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTBoxUnpacker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxUnpacker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTBoxUnpacker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTBoxUnpacker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__StartDict_578_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTBoxUnpacker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__StartDict_578_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HTBoxUnpacker* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HTBoxUnpacker(*(HTBoxUnpacker*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTBoxUnpacker G__THTBoxUnpacker;
static int G__StartDict_578_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTBoxUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTBoxUnpacker*) (soff+(sizeof(HTBoxUnpacker)*i)))->~G__THTBoxUnpacker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTBoxUnpacker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTBoxUnpacker*) (soff))->~G__THTBoxUnpacker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__StartDict_578_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTBoxUnpacker* dest = (HTBoxUnpacker*) G__getstructoffset();
   *dest = *(HTBoxUnpacker*) libp->para[0].ref;
   const HTBoxUnpacker& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HLatchUnpacker */

/* HStart2Cal */

/* HStart2CalRunPars */

/* HStart2CalRunPar */

/* HStart2Calpar */

/* HStart2Calibrater */

/* HStart2CalparCell */

/* HStart2CalparMod */

/* HStart2Detector */

/* HStart2Hit */

/* HStart2HitFPar */

/* HStart2HitF */

/* HStart2GeomPar */

/* HStart2DigiPar */

/* HStart2HitFSim */

/* HStart2Raw */

/* HStart2Trb2LookupChan */

/* HStart2Trb2LookupBoard */

/* HStart2Trb2Lookup */

/* HStart2Trb2Unpacker */

/* HStart2Trb3LookupChan */

/* HStart2Trb3LookupTdc */

/* HStart2Trb3Lookup */

/* HStart2Trb3Unpacker */

/* HStart2Trb3Calpar */

/* HStartContFact */

/* HStartParAsciiFileIo */

/* HStartParRootFileIo */

/* HStartTaskSet */

/* HTBoxChan */

/* HTBoxDetector */

/* HTBoxUnpacker */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncStartDict {
 public:
  G__Sizep2memfuncStartDict(): p(&G__Sizep2memfuncStartDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncStartDict::*p)();
};

size_t G__get_sizep2memfuncStartDict()
{
  G__Sizep2memfuncStartDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceStartDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker))) {
     HLatchUnpacker *G__Lderived;
     G__Lderived=(HLatchUnpacker*)0x1000;
     {
       HldUnpack *G__Lpbase=(HldUnpack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker),G__get_linked_tagnum(&G__StartDictLN_HldUnpack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Cal))) {
     HStart2Cal *G__Lderived;
     G__Lderived=(HStart2Cal*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Cal),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars))) {
     HStart2CalRunPars *G__Lderived;
     G__Lderived=(HStart2CalRunPars*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar))) {
     HStart2CalRunPar *G__Lderived;
     G__Lderived=(HStart2CalRunPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar),G__get_linked_tagnum(&G__StartDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar))) {
     HStart2Calpar *G__Lderived;
     G__Lderived=(HStart2Calpar*)0x1000;
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater))) {
     HStart2Calibrater *G__Lderived;
     G__Lderived=(HStart2Calibrater*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater),G__get_linked_tagnum(&G__StartDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater),G__get_linked_tagnum(&G__StartDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell))) {
     HStart2CalparCell *G__Lderived;
     G__Lderived=(HStart2CalparCell*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod))) {
     HStart2CalparMod *G__Lderived;
     G__Lderived=(HStart2CalparMod*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Detector))) {
     HStart2Detector *G__Lderived;
     G__Lderived=(HStart2Detector*)0x1000;
     {
       HDetector *G__Lpbase=(HDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Detector),G__get_linked_tagnum(&G__StartDictLN_HDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Detector),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Detector),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Hit))) {
     HStart2Hit *G__Lderived;
     G__Lderived=(HStart2Hit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Hit),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar))) {
     HStart2HitFPar *G__Lderived;
     G__Lderived=(HStart2HitFPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar),G__get_linked_tagnum(&G__StartDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2HitF))) {
     HStart2HitF *G__Lderived;
     G__Lderived=(HStart2HitF*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitF),G__get_linked_tagnum(&G__StartDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitF),G__get_linked_tagnum(&G__StartDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitF),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitF),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar))) {
     HStart2GeomPar *G__Lderived;
     G__Lderived=(HStart2GeomPar*)0x1000;
     {
       HDetGeomPar *G__Lpbase=(HDetGeomPar*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar),G__get_linked_tagnum(&G__StartDictLN_HDetGeomPar),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar))) {
     HStart2DigiPar *G__Lderived;
     G__Lderived=(HStart2DigiPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar),G__get_linked_tagnum(&G__StartDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim))) {
     HStart2HitFSim *G__Lderived;
     G__Lderived=(HStart2HitFSim*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim),G__get_linked_tagnum(&G__StartDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim),G__get_linked_tagnum(&G__StartDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HDetGeomPar))) {
     HDetGeomPar *G__Lderived;
     G__Lderived=(HDetGeomPar*)0x1000;
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HDetGeomPar),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HDetGeomPar),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HDetGeomPar),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Raw))) {
     HStart2Raw *G__Lderived;
     G__Lderived=(HStart2Raw*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Raw),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan))) {
     HStart2Trb2LookupChan *G__Lderived;
     G__Lderived=(HStart2Trb2LookupChan*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard))) {
     HStart2Trb2LookupBoard *G__Lderived;
     G__Lderived=(HStart2Trb2LookupBoard*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup))) {
     HStart2Trb2Lookup *G__Lderived;
     G__Lderived=(HStart2Trb2Lookup*)0x1000;
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker))) {
     HStart2Trb2Unpacker *G__Lderived;
     G__Lderived=(HStart2Trb2Unpacker*)0x1000;
     {
       HTrb2Unpacker *G__Lpbase=(HTrb2Unpacker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker),G__get_linked_tagnum(&G__StartDictLN_HTrb2Unpacker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HldUnpack *G__Lpbase=(HldUnpack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker),G__get_linked_tagnum(&G__StartDictLN_HldUnpack),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan))) {
     HStart2Trb3LookupChan *G__Lderived;
     G__Lderived=(HStart2Trb3LookupChan*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc))) {
     HStart2Trb3LookupTdc *G__Lderived;
     G__Lderived=(HStart2Trb3LookupTdc*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup))) {
     HStart2Trb3Lookup *G__Lderived;
     G__Lderived=(HStart2Trb3Lookup*)0x1000;
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker))) {
     HStart2Trb3Unpacker *G__Lderived;
     G__Lderived=(HStart2Trb3Unpacker*)0x1000;
     {
       HTrb3Unpacker *G__Lpbase=(HTrb3Unpacker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker),G__get_linked_tagnum(&G__StartDictLN_HTrb3Unpacker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HldUnpack *G__Lpbase=(HldUnpack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker),G__get_linked_tagnum(&G__StartDictLN_HldUnpack),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar))) {
     HStart2Trb3Calpar *G__Lderived;
     G__Lderived=(HStart2Trb3Calpar*)0x1000;
     {
       HTrb3Calpar *G__Lpbase=(HTrb3Calpar*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar),G__get_linked_tagnum(&G__StartDictLN_HTrb3Calpar),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar),G__get_linked_tagnum(&G__StartDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStartContFact))) {
     HStartContFact *G__Lderived;
     G__Lderived=(HStartContFact*)0x1000;
     {
       HContFact *G__Lpbase=(HContFact*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartContFact),G__get_linked_tagnum(&G__StartDictLN_HContFact),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartContFact),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartContFact),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo))) {
     HStartParAsciiFileIo *G__Lderived;
     G__Lderived=(HStartParAsciiFileIo*)0x1000;
     {
       HDetParAsciiFileIo *G__Lpbase=(HDetParAsciiFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo),G__get_linked_tagnum(&G__StartDictLN_HDetParAsciiFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo),G__get_linked_tagnum(&G__StartDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo))) {
     HStartParRootFileIo *G__Lderived;
     G__Lderived=(HStartParRootFileIo*)0x1000;
     {
       HDetParRootFileIo *G__Lpbase=(HDetParRootFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo),G__get_linked_tagnum(&G__StartDictLN_HDetParRootFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo),G__get_linked_tagnum(&G__StartDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet))) {
     HStartTaskSet *G__Lderived;
     G__Lderived=(HStartTaskSet*)0x1000;
     {
       HTaskSet *G__Lpbase=(HTaskSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet),G__get_linked_tagnum(&G__StartDictLN_HTaskSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet),G__get_linked_tagnum(&G__StartDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HTBoxChan))) {
     HTBoxChan *G__Lderived;
     G__Lderived=(HTBoxChan*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxChan),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector))) {
     HTBoxDetector *G__Lderived;
     G__Lderived=(HTBoxDetector*)0x1000;
     {
       HDetector *G__Lpbase=(HDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector),G__get_linked_tagnum(&G__StartDictLN_HDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector),G__get_linked_tagnum(&G__StartDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker))) {
     HTBoxUnpacker *G__Lderived;
     G__Lderived=(HTBoxUnpacker*)0x1000;
     {
       HldUnpack *G__Lpbase=(HldUnpack*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker),G__get_linked_tagnum(&G__StartDictLN_HldUnpack),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker),G__get_linked_tagnum(&G__StartDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableStartDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,HStart2CalRunPars*>",117,G__get_linked_tagnum(&G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HStart2CalRunPars*>",117,G__get_linked_tagnum(&G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,HStart2CalRunPars*,less<int> >",117,G__get_linked_tagnum(&G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("celltrack",117,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSimcLcLcelltrack),0,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("celldata",117,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSimcLcLcelldata),0,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<celltrack*>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HStart2HitFSim::celltrack*>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<celldata*>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HStart2HitFSim::celldata*>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ChannelRec>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HTrb3TdcUnpacker::ChannelRec>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HTrb3TdcUnpacker*>",117,G__get_linked_tagnum(&G__StartDictLN_vectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HLatchUnpacker */
static void G__setup_memvarHLatchUnpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker));
   { HLatchUnpacker *p; p=(HLatchUnpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"subEvtId=",0,"! subevent id");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Cal */
static void G__setup_memvarHStart2Cal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Cal));
   { HStart2Cal *p; p=(HStart2Cal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMultiplicity=",0,"number of hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fModule=",0,"module number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStrip=",0,"strip number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime1=",0,"tdc time of 1st hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth1=",0,"width of 1st hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime2=",0,"tdc time of 2nd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth2=",0,"width of 2nd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime3=",0,"tdc time of 3rd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth3=",0,"width of 3rd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime4=",0,"tdc time of 4th hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth4=",0,"width of 4th hit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2CalRunPars */
static void G__setup_memvarHStart2CalRunPars(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars));
   { HStart2CalRunPars *p; p=(HStart2CalRunPars*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"npars=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_TArrayD),-1,-1,2,"offsets=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2CalRunPar */
static void G__setup_memvarHStart2CalRunPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar));
   { HStart2CalRunPar *p; p=(HStart2CalRunPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgR),G__defined_typename("map<Int_t,HStart2CalRunPars*>"),-1,2,"fMRunID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,2,"fVRunID=",0,"list of runIDs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgRcLcLiterator),-1,-1,2,"fMIter=",0,"! remember the current runMap");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Calpar */
static void G__setup_memvarHStart2Calpar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar));
   { HStart2Calpar *p; p=(HStart2Calpar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TObjArray),-1,-1,2,"array=",0,"array of pointers of type HStart2CalparMod");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Calibrater */
static void G__setup_memvarHStart2Calibrater(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater));
   { HStart2Calibrater *p; p=(HStart2Calibrater*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,2,"rawCat=",0,"! pointer to the raw data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,2,"calCat=",0,"! pointer to the cal data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HIterator),-1,-1,2,"iter=",0,"! iterator on raw data.");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_HLocation),-1,-1,2,"loc=",0,"! location for new cal object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar),-1,-1,2,"calpar=",0,"! calibration parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar),-1,-1,2,"runpar=",0,"! corrections per strip per run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars),-1,-1,2,"correction=",0,"! corrections per strip per");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,2,"corrs[128]=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"doCorrection=",0,"! kTRUE= use HStart2CalRunPar (default)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2CalparCell */
static void G__setup_memvarHStart2CalparCell(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell));
   { HStart2CalparCell *p; p=(HStart2CalparCell*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"tdcSlope=",0,"TDC slope");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"tdcOffset=",0,"TDC offset");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"adcSlope=",0,"ADC slope");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"adcOffset=",0,"ADC offset");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2CalparMod */
static void G__setup_memvarHStart2CalparMod(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod));
   { HStart2CalparMod *p; p=(HStart2CalparMod*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TObjArray),-1,-1,2,"array=",0,"pointer array containing HStart2CalparCell objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Detector */
static void G__setup_memvarHStart2Detector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Detector));
   { HStart2Detector *p; p=(HStart2Detector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Hit */
static void G__setup_memvarHStart2Hit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Hit));
   { HStart2Hit *p; p=(HStart2Hit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fModule=",0,"module number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStrip=",0,"strip number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMultiplicity=",0,"Start det. Multip.");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,"Start det. time");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth=",0,"Start det. ADC value");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fFlag=",0,"kTRUE if true start time has been found");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCorrFlag=",0,"flag of reconstruction method of HParticleStart2HitF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fResolution=",0,"resolution smearing for simulation");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fSimWidth=",0,"width of gaussian smearing for simulation [ns]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrack=",0,"Geant track number of fastest hit");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fIteration=",0,"0 init, 1 HStart2HitF ,2 HParticleStart2HitF");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime2=",0,"Start det. time of second cluster (closest to first clust)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nFirstCluster=",0,"nNumber of cal objects of first cluster");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nSecondCluster=",0,"nNumber of cal objects of second cluster");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fFirstCluster[5]=",0,"cal objects of first  cluster (index*1000+hitindex+1)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSecondCluster[5]=",0,"cal objects of second cluster (index*1000+hitindex+1)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2HitFPar */
static void G__setup_memvarHStart2HitFPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar));
   { HStart2HitFPar *p; p=(HStart2HitFPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fModules=",0,"Number of modules");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStrips=",0,"Number of strips (components)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_TArrayF),-1,-1,4,"fMeanTime=",0,"Mean of the time distribution");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_TArrayF),-1,-1,4,"fWidth=",0,"Width of the distribution");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2HitF */
static void G__setup_memvarHStart2HitF(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitF));
   { HStart2HitF *p; p=(HStart2HitF*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSkipEvent=",0,"! Flag to suppress event w/o found start time. Default is kFALSE");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,4,"fCatCal=",0,"! pointer to the cal data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,4,"fCatHit=",0,"! pointer to the hit data");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_HLocation),-1,-1,4,"loc=",0,"! location for new hit object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar),-1,-1,4,"fPar=",0,"! pointer to hit finder parameter container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"firstCluster=",0,"! all strips inside 0.5 ns arround best strip");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,4,"secondCluster=",0,"! all other strip not in first cluster");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fSecondTime=",0,"! closest second time");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2GeomPar */
static void G__setup_memvarHStart2GeomPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar));
   { HStart2GeomPar *p; p=(HStart2GeomPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"maxComponents=",0,"maximum number of Geant diamonds");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"maxCells=",0,"maximum number of cells/strips");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TObjArray),-1,-1,4,"labPos=",0,"lab position of cell center");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2DigiPar */
static void G__setup_memvarHStart2DigiPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar));
   { HStart2DigiPar *p; p=(HStart2DigiPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"sigmaT=",0,"time resolution [ns]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"sigmaE=",0,"energy resolution [%]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"deltaTimeE=",0,"time window to integrate energy");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"minEloss=",0,"minimum energy loss");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"timeNoHit=",0,"default time set in HStart2Hit if no hit is detecteted");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2HitFSim */
static void G__setup_memvarHStart2HitFSim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim));
   { HStart2HitFSim *p; p=(HStart2HitFSim*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR),G__defined_typename("vector<celldata*>"),-1,4,"cellobjects=",0,"! temporary working array for digitized data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,4,"fCatHit=",0,"! pointer to the hit data");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fresolution=",0,"! time resolution in ns");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,4,"fCatGeantStart=",0,"! pointer to Start Geant data category");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HIterator),-1,-1,4,"iterGeantStart=",0,"! iterator over catStartGeantRaw category");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,4,"fCatGeantKine=",0,"! pointer to Geant kine category");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar),-1,-1,4,"fGeomPar=",0,"! geometry parameters of Start detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar),-1,-1,4,"fDigiPar=",0,"! digitization parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HSpecGeomPar),-1,-1,4,"fSpecGeomPar=",0,"! pointer to HSpecGeomPar parameter container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_HGeomVector),-1,-1,4,"targetCenter=",0,"! Lab position of target center");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim),-1,-2,4,"fHitFinder=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"doGeantHit=",0,"! switch (default true) : geant hit will be used.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Raw */
static void G__setup_memvarHStart2Raw(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Raw));
   { HStart2Raw *p; p=(HStart2Raw*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMultiplicity=",0,"number of hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fModule=",0,"module number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStrip=",0,"strip number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime1=",0,"tdc time of 1st hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth1=",0,"width of 1st hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime2=",0,"tdc time of 2nd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth2=",0,"width of 2nd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime3=",0,"tdc time of 3rd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth3=",0,"width of 3rd hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime4=",0,"tdc time of 4th hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fWidth4=",0,"width of 4th hit");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb2LookupChan */
static void G__setup_memvarHStart2Trb2LookupChan(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan));
   { HStart2Trb2LookupChan *p; p=(HStart2Trb2LookupChan*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"module=",0,"module number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"cell=",0,"cell number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb2LookupBoard */
static void G__setup_memvarHStart2Trb2LookupBoard(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard));
   { HStart2Trb2LookupBoard *p; p=(HStart2Trb2LookupBoard*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TObjArray),-1,-1,2,"array=",0,"pointer array containing HStart2Trb2LookupChan objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb2Lookup */
static void G__setup_memvarHStart2Trb2Lookup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup));
   { HStart2Trb2Lookup *p; p=(HStart2Trb2Lookup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TObjArray),-1,-1,2,"array=",0,"array of pointers of type HStart2Trb2LookupBoard");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"arrayOffset=",0,"offset to calculate the index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb2Unpacker */
static void G__setup_memvarHStart2Trb2Unpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker));
   { HStart2Trb2Unpacker *p; p=(HStart2Trb2Unpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_HLocation),-1,-1,2,"loc=",0,"location of raw cell object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup),-1,-1,2,"lookup=",0,"TRB lookup table");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"timeRef=",0,"use reference time ?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb3LookupChan */
static void G__setup_memvarHStart2Trb3LookupChan(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan));
   { HStart2Trb3LookupChan *p; p=(HStart2Trb3LookupChan*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"module=",0,"module number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"cell=",0,"cell number");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb3LookupTdc */
static void G__setup_memvarHStart2Trb3LookupTdc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc));
   { HStart2Trb3LookupTdc *p; p=(HStart2Trb3LookupTdc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TObjArray),-1,-1,2,"array=",0,"pointer array containing HStart2Trb3LookupChan objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb3Lookup */
static void G__setup_memvarHStart2Trb3Lookup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup));
   { HStart2Trb3Lookup *p; p=(HStart2Trb3Lookup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TObjArray),-1,-1,2,"array=",0,"array of pointers of type HStart2Trb2LookupTdc");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"arrayOffset=",0,"offset to calculate the index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb3Unpacker */
static void G__setup_memvarHStart2Trb3Unpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker));
   { HStart2Trb3Unpacker *p; p=(HStart2Trb3Unpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_HLocation),-1,-1,2,"loc=",0,"location of raw cell object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup),-1,-1,2,"lookup=",0,"TRB3 lookup table");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"timeRef=",0,"use reference time ?");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStart2Trb3Calpar */
static void G__setup_memvarHStart2Trb3Calpar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar));
   { HStart2Trb3Calpar *p; p=(HStart2Trb3Calpar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStartContFact */
static void G__setup_memvarHStartContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStartContFact));
   { HStartContFact *p; p=(HStartContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStartParAsciiFileIo */
static void G__setup_memvarHStartParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo));
   { HStartParAsciiFileIo *p; p=(HStartParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStartParRootFileIo */
static void G__setup_memvarHStartParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo));
   { HStartParRootFileIo *p; p=(HStartParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HStartTaskSet */
static void G__setup_memvarHStartTaskSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet));
   { HStartTaskSet *p; p=(HStartTaskSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fSkipEvent=",0,"Switch to control skipping event w/o found start time. Default is kFALSE");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseStartHit=",0,"Turns on/off Start2HitF task");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTBoxChan */
static void G__setup_memvarHTBoxChan(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxChan));
   { HTBoxChan *p; p=(HTBoxChan*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fChannel=",0,"channel number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fScaler=",0,"scalers data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTBoxDetector */
static void G__setup_memvarHTBoxDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector));
   { HTBoxDetector *p; p=(HTBoxDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTBoxUnpacker */
static void G__setup_memvarHTBoxUnpacker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker));
   { HTBoxUnpacker *p; p=(HTBoxUnpacker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fSubEvtId=",0,"! subevent id");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__StartDictLN_HLocation),-1,-1,4,"fLoc=",0,"! location in the matrix category for tbox data");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_HCategory),-1,-1,4,"fCat=",0,"! pointer to the TBox category");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__StartDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarStartDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHLatchUnpacker(void) {
   /* HLatchUnpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker));
   G__memfunc_setup("HLatchUnpacker",1389,G__StartDict_172_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '865' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSubEvtId",1094,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fillLatch",915,(G__InterfaceMethod) NULL, 72, -1, G__defined_typename("UInt_t"), 0, 1, 1, 2, 0, "H - 'UInt_t' 0 - pData", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_172_0_6, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HLatchUnpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_172_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HLatchUnpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_172_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HLatchUnpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_172_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HLatchUnpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_172_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_172_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HLatchUnpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_172_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HLatchUnpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_172_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HLatchUnpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_172_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HLatchUnpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HLatchUnpacker", 1389, G__StartDict_172_0_18, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker), -1, 0, 1, 1, 1, 0, "u 'HLatchUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HLatchUnpacker", 1515, G__StartDict_172_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_172_0_20, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HLatchUnpacker), -1, 1, 1, 1, 1, 0, "u 'HLatchUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Cal(void) {
   /* HStart2Cal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Cal));
   G__memfunc_setup("HStart2Cal",920,G__StartDict_173_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Cal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxMultiplicity",1903,G__StartDict_173_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMultiplicity",1609,G__StartDict_173_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__StartDict_173_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStrip",850,G__StartDict_173_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__StartDict_173_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWidth",832,G__StartDict_173_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__StartDict_173_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - m i - 'Int_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeAndWidth",1506,G__StartDict_173_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - n f - 'Float_t' 1 - time "
"f - 'Float_t' 1 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModule",946,G__StartDict_173_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStrip",862,G__StartDict_173_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__StartDict_173_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - m i - 'Int_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeAndWidth",1518,G__StartDict_173_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 10 - time f - 'Float_t' 10 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_173_0_14, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Cal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_173_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Cal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_173_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Cal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_173_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Cal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_173_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_173_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Cal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_173_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Cal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_173_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Cal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_173_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Cal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Cal", 920, G__StartDict_173_0_26, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Cal), -1, 0, 1, 1, 1, 0, "u 'HStart2Cal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Cal", 1046, G__StartDict_173_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_173_0_28, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Cal), -1, 1, 1, 1, 1, 0, "u 'HStart2Cal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2CalRunPars(void) {
   /* HStart2CalRunPars */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars));
   G__memfunc_setup("HStart2CalRunPars",1635,G__StartDict_456_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '32' size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNVals",804,G__StartDict_456_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSize",743,G__StartDict_456_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVal",623,G__StartDict_456_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - i f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVal",611,G__StartDict_456_0_5, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyVals",849,G__StartDict_456_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HStart2CalRunPars' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVals",726,G__StartDict_456_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HStart2CalRunPars' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__StartDict_456_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("data",410,G__StartDict_456_0_9, 68, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StartDict_456_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_456_0_11, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2CalRunPars::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_456_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalRunPars::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_456_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2CalRunPars::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_456_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2CalRunPars::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_456_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_456_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalRunPars::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_456_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalRunPars::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_456_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalRunPars::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_456_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalRunPars::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2CalRunPars", 1635, G__StartDict_456_0_23, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars), -1, 0, 1, 1, 1, 0, "u 'HStart2CalRunPars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2CalRunPars", 1761, G__StartDict_456_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_456_0_25, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPars), -1, 1, 1, 1, 1, 0, "u 'HStart2CalRunPars' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2CalRunPar(void) {
   /* HStart2CalRunPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar));
   G__memfunc_setup("HStart2CalRunPar",1520,G__StartDict_457_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"Start2CalRunPar\"' name C - 'Char_t' 10 '\"Start2 Cal Parameters per run\"' title "
"C - 'Char_t' 10 '\"Start2CalRunParProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findRunID",867,G__StartDict_457_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeRun",963,G__StartDict_457_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runID i - 'Int_t' 0 '1' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRun",606,G__StartDict_457_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runID U 'HStart2CalRunPars' - 0 - data "
"g - 'Bool_t' 0 'kFALSE' overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRun",629,G__StartDict_457_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runID U 'HStart2CalRunPars' - 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finishRunList",1362,G__StartDict_457_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRangeRunID",1263,G__StartDict_457_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - first i - 'Int_t' 1 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRunIDs",963,G__StartDict_457_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunIDList",1182,G__StartDict_457_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArrayI' - 0 '0' ar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printRunIDList",1419,G__StartDict_457_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printRun",866,G__StartDict_457_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__StartDict_457_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printParams",1169,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - l", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - l", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__StartDict_457_0_19, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - pFile", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putAsciiHeader",1419,G__StartDict_457_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StartDict_457_0_21, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2CalRunPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_457_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalRunPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_457_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2CalRunPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_457_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2CalRunPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_457_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_457_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalRunPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_457_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalRunPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_457_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalRunPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_457_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalRunPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2CalRunPar", 1520, G__StartDict_457_0_33, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar), -1, 0, 1, 1, 1, 0, "u 'HStart2CalRunPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2CalRunPar", 1646, G__StartDict_457_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_457_0_35, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalRunPar), -1, 1, 1, 1, 1, 0, "u 'HStart2CalRunPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Calpar(void) {
   /* HStart2Calpar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar));
   G__memfunc_setup("HStart2Calpar",1243,G__StartDict_470_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"Start2Calpar\"' name C - 'Char_t' 10 '\"Calibration parameters for Start2\"' title "
"C - 'Char_t' 10 '\"Start2CalparProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StartDict_470_0_2, 117, G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__StartDict_470_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - input I - 'Int_t' 0 - set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printParam",1054,G__StartDict_470_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readline",836,G__StartDict_470_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putAsciiHeader",1419,G__StartDict_470_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeline",979,G__StartDict_470_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Char_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_470_0_11, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Calpar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_470_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Calpar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_470_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Calpar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_470_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Calpar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_470_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_470_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Calpar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_470_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Calpar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_470_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Calpar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_470_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Calpar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Calpar", 1243, G__StartDict_470_0_23, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar), -1, 0, 1, 1, 1, 0, "u 'HStart2Calpar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Calpar", 1369, G__StartDict_470_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_470_0_25, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Calpar), -1, 1, 1, 1, 1, 0, "u 'HStart2Calpar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Calibrater(void) {
   /* HStart2Calibrater */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater));
   G__memfunc_setup("HStart2Calibrater",1665,G__StartDict_471_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStart2Calibrater",1665,G__StartDict_471_0_2, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Calibrater), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setCorrection",1380,G__StartDict_471_0_7, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 - corr", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&HStart2Calibrater::setCorrection) ), 0);
   G__memfunc_setup("getCorrection",1368,G__StartDict_471_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&HStart2Calibrater::getCorrection) ), 0);
   G__memfunc_setup("Class",502,G__StartDict_471_0_9, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Calibrater::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_471_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Calibrater::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_471_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Calibrater::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_471_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Calibrater::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_471_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_471_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Calibrater::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_471_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Calibrater::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_471_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Calibrater::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_471_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Calibrater::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Calibrater", 1791, G__StartDict_471_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2CalparCell(void) {
   /* HStart2CalparCell */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell));
   G__memfunc_setup("HStart2CalparCell",1627,G__StartDict_472_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StartDict_472_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTdcSlope",1118,G__StartDict_472_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTdcOffset",1218,G__StartDict_472_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdcSlope",1099,G__StartDict_472_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAdcOffset",1199,G__StartDict_472_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getData",698,G__StartDict_472_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTdcSlope",1130,G__StartDict_472_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTdcOffset",1230,G__StartDict_472_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdcSlope",1111,G__StartDict_472_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAdcOffset",1211,G__StartDict_472_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_472_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - ts f - 'Float_t' 0 - to "
"f - 'Float_t' 0 - as f - 'Float_t' 0 - ao", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_472_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "F - 'Float_t' 0 - data", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_472_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HStart2CalparCell' - 1 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_472_0_15, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2CalparCell::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_472_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalparCell::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_472_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2CalparCell::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_472_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2CalparCell::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_472_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_472_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalparCell::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_472_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalparCell::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_472_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalparCell::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_472_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalparCell::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2CalparCell", 1627, G__StartDict_472_0_27, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell), -1, 0, 1, 1, 1, 0, "u 'HStart2CalparCell' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2CalparCell", 1753, G__StartDict_472_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_472_0_29, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell), -1, 1, 1, 1, 1, 0, "u 'HStart2CalparCell' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2CalparMod(void) {
   /* HStart2CalparMod */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod));
   G__memfunc_setup("HStart2CalparMod",1531,G__StartDict_473_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '128' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StartDict_473_0_2, 117, G__get_linked_tagnum(&G__StartDictLN_HStart2CalparCell), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__StartDict_473_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_473_0_4, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2CalparMod::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_473_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalparMod::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_473_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2CalparMod::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_473_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2CalparMod::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_473_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_473_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalparMod::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_473_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalparMod::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_473_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2CalparMod::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_473_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2CalparMod::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2CalparMod", 1531, G__StartDict_473_0_16, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod), -1, 0, 1, 1, 1, 0, "u 'HStart2CalparMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2CalparMod", 1657, G__StartDict_473_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_473_0_18, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2CalparMod), -1, 1, 1, 1, 1, 0, "u 'HStart2CalparMod' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Detector(void) {
   /* HStart2Detector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Detector));
   G__memfunc_setup("HStart2Detector",1474,G__StartDict_475_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Detector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateParIo",1324,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("buildMatrixCategory",1987,G__StartDict_475_0_5, 85, G__get_linked_tagnum(&G__StartDictLN_HCategory), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name f - 'Float_t' 0 '1.0' fill", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildLinearCategory",1961,G__StartDict_475_0_6, 85, G__get_linked_tagnum(&G__StartDictLN_HCategory), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildCategory",1358,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_HCategory), -1, 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMaxModInSetup",1614,G__StartDict_475_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_475_0_9, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Detector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_475_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Detector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_475_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Detector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_475_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Detector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_475_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_475_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Detector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_475_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Detector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_475_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Detector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_475_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Detector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Detector", 1474, G__StartDict_475_0_21, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Detector), -1, 0, 1, 1, 1, 0, "u 'HStart2Detector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Detector", 1600, G__StartDict_475_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_475_0_23, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Detector), -1, 1, 1, 1, 1, 0, "u 'HStart2Detector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Hit(void) {
   /* HStart2Hit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Hit));
   G__memfunc_setup("HStart2Hit",941,G__StartDict_476_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Hit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFlag",710,G__StartDict_476_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCorrFlag",1116,G__StartDict_476_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMultiplicity",1621,G__StartDict_476_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__StartDict_476_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - m i - 'Int_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeAndWidth",1518,G__StartDict_476_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 10 - t f - 'Float_t' 10 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setResolution",1408,G__StartDict_476_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSimWidth",1141,G__StartDict_476_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__StartDict_476_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIteration",1275,G__StartDict_476_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 10 - it", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFlag",698,G__StartDict_476_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCorrFlag",1104,G__StartDict_476_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__StartDict_476_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStrip",850,G__StartDict_476_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMultiplicity",1609,G__StartDict_476_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__StartDict_476_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWidth",832,G__StartDict_476_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__StartDict_476_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - m i - 'Int_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeAndWidth",1506,G__StartDict_476_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 1 - t f - 'Float_t' 1 - w", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getResolution",1396,G__StartDict_476_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSimWidth",1129,G__StartDict_476_0_21, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__StartDict_476_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIteration",1263,G__StartDict_476_0_23, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSecondTime",1335,G__StartDict_476_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSecondTime",1323,G__StartDict_476_0_25, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetClusterStrip",1815,G__StartDict_476_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '2' firstOrSecond", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClusterStrip",1600,G__StartDict_476_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - firstOrSecond i - 'Int_t' 0 - stripandhitindex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClusterStrip",1600,G__StartDict_476_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"h - 'UInt_t' 0 - firstOrSecond i - 'Int_t' 0 - stripindex "
"i - 'Int_t' 0 - hitindex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterStrip",1588,G__StartDict_476_0_29, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - firstOrSecond i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClusterStrip",1588,G__StartDict_476_0_30, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"h - 'UInt_t' 0 - firstOrSecond i - 'Int_t' 0 - num "
"i - 'Int_t' 1 - stripindex i - 'Int_t' 1 - hitindex", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstClusterSize",1989,G__StartDict_476_0_31, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSecondClusterSize",2073,G__StartDict_476_0_32, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxClusterSize",1763,G__StartDict_476_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_476_0_34, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Hit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_476_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Hit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_476_0_36, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Hit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_476_0_37, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Hit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_476_0_41, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_476_0_42, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Hit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_476_0_43, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Hit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_476_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Hit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_476_0_45, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Hit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Hit", 941, G__StartDict_476_0_46, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Hit), -1, 0, 1, 1, 1, 0, "u 'HStart2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Hit", 1067, G__StartDict_476_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_476_0_48, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Hit), -1, 1, 1, 1, 1, 0, "u 'HStart2Hit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2HitFPar(void) {
   /* HStart2HitFPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar));
   G__memfunc_setup("HStart2HitFPar",1302,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar), -1, 0, 1, 1, 4, 0, "u 'HStart2HitFPar' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar), -1, 1, 1, 1, 4, 0, "u 'HStart2HitFPar' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStart2HitFPar",1302,G__StartDict_477_0_3, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2HitFPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"Start2HitFPar\"' name C - 'Char_t' 10 '\"Start2 Hit Finder Parameters\"' title "
"C - 'Char_t' 10 '\"Start2HitFParProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printParams",1169,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - l", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - l", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModules",1049,G__StartDict_477_0_8, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStrips",965,G__StartDict_477_0_9, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMeanTime",1104,G__StartDict_477_0_10, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWidth",832,G__StartDict_477_0_11, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_477_0_12, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2HitFPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_477_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitFPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_477_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2HitFPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_477_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2HitFPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_477_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_477_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitFPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_477_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2HitFPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_477_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitFPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_477_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2HitFPar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HStart2HitFPar", 1428, G__StartDict_477_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2HitF(void) {
   /* HStart2HitF */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitF));
   G__memfunc_setup("HStart2HitF",1011,G__StartDict_478_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2HitF), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStart2HitF",1011,G__StartDict_478_0_2, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2HitF), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title "
"g - 'Bool_t' 0 'kFALSE' skip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StartDict_478_0_6, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2HitF::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_478_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitF::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_478_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2HitF::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_478_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2HitF::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_478_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_478_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitF::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_478_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2HitF::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_478_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitF::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_478_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2HitF::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HStart2HitF", 1137, G__StartDict_478_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2GeomPar(void) {
   /* HStart2GeomPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar));
   G__memfunc_setup("HStart2GeomPar",1331,G__StartDict_480_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"Start2GeomPar\"' name C - 'Char_t' 10 '\"Start2 geometry parameters\"' title "
"C - 'Char_t' 10 '\"GeomProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModNumInMod",1383,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModNumInComp",1494,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMaxComponents",1676,G__StartDict_480_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxCells",1113,G__StartDict_480_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCompNum",1023,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCellIndex",1208,G__StartDict_480_0_9, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - compNum f - 'Float_t' 0 - xPos "
"f - 'Float_t' 0 - yPos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLabPos",897,G__StartDict_480_0_10, 85, G__get_linked_tagnum(&G__StartDictLN_HGeomVector), -1, 0, 1, 1, 1, 9, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcLabPositions",1642,G__StartDict_480_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printLabPositions",1796,G__StartDict_480_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_480_0_13, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2GeomPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_480_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2GeomPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_480_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2GeomPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_480_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2GeomPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_480_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_480_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2GeomPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_480_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2GeomPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_480_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2GeomPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_480_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2GeomPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2GeomPar", 1331, G__StartDict_480_0_25, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar), -1, 0, 1, 1, 1, 0, "u 'HStart2GeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2GeomPar", 1457, G__StartDict_480_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_480_0_27, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2GeomPar), -1, 1, 1, 1, 1, 0, "u 'HStart2GeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2DigiPar(void) {
   /* HStart2DigiPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar));
   G__memfunc_setup("HStart2DigiPar",1320,G__StartDict_481_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar), -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"Start2DigiPar\"' name C - - 10 '\"Start2 digitization parameters\"' title "
"C - - 10 '\"Start2DigiProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigmaT",901,G__StartDict_481_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSigmaE",886,G__StartDict_481_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDeltaTimeE",1278,G__StartDict_481_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMinEloss",1130,G__StartDict_481_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeNoHit",1201,G__StartDict_481_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fill",423,G__StartDict_481_0_8, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - - f - 'Float_t' 0 - - "
"f - 'Float_t' 0 - - f - 'Float_t' 0 - - "
"f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StartDict_481_0_11, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2DigiPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_481_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2DigiPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_481_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2DigiPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_481_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2DigiPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_481_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_481_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2DigiPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_481_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2DigiPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_481_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2DigiPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_481_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2DigiPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2DigiPar", 1320, G__StartDict_481_0_23, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar), -1, 0, 1, 1, 1, 0, "u 'HStart2DigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2DigiPar", 1446, G__StartDict_481_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_481_0_25, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2DigiPar), -1, 1, 1, 1, 1, 0, "u 'HStart2DigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2HitFSim(void) {
   /* HStart2HitFSim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim));
   G__memfunc_setup("clearCellobjects",1649,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStart2HitFSim",1308,G__StartDict_483_0_2, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStart2HitFSim",1308,G__StartDict_483_0_3, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title "
"d - 'Double_t' 0 '0.06' resol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitFinder",1213,G__StartDict_483_0_4, 85, G__get_linked_tagnum(&G__StartDictLN_HStart2HitFSim), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (HStart2HitFSim* (*)())(&HStart2HitFSim::getHitFinder) ), 0);
   G__memfunc_setup("setDoGeantHit",1299,G__StartDict_483_0_5, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 - doit", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&HStart2HitFSim::setDoGeantHit) ), 0);
   G__memfunc_setup("setResolution",1408,G__StartDict_483_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - res", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("initVar",733,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParameterContainers",2307,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("digitize",857,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HStart2Hit' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_483_0_14, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2HitFSim::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_483_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitFSim::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_483_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2HitFSim::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_483_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2HitFSim::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_483_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_483_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitFSim::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_483_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2HitFSim::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_483_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2HitFSim::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_483_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2HitFSim::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HStart2HitFSim", 1434, G__StartDict_483_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Raw(void) {
   /* HStart2Raw */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Raw));
   G__memfunc_setup("HStart2Raw",946,G__StartDict_502_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Raw), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxMultiplicity",1903,G__StartDict_502_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMultiplicity",1609,G__StartDict_502_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__StartDict_502_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStrip",850,G__StartDict_502_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__StartDict_502_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWidth",832,G__StartDict_502_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeAndWidth",1506,G__StartDict_502_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - n f - 'Float_t' 1 - time "
"f - 'Float_t' 1 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__StartDict_502_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - m i - 'Int_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModule",946,G__StartDict_502_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStrip",862,G__StartDict_502_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__StartDict_502_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - m i - 'Int_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeAndWidth",1518,G__StartDict_502_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"f - 'Float_t' 10 - time f - 'Float_t' 10 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_502_0_14, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Raw::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_502_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Raw::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_502_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Raw::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_502_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Raw::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_502_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_502_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Raw::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_502_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Raw::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_502_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Raw::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_502_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Raw::DeclFileLine) ), 0);
   G__memfunc_setup("setModule",946,G__StartDict_502_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStrip",862,G__StartDict_502_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Raw", 946, G__StartDict_502_0_28, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Raw), -1, 0, 1, 1, 1, 0, "u 'HStart2Raw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Raw", 1072, G__StartDict_502_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_502_0_30, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Raw), -1, 1, 1, 1, 1, 0, "u 'HStart2Raw' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb2LookupChan(void) {
   /* HStart2Trb2LookupChan */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan));
   G__memfunc_setup("HStart2Trb2LookupChan",2006,G__StartDict_505_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__StartDict_505_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__StartDict_505_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__StartDict_505_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - m i - 'Int_t' 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_505_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_505_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HStart2Trb2LookupChan' - 1 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModule",946,G__StartDict_505_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCell",716,G__StartDict_505_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StartDict_505_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_505_0_10, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb2LookupChan::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_505_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2LookupChan::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_505_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb2LookupChan::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_505_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb2LookupChan::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_505_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_505_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2LookupChan::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_505_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2LookupChan::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_505_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2LookupChan::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_505_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2LookupChan::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb2LookupChan", 2006, G__StartDict_505_0_22, (int) ('i'), 
G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb2LookupChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb2LookupChan", 2132, G__StartDict_505_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_505_0_24, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb2LookupChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb2LookupBoard(void) {
   /* HStart2Trb2LookupBoard */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard));
   G__memfunc_setup("HStart2Trb2LookupBoard",2116,G__StartDict_506_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,G__StartDict_506_0_2, 85, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StartDict_506_0_3, 117, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupChan), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__StartDict_506_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StartDict_506_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_506_0_6, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb2LookupBoard::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_506_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2LookupBoard::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_506_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb2LookupBoard::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_506_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb2LookupBoard::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_506_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_506_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2LookupBoard::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_506_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2LookupBoard::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_506_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2LookupBoard::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_506_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2LookupBoard::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb2LookupBoard", 2116, G__StartDict_506_0_18, (int) ('i'), 
G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb2LookupBoard' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb2LookupBoard", 2242, G__StartDict_506_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_506_0_20, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb2LookupBoard' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb2Lookup(void) {
   /* HStart2Trb2Lookup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup));
   G__memfunc_setup("HStart2Trb2Lookup",1628,G__StartDict_507_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 '\"Start2Trb2Lookup\"' name C - 'Char_t' 10 '\"Lookup table for the TRB2 unpacker of the START2 detector\"' title "
"C - 'Char_t' 10 '\"Start2Trb2LookupProduction\"' context i - 'Int_t' 0 'Trbnet::kStartMinTrbnetAddress' minTrbnetAddress "
"i - 'Int_t' 0 'Trbnet::kStartMaxTrbnetAddress' maxTrbnetAddress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBoard",808,G__StartDict_507_0_2, 85, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - trbnetAddress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StartDict_507_0_3, 85, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2LookupBoard), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__StartDict_507_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArrayOffset",1446,G__StartDict_507_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - input I - 'Int_t' 0 - set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printParam",1054,G__StartDict_507_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_507_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readline",836,G__StartDict_507_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putAsciiHeader",1419,G__StartDict_507_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__StartDict_507_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_507_0_14, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb2Lookup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_507_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2Lookup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_507_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb2Lookup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_507_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb2Lookup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_507_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_507_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2Lookup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_507_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2Lookup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_507_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2Lookup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_507_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2Lookup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb2Lookup", 1628, G__StartDict_507_0_26, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb2Lookup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb2Lookup", 1754, G__StartDict_507_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_507_0_28, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Lookup), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb2Lookup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb2Unpacker(void) {
   /* HStart2Trb2Unpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker));
   G__memfunc_setup("HStart2Trb2Unpacker",1819,G__StartDict_511_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("disableTimeRef",1408,G__StartDict_511_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_511_0_6, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb2Unpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_511_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2Unpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_511_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb2Unpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_511_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb2Unpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_511_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_511_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2Unpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_511_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2Unpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_511_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb2Unpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_511_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb2Unpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb2Unpacker", 1819, G__StartDict_511_0_18, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb2Unpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb2Unpacker", 1945, G__StartDict_511_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_511_0_20, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb2Unpacker), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb2Unpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb3LookupChan(void) {
   /* HStart2Trb3LookupChan */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan));
   G__memfunc_setup("HStart2Trb3LookupChan",2007,G__StartDict_512_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__StartDict_512_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__StartDict_512_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__StartDict_512_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - m i - 'Int_t' 1 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_512_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_512_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HStart2Trb3LookupChan' - 1 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModule",946,G__StartDict_512_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCell",716,G__StartDict_512_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StartDict_512_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_512_0_10, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb3LookupChan::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_512_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3LookupChan::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_512_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb3LookupChan::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_512_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb3LookupChan::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_512_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_512_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3LookupChan::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_512_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3LookupChan::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_512_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3LookupChan::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_512_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3LookupChan::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb3LookupChan", 2007, G__StartDict_512_0_22, (int) ('i'), 
G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb3LookupChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb3LookupChan", 2133, G__StartDict_512_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_512_0_24, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb3LookupChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb3LookupTdc(void) {
   /* HStart2Trb3LookupTdc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc));
   G__memfunc_setup("HStart2Trb3LookupTdc",1912,G__StartDict_513_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__StartDict_513_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,G__StartDict_513_0_3, 85, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StartDict_513_0_4, 117, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupChan), -1, 1, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__StartDict_513_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_513_0_6, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb3LookupTdc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_513_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3LookupTdc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_513_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb3LookupTdc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_513_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb3LookupTdc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_513_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_513_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3LookupTdc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_513_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3LookupTdc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_513_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3LookupTdc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_513_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3LookupTdc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb3LookupTdc", 1912, G__StartDict_513_0_18, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb3LookupTdc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb3LookupTdc", 2038, G__StartDict_513_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_513_0_20, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb3LookupTdc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb3Lookup(void) {
   /* HStart2Trb3Lookup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup));
   G__memfunc_setup("HStart2Trb3Lookup",1629,G__StartDict_514_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 '\"Start2Trb3Lookup\"' name C - 'Char_t' 10 '\"Lookup table for the TRB3 unpacker of the START2 detector\"' title "
"C - 'Char_t' 10 '\"Start2Trb3LookupProduction\"' context i - 'Int_t' 0 'Trbnet::kStartTrb3MinTrbnetAddress' minTrbnetAddress "
"i - 'Int_t' 0 'Trbnet::kStartTrb3MaxTrbnetAddress' maxTrbnetAddress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTdc",603,G__StartDict_514_0_2, 85, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - trbnetAddress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__StartDict_514_0_3, 85, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3LookupTdc), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__StartDict_514_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getArrayOffset",1446,G__StartDict_514_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - input I - 'Int_t' 0 - set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printParam",1054,G__StartDict_514_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__StartDict_514_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readline",836,G__StartDict_514_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putAsciiHeader",1419,G__StartDict_514_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__StartDict_514_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_514_0_14, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb3Lookup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_514_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Lookup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_514_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb3Lookup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_514_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb3Lookup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_514_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_514_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Lookup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_514_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3Lookup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_514_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Lookup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_514_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3Lookup::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb3Lookup", 1629, G__StartDict_514_0_26, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb3Lookup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb3Lookup", 1755, G__StartDict_514_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_514_0_28, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Lookup), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb3Lookup' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb3Unpacker(void) {
   /* HStart2Trb3Unpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker));
   G__memfunc_setup("HStart2Trb3Unpacker",1820,G__StartDict_528_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '0' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("disableTimeRef",1408,G__StartDict_528_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_528_0_5, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb3Unpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_528_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Unpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_528_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb3Unpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_528_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb3Unpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_528_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_528_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Unpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_528_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3Unpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_528_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Unpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_528_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3Unpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb3Unpacker", 1820, G__StartDict_528_0_17, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb3Unpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb3Unpacker", 1946, G__StartDict_528_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_528_0_19, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Unpacker), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb3Unpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStart2Trb3Calpar(void) {
   /* HStart2Trb3Calpar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar));
   G__memfunc_setup("HStart2Trb3Calpar",1590,G__StartDict_529_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar), -1, 0, 5, 1, 1, 0, 
"C - 'Char_t' 10 '\"Start2Trb3Calpar\"' name C - 'Char_t' 10 '\"TRB3 TDC calibration parameters of the Start detector\"' title "
"C - 'Char_t' 10 '\"Trb3CalparProduction\"' context i - 'Int_t' 0 'Trbnet::kStartTrb3MinTrbnetAddress' minTrbnetAddress "
"i - 'Int_t' 0 'Trbnet::kStartTrb3MaxTrbnetAddress' maxTrbnetAddress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - input I - 'Int_t' 0 - set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StartDict_529_0_4, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStart2Trb3Calpar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_529_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Calpar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_529_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStart2Trb3Calpar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_529_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStart2Trb3Calpar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_529_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_529_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Calpar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_529_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3Calpar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_529_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStart2Trb3Calpar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_529_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStart2Trb3Calpar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStart2Trb3Calpar", 1590, G__StartDict_529_0_16, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar), -1, 0, 1, 1, 1, 0, "u 'HStart2Trb3Calpar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStart2Trb3Calpar", 1716, G__StartDict_529_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_529_0_18, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStart2Trb3Calpar), -1, 1, 1, 1, 1, 0, "u 'HStart2Trb3Calpar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStartContFact(void) {
   /* HStartContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStartContFact));
   G__memfunc_setup("setAllContainers",1659,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStartContFact",1384,G__StartDict_532_0_2, 105, G__get_linked_tagnum(&G__StartDictLN_HStartContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_HParSet), -1, 0, 1, 1, 1, 0, "U 'HContainer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StartDict_532_0_4, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStartContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_532_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_532_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStartContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_532_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStartContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_532_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_532_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_532_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_532_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_532_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartContFact::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStartContFact", 1384, G__StartDict_532_0_16, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStartContFact), -1, 0, 1, 1, 1, 0, "u 'HStartContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStartContFact", 1510, G__StartDict_532_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_532_0_18, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStartContFact), -1, 1, 1, 1, 1, 0, "u 'HStartContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStartParAsciiFileIo(void) {
   /* HStartParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo));
   G__memfunc_setup("HStartParAsciiFileIo",1946,G__StartDict_534_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo), -1, 0, 1, 1, 1, 0, "U 'basic_fstream<char,char_traits<char> >' 'fstream' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StartDict_534_0_4, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStartParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_534_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_534_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStartParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_534_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStartParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_534_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_534_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_534_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_534_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_534_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartParAsciiFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStartParAsciiFileIo", 1946, G__StartDict_534_0_16, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo), -1, 0, 1, 1, 1, 0, "u 'HStartParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStartParAsciiFileIo", 2072, G__StartDict_534_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_534_0_18, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStartParAsciiFileIo), -1, 1, 1, 1, 1, 0, "u 'HStartParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStartParRootFileIo(void) {
   /* HStartParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo));
   G__memfunc_setup("HStartParRootFileIo",1877,G__StartDict_570_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo), -1, 0, 1, 1, 1, 0, "U 'HParRootFile' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("read",412,G__StartDict_570_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HStart2Calpar' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_570_0_4, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStartParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_570_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_570_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStartParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_570_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStartParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_570_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_570_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_570_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_570_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_570_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartParRootFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HStartParRootFileIo", 1877, G__StartDict_570_0_16, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo), -1, 0, 1, 1, 1, 0, "u 'HStartParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HStartParRootFileIo", 2003, G__StartDict_570_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_570_0_18, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HStartParRootFileIo), -1, 1, 1, 1, 1, 0, "u 'HStartParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHStartTaskSet(void) {
   /* HStartTaskSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet));
   G__memfunc_setup("parseArguments",1489,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - s1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStartTaskSet",1301,G__StartDict_575_0_2, 105, G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HStartTaskSet",1301,G__StartDict_575_0_3, 105, G__get_linked_tagnum(&G__StartDictLN_HStartTaskSet), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make",414,G__StartDict_575_0_4, 85, G__get_linked_tagnum(&G__StartDictLN_HTask), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"real\"' select C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_575_0_5, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HStartTaskSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_575_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartTaskSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_575_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HStartTaskSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_575_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HStartTaskSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_575_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_575_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartTaskSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_575_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartTaskSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_575_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HStartTaskSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_575_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HStartTaskSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HStartTaskSet", 1427, G__StartDict_575_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTBoxChan(void) {
   /* HTBoxChan */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxChan));
   G__memfunc_setup("HTBoxChan",831,G__StartDict_576_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HTBoxChan), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setScalerData",1312,G__StartDict_576_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - ch h - 'UInt_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScalerData",1300,G__StartDict_576_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - ch h - 'UInt_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,G__StartDict_576_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_576_0_5, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTBoxChan::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_576_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxChan::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_576_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTBoxChan::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_576_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTBoxChan::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_576_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_576_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxChan::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_576_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTBoxChan::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_576_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxChan::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_576_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTBoxChan::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HTBoxChan", 831, G__StartDict_576_0_17, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HTBoxChan), -1, 0, 1, 1, 1, 0, "u 'HTBoxChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HTBoxChan", 957, G__StartDict_576_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_576_0_19, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HTBoxChan), -1, 1, 1, 1, 1, 0, "u 'HTBoxChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTBoxDetector(void) {
   /* HTBoxDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector));
   G__memfunc_setup("HTBoxDetector",1279,G__StartDict_577_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HTBoxDetector",1279,G__StartDict_577_0_2, 105, G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - mod i - 'Int_t' 0 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("buildMatrixCategory",1987,G__StartDict_577_0_5, 85, G__get_linked_tagnum(&G__StartDictLN_HCategory), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildLinearCategory",1961,G__StartDict_577_0_6, 85, G__get_linked_tagnum(&G__StartDictLN_HCategory), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildCategory",1358,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_HCategory), -1, 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getMaxModInSetup",1614,G__StartDict_577_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__StartDict_577_0_9, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTBoxDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_577_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_577_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTBoxDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_577_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTBoxDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_577_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_577_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_577_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTBoxDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_577_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_577_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTBoxDetector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HTBoxDetector", 1279, G__StartDict_577_0_21, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector), -1, 0, 1, 1, 1, 0, "u 'HTBoxDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HTBoxDetector", 1405, G__StartDict_577_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_577_0_23, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HTBoxDetector), -1, 1, 1, 1, 1, 0, "u 'HTBoxDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTBoxUnpacker(void) {
   /* HTBoxUnpacker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker));
   G__memfunc_setup("HTBoxUnpacker",1278,G__StartDict_578_0_1, 105, G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0x8800' id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getSubEvtId",1094,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__StartDict_578_0_5, 85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTBoxUnpacker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__StartDict_578_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxUnpacker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__StartDict_578_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTBoxUnpacker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__StartDict_578_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTBoxUnpacker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__StartDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__StartDict_578_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__StartDict_578_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxUnpacker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__StartDict_578_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTBoxUnpacker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__StartDict_578_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTBoxUnpacker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__StartDict_578_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTBoxUnpacker::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HTBoxUnpacker", 1278, G__StartDict_578_0_17, (int) ('i'), G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker), -1, 0, 1, 1, 1, 0, "u 'HTBoxUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HTBoxUnpacker", 1404, G__StartDict_578_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__StartDict_578_0_19, (int) ('u'), G__get_linked_tagnum(&G__StartDictLN_HTBoxUnpacker), -1, 1, 1, 1, 1, 0, "u 'HTBoxUnpacker' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncStartDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
   G__memvar_setup((void*)(&catStart2Raw),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catStart2Raw=",0,(char*)NULL);
   G__memvar_setup((void*)(&catStart2Cal),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catStart2Cal=",0,(char*)NULL);
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&catStart2Hit),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catStart2Hit=",0,(char*)NULL);
   G__memvar_setup((void*)(&catTBoxChan),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catTBoxChan=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalStartDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcStartDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__StartDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__StartDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR = { "basic_fstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__StartDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HCategory = { "HCategory" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HldUnpack = { "HldUnpack" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HLatchUnpacker = { "HLatchUnpacker" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Cal = { "HStart2Cal" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HLocation = { "HLocation" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTask = { "HTask" , 99 , -1 };
G__linked_taginfo G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__StartDictLN_HReconstructor = { "HReconstructor" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__StartDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HParIo = { "HParIo" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HParSet = { "HParSet" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HParamList = { "HParamList" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HParCond = { "HParCond" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HDetParIo = { "HDetParIo" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HDetParAsciiFileIo = { "HDetParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2CalRunPars = { "HStart2CalRunPars" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2CalRunPar = { "HStart2CalRunPar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgR = { "map<int,HStart2CalRunPars*,less<int>,allocator<pair<const int,HStart2CalRunPars*> > >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgRcLcLiterator = { "map<int,HStart2CalRunPars*,less<int>,allocator<pair<const int,HStart2CalRunPars*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HIterator = { "HIterator" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Calpar = { "HStart2Calpar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Calibrater = { "HStart2Calibrater" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2CalparCell = { "HStart2CalparCell" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2CalparMod = { "HStart2CalparMod" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HDetector = { "HDetector" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Detector = { "HStart2Detector" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Hit = { "HStart2Hit" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2HitFPar = { "HStart2HitFPar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2HitF = { "HStart2HitF" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HGeomVector = { "HGeomVector" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2GeomPar = { "HStart2GeomPar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2DigiPar = { "HStart2DigiPar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HSpecGeomPar = { "HSpecGeomPar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2HitFSim = { "HStart2HitFSim" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2HitFSimcLcLcelltrack = { "HStart2HitFSim::celltrack" , 115 , -1 };
G__linked_taginfo G__StartDictLN_HStart2HitFSimcLcLcelldata = { "HStart2HitFSim::celldata" , 115 , -1 };
G__linked_taginfo G__StartDictLN_vectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgR = { "vector<HStart2HitFSim::celltrack*,allocator<HStart2HitFSim::celltrack*> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HStart2HitFSim::celltrack*,allocator<HStart2HitFSim::celltrack*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR = { "vector<HStart2HitFSim::celldata*,allocator<HStart2HitFSim::celldata*> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HStart2HitFSim::celldata*,allocator<HStart2HitFSim::celldata*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HDetGeomPar = { "HDetGeomPar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Raw = { "HStart2Raw" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb2LookupChan = { "HStart2Trb2LookupChan" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb2LookupBoard = { "HStart2Trb2LookupBoard" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb2Lookup = { "HStart2Trb2Lookup" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTrb2Unpacker = { "HTrb2Unpacker" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb2Unpacker = { "HStart2Trb2Unpacker" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb3LookupChan = { "HStart2Trb3LookupChan" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb3LookupTdc = { "HStart2Trb3LookupTdc" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb3Lookup = { "HStart2Trb3Lookup" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTrb3Unpacker = { "HTrb3Unpacker" , 99 , -1 };
G__linked_taginfo G__StartDictLN_vectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgR = { "vector<HTrb3TdcUnpacker::ChannelRec,allocator<HTrb3TdcUnpacker::ChannelRec> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HTrb3TdcUnpacker::ChannelRec,allocator<HTrb3TdcUnpacker::ChannelRec> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTrb3Calpar = { "HTrb3Calpar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_vectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgR = { "vector<HTrb3TdcUnpacker*,allocator<HTrb3TdcUnpacker*> >" , 99 , -1 };
G__linked_taginfo G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HTrb3TdcUnpacker*,allocator<HTrb3TdcUnpacker*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb3Unpacker = { "HStart2Trb3Unpacker" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStart2Trb3Calpar = { "HStart2Trb3Calpar" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HContainer = { "HContainer" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HContFact = { "HContFact" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStartContFact = { "HStartContFact" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStartParAsciiFileIo = { "HStartParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HParRootFile = { "HParRootFile" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HDetParRootFileIo = { "HDetParRootFileIo" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStartParRootFileIo = { "HStartParRootFileIo" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTaskSet = { "HTaskSet" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HStartTaskSet = { "HStartTaskSet" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTBoxChan = { "HTBoxChan" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTBoxDetector = { "HTBoxDetector" , 99 , -1 };
G__linked_taginfo G__StartDictLN_HTBoxUnpacker = { "HTBoxUnpacker" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableStartDict() {
  G__StartDictLN_TClass.tagnum = -1 ;
  G__StartDictLN_TBuffer.tagnum = -1 ;
  G__StartDictLN_TMemberInspector.tagnum = -1 ;
  G__StartDictLN_TObject.tagnum = -1 ;
  G__StartDictLN_TNamed.tagnum = -1 ;
  G__StartDictLN_TString.tagnum = -1 ;
  G__StartDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__StartDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__StartDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StartDictLN_TObjArray.tagnum = -1 ;
  G__StartDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__StartDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StartDictLN_HCategory.tagnum = -1 ;
  G__StartDictLN_HldUnpack.tagnum = -1 ;
  G__StartDictLN_HLatchUnpacker.tagnum = -1 ;
  G__StartDictLN_HStart2Cal.tagnum = -1 ;
  G__StartDictLN_TArrayI.tagnum = -1 ;
  G__StartDictLN_HLocation.tagnum = -1 ;
  G__StartDictLN_HTask.tagnum = -1 ;
  G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__StartDictLN_HReconstructor.tagnum = -1 ;
  G__StartDictLN_TArrayD.tagnum = -1 ;
  G__StartDictLN_TArrayF.tagnum = -1 ;
  G__StartDictLN_HParIo.tagnum = -1 ;
  G__StartDictLN_HParSet.tagnum = -1 ;
  G__StartDictLN_HParamList.tagnum = -1 ;
  G__StartDictLN_HParCond.tagnum = -1 ;
  G__StartDictLN_HDetParIo.tagnum = -1 ;
  G__StartDictLN_HDetParAsciiFileIo.tagnum = -1 ;
  G__StartDictLN_HStart2CalRunPars.tagnum = -1 ;
  G__StartDictLN_HStart2CalRunPar.tagnum = -1 ;
  G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgR.tagnum = -1 ;
  G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__StartDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StartDictLN_HIterator.tagnum = -1 ;
  G__StartDictLN_HStart2Calpar.tagnum = -1 ;
  G__StartDictLN_HStart2Calibrater.tagnum = -1 ;
  G__StartDictLN_HStart2CalparCell.tagnum = -1 ;
  G__StartDictLN_HStart2CalparMod.tagnum = -1 ;
  G__StartDictLN_HDetector.tagnum = -1 ;
  G__StartDictLN_HStart2Detector.tagnum = -1 ;
  G__StartDictLN_HStart2Hit.tagnum = -1 ;
  G__StartDictLN_HStart2HitFPar.tagnum = -1 ;
  G__StartDictLN_HStart2HitF.tagnum = -1 ;
  G__StartDictLN_HGeomVector.tagnum = -1 ;
  G__StartDictLN_HStart2GeomPar.tagnum = -1 ;
  G__StartDictLN_HStart2DigiPar.tagnum = -1 ;
  G__StartDictLN_HSpecGeomPar.tagnum = -1 ;
  G__StartDictLN_HStart2HitFSim.tagnum = -1 ;
  G__StartDictLN_HStart2HitFSimcLcLcelltrack.tagnum = -1 ;
  G__StartDictLN_HStart2HitFSimcLcLcelldata.tagnum = -1 ;
  G__StartDictLN_vectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgR.tagnum = -1 ;
  G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR.tagnum = -1 ;
  G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StartDictLN_HDetGeomPar.tagnum = -1 ;
  G__StartDictLN_HStart2Raw.tagnum = -1 ;
  G__StartDictLN_HStart2Trb2LookupChan.tagnum = -1 ;
  G__StartDictLN_HStart2Trb2LookupBoard.tagnum = -1 ;
  G__StartDictLN_HStart2Trb2Lookup.tagnum = -1 ;
  G__StartDictLN_HTrb2Unpacker.tagnum = -1 ;
  G__StartDictLN_HStart2Trb2Unpacker.tagnum = -1 ;
  G__StartDictLN_HStart2Trb3LookupChan.tagnum = -1 ;
  G__StartDictLN_HStart2Trb3LookupTdc.tagnum = -1 ;
  G__StartDictLN_HStart2Trb3Lookup.tagnum = -1 ;
  G__StartDictLN_HTrb3Unpacker.tagnum = -1 ;
  G__StartDictLN_vectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgR.tagnum = -1 ;
  G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StartDictLN_HTrb3Calpar.tagnum = -1 ;
  G__StartDictLN_vectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgR.tagnum = -1 ;
  G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__StartDictLN_HStart2Trb3Unpacker.tagnum = -1 ;
  G__StartDictLN_HStart2Trb3Calpar.tagnum = -1 ;
  G__StartDictLN_HContainer.tagnum = -1 ;
  G__StartDictLN_HContFact.tagnum = -1 ;
  G__StartDictLN_HStartContFact.tagnum = -1 ;
  G__StartDictLN_HStartParAsciiFileIo.tagnum = -1 ;
  G__StartDictLN_HParRootFile.tagnum = -1 ;
  G__StartDictLN_HDetParRootFileIo.tagnum = -1 ;
  G__StartDictLN_HStartParRootFileIo.tagnum = -1 ;
  G__StartDictLN_HTaskSet.tagnum = -1 ;
  G__StartDictLN_HStartTaskSet.tagnum = -1 ;
  G__StartDictLN_HTBoxChan.tagnum = -1 ;
  G__StartDictLN_HTBoxDetector.tagnum = -1 ;
  G__StartDictLN_HTBoxUnpacker.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableStartDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__StartDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TString);
   G__get_linked_tagnum_fwd(&G__StartDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__StartDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HCategory);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HldUnpack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HLatchUnpacker),sizeof(HLatchUnpacker),-1,29952,"unpack LATCH data",G__setup_memvarHLatchUnpacker,G__setup_memfuncHLatchUnpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Cal),sizeof(HStart2Cal),-1,29952,"START2 detector cal data",G__setup_memvarHStart2Cal,G__setup_memfuncHStart2Cal);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HLocation);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HTask);
   G__get_linked_tagnum_fwd(&G__StartDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HReconstructor);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__StartDictLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HParIo);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HParSet);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HParamList);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HParCond);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HDetParIo);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HDetParAsciiFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2CalRunPars),sizeof(HStart2CalRunPars),-1,29952,(char*)NULL,G__setup_memvarHStart2CalRunPars,G__setup_memfuncHStart2CalRunPars);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2CalRunPar),sizeof(HStart2CalRunPar),-1,62720,"Container for the START2 cal parameters per run",G__setup_memvarHStart2CalRunPar,G__setup_memfuncHStart2CalRunPar);
   G__get_linked_tagnum_fwd(&G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_maplEintcOHStart2CalRunParsmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOHStart2CalRunParsmUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__StartDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HIterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Calpar),sizeof(HStart2Calpar),-1,62720,"Container for the START2 calibration parameters",G__setup_memvarHStart2Calpar,G__setup_memfuncHStart2Calpar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Calibrater),sizeof(HStart2Calibrater),-1,62720,"Calibrater raw->cal for START data",G__setup_memvarHStart2Calibrater,G__setup_memfuncHStart2Calibrater);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2CalparCell),sizeof(HStart2CalparCell),-1,29952,"Chan level of the START2 calibration parameters",G__setup_memvarHStart2CalparCell,G__setup_memfuncHStart2CalparCell);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2CalparMod),sizeof(HStart2CalparMod),-1,29952,"Module level of Start2 Calibration parameters",G__setup_memvarHStart2CalparMod,G__setup_memfuncHStart2CalparMod);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Detector),sizeof(HStart2Detector),-1,62720,"Start2 detector using TRB for readout",G__setup_memvarHStart2Detector,G__setup_memfuncHStart2Detector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Hit),sizeof(HStart2Hit),-1,95488,"START detector hit data",G__setup_memvarHStart2Hit,G__setup_memfuncHStart2Hit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2HitFPar),sizeof(HStart2HitFPar),-1,65280,"Container for the START2 hit finder parameters",G__setup_memvarHStart2HitFPar,G__setup_memfuncHStart2HitFPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2HitF),sizeof(HStart2HitF),-1,62720,"Hit finder for START2 detector",G__setup_memvarHStart2HitF,G__setup_memfuncHStart2HitF);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HGeomVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2GeomPar),sizeof(HStart2GeomPar),-1,62720,"Container for the Start geometry parameters",G__setup_memvarHStart2GeomPar,G__setup_memfuncHStart2GeomPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2DigiPar),sizeof(HStart2DigiPar),-1,62720,"Container for the START digitization parameters",G__setup_memvarHStart2DigiPar,G__setup_memfuncHStart2DigiPar);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HSpecGeomPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2HitFSim),sizeof(HStart2HitFSim),-1,62720,"Hit finder for START2 detector",G__setup_memvarHStart2HitFSim,G__setup_memfuncHStart2HitFSim);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2HitFSimcLcLcelltrack);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2HitFSimcLcLcelldata);
   G__get_linked_tagnum_fwd(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelltrackmUcOallocatorlEHStart2HitFSimcLcLcelltrackmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_vectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_reverse_iteratorlEvectorlEHStart2HitFSimcLcLcelldatamUcOallocatorlEHStart2HitFSimcLcLcelldatamUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HDetGeomPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Raw),sizeof(HStart2Raw),-1,29952,"raw data of START detector using TRB for readout",G__setup_memvarHStart2Raw,G__setup_memfuncHStart2Raw);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb2LookupChan),sizeof(HStart2Trb2LookupChan),-1,29952,"Channel level of the lookup table for the START2 TRB2 unpacker",G__setup_memvarHStart2Trb2LookupChan,G__setup_memfuncHStart2Trb2LookupChan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb2LookupBoard),sizeof(HStart2Trb2LookupBoard),-1,29952,"Board level of  the lookup table for the START2 TRB2 unpacker",G__setup_memvarHStart2Trb2LookupBoard,G__setup_memfuncHStart2Trb2LookupBoard);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb2Lookup),sizeof(HStart2Trb2Lookup),-1,62720,"Lookup table for the TRB2 unpacker of the START2 detector",G__setup_memvarHStart2Trb2Lookup,G__setup_memfuncHStart2Trb2Lookup);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HTrb2Unpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb2Unpacker),sizeof(HStart2Trb2Unpacker),-1,29952,"TRB unpacker for START detector",G__setup_memvarHStart2Trb2Unpacker,G__setup_memfuncHStart2Trb2Unpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb3LookupChan),sizeof(HStart2Trb3LookupChan),-1,29952,"Channel level of the lookup table for the START2 TRB3 unpacker",G__setup_memvarHStart2Trb3LookupChan,G__setup_memfuncHStart2Trb3LookupChan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb3LookupTdc),sizeof(HStart2Trb3LookupTdc),-1,29952,"Tdc level of  the lookup table for the START2 TRB3 unpacker",G__setup_memvarHStart2Trb3LookupTdc,G__setup_memfuncHStart2Trb3LookupTdc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb3Lookup),sizeof(HStart2Trb3Lookup),-1,62720,"Lookup table for the TRB2 unpacker of the START2 detector",G__setup_memvarHStart2Trb3Lookup,G__setup_memfuncHStart2Trb3Lookup);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HTrb3Unpacker);
   G__get_linked_tagnum_fwd(&G__StartDictLN_vectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackercLcLChannelReccOallocatorlEHTrb3TdcUnpackercLcLChannelRecgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HTrb3Calpar);
   G__get_linked_tagnum_fwd(&G__StartDictLN_vectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgR);
   G__get_linked_tagnum_fwd(&G__StartDictLN_reverse_iteratorlEvectorlEHTrb3TdcUnpackermUcOallocatorlEHTrb3TdcUnpackermUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb3Unpacker),sizeof(HStart2Trb3Unpacker),-1,29952,"TRB3 unpacker for the start detector",G__setup_memvarHStart2Trb3Unpacker,G__setup_memfuncHStart2Trb3Unpacker);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStart2Trb3Calpar),sizeof(HStart2Trb3Calpar),-1,61696,"START2 TRB3 TDC calibration parameters",G__setup_memvarHStart2Trb3Calpar,G__setup_memfuncHStart2Trb3Calpar);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HContainer);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HContFact);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStartContFact),sizeof(HStartContFact),-1,62720,"Factory for parameter containers in libStart",G__setup_memvarHStartContFact,G__setup_memfuncHStartContFact);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStartParAsciiFileIo),sizeof(HStartParAsciiFileIo),-1,62464,"Class for START parameter I/O from Ascii files",G__setup_memvarHStartParAsciiFileIo,G__setup_memfuncHStartParAsciiFileIo);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HParRootFile);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HDetParRootFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStartParRootFileIo),sizeof(HStartParRootFileIo),-1,62464,"Class for START parameter I/O from ROOT file",G__setup_memvarHStartParRootFileIo,G__setup_memfuncHStartParRootFileIo);
   G__get_linked_tagnum_fwd(&G__StartDictLN_HTaskSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HStartTaskSet),sizeof(HStartTaskSet),-1,62720,"Set of tasks",G__setup_memvarHStartTaskSet,G__setup_memfuncHStartTaskSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HTBoxChan),sizeof(HTBoxChan),-1,29952,"Trigger Box data",G__setup_memvarHTBoxChan,G__setup_memfuncHTBoxChan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HTBoxDetector),sizeof(HTBoxDetector),-1,62720,"Trigger Box detector class",G__setup_memvarHTBoxDetector,G__setup_memfuncHTBoxDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__StartDictLN_HTBoxUnpacker),sizeof(HTBoxUnpacker),-1,29952,"unpack scaler data",G__setup_memvarHTBoxUnpacker,G__setup_memfuncHTBoxUnpacker);
}
extern "C" void G__cpp_setupStartDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupStartDict()");
  G__set_cpp_environmentStartDict();
  G__cpp_setup_tagtableStartDict();

  G__cpp_setup_inheritanceStartDict();

  G__cpp_setup_typetableStartDict();

  G__cpp_setup_memvarStartDict();

  G__cpp_setup_memfuncStartDict();
  G__cpp_setup_globalStartDict();
  G__cpp_setup_funcStartDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncStartDict();
  return;
}
class G__cpp_setup_initStartDict {
  public:
    G__cpp_setup_initStartDict() { G__add_setup_func("StartDict",(G__incsetup)(&G__cpp_setupStartDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initStartDict() { G__remove_setup_func("StartDict"); }
};
G__cpp_setup_initStartDict G__cpp_setup_initializerStartDict;

