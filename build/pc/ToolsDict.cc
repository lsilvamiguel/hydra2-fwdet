//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:53:42 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIToolsDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "ToolsDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void PTools_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_PTools(void *p = 0);
   static void *newArray_PTools(Long_t size, void *p);
   static void delete_PTools(void *p);
   static void deleteArray_PTools(void *p);
   static void destruct_PTools(void *p);
   static void streamer_PTools(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::PTools*)
   {
      ::PTools *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::PTools >(0);
      static ::ROOT::TGenericClassInfo 
         instance("PTools", ::PTools::Class_Version(), "././ptools.h", 36,
                  typeid(::PTools), ::ROOT::DefineBehavior(ptr, ptr),
                  &::PTools::Dictionary, isa_proxy, 0,
                  sizeof(::PTools) );
      instance.SetNew(&new_PTools);
      instance.SetNewArray(&newArray_PTools);
      instance.SetDelete(&delete_PTools);
      instance.SetDeleteArray(&deleteArray_PTools);
      instance.SetDestructor(&destruct_PTools);
      instance.SetStreamerFunc(&streamer_PTools);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::PTools*)
   {
      return GenerateInitInstanceLocal((::PTools*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::PTools*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void MPTools_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_MPTools(void *p = 0);
   static void *newArray_MPTools(Long_t size, void *p);
   static void delete_MPTools(void *p);
   static void deleteArray_MPTools(void *p);
   static void destruct_MPTools(void *p);
   static void streamer_MPTools(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::MPTools*)
   {
      ::MPTools *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::MPTools >(0);
      static ::ROOT::TGenericClassInfo 
         instance("MPTools", ::MPTools::Class_Version(), "././mptools.h", 23,
                  typeid(::MPTools), ::ROOT::DefineBehavior(ptr, ptr),
                  &::MPTools::Dictionary, isa_proxy, 0,
                  sizeof(::MPTools) );
      instance.SetNew(&new_MPTools);
      instance.SetNewArray(&newArray_MPTools);
      instance.SetDelete(&delete_MPTools);
      instance.SetDeleteArray(&deleteArray_MPTools);
      instance.SetDestructor(&destruct_MPTools);
      instance.SetStreamerFunc(&streamer_MPTools);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::MPTools*)
   {
      return GenerateInitInstanceLocal((::MPTools*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::MPTools*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HPTools_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HPTools(void *p = 0);
   static void *newArray_HPTools(Long_t size, void *p);
   static void delete_HPTools(void *p);
   static void deleteArray_HPTools(void *p);
   static void destruct_HPTools(void *p);
   static void streamer_HPTools(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HPTools*)
   {
      ::HPTools *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HPTools >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HPTools", ::HPTools::Class_Version(), "././hptools.h", 30,
                  typeid(::HPTools), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HPTools::Dictionary, isa_proxy, 0,
                  sizeof(::HPTools) );
      instance.SetNew(&new_HPTools);
      instance.SetNewArray(&newArray_HPTools);
      instance.SetDelete(&delete_HPTools);
      instance.SetDeleteArray(&deleteArray_HPTools);
      instance.SetDestructor(&destruct_HPTools);
      instance.SetStreamerFunc(&streamer_HPTools);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HPTools*)
   {
      return GenerateInitInstanceLocal((::HPTools*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HPTools*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HReport_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HReport(void *p = 0);
   static void *newArray_HReport(Long_t size, void *p);
   static void delete_HReport(void *p);
   static void deleteArray_HReport(void *p);
   static void destruct_HReport(void *p);
   static void streamer_HReport(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HReport*)
   {
      ::HReport *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HReport >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HReport", ::HReport::Class_Version(), "././hreport.h", 10,
                  typeid(::HReport), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HReport::Dictionary, isa_proxy, 0,
                  sizeof(::HReport) );
      instance.SetNew(&new_HReport);
      instance.SetNewArray(&newArray_HReport);
      instance.SetDelete(&delete_HReport);
      instance.SetDeleteArray(&deleteArray_HReport);
      instance.SetDestructor(&destruct_HReport);
      instance.SetStreamerFunc(&streamer_HReport);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HReport*)
   {
      return GenerateInitInstanceLocal((::HReport*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HReport*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr PTools::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *PTools::Class_Name()
{
   return "PTools";
}

//______________________________________________________________________________
const char *PTools::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PTools*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int PTools::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::PTools*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void PTools::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PTools*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *PTools::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::PTools*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr MPTools::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *MPTools::Class_Name()
{
   return "MPTools";
}

//______________________________________________________________________________
const char *MPTools::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPTools*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int MPTools::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::MPTools*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void MPTools::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPTools*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *MPTools::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::MPTools*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HPTools::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HPTools::Class_Name()
{
   return "HPTools";
}

//______________________________________________________________________________
const char *HPTools::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPTools*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HPTools::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPTools*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HPTools::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPTools*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HPTools::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPTools*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HReport::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HReport::Class_Name()
{
   return "HReport";
}

//______________________________________________________________________________
const char *HReport::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HReport*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HReport::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HReport*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HReport::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HReport*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HReport::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HReport*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void PTools::Streamer(TBuffer &R__b)
{
   // Stream an object of class PTools.

   ::Error("PTools::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void PTools::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class PTools.
      TClass *R__cl = ::PTools::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_PTools(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PTools : new ::PTools;
   }
   static void *newArray_PTools(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::PTools[nElements] : new ::PTools[nElements];
   }
   // Wrapper around operator delete
   static void delete_PTools(void *p) {
      delete ((::PTools*)p);
   }
   static void deleteArray_PTools(void *p) {
      delete [] ((::PTools*)p);
   }
   static void destruct_PTools(void *p) {
      typedef ::PTools current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_PTools(TBuffer &buf, void *obj) {
      ((::PTools*)obj)->::PTools::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::PTools

//______________________________________________________________________________
void HPTools::Streamer(TBuffer &R__b)
{
   // Stream an object of class HPTools.

   ::Error("HPTools::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HPTools::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HPTools.
      TClass *R__cl = ::HPTools::IsA();
      if (R__cl || R__insp.IsA()) { }
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HPTools(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HPTools : new ::HPTools;
   }
   static void *newArray_HPTools(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HPTools[nElements] : new ::HPTools[nElements];
   }
   // Wrapper around operator delete
   static void delete_HPTools(void *p) {
      delete ((::HPTools*)p);
   }
   static void deleteArray_HPTools(void *p) {
      delete [] ((::HPTools*)p);
   }
   static void destruct_HPTools(void *p) {
      typedef ::HPTools current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HPTools(TBuffer &buf, void *obj) {
      ((::HPTools*)obj)->::HPTools::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HPTools

//______________________________________________________________________________
void MPTools::Streamer(TBuffer &R__b)
{
   // Stream an object of class MPTools.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void MPTools::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class MPTools.
      TClass *R__cl = ::MPTools::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_MPTools(void *p) {
      return  p ? new(p) ::MPTools : new ::MPTools;
   }
   static void *newArray_MPTools(Long_t nElements, void *p) {
      return p ? new(p) ::MPTools[nElements] : new ::MPTools[nElements];
   }
   // Wrapper around operator delete
   static void delete_MPTools(void *p) {
      delete ((::MPTools*)p);
   }
   static void deleteArray_MPTools(void *p) {
      delete [] ((::MPTools*)p);
   }
   static void destruct_MPTools(void *p) {
      typedef ::MPTools current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_MPTools(TBuffer &buf, void *obj) {
      ((::MPTools*)obj)->::MPTools::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::MPTools

//______________________________________________________________________________
void HReport::Streamer(TBuffer &R__b)
{
   // Stream an object of class HReport.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      texfile.Streamer(R__b);
      texdir.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HReport::IsA());
   } else {
      R__c = R__b.WriteVersion(HReport::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      texfile.Streamer(R__b);
      texdir.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HReport::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HReport.
      TClass *R__cl = ::HReport::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "texfile", &texfile);
      R__insp.InspectMember(texfile, "texfile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "texdir", &texdir);
      R__insp.InspectMember(texdir, "texdir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "colorlinks", &colorlinks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeTOC", &makeTOC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeListFigures", &makeListFigures);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeListTables", &makeListTables);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "makeListListings", &makeListListings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "draft", &draft);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "font_size", &font_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "single_double", &single_double);
      R__insp.InspectMember(single_double, "single_double.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "orientation", &orientation);
      R__insp.InspectMember(orientation, "orientation.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "column", &column);
      R__insp.InspectMember(column, "column.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "viewer", &viewer);
      R__insp.InspectMember(viewer, "viewer.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "keeppics", &keeppics);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "include_packages", &include_packages);
      R__insp.InspectMember(include_packages, "include_packages.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "title", &title);
      R__insp.InspectMember(title, "title.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "author", &author);
      R__insp.InspectMember(author, "author.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "date", &date);
      R__insp.InspectMember(date, "date.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "daytime", &daytime);
      R__insp.InspectMember(daytime, "daytime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fout", &fout);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "setopt", &setopt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "includepack", &includepack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opentex", &opentex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "opendoc", &opendoc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "closedoc", &closedoc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "useviewer", &useviewer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "linebreak", &linebreak);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "linect", &linect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "always_skip_curly", &always_skip_curly);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HReport(void *p) {
      return  p ? new(p) ::HReport : new ::HReport;
   }
   static void *newArray_HReport(Long_t nElements, void *p) {
      return p ? new(p) ::HReport[nElements] : new ::HReport[nElements];
   }
   // Wrapper around operator delete
   static void delete_HReport(void *p) {
      delete ((::HReport*)p);
   }
   static void deleteArray_HReport(void *p) {
      delete [] ((::HReport*)p);
   }
   static void destruct_HReport(void *p) {
      typedef ::HReport current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HReport(TBuffer &buf, void *obj) {
      ((::HReport*)obj)->::HReport::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HReport

/********************************************************
* ../build/pc/ToolsDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableToolsDict();

extern "C" void G__set_cpp_environmentToolsDict() {
  G__cpp_reset_tagtableToolsDict();
}
#include <new>
extern "C" int G__cpp_dllrevToolsDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* PTools */
static int G__ToolsDict_331_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PTools* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PTools[n];
     } else {
       p = new((void*) gvp) PTools[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new PTools;
     } else {
       p = new((void*) gvp) PTools;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_PTools));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((TCanvas*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((TCanvas*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((TCanvas*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((TCanvas*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad(
(TCanvas*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (TPaveText*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad(
(TCanvas*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (const Char_t*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad(
(TCanvas*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, *((TString*) G__int(libp->para[6]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (TPaveText*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), *((TString*) G__int(libp->para[5]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (TPaveText*) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (const Char_t*) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getDividedSubPad(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), *((TString*) G__int(libp->para[7]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::evalStopwatch((TStopwatch*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      PTools::setTitleArts((THStack*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setTitleArts((THStack*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      PTools::setTitleArts((THStack*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setTitleArts((THStack*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setTitleArts((TH1*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::drawCanvas((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (TH1**) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::draw32Canvas((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (TH1F**) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) PTools::draw32CanvasTH2((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (TH2F**) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::draw32CanvasTH2((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (TH2F**) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::cutEnd((Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTools::myexec((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = PTools::myexec(*((TString*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      PTools::mdb((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      PTools::mdb();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) PTools::Mkdir((TDirectory*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::Mkdir((TDirectory*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::Mkdir((TDirectory*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) PTools::Mkdir((TDirectory*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::Mkdir((TDirectory*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::Mkdir((TDirectory*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::getHistogramLimits((TH1*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Axis_t*) G__Doubleref(&libp->para[2]), *(Axis_t*) G__Doubleref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::getHistogramLimits(
(TH1*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Axis_t*) G__Doubleref(&libp->para[2]), *(Axis_t*) G__Doubleref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Axis_t*) G__Doubleref(&libp->para[5])
, *(Axis_t*) G__Doubleref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::getHistogramLimits(
(TH1*) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Axis_t*) G__Doubleref(&libp->para[2]), *(Axis_t*) G__Doubleref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Axis_t*) G__Doubleref(&libp->para[5])
, *(Axis_t*) G__Doubleref(&libp->para[6]), *(Int_t*) G__Intref(&libp->para[7])
, *(Axis_t*) G__Doubleref(&libp->para[8]), *(Axis_t*) G__Doubleref(&libp->para[9]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) PTools::getNFilledBins((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) PTools::getNFilledBins((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) PTools::getNFilledBins((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PTools::compareHistogramLimits((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::printHistogramLimits((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::printHistogramLimits((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::printHistogramLimits((TH3*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      PTools::cleanHistogram((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::cleanHistogram((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      PTools::cutHistogram((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      PTools::cutHistogram((TH2*) G__int(libp->para[0]), (TCutG*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      PTools::cutHistogram((TH2*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      PTools::cutHistogram((TH2*) G__int(libp->para[0]), (TObjArray*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::prefixToName((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::prefixToTitle((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::prefixToNameTitle((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::postfixToName((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::postfixToTitle((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::postfixToNameTitle((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::suffixToName((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::suffixToTitle((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::suffixToNameTitle((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      PTools::plotCounts((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      PTools::plotCounts((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      PTools::plotCounts((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH1F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH1F(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (const Char_t*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) PTools::getTH2F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10]))));
      break;
   case 10:
      G__letint(result7, 85, (long) PTools::getTH2F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) PTools::getTH2F(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (const Char_t*) G__int(libp->para[8]), (const Char_t*) G__int(libp->para[9])
, (const Char_t*) G__int(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) PTools::getTH2F(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (const Char_t*) G__int(libp->para[8]), (const Char_t*) G__int(libp->para[9])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH3F(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12])), *((TString*) G__int(libp->para[13]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH3F(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (const Char_t*) G__int(libp->para[11])
, (const Char_t*) G__int(libp->para[12]), (const Char_t*) G__int(libp->para[13])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH1D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH1D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (const Char_t*) G__int(libp->para[5])
, (const Char_t*) G__int(libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) PTools::getTH2D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10]))));
      break;
   case 10:
      G__letint(result7, 85, (long) PTools::getTH2D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      G__letint(result7, 85, (long) PTools::getTH2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (const Char_t*) G__int(libp->para[8]), (const Char_t*) G__int(libp->para[9])
, (const Char_t*) G__int(libp->para[10])));
      break;
   case 10:
      G__letint(result7, 85, (long) PTools::getTH2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (const Char_t*) G__int(libp->para[8]), (const Char_t*) G__int(libp->para[9])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH3D(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), *((TString*) G__int(libp->para[11]))
, *((TString*) G__int(libp->para[12])), *((TString*) G__int(libp->para[13]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getTH3D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Double_t) G__double(libp->para[6]), (Double_t) G__double(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Double_t) G__double(libp->para[9])
, (Double_t) G__double(libp->para[10]), (const Char_t*) G__int(libp->para[11])
, (const Char_t*) G__int(libp->para[12]), (const Char_t*) G__int(libp->para[13])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::reverseXAxis((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::reverseYAxis((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::reverseZAxis((TH3*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      PTools::plotPolarAxis((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::plotPolarAxis((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      PTools::plotPolarAxis((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      PTools::plotPolarAxis((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      PTools::plotPolarAxis();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      PTools::plotPolarAxis((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      PTools::plotPolarAxis((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      PTools::plotPolarAxis((TH2*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      PTools::plotPolarGrid((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      PTools::plotPolarGrid();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::plotPolarSectorGridHADES();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::saveToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::saveToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::saveToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      PTools::saveToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      PTools::saveToPdf((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::saveToPng((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::saveToPng((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::saveToPng((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      PTools::saveToPng((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      PTools::saveToPng((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::saveGifToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::saveGifToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::saveGifToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      PTools::saveGifToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      PTools::saveGifToPdf((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::saveToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::saveToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::saveToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      PTools::saveToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      PTools::saveToPdf((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::saveToPng((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::saveToPng((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::saveToPng((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      PTools::saveToPng((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      PTools::saveToPng((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::saveGifToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::saveGifToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::saveGifToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      PTools::saveGifToPdf((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      PTools::saveGifToPdf((TPad*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTools::getColorJM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTools::getMarkerJM((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      PTools::setGraph((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      PTools::setGraph((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setGraph((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setGraph((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      PTools::setGraph((TGraph*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      PTools::setGraph((TGraph*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      PTools::setHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      PTools::setHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      PTools::setHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      PTools::setHist((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::plotLegend(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, *((TString*) G__int(libp->para[6])), (Int_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::plotLegend(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, *((TString*) G__int(libp->para[6]))));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::plotLegend(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::plotLegend(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::plotLegend(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::plotLegend(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::plotLegend(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::plotLegend(*((TString*) G__int(libp->para[0]))));
      break;
   case 0:
      G__letint(result7, 85, (long) PTools::plotLegend());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setLegendEntry((TLegend*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) PTools::plotTopLegend((const Char_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::plotTopLegend((const Char_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::plotTopLegend((const Char_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::plotTopLegend((const Char_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::plotTopLegend((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) PTools::getMeanErrorRangeUser((TH1*) G__int(libp->para[0]), (Axis_t) G__double(libp->para[1])
, (Axis_t) G__double(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letdouble(result7, 100, (double) PTools::getMeanErrorRangeUser((TH1*) G__int(libp->para[0]), (Axis_t) G__double(libp->para[1])
, (Axis_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) PTools::getMeanErrorRange((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letdouble(result7, 100, (double) PTools::getMeanErrorRange((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) PTools::getMeanRangeUser((TH1*) G__int(libp->para[0]), (Axis_t) G__double(libp->para[1])
, (Axis_t) G__double(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letdouble(result7, 100, (double) PTools::getMeanRangeUser((TH1*) G__int(libp->para[0]), (Axis_t) G__double(libp->para[1])
, (Axis_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) PTools::getMeanRange((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letdouble(result7, 100, (double) PTools::getMeanRange((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::sqrt((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) PTools::Clone((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::Clone((TNamed*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::Clone((TNamed*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH1D* pobj;
         TH1D xobj = PTools::copyToTH1D((TH1*) G__int(libp->para[0]));
         pobj = new TH1D(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH2D* pobj;
         TH2D xobj = PTools::copyToTH2D((TH2*) G__int(libp->para[0]));
         pobj = new TH2D(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TH3D* pobj;
         TH3D xobj = PTools::copyToTH3D((TH3*) G__int(libp->para[0]));
         pobj = new TH3D(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::createTH1D((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::createTH2D((TH2*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::createTH3D((TH3*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::importAxisAttributes((TAxis*) G__int(libp->para[0]), (TAxis*) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::importAxisLabels((TAxis*) G__int(libp->para[0]), (TAxis*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTools::checkHistogramCompatibility((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PTools::areHistogramsCompatible((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PTools::areArraysCompatible((TArray*) G__int(libp->para[0]), (TArray*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) PTools::fillGraphErr((TH1*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::fillGraphErr((TH1*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::fillGraphErr((TH1*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::fillGraphErr((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) PTools::getHistStats((TH1*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::getHistStats((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) PTools::getHistStats((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::getHistStats((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::getHistStats((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsXPosNDC((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsXPosNDC((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsYPosNDC((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsYPosNDC((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsPosNDC((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsPosNDC((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getHistStatsXPosNDC((TH1*) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getHistStatsXPosNDC((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getHistStatsYPosNDC((TH1*) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getHistStatsYPosNDC((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getHistStatsPosNDC((TH1*) G__int(libp->para[0]), *(Double_t*) G__Doubleref(&libp->para[1])
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getHistStatsPosNDC((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *(Double_t*) G__Doubleref(&libp->para[2]), *(Double_t*) G__Doubleref(&libp->para[3])
, *(Double_t*) G__Doubleref(&libp->para[4]), *(Double_t*) G__Doubleref(&libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsTextColor((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::setHistStatsTextColor((TPad*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 9:
      PTools::setLatexArts(
(TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Bool_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      PTools::setLatexArts(
(TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      PTools::setLatexArts(
(TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      PTools::setLatexArts((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      PTools::setLatexArts((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setLatexArts((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setLatexArts((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      PTools::setLatexArtsNDC(
(TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      PTools::setLatexArtsNDC(
(TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      PTools::setLatexArtsNDC((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      PTools::setLatexArtsNDC((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::setLatexArtsNDC((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      PTools::setLatexArtsNDC((TLatex*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PTools::loadMacro((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) PTools::loadMacro(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 10:
      G__letint(result7, 105, (long) PTools::getLinearIndex(
(Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (UInt_t) G__int(libp->para[9])));
      break;
   case 9:
      G__letint(result7, 105, (long) PTools::getLinearIndex(
(Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8])));
      break;
   case 8:
      G__letint(result7, 105, (long) PTools::getLinearIndex(
(Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (UInt_t) G__int(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 105, (long) PTools::getLinearIndex(
(Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 105, (long) PTools::getLinearIndex((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (UInt_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 105, (long) PTools::getLinearIndex((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 105, (long) PTools::getLinearIndex((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) PTools::getLinearIndex((Int_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTools::getLinearIndex((Int_t*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatexWC(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatexWC(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatexWC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatexWC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatexWC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatexWC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatexWC(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatexWC(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatexWC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatexWC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatexWC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatexWC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatex(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatex(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatex(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatex(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatex(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatex(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatex(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatex(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatex((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatex((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatex((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatex((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatexPadCoords((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(
*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(*((TString*) G__int(libp->para[0])), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Float_t) G__double(libp->para[7])));
      break;
   case 7:
      G__letint(result7, 85, (long) PTools::drawLatexNDC(
(const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::drawLatexNDC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::drawLatexNDC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Float_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::drawLatexNDC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::drawLatexNDC((const Char_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) PTools::getErrorsOfHistogram((TH1*) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::getErrorsOfHistogram((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::setErrorsOfHistogram((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) PTools::copyToUnitBinsPlusLabels((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::copyToUnitBinsPlusLabels((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::copyToUnitBinsPlusLabels((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::copyToUnitBinsPlusLabels((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      PTools::substractFromHist((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Bool_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      PTools::substractFromHist((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) PTools::getBinContentDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::getBinContentDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::getBinContentDistribution((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::getOneOverHist((TH1*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::setHistErrors((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) PTools::reBinHistX((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::reBinHistX((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      PTools::cleanHistogramPtyOnP((TH2*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      PTools::cleanHistogramPtyOnP((TH2*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) PTools::findEndOfDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) PTools::findEndOfDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) PTools::findBeginOfDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) PTools::findBeginOfDistribution((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::scaleHistErrors((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) PTools::copyBinSubsetOfHist(
(TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::copyBinSubsetOfHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::copyBinSubsetOfHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::copyBinSubsetOfHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::copyBinSubsetOfHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::copyBinSubsetOfHist((TH1*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::copyBinSubsetOfHist((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) PTools::copySubsetOfHist(
(TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) PTools::copySubsetOfHist((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) PTools::copySubsetOfHist((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) PTools::copySubsetOfHist((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) PTools::copySubsetOfHist((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) PTools::copySubsetOfHist((TH1*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) PTools::copySubsetOfHist((TH1*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) PTools::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTools::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) PTools::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      PTools::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const PTools*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTools*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTools*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((PTools*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTools::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTools::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) PTools::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_331_0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) PTools::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ToolsDict_331_0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   PTools* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new PTools(*(PTools*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_PTools));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef PTools G__TPTools;
static int G__ToolsDict_331_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (PTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((PTools*) (soff+(sizeof(PTools)*i)))->~G__TPTools();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (PTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((PTools*) (soff))->~G__TPTools();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ToolsDict_331_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   PTools* dest = (PTools*) G__getstructoffset();
   *dest = *(PTools*) libp->para[0].ref;
   const PTools& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* MPTools */
static int G__ToolsDict_333_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::getDistancePointToStraight(*(HGeomVector*) libp->para[0].ref, *(HGeomVector*) libp->para[1].ref
, *(HGeomVector*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MPTools::calculateLikeSignCombinatorialBackground((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) MPTools::calculateLikeSignCombinatorialBackground((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) MPTools::calculateLikeSignCombinatorialBackground((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2]), *((TString*) G__int(libp->para[3]))));
      break;
   case 3:
      G__letint(result7, 85, (long) MPTools::calculateLikeSignCombinatorialBackground((TH1*) G__int(libp->para[0]), (TH1*) G__int(libp->para[1])
, (TH1*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::poissonDistribution((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MPTools::poissonDistribution((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MPTools::poissonDistribution((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::poissonDistributionShifted((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MPTools::poissonDistributionShifted((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MPTools::poissonDistributionShifted((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MPTools::poissonDistributionShifted((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::binomialDistribution((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letdouble(result7, 100, (double) MPTools::binomialDistribution((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letdouble(result7, 100, (double) MPTools::binomialDistribution((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::chiSquareDistribution((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letdouble(result7, 100, (double) MPTools::chiSquareDistribution((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letdouble(result7, 100, (double) MPTools::chiSquareDistribution((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::integralGauss((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::calcCMMomentumOfPairDecay(
(Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, *(Double_t*) G__Doubleref(&libp->para[6])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::calcCMMomentumOfPairDecay((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) MPTools::calcCMEnergyOfPairDecay((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPt((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToY((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPtInInvariantRepresentation((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPtInBoltzmannRepresentation((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToMtInInvariantRepresentation((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToMtInBoltzmannRepresentation((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToMtM0InInvariantRepresentation((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToMtM0((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::projectPtYDownToMt((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPtScaled((TH2*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPtScaled((TH2*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPtScaled((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPt((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToPt((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToYScaled((TH2*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToYScaled((TH2*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToYScaled((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToY((TH2*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) MPTools::projectPtYDownToY((TH2*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) MPTools::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPTools::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) MPTools::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      MPTools::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((MPTools*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPTools::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPTools::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) MPTools::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_333_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) MPTools::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__ToolsDict_333_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPTools *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPTools[n];
     } else {
       p = new((void*) gvp) MPTools[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new MPTools;
     } else {
       p = new((void*) gvp) MPTools;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_MPTools));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ToolsDict_333_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   MPTools* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new MPTools(*(MPTools*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_MPTools));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef MPTools G__TMPTools;
static int G__ToolsDict_333_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (MPTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((MPTools*) (soff+(sizeof(MPTools)*i)))->~G__TMPTools();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (MPTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((MPTools*) (soff))->~G__TMPTools();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ToolsDict_333_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   MPTools* dest = (MPTools*) G__getstructoffset();
   *dest = *(MPTools*) libp->para[0].ref;
   const MPTools& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HPTools */
static int G__ToolsDict_676_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HPTools* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HPTools[n];
     } else {
       p = new((void*) gvp) HPTools[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HPTools;
     } else {
       p = new((void*) gvp) HPTools;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_HPTools));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) HPTools::addSourceList((HDataSource*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) HPTools::addSourceList((HDataSource*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      HPTools::geantPidAxis((TH1*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      HPTools::geantPidAxis((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPTools::plotGeantAxis((TAxis*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      HPTools::geantProcessAxis((TH1*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      HPTools::geantProcessAxis((TH1*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPTools::plotGeantProcessAxis((TAxis*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPTools::plotPolarSectorGrid();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      HPTools::plot_pty_PZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      HPTools::plot_pty_PZ();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPTools::printAnalysisFileInfo((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HPTools::mdcDetectorSetup(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HPTools::mdcDetectorSetup((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HPTools::mdcDetectorSetup((Int_t (*)[4]) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) HPTools::getRhoVertex(*(HGeomVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      HPTools::printCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      HPTools::printCounter((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HPTools::hadesInit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPTools::hadesEventLoop((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HPTools::usageFileInDirOutDirNevtStart((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HPTools::usageFileInDirOutDirNevtStart(*((TString*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPTools::mainFileInDirOutDirNevtStar((Int_t) G__int(libp->para[0]), (Char_t**) G__int(libp->para[1])
, (Int_t (*) (TString outDir, TString inputDir, TString inputFile, Int_t nEvents, Int_t startEvt)) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      HPTools::setPersistency((Bool_t) G__int(libp->para[0]), (Cat_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]), (UInt_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      HPTools::setPersistency((Bool_t) G__int(libp->para[0]), (Cat_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPTools::setPersistencyClean((Bool_t) G__int(libp->para[0]), (Cat_t*) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) HPTools::getPairPidHistogramm((Axis_t) G__double(libp->para[0]), (Axis_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Double_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) HPTools::getPairPidHistogramm((Axis_t) G__double(libp->para[0]), (Axis_t) G__double(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HPTools::getPairPidHistogramm((Axis_t) G__double(libp->para[0]), (Axis_t) G__double(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HPTools::getPairPidHistogramm((Axis_t) G__double(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) HPTools::getPairPidHistogramm());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = HPTools::getGeantPidNameLatex((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = HPTools::getGeantProcessNameLatex((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HPTools::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPTools::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HPTools::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPTools::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HPTools*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPTools*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPTools*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPTools*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPTools::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPTools::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPTools::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_676_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPTools::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ToolsDict_676_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HPTools* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HPTools(*(HPTools*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_HPTools));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HPTools G__THPTools;
static int G__ToolsDict_676_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HPTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HPTools*) (soff+(sizeof(HPTools)*i)))->~G__THPTools();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HPTools*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HPTools*) (soff))->~G__THPTools();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ToolsDict_676_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HPTools* dest = (HPTools*) G__getstructoffset();
   *dest = *(HPTools*) libp->para[0].ref;
   const HPTools& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HReport */
static int G__ToolsDict_677_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HReport* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HReport((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HReport((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HReport((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HReport((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HReport[n];
       } else {
         p = new((void*) gvp) HReport[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HReport;
       } else {
         p = new((void*) gvp) HReport;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_HReport));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HReport*) G__getstructoffset())->setOptions(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->setOptions();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HReport*) G__getstructoffset())->includePackages(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->includePackages();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      ((HReport*) G__getstructoffset())->openTex(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((HReport*) G__getstructoffset())->openTex(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((HReport*) G__getstructoffset())->openTex(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((HReport*) G__getstructoffset())->openTex(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->openTex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->openDocument();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->closeDocument();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->addText(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 13:
      ((HReport*) G__getstructoffset())->figure(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, *((TString*) G__int(libp->para[10])), (Bool_t) G__int(libp->para[11])
, *((TString*) G__int(libp->para[12])));
      G__setnull(result7);
      break;
   case 12:
      ((HReport*) G__getstructoffset())->figure(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, *((TString*) G__int(libp->para[10])), (Bool_t) G__int(libp->para[11]));
      G__setnull(result7);
      break;
   case 11:
      ((HReport*) G__getstructoffset())->figure(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, *((TString*) G__int(libp->para[10])));
      G__setnull(result7);
      break;
   case 10:
      ((HReport*) G__getstructoffset())->figure(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((HReport*) G__getstructoffset())->figure(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((HReport*) G__getstructoffset())->figure(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((HReport*) G__getstructoffset())->figure(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((HReport*) G__getstructoffset())->figure((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((HReport*) G__getstructoffset())->figure((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((HReport*) G__getstructoffset())->figure((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((HReport*) G__getstructoffset())->figure((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((HReport*) G__getstructoffset())->figure((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((HReport*) G__getstructoffset())->figure((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->figure();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 15:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, *((TString*) G__int(libp->para[12])), (Bool_t) G__int(libp->para[13])
, *((TString*) G__int(libp->para[14])));
      G__setnull(result7);
      break;
   case 14:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, *((TString*) G__int(libp->para[12])), (Bool_t) G__int(libp->para[13]));
      G__setnull(result7);
      break;
   case 13:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11])
, *((TString*) G__int(libp->para[12])));
      G__setnull(result7);
      break;
   case 12:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]), (Int_t) G__int(libp->para[11]));
      G__setnull(result7);
      break;
   case 11:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9])
, (Int_t) G__int(libp->para[10]));
      G__setnull(result7);
      break;
   case 10:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]), (Int_t) G__int(libp->para[9]));
      G__setnull(result7);
      break;
   case 9:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7])
, (Int_t) G__int(libp->para[8]));
      G__setnull(result7);
      break;
   case 8:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((HReport*) G__getstructoffset())->figureSideCaption(
(TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((HReport*) G__getstructoffset())->figureSideCaption((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((HReport*) G__getstructoffset())->figureSideCaption((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Float_t) G__double(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((HReport*) G__getstructoffset())->figureSideCaption((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((HReport*) G__getstructoffset())->figureSideCaption((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((HReport*) G__getstructoffset())->figureSideCaption((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((HReport*) G__getstructoffset())->figureSideCaption((TCanvas*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->figureSideCaption();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 11:
      ((HReport*) G__getstructoffset())->table(
(Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6])), *((TString*) G__int(libp->para[7]))
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9]))
, *((TString*) G__int(libp->para[10])));
      G__setnull(result7);
      break;
   case 10:
      ((HReport*) G__getstructoffset())->table(
(Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6])), *((TString*) G__int(libp->para[7]))
, *((TString*) G__int(libp->para[8])), *((TString*) G__int(libp->para[9])));
      G__setnull(result7);
      break;
   case 9:
      ((HReport*) G__getstructoffset())->table(
(Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6])), *((TString*) G__int(libp->para[7]))
, *((TString*) G__int(libp->para[8])));
      G__setnull(result7);
      break;
   case 8:
      ((HReport*) G__getstructoffset())->table(
(Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6])), *((TString*) G__int(libp->para[7])));
      G__setnull(result7);
      break;
   case 7:
      ((HReport*) G__getstructoffset())->table(
(Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])), *((TString*) G__int(libp->para[5]))
, *((TString*) G__int(libp->para[6])));
      G__setnull(result7);
      break;
   case 6:
      ((HReport*) G__getstructoffset())->table((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])), *((TString*) G__int(libp->para[5])));
      G__setnull(result7);
      break;
   case 5:
      ((HReport*) G__getstructoffset())->table((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *((TString*) G__int(libp->para[4])));
      G__setnull(result7);
      break;
   case 4:
      ((HReport*) G__getstructoffset())->table((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((HReport*) G__getstructoffset())->table((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HReport*) G__getstructoffset())->table((Float_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HReport*) G__getstructoffset())->table((Float_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->table();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HReport*) G__getstructoffset())->openTable(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->openTable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HReport*) G__getstructoffset())->closeTable(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((HReport*) G__getstructoffset())->closeTable(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((HReport*) G__getstructoffset())->closeTable(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->closeTable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->openAppendix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->closeAppendix();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      ((HReport*) G__getstructoffset())->includeSource(
*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, *((TString*) G__int(libp->para[6])));
      G__setnull(result7);
      break;
   case 6:
      ((HReport*) G__getstructoffset())->includeSource(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((HReport*) G__getstructoffset())->includeSource(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3]))
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((HReport*) G__getstructoffset())->includeSource(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])), *((TString*) G__int(libp->para[3])));
      G__setnull(result7);
      break;
   case 3:
      ((HReport*) G__getstructoffset())->includeSource(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1]))
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
      break;
   case 2:
      ((HReport*) G__getstructoffset())->includeSource(*((TString*) G__int(libp->para[0])), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
      break;
   case 1:
      ((HReport*) G__getstructoffset())->includeSource(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->includeSource();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->makepdf();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->openpdf();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->printOrder();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->printOptions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->printSettings();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPdf((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPdf((TCanvas*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPdf());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPng((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPng((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPng((TCanvas*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))));
      break;
   case 1:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPng((TCanvas*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((HReport*) G__getstructoffset())->saveToPng());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 5:
      G__letint(result7, 85, (long) ((HReport*) G__getstructoffset())->parseString(*((TString*) G__int(libp->para[0])), *(Int_t*) G__Intref(&libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])
, (Bool_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 85, (long) ((HReport*) G__getstructoffset())->parseString(*((TString*) G__int(libp->para[0])), *(Int_t*) G__Intref(&libp->para[1])
, *((TString*) G__int(libp->para[2])), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((HReport*) G__getstructoffset())->parseString(*((TString*) G__int(libp->para[0])), *(Int_t*) G__Intref(&libp->para[1])
, *((TString*) G__int(libp->para[2]))));
      break;
   case 2:
      G__letint(result7, 85, (long) ((HReport*) G__getstructoffset())->parseString(*((TString*) G__int(libp->para[0])), *(Int_t*) G__Intref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->setLineBreak((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->allwaysSkipCurly();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HReport*) G__getstructoffset())->writeTex(*((TString*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HReport*) G__getstructoffset())->writeTex(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   case 0:
      ((HReport*) G__getstructoffset())->writeTex();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HReport::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HReport::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HReport::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HReport::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReport*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HReport::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HReport::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HReport::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__ToolsDict_677_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HReport::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__ToolsDict_677_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HReport* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HReport(*(HReport*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__ToolsDictLN_HReport));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HReport G__THReport;
static int G__ToolsDict_677_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HReport*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HReport*) (soff+(sizeof(HReport)*i)))->~G__THReport();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HReport*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HReport*) (soff))->~G__THReport();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__ToolsDict_677_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HReport* dest = (HReport*) G__getstructoffset();
   *dest = *(HReport*) libp->para[0].ref;
   const HReport& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* PTools */

/* MPTools */

/* HPTools */

/* HReport */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncToolsDict {
 public:
  G__Sizep2memfuncToolsDict(): p(&G__Sizep2memfuncToolsDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncToolsDict::*p)();
};

size_t G__get_sizep2memfuncToolsDict()
{
  G__Sizep2memfuncToolsDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceToolsDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ToolsDictLN_MPTools))) {
     MPTools *G__Lderived;
     G__Lderived=(MPTools*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ToolsDictLN_MPTools),G__get_linked_tagnum(&G__ToolsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__ToolsDictLN_HReport))) {
     HReport *G__Lderived;
     G__Lderived=(HReport*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ToolsDictLN_HReport),G__get_linked_tagnum(&G__ToolsDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__ToolsDictLN_HReport),G__get_linked_tagnum(&G__ToolsDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableToolsDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Axis_t",100,-1,0,-1);
   G__setnewtype(-1,"Axis values type (double)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ToolsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ToolsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__ToolsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ToolsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ToolsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ToolsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ToolsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__ToolsDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__ToolsDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__ToolsDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__ToolsDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__ToolsDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__ToolsDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__ToolsDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Cat_t",115,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__ToolsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ToolsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__ToolsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__ToolsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Int_t (*)[4]",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Int_t (*) (TString outDir, TString inputDir, TString inputFile, Int_t nEvents, Int_t startEvt)",49,-1,0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* PTools */
static void G__setup_memvarPTools(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ToolsDictLN_PTools));
   { PTools *p; p=(PTools*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)(&PTools::copySubsetOfHistDefaultValue),100,0,1,-1,G__defined_typename("Double_t"),-2,1,"copySubsetOfHistDefaultValue=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* MPTools */
static void G__setup_memvarMPTools(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ToolsDictLN_MPTools));
   { MPTools *p; p=(MPTools*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HPTools */
static void G__setup_memvarHPTools(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ToolsDictLN_HPTools));
   { HPTools *p; p=(HPTools*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HReport */
static void G__setup_memvarHReport(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__ToolsDictLN_HReport));
   { HReport *p; p=(HReport*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"texfile=",0,"name of the report tex file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"texdir=",0,"name of the temp directory");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"colorlinks=",0,"!  switch pdf links");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"makeTOC=",0,"!  table of contents");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"makeListFigures=",0,"!  list of figures");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"makeListTables=",0,"!  list of tables");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"makeListListings=",0,"!  list of listings");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"draft=",0,"!  replace pics by place holders");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"font_size=",0,"!  font size");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"single_double=",0,"!  oneside or twoside paper");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"orientation=",0,"!  landscape or potrait");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"column=",0,"!  onecolumn twocolumn layout");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"viewer=",0,"!  gv or acroread");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"keeppics=",0,"!  keep old pictures or remake");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"include_packages=",0,"!  include additional packages if needed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"title=",0,"!  title of the report");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"author=",0,"!  author of the report");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TString),-1,-1,2,"date=",0,"!  date of creation");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TDatime),-1,-1,2,"daytime=",0,"!  time object");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ToolsDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("ofstream"),-1,2,"fout=",0,"!  stream to output file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"setopt=",0,"!  flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"includepack=",0,"!  flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"opentex=",0,"!  flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"opendoc=",0,"!  flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"closedoc=",0,"!  flag");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"useviewer=",0,"!  flag");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"linebreak=",0,"!  line width in tex file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"linect=",0,"!  counter of character in line");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"always_skip_curly=",0,"!  force skipping curly braces for line break");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__ToolsDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarToolsDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncPTools(void) {
   /* PTools */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ToolsDictLN_PTools));
   G__memfunc_setup("copyToTHxD",982,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 1, 3, 2, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printHeader",1142,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 3, 2, 0, 
"C - 'Char_t' 10 '0' titlehead C - 'Char_t' 10 '0' mytextfilename "
"i - 'Int_t' 10 '0' nentries U 'TPad' - 0 '0' pad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PTools",609,G__ToolsDict_331_0_3, 105, G__get_linked_tagnum(&G__ToolsDictLN_PTools), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_4, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 3, 3, 1, 0, 
"U 'TCanvas' - 0 - canv i - 'Int_t' 0 - xpads "
"i - 'Int_t' 0 - ypads", (char*)NULL, (void*) G__func2void( (TPad* (*)(TCanvas*, Int_t, Int_t))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_5, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 4, 3, 1, 0, 
"U 'TCanvas' - 0 - canv i - 'Int_t' 0 - xpads "
"i - 'Int_t' 0 - ypads C - 'Char_t' 10 - title", (char*)NULL, (void*) G__func2void( (TPad* (*)(TCanvas*, Int_t, Int_t, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_6, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 5, 3, 1, 0, 
"U 'TCanvas' - 0 - canv i - 'Int_t' 0 - xpads "
"i - 'Int_t' 0 - ypads C - 'Char_t' 10 - title "
"C - 'Char_t' 10 - filename", (char*)NULL, (void*) G__func2void( (TPad* (*)(TCanvas*, Int_t, Int_t, const Char_t*, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_7, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 6, 3, 1, 0, 
"U 'TCanvas' - 0 - canv i - 'Int_t' 0 - xpads "
"i - 'Int_t' 0 - ypads C - 'Char_t' 10 - title "
"C - 'Char_t' 10 - filename i - 'Int_t' 0 - nentries", (char*)NULL, (void*) G__func2void( (TPad* (*)(TCanvas*, Int_t, Int_t, const Char_t*, const Char_t*, Int_t))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_8, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 7, 3, 1, 0, 
"U 'TCanvas' - 0 - canv i - 'Int_t' 0 - xpads "
"i - 'Int_t' 0 - ypads C - 'Char_t' 10 - title "
"C - 'Char_t' 10 - filename i - 'Int_t' 0 - nentries "
"U 'TPaveText' - 0 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(TCanvas*, Int_t, Int_t, const Char_t*, const Char_t*, Int_t, TPaveText*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_9, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 7, 3, 1, 0, 
"U 'TCanvas' - 0 - canv i - 'Int_t' 0 - xpads "
"i - 'Int_t' 0 - ypads C - 'Char_t' 10 - title "
"C - 'Char_t' 10 - filename i - 'Int_t' 0 - nentries "
"C - 'Char_t' 10 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(TCanvas*, Int_t, Int_t, const Char_t*, const Char_t*, Int_t, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_10, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 7, 3, 1, 0, 
"U 'TCanvas' - 0 - canv i - 'Int_t' 0 - xpads "
"i - 'Int_t' 0 - ypads C - 'Char_t' 10 - title "
"C - 'Char_t' 10 - filename i - 'Int_t' 0 - nentries "
"u 'TString' - 0 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(TCanvas*, Int_t, Int_t, const Char_t*, const Char_t*, Int_t, TString))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_11, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_12, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"C - 'Char_t' 10 - title", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_13, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, const Char_t*, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_14, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 5, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, const Char_t*, const Char_t*, Int_t))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_15, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 6, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries U 'TPaveText' - 0 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, const Char_t*, const Char_t*, Int_t, TPaveText*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_16, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 6, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries C - 'Char_t' 10 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, const Char_t*, const Char_t*, Int_t, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_17, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 6, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries u 'TString' - 0 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, const Char_t*, const Char_t*, Int_t, TString))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_18, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"i - 'Int_t' 0 - xsize i - 'Int_t' 0 - ysize", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, Int_t, Int_t))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_19, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 5, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"i - 'Int_t' 0 - xsize i - 'Int_t' 0 - ysize "
"C - 'Char_t' 10 - title", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, Int_t, Int_t, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_20, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 6, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"i - 'Int_t' 0 - xsize i - 'Int_t' 0 - ysize "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, Int_t, Int_t, const Char_t*, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_21, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 7, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"i - 'Int_t' 0 - xsize i - 'Int_t' 0 - ysize "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, Int_t, Int_t, const Char_t*, const Char_t*, Int_t))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_22, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 8, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"i - 'Int_t' 0 - xsize i - 'Int_t' 0 - ysize "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries U 'TPaveText' - 0 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, Int_t, Int_t, const Char_t*, const Char_t*, Int_t, TPaveText*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_23, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 8, 3, 1, 0, 
"i - 'Int_t' 0 - xsize i - 'Int_t' 0 - ysize "
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries C - 'Char_t' 10 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, Int_t, Int_t, const Char_t*, const Char_t*, Int_t, const Char_t*))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("getDividedSubPad",1592,G__ToolsDict_331_0_24, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPad), -1, 0, 8, 3, 1, 0, 
"i - 'Int_t' 0 - xpads i - 'Int_t' 0 - ypads "
"i - 'Int_t' 0 - xsize i - 'Int_t' 0 - ysize "
"C - 'Char_t' 10 - title C - 'Char_t' 10 - filename "
"i - 'Int_t' 0 - nentries u 'TString' - 0 - info", (char*)NULL, (void*) G__func2void( (TPad* (*)(Int_t, Int_t, Int_t, Int_t, const Char_t*, const Char_t*, Int_t, TString))(&PTools::getDividedSubPad) ), 0);
   G__memfunc_setup("evalStopwatch",1381,G__ToolsDict_331_0_25, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TStopwatch' - 0 - timer i - 'Int_t' 0 - nevts", (char*)NULL, (void*) G__func2void( (void (*)(TStopwatch*, Int_t))(&PTools::evalStopwatch) ), 0);
   G__memfunc_setup("setTitleArts",1256,G__ToolsDict_331_0_26, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TH1' - 0 - histogramm C - 'Char_t' 10 - xtitle "
"C - 'Char_t' 10 - ytitle i - 'Int_t' 0 '4' color "
"i - 'Int_t' 0 '42' type", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, const Char_t*, const Char_t*, Int_t, Int_t))(&PTools::setTitleArts) ), 0);
   G__memfunc_setup("setTitleArts",1256,G__ToolsDict_331_0_27, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TH1' - 0 - histogramm u 'TString' - 10 - xtitle "
"u 'TString' - 10 - ytitle i - 'Int_t' 0 '4' color "
"i - 'Int_t' 0 '42' type", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, const TString, const TString, Int_t, Int_t))(&PTools::setTitleArts) ), 0);
   G__memfunc_setup("setTitleArts",1256,G__ToolsDict_331_0_28, 121, -1, -1, 0, 4, 3, 1, 0, 
"U 'THStack' - 0 - histogrammStack C - 'Char_t' 10 - xtitle "
"C - 'Char_t' 10 - ytitle i - 'Int_t' 0 '42' type", (char*)NULL, (void*) G__func2void( (void (*)(THStack*, const Char_t*, const Char_t*, Int_t))(&PTools::setTitleArts) ), 0);
   G__memfunc_setup("setTitleArts",1256,G__ToolsDict_331_0_29, 121, -1, -1, 0, 4, 3, 1, 0, 
"U 'THStack' - 0 - histogrammStack u 'TString' - 10 - xtitle "
"u 'TString' - 10 - ytitle i - 'Int_t' 0 '42' type", (char*)NULL, (void*) G__func2void( (void (*)(THStack*, const TString, const TString, Int_t))(&PTools::setTitleArts) ), 0);
   G__memfunc_setup("setTitleArts",1256,G__ToolsDict_331_0_30, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TH1' - 0 - histogramm C - 'Char_t' 10 - xtitle "
"C - 'Char_t' 10 - ytitle u 'TString' - 0 - color "
"i - 'Int_t' 0 '42' type", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, const Char_t*, const Char_t*, TString, Int_t))(&PTools::setTitleArts) ), 0);
   G__memfunc_setup("setTitleArts",1256,G__ToolsDict_331_0_31, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TH1' - 0 - histogramm u 'TString' - 10 - xtitle "
"u 'TString' - 10 - ytitle u 'TString' - 0 - color "
"i - 'Int_t' 0 '42' type", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, const TString, const TString, TString, Int_t))(&PTools::setTitleArts) ), 0);
   G__memfunc_setup("drawCanvas",1034,G__ToolsDict_331_0_32, 85, G__get_linked_tagnum(&G__ToolsDictLN_TCanvas), -1, 0, 5, 3, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - - "
"U 'TH1' - 2 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) G__func2void( (TCanvas* (*)(const Char_t*, const Char_t*, TH1**, Int_t, Int_t))(&PTools::drawCanvas) ), 0);
   G__memfunc_setup("draw32Canvas",1135,G__ToolsDict_331_0_33, 85, G__get_linked_tagnum(&G__ToolsDictLN_TCanvas), -1, 0, 3, 3, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - - "
"U 'TH1F' - 2 - -", (char*)NULL, (void*) G__func2void( (TCanvas* (*)(const Char_t*, const Char_t*, TH1F**))(&PTools::draw32Canvas) ), 0);
   G__memfunc_setup("draw32CanvasTH2",1341,G__ToolsDict_331_0_34, 85, G__get_linked_tagnum(&G__ToolsDictLN_TCanvas), -1, 0, 4, 3, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - - "
"U 'TH2F' - 2 - - C - 'Char_t' 10 '0' option", (char*)NULL, (void*) G__func2void( (TCanvas* (*)(const Char_t*, const Char_t*, TH2F**, const Char_t*))(&PTools::draw32CanvasTH2) ), 0);
   G__memfunc_setup("cutEnd",611,G__ToolsDict_331_0_35, 121, -1, -1, 0, 2, 3, 1, 0, 
"C - 'Char_t' 0 - - C - 'Char_t' 10 - -", (char*)NULL, (void*) G__func2void( (void (*)(Char_t*, const Char_t*))(&PTools::cutEnd) ), 0);
   G__memfunc_setup("myexec",651,G__ToolsDict_331_0_36, 67, -1, G__defined_typename("Char_t"), 0, 1, 3, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) G__func2void( (Char_t* (*)(const Char_t*))(&PTools::myexec) ), 0);
   G__memfunc_setup("myexec",651,G__ToolsDict_331_0_37, 117, G__get_linked_tagnum(&G__ToolsDictLN_TString), -1, 0, 1, 3, 1, 0, "u 'TString' - 0 - -", (char*)NULL, (void*) G__func2void( (TString (*)(TString))(&PTools::myexec) ), 0);
   G__memfunc_setup("mdb",307,G__ToolsDict_331_0_38, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '-1' b", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&PTools::mdb) ), 0);
   G__memfunc_setup("Mkdir",503,G__ToolsDict_331_0_39, 85, G__get_linked_tagnum(&G__ToolsDictLN_TDirectory), -1, 0, 4, 3, 1, 0, 
"U 'TDirectory' - 0 - dirOld C - 'Char_t' 10 - newDirName "
"i - 'Int_t' 0 '-99' i i - 'Int_t' 0 '1' precision", (char*)NULL, (void*) G__func2void( (TDirectory* (*)(TDirectory*, const Char_t*, Int_t, Int_t))(&PTools::Mkdir) ), 0);
   G__memfunc_setup("Mkdir",503,G__ToolsDict_331_0_40, 85, G__get_linked_tagnum(&G__ToolsDictLN_TDirectory), -1, 0, 4, 3, 1, 0, 
"U 'TDirectory' - 0 - dirOld u 'TString' - 10 - newDirName "
"i - 'Int_t' 0 '-99' i i - 'Int_t' 0 '1' precision", (char*)NULL, (void*) G__func2void( (TDirectory* (*)(TDirectory*, const TString, Int_t, Int_t))(&PTools::Mkdir) ), 0);
   G__memfunc_setup("getHistogramLimits",1888,G__ToolsDict_331_0_41, 121, -1, -1, 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 1 - nbinsx "
"d - 'Axis_t' 1 - xmin d - 'Axis_t' 1 - xmax", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Int_t&, Axis_t&, Axis_t&))(&PTools::getHistogramLimits) ), 0);
   G__memfunc_setup("getHistogramLimits",1888,G__ToolsDict_331_0_42, 121, -1, -1, 0, 7, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 1 - nbinsx "
"d - 'Axis_t' 1 - xmin d - 'Axis_t' 1 - xmax "
"i - 'Int_t' 1 - nbinsy d - 'Axis_t' 1 - ymin "
"d - 'Axis_t' 1 - ymax", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Int_t&, Axis_t&, Axis_t&, Int_t&, Axis_t&, Axis_t&))(&PTools::getHistogramLimits) ), 0);
   G__memfunc_setup("getHistogramLimits",1888,G__ToolsDict_331_0_43, 121, -1, -1, 0, 10, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 1 - nbinsx "
"d - 'Axis_t' 1 - xmin d - 'Axis_t' 1 - xmax "
"i - 'Int_t' 1 - nbinsy d - 'Axis_t' 1 - ymin "
"d - 'Axis_t' 1 - ymax i - 'Int_t' 1 - nbinsz "
"d - 'Axis_t' 1 - zmin d - 'Axis_t' 1 - zmax", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Int_t&, Axis_t&, Axis_t&, Int_t&, Axis_t&, Axis_t&, Int_t&, Axis_t&, Axis_t&))(&PTools::getHistogramLimits) ), 0);
   G__memfunc_setup("getNFilledBins",1386,G__ToolsDict_331_0_44, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 '-1' min "
"d - 'Double_t' 0 '-1' max", (char*)NULL, (void*) G__func2void( (Int_t (*)(TH1*, Double_t, Double_t))(&PTools::getNFilledBins) ), 0);
   G__memfunc_setup("compareHistogramLimits",2311,G__ToolsDict_331_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist1 U 'TH1' - 0 - hist2 "
"g - 'Bool_t' 0 - exit_on_failure", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TH1*, TH1*, Bool_t))(&PTools::compareHistogramLimits) ), 0);
   G__memfunc_setup("printHistogramLimits",2125,G__ToolsDict_331_0_46, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) G__func2void( (void (*)(TH1*))(&PTools::printHistogramLimits) ), 0);
   G__memfunc_setup("printHistogramLimits",2125,G__ToolsDict_331_0_47, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TH2' - 0 - hist", (char*)NULL, (void*) G__func2void( (void (*)(TH2*))(&PTools::printHistogramLimits) ), 0);
   G__memfunc_setup("printHistogramLimits",2125,G__ToolsDict_331_0_48, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TH3' - 0 - hist", (char*)NULL, (void*) G__func2void( (void (*)(TH3*))(&PTools::printHistogramLimits) ), 0);
   G__memfunc_setup("cleanHistogram",1457,G__ToolsDict_331_0_49, 121, -1, -1, 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - min "
"d - 'Double_t' 0 - max i - 'Int_t' 0 '0' errorMode", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Double_t, Double_t, Int_t))(&PTools::cleanHistogram) ), 0);
   G__memfunc_setup("cutHistogram",1274,G__ToolsDict_331_0_50, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist U 'TCutG' - 0 - cut "
"g - 'Bool_t' 0 'kFALSE' complement", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, TCutG*, Bool_t))(&PTools::cutHistogram) ), 0);
   G__memfunc_setup("cutHistogram",1274,G__ToolsDict_331_0_51, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist U 'TObjArray' - 0 - cutarray "
"g - 'Bool_t' 0 'kFALSE' complement", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, TObjArray*, Bool_t))(&PTools::cutHistogram) ), 0);
   G__memfunc_setup("prefixToName",1234,G__ToolsDict_331_0_52, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - prefix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::prefixToName) ), 0);
   G__memfunc_setup("prefixToTitle",1363,G__ToolsDict_331_0_53, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - prefix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::prefixToTitle) ), 0);
   G__memfunc_setup("prefixToNameTitle",1748,G__ToolsDict_331_0_54, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - prefix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::prefixToNameTitle) ), 0);
   G__memfunc_setup("postfixToName",1361,G__ToolsDict_331_0_55, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - postfix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::postfixToName) ), 0);
   G__memfunc_setup("postfixToTitle",1490,G__ToolsDict_331_0_56, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - postfix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::postfixToTitle) ), 0);
   G__memfunc_setup("postfixToNameTitle",1875,G__ToolsDict_331_0_57, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - postfix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::postfixToNameTitle) ), 0);
   G__memfunc_setup("suffixToName",1241,G__ToolsDict_331_0_58, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - suffix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::suffixToName) ), 0);
   G__memfunc_setup("suffixToTitle",1370,G__ToolsDict_331_0_59, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - suffix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::suffixToTitle) ), 0);
   G__memfunc_setup("suffixToNameTitle",1755,G__ToolsDict_331_0_60, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 - suffix", (char*)NULL, (void*) G__func2void( (void (*)(TNamed*, TString))(&PTools::suffixToNameTitle) ), 0);
   G__memfunc_setup("plotCounts",1083,G__ToolsDict_331_0_61, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 '1' color "
"u 'TString' - 0 '\"\"' format", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Int_t, TString))(&PTools::plotCounts) ), 0);
   G__memfunc_setup("getTH1F",595,G__ToolsDict_331_0_62, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1F), -1, 0, 7, 3, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax u 'TString' - 0 - xtitle "
"u 'TString' - 0 - ytitle", (char*)NULL, (void*) G__func2void( (TH1F* (*)(TString, TString, Int_t, Double_t, Double_t, TString, TString))(&PTools::getTH1F) ), 0);
   G__memfunc_setup("getTH1F",595,G__ToolsDict_331_0_63, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1F), -1, 0, 7, 3, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax C - 'Char_t' 10 - xtitle "
"C - 'Char_t' 10 - ytitle", (char*)NULL, (void*) G__func2void( (TH1F* (*)(const Char_t*, const Char_t*, Int_t, Double_t, Double_t, const Char_t*, const Char_t*))(&PTools::getTH1F) ), 0);
   G__memfunc_setup("getTH2F",596,G__ToolsDict_331_0_64, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH2F), -1, 0, 11, 3, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"u 'TString' - 0 - xtitle u 'TString' - 0 - ytitle "
"u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2F* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&PTools::getTH2F) ), 0);
   G__memfunc_setup("getTH2F",596,G__ToolsDict_331_0_65, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH2F), -1, 0, 11, 3, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"C - 'Char_t' 10 - xtitle C - 'Char_t' 10 - ytitle "
"C - 'Char_t' 10 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2F* (*)(const Char_t*, const Char_t*, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, const Char_t*, const Char_t*, const Char_t*))(&PTools::getTH2F) ), 0);
   G__memfunc_setup("getTH3F",597,G__ToolsDict_331_0_66, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH3F), -1, 0, 14, 3, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"i - 'Int_t' 0 - zbin d - 'Double_t' 0 - zmin "
"d - 'Double_t' 0 - zmax u 'TString' - 0 - xtitle "
"u 'TString' - 0 - ytitle u 'TString' - 0 - ztitle", (char*)NULL, (void*) G__func2void( (TH3F* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&PTools::getTH3F) ), 0);
   G__memfunc_setup("getTH3F",597,G__ToolsDict_331_0_67, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH3F), -1, 0, 14, 3, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"i - 'Int_t' 0 - zbin d - 'Double_t' 0 - zmin "
"d - 'Double_t' 0 - zmax C - 'Char_t' 10 - xtitle "
"C - 'Char_t' 10 - ytitle C - 'Char_t' 10 - ztitle", (char*)NULL, (void*) G__func2void( (TH3F* (*)(const Char_t*, const Char_t*, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, const Char_t*, const Char_t*, const Char_t*))(&PTools::getTH3F) ), 0);
   G__memfunc_setup("getTH1D",593,G__ToolsDict_331_0_68, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 7, 3, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax u 'TString' - 0 - xtitle "
"u 'TString' - 0 - ytitle", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TString, TString, Int_t, Double_t, Double_t, TString, TString))(&PTools::getTH1D) ), 0);
   G__memfunc_setup("getTH1D",593,G__ToolsDict_331_0_69, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 7, 3, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax C - 'Char_t' 10 - xtitle "
"C - 'Char_t' 10 - ytitle", (char*)NULL, (void*) G__func2void( (TH1D* (*)(const Char_t*, const Char_t*, Int_t, Double_t, Double_t, const Char_t*, const Char_t*))(&PTools::getTH1D) ), 0);
   G__memfunc_setup("getTH2D",594,G__ToolsDict_331_0_70, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH2D), -1, 0, 11, 3, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"u 'TString' - 0 - xtitle u 'TString' - 0 - ytitle "
"u 'TString' - 0 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2D* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&PTools::getTH2D) ), 0);
   G__memfunc_setup("getTH2D",594,G__ToolsDict_331_0_71, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH2D), -1, 0, 11, 3, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"C - 'Char_t' 10 - xtitle C - 'Char_t' 10 - ytitle "
"C - 'Char_t' 10 '\"\"' ztitle", (char*)NULL, (void*) G__func2void( (TH2D* (*)(const Char_t*, const Char_t*, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, const Char_t*, const Char_t*, const Char_t*))(&PTools::getTH2D) ), 0);
   G__memfunc_setup("getTH3D",595,G__ToolsDict_331_0_72, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH3D), -1, 0, 14, 3, 1, 0, 
"u 'TString' - 0 - name u 'TString' - 0 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"i - 'Int_t' 0 - zbin d - 'Double_t' 0 - zmin "
"d - 'Double_t' 0 - zmax u 'TString' - 0 - xtitle "
"u 'TString' - 0 - ytitle u 'TString' - 0 - ztitle", (char*)NULL, (void*) G__func2void( (TH3D* (*)(TString, TString, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, TString, TString, TString))(&PTools::getTH3D) ), 0);
   G__memfunc_setup("getTH3D",595,G__ToolsDict_331_0_73, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH3D), -1, 0, 14, 3, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title "
"i - 'Int_t' 0 - xbin d - 'Double_t' 0 - xmin "
"d - 'Double_t' 0 - xmax i - 'Int_t' 0 - ybin "
"d - 'Double_t' 0 - ymin d - 'Double_t' 0 - ymax "
"i - 'Int_t' 0 - zbin d - 'Double_t' 0 - zmin "
"d - 'Double_t' 0 - zmax C - 'Char_t' 10 - xtitle "
"C - 'Char_t' 10 - ytitle C - 'Char_t' 10 - ztitle", (char*)NULL, (void*) G__func2void( (TH3D* (*)(const Char_t*, const Char_t*, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, Int_t, Double_t, Double_t, const Char_t*, const Char_t*, const Char_t*))(&PTools::getTH3D) ), 0);
   G__memfunc_setup("reverseXAxis",1257,G__ToolsDict_331_0_74, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 1, 3, 1, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*))(&PTools::reverseXAxis) ), 0);
   G__memfunc_setup("reverseYAxis",1258,G__ToolsDict_331_0_75, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH2), -1, 0, 1, 3, 1, 0, "U 'TH2' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH2* (*)(TH2*))(&PTools::reverseYAxis) ), 0);
   G__memfunc_setup("reverseZAxis",1259,G__ToolsDict_331_0_76, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH3), -1, 0, 1, 3, 1, 0, "U 'TH3' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH3* (*)(TH3*))(&PTools::reverseZAxis) ), 0);
   G__memfunc_setup("plotPolarAxis",1362,G__ToolsDict_331_0_77, 121, -1, -1, 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 '0.0' min d - 'Double_t' 0 '180' max "
"i - 'Int_t' 0 '10' divisions f - 'Float_t' 0 '90' direction", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Int_t, Float_t))(&PTools::plotPolarAxis) ), 0);
   G__memfunc_setup("plotPolarAxis",1362,G__ToolsDict_331_0_78, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 '18' divisions "
"f - 'Float_t' 0 '90' direction", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, Int_t, Float_t))(&PTools::plotPolarAxis) ), 0);
   G__memfunc_setup("plotPolarGrid",1347,G__ToolsDict_331_0_79, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 '18' divisions", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&PTools::plotPolarGrid) ), 0);
   G__memfunc_setup("plotPolarSectorGridHADES",2328,G__ToolsDict_331_0_80, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PTools::plotPolarSectorGridHADES) ), 0);
   G__memfunc_setup("saveToPdf",908,G__ToolsDict_331_0_81, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TCanvas' - 0 - canvas u 'TString' - 0 '\".\"' path "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' separate "
"i - 'Int_t' 0 '-1' selection", (char*)NULL, (void*) G__func2void( (void (*)(TCanvas*, TString, TString, Bool_t, Int_t))(&PTools::saveToPdf) ), 0);
   G__memfunc_setup("saveToPng",919,G__ToolsDict_331_0_82, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TCanvas' - 0 - canvas u 'TString' - 0 '\".\"' path "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' separate "
"i - 'Int_t' 0 '-1' selection", (char*)NULL, (void*) G__func2void( (void (*)(TCanvas*, TString, TString, Bool_t, Int_t))(&PTools::saveToPng) ), 0);
   G__memfunc_setup("saveGifToPdf",1186,G__ToolsDict_331_0_83, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TCanvas' - 0 - canvas u 'TString' - 0 '\".\"' path "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' separate "
"i - 'Int_t' 0 '-1' selection", (char*)NULL, (void*) G__func2void( (void (*)(TCanvas*, TString, TString, Bool_t, Int_t))(&PTools::saveGifToPdf) ), 0);
   G__memfunc_setup("saveToPdf",908,G__ToolsDict_331_0_84, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 '\".\"' path "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' separate "
"i - 'Int_t' 0 '-1' selection", (char*)NULL, (void*) G__func2void( (void (*)(TPad*, TString, TString, Bool_t, Int_t))(&PTools::saveToPdf) ), 0);
   G__memfunc_setup("saveToPng",919,G__ToolsDict_331_0_85, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 '\".\"' path "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' separate "
"i - 'Int_t' 0 '-1' selection", (char*)NULL, (void*) G__func2void( (void (*)(TPad*, TString, TString, Bool_t, Int_t))(&PTools::saveToPng) ), 0);
   G__memfunc_setup("saveGifToPdf",1186,G__ToolsDict_331_0_86, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 '\".\"' path "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' separate "
"i - 'Int_t' 0 '-1' selection", (char*)NULL, (void*) G__func2void( (void (*)(TPad*, TString, TString, Bool_t, Int_t))(&PTools::saveGifToPdf) ), 0);
   G__memfunc_setup("getColorJM",982,G__ToolsDict_331_0_87, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t))(&PTools::getColorJM) ), 0);
   G__memfunc_setup("getMarkerJM",1081,G__ToolsDict_331_0_88, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t))(&PTools::getMarkerJM) ), 0);
   G__memfunc_setup("setGraph",830,G__ToolsDict_331_0_89, 121, -1, -1, 0, 6, 3, 1, 0, 
"U 'TGraph' - 0 - graph i - 'Int_t' 0 '-99' mycolorindex "
"i - 'Int_t' 0 '20' markerstyle i - 'Int_t' 0 '1' markercolor "
"f - 'Float_t' 0 '1.' markersize i - 'Int_t' 0 '1' linecolor", (char*)NULL, (void*) G__func2void( (void (*)(TGraph*, Int_t, Int_t, Int_t, Float_t, Int_t))(&PTools::setGraph) ), 0);
   G__memfunc_setup("setHist",740,G__ToolsDict_331_0_90, 121, -1, -1, 0, 6, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 '-99' mycolorindex "
"i - 'Int_t' 0 '20' markerstyle i - 'Int_t' 0 '1' markercolor "
"f - 'Float_t' 0 '1.' markersize i - 'Int_t' 0 '1' linecolor", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Int_t, Int_t, Int_t, Float_t, Int_t))(&PTools::setHist) ), 0);
   G__memfunc_setup("plotLegend",1038,G__ToolsDict_331_0_91, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLegend), -1, 0, 8, 3, 1, 0, 
"u 'TString' - 0 '\"right_top\"' pos u 'TString' - 0 '\"No Title\"' Title "
"f - 'Float_t' 0 '0.9' scaleX f - 'Float_t' 0 '0.9' scaleY "
"f - 'Float_t' 0 '0.0' offsetX f - 'Float_t' 0 '0.0' offsetY "
"u 'TString' - 0 '\"\"' Comment i - 'Int_t' 0 '1' commencolor", (char*)NULL, (void*) G__func2void( (TLegend* (*)(TString, TString, Float_t, Float_t, Float_t, Float_t, TString, Int_t))(&PTools::plotLegend) ), 0);
   G__memfunc_setup("setLegendEntry",1453,G__ToolsDict_331_0_92, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLegendEntry), -1, 0, 5, 3, 1, 0, 
"U 'TLegend' - 0 - legend U 'TObject' - 0 - object "
"u 'TString' - 0 - label i - 'Int_t' 0 - col "
"u 'TString' - 0 - opt", (char*)NULL, (void*) G__func2void( (TLegendEntry* (*)(TLegend*, TObject*, TString, Int_t, TString))(&PTools::setLegendEntry) ), 0);
   G__memfunc_setup("plotTopLegend",1345,G__ToolsDict_331_0_93, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 5, 3, 1, 0, 
"C - 'Char_t' 10 - label f - 'Float_t' 0 '-1' x "
"f - 'Float_t' 0 '-1' y f - 'Float_t' 0 '0.05' size "
"i - 'Int_t' 0 '1' color", (char*)NULL, (void*) G__func2void( (TLatex* (*)(const Char_t*, Float_t, Float_t, Float_t, Int_t))(&PTools::plotTopLegend) ), 0);
   G__memfunc_setup("getMeanErrorRangeUser",2135,G__ToolsDict_331_0_94, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Axis_t' 0 - minX "
"d - 'Axis_t' 0 - maxX u 'TString' - 0 '\"center\"' s", (char*)NULL, (void*) G__func2void( (Double_t (*)(TH1*, Axis_t, Axis_t, TString))(&PTools::getMeanErrorRangeUser) ), 0);
   G__memfunc_setup("getMeanErrorRange",1720,G__ToolsDict_331_0_95, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 - minX "
"i - 'Int_t' 0 - maxX u 'TString' - 0 '\"center\"' s", (char*)NULL, (void*) G__func2void( (Double_t (*)(TH1*, Int_t, Int_t, TString))(&PTools::getMeanErrorRange) ), 0);
   G__memfunc_setup("getMeanRangeUser",1613,G__ToolsDict_331_0_96, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Axis_t' 0 - minX "
"d - 'Axis_t' 0 - maxX u 'TString' - 0 '\"center\"' s", (char*)NULL, (void*) G__func2void( (Double_t (*)(TH1*, Axis_t, Axis_t, TString))(&PTools::getMeanRangeUser) ), 0);
   G__memfunc_setup("getMeanRange",1198,G__ToolsDict_331_0_97, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 - minX "
"i - 'Int_t' 0 - maxX u 'TString' - 0 '\"center\"' s", (char*)NULL, (void*) G__func2void( (Double_t (*)(TH1*, Int_t, Int_t, TString))(&PTools::getMeanRange) ), 0);
   G__memfunc_setup("sqrt",458,G__ToolsDict_331_0_98, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) G__func2void( (void (*)(TH1*))(&PTools::sqrt) ), 0);
   G__memfunc_setup("Clone",497,G__ToolsDict_331_0_99, 85, G__get_linked_tagnum(&G__ToolsDictLN_TNamed), -1, 0, 3, 3, 1, 0, 
"U 'TNamed' - 0 - name u 'TString' - 0 '\"\"' newname "
"u 'TString' - 0 '\"\"' title", (char*)NULL, (void*) G__func2void( (TNamed* (*)(TNamed*, TString, TString))(&PTools::Clone) ), 0);
   G__memfunc_setup("copyToTH1D",911,G__ToolsDict_331_0_100, 117, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 1, 3, 1, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH1D (*)(TH1*))(&PTools::copyToTH1D) ), 0);
   G__memfunc_setup("copyToTH2D",912,G__ToolsDict_331_0_101, 117, G__get_linked_tagnum(&G__ToolsDictLN_TH2D), -1, 0, 1, 3, 1, 0, "U 'TH2' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH2D (*)(TH2*))(&PTools::copyToTH2D) ), 0);
   G__memfunc_setup("copyToTH3D",913,G__ToolsDict_331_0_102, 117, G__get_linked_tagnum(&G__ToolsDictLN_TH3D), -1, 0, 1, 3, 1, 0, "U 'TH3' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH3D (*)(TH3*))(&PTools::copyToTH3D) ), 0);
   G__memfunc_setup("createTH1D",901,G__ToolsDict_331_0_103, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 1, 3, 1, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH1*))(&PTools::createTH1D) ), 0);
   G__memfunc_setup("createTH2D",902,G__ToolsDict_331_0_104, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH2D), -1, 0, 1, 3, 1, 0, "U 'TH2' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH2D* (*)(TH2*))(&PTools::createTH2D) ), 0);
   G__memfunc_setup("createTH3D",903,G__ToolsDict_331_0_105, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH3D), -1, 0, 1, 3, 1, 0, "U 'TH3' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH3D* (*)(TH3*))(&PTools::createTH3D) ), 0);
   G__memfunc_setup("importAxisAttributes",2135,G__ToolsDict_331_0_106, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TAxis' - 0 - in U 'TAxis' - 0 - out "
"g - 'Bool_t' 0 - labels", (char*)NULL, (void*) G__func2void( (void (*)(TAxis*, TAxis*, Bool_t))(&PTools::importAxisAttributes) ), 0);
   G__memfunc_setup("importAxisLabels",1667,G__ToolsDict_331_0_107, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TAxis' - 0 - in U 'TAxis' - 0 - out", (char*)NULL, (void*) G__func2void( (void (*)(TAxis*, TAxis*))(&PTools::importAxisLabels) ), 0);
   G__memfunc_setup("checkHistogramCompatibility",2822,G__ToolsDict_331_0_108, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - h1 U 'TH1' - 0 - h2", (char*)NULL, (void*) G__func2void( (Int_t (*)(TH1*, TH1*))(&PTools::checkHistogramCompatibility) ), 0);
   G__memfunc_setup("areHistogramsCompatible",2393,G__ToolsDict_331_0_109, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - h1 U 'TH1' - 0 - h2", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TH1*, TH1*))(&PTools::areHistogramsCompatible) ), 0);
   G__memfunc_setup("areArraysCompatible",1962,G__ToolsDict_331_0_110, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'TArray' - 10 - array1 U 'TArray' - 10 - array2", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const TArray*, const TArray*))(&PTools::areArraysCompatible) ), 0);
   G__memfunc_setup("fillGraphErr",1218,G__ToolsDict_331_0_111, 85, G__get_linked_tagnum(&G__ToolsDictLN_TGraphErrors), -1, 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist u 'TString' - 0 '\"\"' name "
"u 'TString' - 0 '\"center\"' position g - 'Bool_t' 0 'kFALSE' xerrors", (char*)NULL, (void*) G__func2void( (TGraphErrors* (*)(TH1*, TString, TString, Bool_t))(&PTools::fillGraphErr) ), 0);
   G__memfunc_setup("getHistStats",1255,G__ToolsDict_331_0_112, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - hist g - 'Bool_t' 0 'kFALSE' quiet", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Bool_t))(&PTools::getHistStats) ), 0);
   G__memfunc_setup("getHistStats",1255,G__ToolsDict_331_0_113, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 4, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"g - 'Bool_t' 0 'kFALSE' quiet g - 'Bool_t' 0 'kFALSE' noUpdate", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Bool_t, Bool_t))(&PTools::getHistStats) ), 0);
   G__memfunc_setup("setHistStatsXPosNDC",1874,G__ToolsDict_331_0_114, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 - x2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Double_t, Double_t))(&PTools::setHistStatsXPosNDC) ), 0);
   G__memfunc_setup("setHistStatsXPosNDC",1874,G__ToolsDict_331_0_115, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 4, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - x2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Double_t, Double_t))(&PTools::setHistStatsXPosNDC) ), 0);
   G__memfunc_setup("setHistStatsYPosNDC",1875,G__ToolsDict_331_0_116, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Double_t, Double_t))(&PTools::setHistStatsYPosNDC) ), 0);
   G__memfunc_setup("setHistStatsYPosNDC",1875,G__ToolsDict_331_0_117, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 4, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Double_t, Double_t))(&PTools::setHistStatsYPosNDC) ), 0);
   G__memfunc_setup("setHistStatsPosNDC",1786,G__ToolsDict_331_0_118, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 5, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - x1 "
"d - 'Double_t' 0 - x2 d - 'Double_t' 0 - y1 "
"d - 'Double_t' 0 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Double_t, Double_t, Double_t, Double_t))(&PTools::setHistStatsPosNDC) ), 0);
   G__memfunc_setup("setHistStatsPosNDC",1786,G__ToolsDict_331_0_119, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 6, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - x2 "
"d - 'Double_t' 0 - y1 d - 'Double_t' 0 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Double_t, Double_t, Double_t, Double_t))(&PTools::setHistStatsPosNDC) ), 0);
   G__memfunc_setup("getHistStatsXPosNDC",1862,G__ToolsDict_331_0_120, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 1 - x1 "
"d - 'Double_t' 1 - x2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Double_t&, Double_t&))(&PTools::getHistStatsXPosNDC) ), 0);
   G__memfunc_setup("getHistStatsXPosNDC",1862,G__ToolsDict_331_0_121, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 4, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - x2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Double_t&, Double_t&))(&PTools::getHistStatsXPosNDC) ), 0);
   G__memfunc_setup("getHistStatsYPosNDC",1863,G__ToolsDict_331_0_122, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 1 - y1 "
"d - 'Double_t' 1 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Double_t&, Double_t&))(&PTools::getHistStatsYPosNDC) ), 0);
   G__memfunc_setup("getHistStatsYPosNDC",1863,G__ToolsDict_331_0_123, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 4, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"d - 'Double_t' 1 - y1 d - 'Double_t' 1 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Double_t&, Double_t&))(&PTools::getHistStatsYPosNDC) ), 0);
   G__memfunc_setup("getHistStatsPosNDC",1774,G__ToolsDict_331_0_124, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 5, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 1 - x1 "
"d - 'Double_t' 1 - x2 d - 'Double_t' 1 - y1 "
"d - 'Double_t' 1 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Double_t&, Double_t&, Double_t&, Double_t&))(&PTools::getHistStatsPosNDC) ), 0);
   G__memfunc_setup("getHistStatsPosNDC",1774,G__ToolsDict_331_0_125, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 6, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"d - 'Double_t' 1 - x1 d - 'Double_t' 1 - x2 "
"d - 'Double_t' 1 - y1 d - 'Double_t' 1 - y2", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Double_t&, Double_t&, Double_t&, Double_t&))(&PTools::getHistStatsPosNDC) ), 0);
   G__memfunc_setup("setHistStatsTextColor",2199,G__ToolsDict_331_0_126, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 - color", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TH1*, Int_t))(&PTools::setHistStatsTextColor) ), 0);
   G__memfunc_setup("setHistStatsTextColor",2199,G__ToolsDict_331_0_127, 85, G__get_linked_tagnum(&G__ToolsDictLN_TPaveStats), -1, 0, 3, 3, 1, 0, 
"U 'TPad' - 0 - pad u 'TString' - 0 - name "
"i - 'Int_t' 0 - color", (char*)NULL, (void*) G__func2void( (TPaveStats* (*)(TPad*, TString, Int_t))(&PTools::setHistStatsTextColor) ), 0);
   G__memfunc_setup("setLatexArts",1252,G__ToolsDict_331_0_128, 121, -1, -1, 0, 9, 3, 1, 0, 
"U 'TLatex' - 0 - tex d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle "
"g - 'Bool_t' 0 'kFALSE' ndc", (char*)NULL, (void*) G__func2void( (void (*)(TLatex*, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t, Bool_t))(&PTools::setLatexArts) ), 0);
   G__memfunc_setup("setLatexArtsNDC",1465,G__ToolsDict_331_0_129, 121, -1, -1, 0, 8, 3, 1, 0, 
"U 'TLatex' - 0 - tex d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (void (*)(TLatex*, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::setLatexArtsNDC) ), 0);
   G__memfunc_setup("loadMacro",914,G__ToolsDict_331_0_130, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "C - 'Char_t' 10 - macro", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const Char_t*))(&PTools::loadMacro) ), 0);
   G__memfunc_setup("loadMacro",914,G__ToolsDict_331_0_131, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "u 'TString' - 0 - macro", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TString))(&PTools::loadMacro) ), 0);
   G__memfunc_setup("getLinearIndex",1427,G__ToolsDict_331_0_132, 105, -1, G__defined_typename("Int_t"), 0, 10, 3, 1, 0, 
"i - 'Int_t' 0 - x1 h - 'UInt_t' 0 - x1max "
"i - 'Int_t' 0 - x2 h - 'UInt_t' 0 '0' x2max "
"i - 'Int_t' 0 '-1' x3 h - 'UInt_t' 0 '0' x3max "
"i - 'Int_t' 0 '-1' x4 h - 'UInt_t' 0 '0' x4max "
"i - 'Int_t' 0 '-1' x5 h - 'UInt_t' 0 '0' x5max", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t, UInt_t, Int_t, UInt_t, Int_t, UInt_t, Int_t, UInt_t, Int_t, UInt_t))(&PTools::getLinearIndex) ), 0);
   G__memfunc_setup("getLinearIndex",1427,G__ToolsDict_331_0_133, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"I - 'Int_t' 0 - x H - 'UInt_t' 0 - xmax "
"h - 'UInt_t' 0 - dim", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t*, UInt_t*, UInt_t))(&PTools::getLinearIndex) ), 0);
   G__memfunc_setup("drawLatexWC",1094,G__ToolsDict_331_0_134, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"u 'TString' - 0 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(TString, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatexWC) ), 0);
   G__memfunc_setup("drawLatexWC",1094,G__ToolsDict_331_0_135, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"C - 'Char_t' 10 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(const Char_t*, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatexWC) ), 0);
   G__memfunc_setup("drawLatex",940,G__ToolsDict_331_0_136, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"u 'TString' - 0 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(TString, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatex) ), 0);
   G__memfunc_setup("drawLatex",940,G__ToolsDict_331_0_137, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"C - 'Char_t' 10 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(const Char_t*, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatex) ), 0);
   G__memfunc_setup("drawLatexPadCoords",1835,G__ToolsDict_331_0_138, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"u 'TString' - 0 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(TString, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatexPadCoords) ), 0);
   G__memfunc_setup("drawLatexPadCoords",1835,G__ToolsDict_331_0_139, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"C - 'Char_t' 10 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(const Char_t*, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatexPadCoords) ), 0);
   G__memfunc_setup("drawLatexNDC",1153,G__ToolsDict_331_0_140, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"u 'TString' - 0 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(TString, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatexNDC) ), 0);
   G__memfunc_setup("drawLatexNDC",1153,G__ToolsDict_331_0_141, 85, G__get_linked_tagnum(&G__ToolsDictLN_TLatex), -1, 0, 8, 3, 1, 0, 
"C - 'Char_t' 10 - text d - 'Double_t' 0 - x "
"d - 'Double_t' 0 - y i - 'Int_t' 0 '1' color "
"f - 'Float_t' 0 '0.1' size i - 'Int_t' 0 '11' align "
"i - 'Int_t' 0 '62' font f - 'Float_t' 0 '0.' angle", (char*)NULL, (void*) G__func2void( (TLatex* (*)(const Char_t*, Double_t, Double_t, Int_t, Float_t, Int_t, Int_t, Float_t))(&PTools::drawLatexNDC) ), 0);
   G__memfunc_setup("getErrorsOfHistogram",2080,G__ToolsDict_331_0_142, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - hist g - 'Bool_t' 0 'kFALSE' relativeError", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, Bool_t))(&PTools::getErrorsOfHistogram) ), 0);
   G__memfunc_setup("setErrorsOfHistogram",2092,G__ToolsDict_331_0_143, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - hist U 'TH1' - 0 - err", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, TH1*))(&PTools::setErrorsOfHistogram) ), 0);
   G__memfunc_setup("copyToUnitBinsPlusLabels",2465,G__ToolsDict_331_0_144, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 '1.' binningX "
"d - 'Double_t' 0 '1.' binningY d - 'Double_t' 0 '1.' binningZ", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, Double_t, Double_t, Double_t))(&PTools::copyToUnitBinsPlusLabels) ), 0);
   G__memfunc_setup("substractFromHist",1799,G__ToolsDict_331_0_145, 121, -1, -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - val "
"g - 'Bool_t' 0 'kFALSE' inverse", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Double_t, Bool_t))(&PTools::substractFromHist) ), 0);
   G__memfunc_setup("getBinContentDistribution",2612,G__ToolsDict_331_0_146, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 '-1' binning "
"g - 'Bool_t' 0 'kFALSE' excludeUnderAndOverFlowBins", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH1*, Int_t, Bool_t))(&PTools::getBinContentDistribution) ), 0);
   G__memfunc_setup("getOneOverHist",1430,G__ToolsDict_331_0_147, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 1, 3, 1, 0, "U 'TH1' - 0 - hist", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*))(&PTools::getOneOverHist) ), 0);
   G__memfunc_setup("setHistErrors",1377,G__ToolsDict_331_0_148, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - h U 'TH1' - 0 - h2", "lent from jochen", (void*) G__func2void( (void (*)(TH1*, TH1*))(&PTools::setHistErrors) ), 0);
   G__memfunc_setup("reBinHistX",992,G__ToolsDict_331_0_149, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH2D), -1, 0, 2, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 '1' factor", (char*)NULL, (void*) G__func2void( (TH2D* (*)(TH2*, Int_t))(&PTools::reBinHistX) ), 0);
   G__memfunc_setup("cleanHistogramPtyOnP",2043,G__ToolsDict_331_0_150, 121, -1, -1, 0, 5, 3, 1, 0, 
"U 'TH2' - 0 - hist d - 'Double_t' 0 - mass "
"d - 'Double_t' 0 - min d - 'Double_t' 0 - max "
"d - 'Double_t' 0 '0' replaceBy", (char*)NULL, (void*) G__func2void( (void (*)(TH2*, Double_t, Double_t, Double_t, Double_t))(&PTools::cleanHistogramPtyOnP) ), 0);
   G__memfunc_setup("findEndOfDistribution",2157,G__ToolsDict_331_0_151, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 - min "
"d - 'Double_t' 0 - threshold g - 'Bool_t' 0 'kFALSE' compact", (char*)NULL, (void*) G__func2void( (Int_t (*)(TH1*, Int_t, Double_t, Bool_t))(&PTools::findEndOfDistribution) ), 0);
   G__memfunc_setup("findBeginOfDistribution",2363,G__ToolsDict_331_0_152, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 - max "
"d - 'Double_t' 0 - threshold g - 'Bool_t' 0 'kFALSE' compact", (char*)NULL, (void*) G__func2void( (Int_t (*)(TH1*, Int_t, Double_t, Bool_t))(&PTools::findBeginOfDistribution) ), 0);
   G__memfunc_setup("scaleHistErrors",1565,G__ToolsDict_331_0_153, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 - scaleFactor", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, Double_t))(&PTools::scaleHistErrors) ), 0);
   G__memfunc_setup("copyBinSubsetOfHist",1943,G__ToolsDict_331_0_154, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 7, 3, 1, 0, 
"U 'TH1' - 0 - hist i - 'Int_t' 0 '-1' xbinmin "
"i - 'Int_t' 0 '-1' xbinmax i - 'Int_t' 0 '-1' ybinmin "
"i - 'Int_t' 0 '-1' ybinmax i - 'Int_t' 0 '-1' zbinmin "
"i - 'Int_t' 0 '-1' zbinmax", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, Int_t, Int_t, Int_t, Int_t, Int_t, Int_t))(&PTools::copyBinSubsetOfHist) ), 0);
   G__memfunc_setup("copySubsetOfHist",1662,G__ToolsDict_331_0_155, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 7, 3, 1, 0, 
"U 'TH1' - 0 - hist d - 'Double_t' 0 'copySubsetOfHistDefaultValue' xmin "
"d - 'Double_t' 0 'copySubsetOfHistDefaultValue' xmax d - 'Double_t' 0 'copySubsetOfHistDefaultValue' ymin "
"d - 'Double_t' 0 'copySubsetOfHistDefaultValue' ymax d - 'Double_t' 0 'copySubsetOfHistDefaultValue' zmin "
"d - 'Double_t' 0 'copySubsetOfHistDefaultValue' zmax", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t))(&PTools::copySubsetOfHist) ), 0);
   G__memfunc_setup("Class",502,G__ToolsDict_331_0_156, 85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&PTools::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ToolsDict_331_0_157, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTools::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ToolsDict_331_0_158, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&PTools::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ToolsDict_331_0_159, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&PTools::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ToolsDict_331_0_160, 85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ToolsDict_331_0_161, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ToolsDict_331_0_162, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ToolsDict_331_0_163, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ToolsDict_331_0_164, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTools::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ToolsDict_331_0_165, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PTools::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ToolsDict_331_0_166, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&PTools::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ToolsDict_331_0_167, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&PTools::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("PTools", 609, G__ToolsDict_331_0_168, (int) ('i'), G__get_linked_tagnum(&G__ToolsDictLN_PTools), -1, 0, 1, 1, 1, 0, "u 'PTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~PTools", 735, G__ToolsDict_331_0_169, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ToolsDict_331_0_170, (int) ('u'), G__get_linked_tagnum(&G__ToolsDictLN_PTools), -1, 1, 1, 1, 1, 0, "u 'PTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncMPTools(void) {
   /* MPTools */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ToolsDictLN_MPTools));
   G__memfunc_setup("getDistancePointToStraight",2686,G__ToolsDict_333_0_1, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"u 'HGeomVector' - 1 - point u 'HGeomVector' - 1 - base "
"u 'HGeomVector' - 1 - direction", (char*)NULL, (void*) G__func2void( (Double_t (*)(HGeomVector&, HGeomVector&, HGeomVector&))(&MPTools::getDistancePointToStraight) ), 0);
   G__memfunc_setup("calculateLikeSignCombinatorialBackground",4104,G__ToolsDict_333_0_2, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 3, 3, 1, 0, 
"U 'TH1' - 0 - pp U 'TH1' - 0 - mm "
"u 'TString' - 0 '\"background\"' name", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, TH1*, TString))(&MPTools::calculateLikeSignCombinatorialBackground) ), 0);
   G__memfunc_setup("calculateLikeSignCombinatorialBackground",4104,G__ToolsDict_333_0_3, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1), -1, 0, 4, 3, 1, 0, 
"U 'TH1' - 0 - pp U 'TH1' - 0 - mm "
"U 'TH1' - 0 - correction u 'TString' - 0 '\"background\"' name", (char*)NULL, (void*) G__func2void( (TH1* (*)(TH1*, TH1*, TH1*, TString))(&MPTools::calculateLikeSignCombinatorialBackground) ), 0);
   G__memfunc_setup("poissonDistribution",2059,G__ToolsDict_333_0_4, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&MPTools::poissonDistribution) ), 0);
   G__memfunc_setup("poissonDistribution",2059,G__ToolsDict_333_0_5, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - mean "
"d - 'Double_t' 0 '0.' logAmplitude", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MPTools::poissonDistribution) ), 0);
   G__memfunc_setup("poissonDistributionShifted",2770,G__ToolsDict_333_0_6, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&MPTools::poissonDistributionShifted) ), 0);
   G__memfunc_setup("poissonDistributionShifted",2770,G__ToolsDict_333_0_7, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - mean "
"d - 'Double_t' 0 '0.' logAmplitude d - 'Double_t' 0 '0' shift", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t))(&MPTools::poissonDistributionShifted) ), 0);
   G__memfunc_setup("binomialDistribution",2123,G__ToolsDict_333_0_8, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&MPTools::binomialDistribution) ), 0);
   G__memfunc_setup("binomialDistribution",2123,G__ToolsDict_333_0_9, 100, -1, G__defined_typename("Double_t"), 0, 4, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - singleProbability "
"d - 'Double_t' 0 - N d - 'Double_t' 0 '0.' logAmplitude", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t))(&MPTools::binomialDistribution) ), 0);
   G__memfunc_setup("chiSquareDistribution",2213,G__ToolsDict_333_0_10, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&MPTools::chiSquareDistribution) ), 0);
   G__memfunc_setup("chiSquareDistribution",2213,G__ToolsDict_333_0_11, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - ndf "
"d - 'Double_t' 0 '0.' logAmplitude", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MPTools::chiSquareDistribution) ), 0);
   G__memfunc_setup("integralGauss",1369,G__ToolsDict_333_0_12, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 1, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t*, Double_t*))(&MPTools::integralGauss) ), 0);
   G__memfunc_setup("calcCMMomentumOfPairDecay",2460,G__ToolsDict_333_0_13, 100, -1, G__defined_typename("Double_t"), 0, 7, 3, 1, 0, 
"d - 'Double_t' 0 - minv d - 'Double_t' 0 - m1 "
"d - 'Double_t' 0 - m2 d - 'Double_t' 0 - minvErr "
"d - 'Double_t' 0 - m1Err d - 'Double_t' 0 - m2Err "
"d - 'Double_t' 1 - err", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t&))(&MPTools::calcCMMomentumOfPairDecay) ), 0);
   G__memfunc_setup("calcCMMomentumOfPairDecay",2460,G__ToolsDict_333_0_14, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - minv d - 'Double_t' 0 - m1 "
"d - 'Double_t' 0 - m2", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MPTools::calcCMMomentumOfPairDecay) ), 0);
   G__memfunc_setup("calcCMEnergyOfPairDecay",2228,G__ToolsDict_333_0_15, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 1, 0, 
"d - 'Double_t' 0 - minv d - 'Double_t' 0 - m1 "
"d - 'Double_t' 0 - m2", (char*)NULL, (void*) G__func2void( (Double_t (*)(Double_t, Double_t, Double_t))(&MPTools::calcCMEnergyOfPairDecay) ), 0);
   G__memfunc_setup("projectPtYDownToPt",1843,G__ToolsDict_333_0_16, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t))(&MPTools::projectPtYDownToPt) ), 0);
   G__memfunc_setup("projectPtYDownToY",1736,G__ToolsDict_333_0_17, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ptmin "
"i - 'Int_t' 0 - ptmax", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t))(&MPTools::projectPtYDownToY) ), 0);
   G__memfunc_setup("projectPtYDownToPtInInvariantRepresentation",4457,G__ToolsDict_333_0_18, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t))(&MPTools::projectPtYDownToPtInInvariantRepresentation) ), 0);
   G__memfunc_setup("projectPtYDownToPtInBoltzmannRepresentation",4466,G__ToolsDict_333_0_19, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 4, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax d - 'Double_t' 0 - mass", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t, Double_t))(&MPTools::projectPtYDownToPtInBoltzmannRepresentation) ), 0);
   G__memfunc_setup("projectPtYDownToMtInInvariantRepresentation",4454,G__ToolsDict_333_0_20, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 4, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax d - 'Double_t' 0 - mass", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t, Double_t))(&MPTools::projectPtYDownToMtInInvariantRepresentation) ), 0);
   G__memfunc_setup("projectPtYDownToMtInBoltzmannRepresentation",4463,G__ToolsDict_333_0_21, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 4, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax d - 'Double_t' 0 - mass", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t, Double_t))(&MPTools::projectPtYDownToMtInBoltzmannRepresentation) ), 0);
   G__memfunc_setup("projectPtYDownToMtM0InInvariantRepresentation",4579,G__ToolsDict_333_0_22, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 4, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax d - 'Double_t' 0 - mass", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t, Double_t))(&MPTools::projectPtYDownToMtM0InInvariantRepresentation) ), 0);
   G__memfunc_setup("projectPtYDownToMtM0",1965,G__ToolsDict_333_0_23, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 4, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax d - 'Double_t' 0 - mass", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t, Double_t))(&MPTools::projectPtYDownToMtM0) ), 0);
   G__memfunc_setup("projectPtYDownToMt",1840,G__ToolsDict_333_0_24, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1D), -1, 0, 4, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 - ymin "
"i - 'Int_t' 0 - ymax d - 'Double_t' 0 - mass", (char*)NULL, (void*) G__func2void( (TH1D* (*)(TH2*, Int_t, Int_t, Double_t))(&MPTools::projectPtYDownToMt) ), 0);
   G__memfunc_setup("projectPtYDownToPtScaled",2431,G__ToolsDict_333_0_25, 85, G__get_linked_tagnum(&G__ToolsDictLN_TObjArray), -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist d - 'Double_t' 0 '1.' scaleFactor "
"i - 'Int_t' 0 '1' stepSize", (char*)NULL, (void*) G__func2void( (TObjArray* (*)(TH2*, Double_t, Int_t))(&MPTools::projectPtYDownToPtScaled) ), 0);
   G__memfunc_setup("projectPtYDownToPt",1843,G__ToolsDict_333_0_26, 85, G__get_linked_tagnum(&G__ToolsDictLN_TObjArray), -1, 0, 2, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 '1' stepSize", (char*)NULL, (void*) G__func2void( (TObjArray* (*)(TH2*, Int_t))(&MPTools::projectPtYDownToPt) ), 0);
   G__memfunc_setup("projectPtYDownToYScaled",2324,G__ToolsDict_333_0_27, 85, G__get_linked_tagnum(&G__ToolsDictLN_TObjArray), -1, 0, 3, 3, 1, 0, 
"U 'TH2' - 0 - hist d - 'Double_t' 0 '1.' scaleFactor "
"i - 'Int_t' 0 '1' stepSize", (char*)NULL, (void*) G__func2void( (TObjArray* (*)(TH2*, Double_t, Int_t))(&MPTools::projectPtYDownToYScaled) ), 0);
   G__memfunc_setup("projectPtYDownToY",1736,G__ToolsDict_333_0_28, 85, G__get_linked_tagnum(&G__ToolsDictLN_TObjArray), -1, 0, 2, 3, 1, 0, 
"U 'TH2' - 0 - hist i - 'Int_t' 0 '1' stepSize", (char*)NULL, (void*) G__func2void( (TObjArray* (*)(TH2*, Int_t))(&MPTools::projectPtYDownToY) ), 0);
   G__memfunc_setup("Class",502,G__ToolsDict_333_0_29, 85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&MPTools::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ToolsDict_333_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPTools::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ToolsDict_333_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&MPTools::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ToolsDict_333_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&MPTools::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ToolsDict_333_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ToolsDict_333_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPTools::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ToolsDict_333_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPTools::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ToolsDict_333_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&MPTools::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ToolsDict_333_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&MPTools::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("MPTools", 686, G__ToolsDict_333_0_41, (int) ('i'), G__get_linked_tagnum(&G__ToolsDictLN_MPTools), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("MPTools", 686, G__ToolsDict_333_0_42, (int) ('i'), G__get_linked_tagnum(&G__ToolsDictLN_MPTools), -1, 0, 1, 1, 1, 0, "u 'MPTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~MPTools", 812, G__ToolsDict_333_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ToolsDict_333_0_44, (int) ('u'), G__get_linked_tagnum(&G__ToolsDictLN_MPTools), -1, 1, 1, 1, 1, 0, "u 'MPTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHPTools(void) {
   /* HPTools */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ToolsDictLN_HPTools));
   G__memfunc_setup("ptinv",561,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 3, 4, 0, 
"d - 'Double_t' 0 - pt d - 'Double_t' 0 - theta "
"d - 'Double_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PZf_pty1",765,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 3, 4, 0, 
"D - 'Double_t' 0 - x D - 'Double_t' 0 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HPTools",681,G__ToolsDict_676_0_3, 105, G__get_linked_tagnum(&G__ToolsDictLN_HPTools), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addSourceList",1334,G__ToolsDict_676_0_4, 105, -1, G__defined_typename("Int_t"), 0, 4, 3, 1, 0, 
"U 'HDataSource' - 0 - source u 'TString' - 0 - inputFile "
"u 'TString' - 0 - inDir i - 'Int_t' 0 '-1' refid", (char*)NULL, (void*) G__func2void( (Int_t (*)(HDataSource*, TString, TString, Int_t))(&HPTools::addSourceList) ), 0);
   G__memfunc_setup("geantPidAxis",1217,G__ToolsDict_676_0_5, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - - u 'TString' - 0 '\"X\"' axis", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, TString))(&HPTools::geantPidAxis) ), 0);
   G__memfunc_setup("plotGeantAxis",1347,G__ToolsDict_676_0_6, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TAxis' - 0 - axis", (char*)NULL, (void*) G__func2void( (void (*)(TAxis*))(&HPTools::plotGeantAxis) ), 0);
   G__memfunc_setup("geantProcessAxis",1667,G__ToolsDict_676_0_7, 121, -1, -1, 0, 2, 3, 1, 0, 
"U 'TH1' - 0 - - u 'TString' - 0 '\"X\"' axis", (char*)NULL, (void*) G__func2void( (void (*)(TH1*, TString))(&HPTools::geantProcessAxis) ), 0);
   G__memfunc_setup("plotGeantProcessAxis",2082,G__ToolsDict_676_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TAxis' - 0 - axis", (char*)NULL, (void*) G__func2void( (void (*)(TAxis*))(&HPTools::plotGeantProcessAxis) ), 0);
   G__memfunc_setup("plotPolarSectorGrid",1971,G__ToolsDict_676_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HPTools::plotPolarSectorGrid) ), 0);
   G__memfunc_setup("plot_pty_PZ",1156,G__ToolsDict_676_0_10, 121, -1, -1, 0, 1, 3, 1, 0, "d - 'Double_t' 0 '139.' mass", (char*)NULL, (void*) G__func2void( (void (*)(Double_t))(&HPTools::plot_pty_PZ) ), 0);
   G__memfunc_setup("printAnalysisFileInfo",2173,G__ToolsDict_676_0_11, 121, -1, -1, 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - startEvt u 'TString' - 0 - inputDir "
"u 'TString' - 0 - outFile u 'TString' - 0 - outDir", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, TString, TString, TString))(&HPTools::printAnalysisFileInfo) ), 0);
   G__memfunc_setup("mdcDetectorSetup",1663,G__ToolsDict_676_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "u 'TString' - 0 - beamtime", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TString))(&HPTools::mdcDetectorSetup) ), 0);
   G__memfunc_setup("mdcDetectorSetup",1663,G__ToolsDict_676_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "C - 'Char_t' 10 - beamtime", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const Char_t*))(&HPTools::mdcDetectorSetup) ), 0);
   G__memfunc_setup("mdcDetectorSetup",1663,G__ToolsDict_676_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "1 - 'Int_t (*)[4]' 0 - mdcMods", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t (*)[4]))(&HPTools::mdcDetectorSetup) ), 0);
   G__memfunc_setup("getRhoVertex",1255,G__ToolsDict_676_0_15, 100, -1, G__defined_typename("Double_t"), 0, 1, 3, 1, 0, "u 'HGeomVector' - 1 - vector", (char*)NULL, (void*) G__func2void( (Double_t (*)(HGeomVector&))(&HPTools::getRhoVertex) ), 0);
   G__memfunc_setup("printCounter",1293,G__ToolsDict_676_0_16, 121, -1, -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - eventiter i - 'Int_t' 0 - nEvents "
"f - 'Float_t' 0 '0.05' stepsize", (char*)NULL, (void*) G__func2void( (void (*)(Int_t, Int_t, Float_t))(&HPTools::printCounter) ), 0);
   G__memfunc_setup("hadesInit",921,G__ToolsDict_676_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&HPTools::hadesInit) ), 0);
   G__memfunc_setup("hadesEventLoop",1441,G__ToolsDict_676_0_18, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - nEvents i - 'Int_t' 0 - startEvt", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t, Int_t))(&HPTools::hadesEventLoop) ), 0);
   G__memfunc_setup("usageFileInDirOutDirNevtStart",2925,G__ToolsDict_676_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const Char_t*))(&HPTools::usageFileInDirOutDirNevtStart) ), 0);
   G__memfunc_setup("usageFileInDirOutDirNevtStart",2925,G__ToolsDict_676_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) G__func2void( (Bool_t (*)(TString))(&HPTools::usageFileInDirOutDirNevtStart) ), 0);
   G__memfunc_setup("mainFileInDirOutDirNevtStar",2697,G__ToolsDict_676_0_21, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - argc C - 'Char_t' 2 - argv "
"1 - 'Int_t (*) (TString outDir, TString inputDir, TString inputFile, Int_t nEvents, Int_t startEvt)' 0 - function", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t, Char_t**, Int_t (*) (TString outDir, TString inputDir, TString inputFile, Int_t nEvents, Int_t startEvt)))(&HPTools::mainFileInDirOutDirNevtStar) ), 0);
   G__memfunc_setup("setPersistency",1509,G__ToolsDict_676_0_22, 121, -1, -1, 0, 4, 3, 1, 0, 
"g - 'Bool_t' 0 - b S - 'Cat_t' 0 - persistentArray "
"h - 'UInt_t' 0 - nPersistent h - 'UInt_t' 0 '0' clean", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t, Cat_t*, UInt_t, UInt_t))(&HPTools::setPersistency) ), 0);
   G__memfunc_setup("setPersistencyClean",1992,G__ToolsDict_676_0_23, 121, -1, -1, 0, 3, 3, 1, 0, 
"g - 'Bool_t' 0 - b S - 'Cat_t' 0 - persistentArray "
"h - 'UInt_t' 0 - nPersistent", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t, Cat_t*, UInt_t))(&HPTools::setPersistencyClean) ), 0);
   G__memfunc_setup("getPairPidHistogramm",2052,G__ToolsDict_676_0_24, 85, G__get_linked_tagnum(&G__ToolsDictLN_TH1F), -1, 0, 4, 3, 1, 0, 
"d - 'Axis_t' 0 '0' min d - 'Axis_t' 0 '0' max "
"i - 'Int_t' 0 '0' extBins d - 'Double_t' 0 '1' extBinning", (char*)NULL, (void*) G__func2void( (TH1F* (*)(Axis_t, Axis_t, Int_t, Double_t))(&HPTools::getPairPidHistogramm) ), 0);
   G__memfunc_setup("getGeantPidNameLatex",1995,G__ToolsDict_676_0_25, 117, G__get_linked_tagnum(&G__ToolsDictLN_TString), -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) G__func2void( (TString (*)(Int_t))(&HPTools::getGeantPidNameLatex) ), 0);
   G__memfunc_setup("getGeantProcessNameLatex",2445,G__ToolsDict_676_0_26, 117, G__get_linked_tagnum(&G__ToolsDictLN_TString), -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) G__func2void( (TString (*)(Int_t))(&HPTools::getGeantProcessNameLatex) ), 0);
   G__memfunc_setup("Class",502,G__ToolsDict_676_0_27, 85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HPTools::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ToolsDict_676_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPTools::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ToolsDict_676_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HPTools::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ToolsDict_676_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HPTools::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__ToolsDict_676_0_31, 85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__ToolsDict_676_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__ToolsDict_676_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ToolsDict_676_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ToolsDict_676_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPTools::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ToolsDict_676_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPTools::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ToolsDict_676_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPTools::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ToolsDict_676_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPTools::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HPTools", 681, G__ToolsDict_676_0_39, (int) ('i'), G__get_linked_tagnum(&G__ToolsDictLN_HPTools), -1, 0, 1, 1, 1, 0, "u 'HPTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HPTools", 807, G__ToolsDict_676_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ToolsDict_676_0_41, (int) ('u'), G__get_linked_tagnum(&G__ToolsDictLN_HPTools), -1, 1, 1, 1, 1, 0, "u 'HPTools' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHReport(void) {
   /* HReport */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__ToolsDictLN_HReport));
   G__memfunc_setup("initVariables",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HReport",708,G__ToolsDict_677_0_2, 105, G__get_linked_tagnum(&G__ToolsDictLN_HReport), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOptions",1080,G__ToolsDict_677_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("includePackages",1539,G__ToolsDict_677_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' packages", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openTex",739,G__ToolsDict_677_0_5, 121, -1, -1, 0, 4, 1, 1, 0, 
"u 'TString' - 0 '\"\"' tdir u 'TString' - 0 '\"\"' tfile "
"u 'TString' - 0 '\"Report\"' titlename u 'TString' - 0 '\"\"' authorname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openDocument",1265,G__ToolsDict_677_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeDocument",1365,G__ToolsDict_677_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addText",718,G__ToolsDict_677_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - text", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("figure",642,G__ToolsDict_677_0_9, 121, -1, -1, 0, 13, 1, 1, 0, 
"U 'TCanvas' - 0 '0' canvas u 'TString' - 0 '\"\"' cap "
"u 'TString' - 0 '\"\"' shcap u 'TString' - 0 '\"\"' lab "
"f - 'Float_t' 0 '-1' width i - 'Int_t' 0 '-1' x1 "
"i - 'Int_t' 0 '-1' y1 i - 'Int_t' 0 '-1' x2 "
"i - 'Int_t' 0 '-1' y2 i - 'Int_t' 0 '0' rotate "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' force "
"u 'TString' - 0 '\"pdf\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("figureSideCaption",1749,G__ToolsDict_677_0_10, 121, -1, -1, 0, 15, 1, 1, 0, 
"U 'TCanvas' - 0 '0' canvas u 'TString' - 0 '\"\"' cap "
"u 'TString' - 0 '\"\"' shcap u 'TString' - 0 '\"\"' lab "
"f - 'Float_t' 0 '0.5' widthpic f - 'Float_t' 0 '0.45' widthtxt "
"f - 'Float_t' 0 '0.02' space i - 'Int_t' 0 '-1' x1 "
"i - 'Int_t' 0 '-1' y1 i - 'Int_t' 0 '-1' x2 "
"i - 'Int_t' 0 '-1' y2 i - 'Int_t' 0 '0' rotate "
"u 'TString' - 0 '\"\"' filename g - 'Bool_t' 0 'kFALSE' force "
"u 'TString' - 0 '\"pdf\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("table",520,G__ToolsDict_677_0_11, 121, -1, -1, 0, 11, 1, 1, 0, 
"F - 'Float_t' 0 '0' val F - 'Float_t' 0 '0' valerr "
"i - 'Int_t' 0 '0' sx i - 'Int_t' 0 '0' sy "
"u 'TString' - 0 '\"\"' titlex u 'TString' - 0 '\"\"' titley "
"u 'TString' - 0 '\"\"' format u 'TString' - 0 '\"\"' line "
"u 'TString' - 0 '\"\"' cap u 'TString' - 0 '\"\"' shcap "
"u 'TString' - 0 '\"\"' label", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openTable",922,G__ToolsDict_677_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 '\"\"' format", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeTable",1022,G__ToolsDict_677_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'TString' - 0 '\"\"' cap u 'TString' - 0 '\"\"' shcap "
"u 'TString' - 0 '\"\"' lab", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openAppendix",1259,G__ToolsDict_677_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeAppendix",1359,G__ToolsDict_677_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("includeSource",1365,G__ToolsDict_677_0_16, 121, -1, -1, 0, 7, 1, 1, 0, 
"u 'TString' - 0 '\"\"' source u 'TString' - 0 '\"\"' cap "
"u 'TString' - 0 '\"\"' shcap u 'TString' - 0 '\"\"' label "
"i - 'Int_t' 0 '-1' firstline i - 'Int_t' 0 '-1' lastline "
"u 'TString' - 0 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makepdf",728,G__ToolsDict_677_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openpdf",748,G__ToolsDict_677_0_18, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printOrder",1065,G__ToolsDict_677_0_19, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printOptions",1305,G__ToolsDict_677_0_20, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printSettings",1406,G__ToolsDict_677_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveToPdf",908,G__ToolsDict_677_0_22, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'TCanvas' - 0 '0' canvas u 'TString' - 0 '\"\"' filename "
"g - 'Bool_t' 0 'kFALSE' separate g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveToPng",919,G__ToolsDict_677_0_23, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"U 'TCanvas' - 0 '0' canvas u 'TString' - 0 '\"\"' filename "
"g - 'Bool_t' 0 'kFALSE' separate g - 'Bool_t' 0 'kFALSE' force", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("parseString",1170,G__ToolsDict_677_0_24, 85, G__get_linked_tagnum(&G__ToolsDictLN_TString), -1, 0, 5, 1, 1, 0, 
"u 'TString' - 0 - options i - 'Int_t' 1 - size "
"u 'TString' - 0 '\"\"' separator g - 'Bool_t' 0 'kTRUE' tolower "
"g - 'Bool_t' 0 'kTRUE' removespace", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLineBreak",1209,G__ToolsDict_677_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - width", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("allwaysSkipCurly",1699,G__ToolsDict_677_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeTex",860,G__ToolsDict_677_0_27, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 '\"\"' text g - 'Bool_t' 0 'kTRUE' skip_curly", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__ToolsDict_677_0_28, 85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HReport::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__ToolsDict_677_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HReport::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__ToolsDict_677_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HReport::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__ToolsDict_677_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HReport::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__ToolsDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__ToolsDict_677_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__ToolsDict_677_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HReport::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__ToolsDict_677_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HReport::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__ToolsDict_677_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HReport::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__ToolsDict_677_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HReport::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HReport", 708, G__ToolsDict_677_0_40, (int) ('i'), G__get_linked_tagnum(&G__ToolsDictLN_HReport), -1, 0, 1, 1, 1, 0, "u 'HReport' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HReport", 834, G__ToolsDict_677_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__ToolsDict_677_0_42, (int) ('u'), G__get_linked_tagnum(&G__ToolsDictLN_HReport), -1, 1, 1, 1, 1, 0, "u 'HReport' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncToolsDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalToolsDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcToolsDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__ToolsDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR = { "basic_ofstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TAxis = { "TAxis" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TLegend = { "TLegend" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TGraph = { "TGraph" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH2 = { "TH2" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TArray = { "TArray" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH1D = { "TH1D" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH2D = { "TH2D" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH3 = { "TH3" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH3F = { "TH3F" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TH3D = { "TH3D" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__ToolsDictLN_THStack = { "THStack" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TLatex = { "TLatex" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TLegendEntry = { "TLegendEntry" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TPaveText = { "TPaveText" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TPaveStats = { "TPaveStats" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TGraphErrors = { "TGraphErrors" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_PTools = { "PTools" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_HGeomVector = { "HGeomVector" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_MPTools = { "MPTools" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_HDataSource = { "HDataSource" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_HPTools = { "HPTools" , 99 , -1 };
G__linked_taginfo G__ToolsDictLN_HReport = { "HReport" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableToolsDict() {
  G__ToolsDictLN_TClass.tagnum = -1 ;
  G__ToolsDictLN_TBuffer.tagnum = -1 ;
  G__ToolsDictLN_TDirectory.tagnum = -1 ;
  G__ToolsDictLN_TMemberInspector.tagnum = -1 ;
  G__ToolsDictLN_TObject.tagnum = -1 ;
  G__ToolsDictLN_TNamed.tagnum = -1 ;
  G__ToolsDictLN_TString.tagnum = -1 ;
  G__ToolsDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__ToolsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__ToolsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ToolsDictLN_TObjArray.tagnum = -1 ;
  G__ToolsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__ToolsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ToolsDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__ToolsDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__ToolsDictLN_TAxis.tagnum = -1 ;
  G__ToolsDictLN_TCanvas.tagnum = -1 ;
  G__ToolsDictLN_TH1F.tagnum = -1 ;
  G__ToolsDictLN_TLegend.tagnum = -1 ;
  G__ToolsDictLN_TPad.tagnum = -1 ;
  G__ToolsDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__ToolsDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__ToolsDictLN_TH1.tagnum = -1 ;
  G__ToolsDictLN_TGraph.tagnum = -1 ;
  G__ToolsDictLN_TH2.tagnum = -1 ;
  G__ToolsDictLN_TCutG.tagnum = -1 ;
  G__ToolsDictLN_TArray.tagnum = -1 ;
  G__ToolsDictLN_TH1D.tagnum = -1 ;
  G__ToolsDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__ToolsDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__ToolsDictLN_TH2F.tagnum = -1 ;
  G__ToolsDictLN_TH2D.tagnum = -1 ;
  G__ToolsDictLN_TH3.tagnum = -1 ;
  G__ToolsDictLN_TH3F.tagnum = -1 ;
  G__ToolsDictLN_TH3D.tagnum = -1 ;
  G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__ToolsDictLN_THStack.tagnum = -1 ;
  G__ToolsDictLN_TLatex.tagnum = -1 ;
  G__ToolsDictLN_TLegendEntry.tagnum = -1 ;
  G__ToolsDictLN_TPaveText.tagnum = -1 ;
  G__ToolsDictLN_TPaveStats.tagnum = -1 ;
  G__ToolsDictLN_TStopwatch.tagnum = -1 ;
  G__ToolsDictLN_TGraphErrors.tagnum = -1 ;
  G__ToolsDictLN_PTools.tagnum = -1 ;
  G__ToolsDictLN_HGeomVector.tagnum = -1 ;
  G__ToolsDictLN_MPTools.tagnum = -1 ;
  G__ToolsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__ToolsDictLN_TDatime.tagnum = -1 ;
  G__ToolsDictLN_HDataSource.tagnum = -1 ;
  G__ToolsDictLN_HPTools.tagnum = -1 ;
  G__ToolsDictLN_HReport.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableToolsDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TString);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_basic_ofstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TAxis);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TLegend);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TPad);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TGraph);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH2);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TCutG);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TArray);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH1D);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH2D);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH3);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH3F);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TH3D);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_THStack);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TLatex);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TLegendEntry);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TPaveText);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TPaveStats);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TStopwatch);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TGraphErrors);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ToolsDictLN_PTools),sizeof(PTools),-1,1280,"Programmer's Tools",G__setup_memvarPTools,G__setup_memfuncPTools);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_HGeomVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ToolsDictLN_MPTools),sizeof(MPTools),-1,28672,"Peter's Math Tools",G__setup_memvarMPTools,G__setup_memfuncMPTools);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_TDatime);
   G__get_linked_tagnum_fwd(&G__ToolsDictLN_HDataSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ToolsDictLN_HPTools),sizeof(HPTools),-1,1280,"Hydra Processing Tools",G__setup_memvarHPTools,G__setup_memfuncHPTools);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__ToolsDictLN_HReport),sizeof(HReport),-1,62720,"report class",G__setup_memvarHReport,G__setup_memfuncHReport);
}
extern "C" void G__cpp_setupToolsDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupToolsDict()");
  G__set_cpp_environmentToolsDict();
  G__cpp_setup_tagtableToolsDict();

  G__cpp_setup_inheritanceToolsDict();

  G__cpp_setup_typetableToolsDict();

  G__cpp_setup_memvarToolsDict();

  G__cpp_setup_memfuncToolsDict();
  G__cpp_setup_globalToolsDict();
  G__cpp_setup_funcToolsDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncToolsDict();
  return;
}
class G__cpp_setup_initToolsDict {
  public:
    G__cpp_setup_initToolsDict() { G__add_setup_func("ToolsDict",(G__incsetup)(&G__cpp_setupToolsDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initToolsDict() { G__remove_setup_func("ToolsDict"); }
};
G__cpp_setup_initToolsDict G__cpp_setup_initializerToolsDict;

