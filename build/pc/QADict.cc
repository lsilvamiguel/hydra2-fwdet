//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:50:49 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIQADict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "QADict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HQAHistograms_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAHistograms(void *p = 0);
   static void *newArray_HQAHistograms(Long_t size, void *p);
   static void delete_HQAHistograms(void *p);
   static void deleteArray_HQAHistograms(void *p);
   static void destruct_HQAHistograms(void *p);
   static void streamer_HQAHistograms(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAHistograms*)
   {
      ::HQAHistograms *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAHistograms >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAHistograms", ::HQAHistograms::Class_Version(), "././hqahistograms.h", 18,
                  typeid(::HQAHistograms), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAHistograms::Dictionary, isa_proxy, 0,
                  sizeof(::HQAHistograms) );
      instance.SetNew(&new_HQAHistograms);
      instance.SetNewArray(&newArray_HQAHistograms);
      instance.SetDelete(&delete_HQAHistograms);
      instance.SetDeleteArray(&deleteArray_HQAHistograms);
      instance.SetDestructor(&destruct_HQAHistograms);
      instance.SetStreamerFunc(&streamer_HQAHistograms);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAHistograms*)
   {
      return GenerateInitInstanceLocal((::HQAHistograms*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAHistograms*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAFileInfoTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAFileInfoTree(void *p = 0);
   static void *newArray_HQAFileInfoTree(Long_t size, void *p);
   static void delete_HQAFileInfoTree(void *p);
   static void deleteArray_HQAFileInfoTree(void *p);
   static void destruct_HQAFileInfoTree(void *p);
   static void streamer_HQAFileInfoTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAFileInfoTree*)
   {
      ::HQAFileInfoTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAFileInfoTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAFileInfoTree", ::HQAFileInfoTree::Class_Version(), "././hqatreemaker.h", 8,
                  typeid(::HQAFileInfoTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAFileInfoTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQAFileInfoTree) );
      instance.SetNew(&new_HQAFileInfoTree);
      instance.SetNewArray(&newArray_HQAFileInfoTree);
      instance.SetDelete(&delete_HQAFileInfoTree);
      instance.SetDeleteArray(&deleteArray_HQAFileInfoTree);
      instance.SetDestructor(&destruct_HQAFileInfoTree);
      instance.SetStreamerFunc(&streamer_HQAFileInfoTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAFileInfoTree*)
   {
      return GenerateInitInstanceLocal((::HQAFileInfoTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAFileInfoTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAStartTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAStartTree(void *p = 0);
   static void *newArray_HQAStartTree(Long_t size, void *p);
   static void delete_HQAStartTree(void *p);
   static void deleteArray_HQAStartTree(void *p);
   static void destruct_HQAStartTree(void *p);
   static void streamer_HQAStartTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAStartTree*)
   {
      ::HQAStartTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAStartTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAStartTree", ::HQAStartTree::Class_Version(), "././hqatreemaker.h", 43,
                  typeid(::HQAStartTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAStartTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQAStartTree) );
      instance.SetNew(&new_HQAStartTree);
      instance.SetNewArray(&newArray_HQAStartTree);
      instance.SetDelete(&delete_HQAStartTree);
      instance.SetDeleteArray(&deleteArray_HQAStartTree);
      instance.SetDestructor(&destruct_HQAStartTree);
      instance.SetStreamerFunc(&streamer_HQAStartTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAStartTree*)
   {
      return GenerateInitInstanceLocal((::HQAStartTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAStartTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQARichTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQARichTree(void *p = 0);
   static void *newArray_HQARichTree(Long_t size, void *p);
   static void delete_HQARichTree(void *p);
   static void deleteArray_HQARichTree(void *p);
   static void destruct_HQARichTree(void *p);
   static void streamer_HQARichTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQARichTree*)
   {
      ::HQARichTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQARichTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQARichTree", ::HQARichTree::Class_Version(), "././hqatreemaker.h", 77,
                  typeid(::HQARichTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQARichTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQARichTree) );
      instance.SetNew(&new_HQARichTree);
      instance.SetNewArray(&newArray_HQARichTree);
      instance.SetDelete(&delete_HQARichTree);
      instance.SetDeleteArray(&deleteArray_HQARichTree);
      instance.SetDestructor(&destruct_HQARichTree);
      instance.SetStreamerFunc(&streamer_HQARichTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQARichTree*)
   {
      return GenerateInitInstanceLocal((::HQARichTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQARichTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAMdcTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAMdcTree(void *p = 0);
   static void *newArray_HQAMdcTree(Long_t size, void *p);
   static void delete_HQAMdcTree(void *p);
   static void deleteArray_HQAMdcTree(void *p);
   static void destruct_HQAMdcTree(void *p);
   static void streamer_HQAMdcTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAMdcTree*)
   {
      ::HQAMdcTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAMdcTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAMdcTree", ::HQAMdcTree::Class_Version(), "././hqatreemaker.h", 121,
                  typeid(::HQAMdcTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAMdcTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQAMdcTree) );
      instance.SetNew(&new_HQAMdcTree);
      instance.SetNewArray(&newArray_HQAMdcTree);
      instance.SetDelete(&delete_HQAMdcTree);
      instance.SetDeleteArray(&deleteArray_HQAMdcTree);
      instance.SetDestructor(&destruct_HQAMdcTree);
      instance.SetStreamerFunc(&streamer_HQAMdcTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAMdcTree*)
   {
      return GenerateInitInstanceLocal((::HQAMdcTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAMdcTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQATofTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQATofTree(void *p = 0);
   static void *newArray_HQATofTree(Long_t size, void *p);
   static void delete_HQATofTree(void *p);
   static void deleteArray_HQATofTree(void *p);
   static void destruct_HQATofTree(void *p);
   static void streamer_HQATofTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQATofTree*)
   {
      ::HQATofTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQATofTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQATofTree", ::HQATofTree::Class_Version(), "././hqatreemaker.h", 202,
                  typeid(::HQATofTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQATofTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQATofTree) );
      instance.SetNew(&new_HQATofTree);
      instance.SetNewArray(&newArray_HQATofTree);
      instance.SetDelete(&delete_HQATofTree);
      instance.SetDeleteArray(&deleteArray_HQATofTree);
      instance.SetDestructor(&destruct_HQATofTree);
      instance.SetStreamerFunc(&streamer_HQATofTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQATofTree*)
   {
      return GenerateInitInstanceLocal((::HQATofTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQATofTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQARpcTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQARpcTree(void *p = 0);
   static void *newArray_HQARpcTree(Long_t size, void *p);
   static void delete_HQARpcTree(void *p);
   static void deleteArray_HQARpcTree(void *p);
   static void destruct_HQARpcTree(void *p);
   static void streamer_HQARpcTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQARpcTree*)
   {
      ::HQARpcTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQARpcTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQARpcTree", ::HQARpcTree::Class_Version(), "././hqatreemaker.h", 237,
                  typeid(::HQARpcTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQARpcTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQARpcTree) );
      instance.SetNew(&new_HQARpcTree);
      instance.SetNewArray(&newArray_HQARpcTree);
      instance.SetDelete(&delete_HQARpcTree);
      instance.SetDeleteArray(&deleteArray_HQARpcTree);
      instance.SetDestructor(&destruct_HQARpcTree);
      instance.SetStreamerFunc(&streamer_HQARpcTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQARpcTree*)
   {
      return GenerateInitInstanceLocal((::HQARpcTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQARpcTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAShowerTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAShowerTree(void *p = 0);
   static void *newArray_HQAShowerTree(Long_t size, void *p);
   static void delete_HQAShowerTree(void *p);
   static void deleteArray_HQAShowerTree(void *p);
   static void destruct_HQAShowerTree(void *p);
   static void streamer_HQAShowerTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAShowerTree*)
   {
      ::HQAShowerTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAShowerTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAShowerTree", ::HQAShowerTree::Class_Version(), "././hqatreemaker.h", 271,
                  typeid(::HQAShowerTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAShowerTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQAShowerTree) );
      instance.SetNew(&new_HQAShowerTree);
      instance.SetNewArray(&newArray_HQAShowerTree);
      instance.SetDelete(&delete_HQAShowerTree);
      instance.SetDeleteArray(&deleteArray_HQAShowerTree);
      instance.SetDestructor(&destruct_HQAShowerTree);
      instance.SetStreamerFunc(&streamer_HQAShowerTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAShowerTree*)
   {
      return GenerateInitInstanceLocal((::HQAShowerTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAShowerTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAPhysicsTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAPhysicsTree(void *p = 0);
   static void *newArray_HQAPhysicsTree(Long_t size, void *p);
   static void delete_HQAPhysicsTree(void *p);
   static void deleteArray_HQAPhysicsTree(void *p);
   static void destruct_HQAPhysicsTree(void *p);
   static void streamer_HQAPhysicsTree(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAPhysicsTree*)
   {
      ::HQAPhysicsTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAPhysicsTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAPhysicsTree", ::HQAPhysicsTree::Class_Version(), "././hqatreemaker.h", 300,
                  typeid(::HQAPhysicsTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAPhysicsTree::Dictionary, isa_proxy, 0,
                  sizeof(::HQAPhysicsTree) );
      instance.SetNew(&new_HQAPhysicsTree);
      instance.SetNewArray(&newArray_HQAPhysicsTree);
      instance.SetDelete(&delete_HQAPhysicsTree);
      instance.SetDeleteArray(&deleteArray_HQAPhysicsTree);
      instance.SetDestructor(&destruct_HQAPhysicsTree);
      instance.SetStreamerFunc(&streamer_HQAPhysicsTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAPhysicsTree*)
   {
      return GenerateInitInstanceLocal((::HQAPhysicsTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAPhysicsTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAVariations_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAVariations(void *p = 0);
   static void *newArray_HQAVariations(Long_t size, void *p);
   static void delete_HQAVariations(void *p);
   static void deleteArray_HQAVariations(void *p);
   static void destruct_HQAVariations(void *p);
   static void streamer_HQAVariations(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAVariations*)
   {
      ::HQAVariations *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAVariations >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAVariations", ::HQAVariations::Class_Version(), "././hqavariations.h", 10,
                  typeid(::HQAVariations), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAVariations::Dictionary, isa_proxy, 0,
                  sizeof(::HQAVariations) );
      instance.SetNew(&new_HQAVariations);
      instance.SetNewArray(&newArray_HQAVariations);
      instance.SetDelete(&delete_HQAVariations);
      instance.SetDeleteArray(&deleteArray_HQAVariations);
      instance.SetDestructor(&destruct_HQAVariations);
      instance.SetStreamerFunc(&streamer_HQAVariations);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAVariations*)
   {
      return GenerateInitInstanceLocal((::HQAVariations*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAVariations*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAScalers_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAScalers(void *p = 0);
   static void *newArray_HQAScalers(Long_t size, void *p);
   static void delete_HQAScalers(void *p);
   static void deleteArray_HQAScalers(void *p);
   static void destruct_HQAScalers(void *p);
   static void streamer_HQAScalers(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAScalers*)
   {
      ::HQAScalers *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAScalers >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAScalers", ::HQAScalers::Class_Version(), "././hqascalers.h", 10,
                  typeid(::HQAScalers), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAScalers::Dictionary, isa_proxy, 0,
                  sizeof(::HQAScalers) );
      instance.SetNew(&new_HQAScalers);
      instance.SetNewArray(&newArray_HQAScalers);
      instance.SetDelete(&delete_HQAScalers);
      instance.SetDeleteArray(&deleteArray_HQAScalers);
      instance.SetDestructor(&destruct_HQAScalers);
      instance.SetStreamerFunc(&streamer_HQAScalers);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAScalers*)
   {
      return GenerateInitInstanceLocal((::HQAScalers*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAScalers*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAOutputPS_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAOutputPS(void *p = 0);
   static void *newArray_HQAOutputPS(Long_t size, void *p);
   static void delete_HQAOutputPS(void *p);
   static void deleteArray_HQAOutputPS(void *p);
   static void destruct_HQAOutputPS(void *p);
   static void streamer_HQAOutputPS(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAOutputPS*)
   {
      ::HQAOutputPS *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAOutputPS >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAOutputPS", ::HQAOutputPS::Class_Version(), "././hqaoutputps.h", 13,
                  typeid(::HQAOutputPS), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAOutputPS::Dictionary, isa_proxy, 0,
                  sizeof(::HQAOutputPS) );
      instance.SetNew(&new_HQAOutputPS);
      instance.SetNewArray(&newArray_HQAOutputPS);
      instance.SetDelete(&delete_HQAOutputPS);
      instance.SetDeleteArray(&deleteArray_HQAOutputPS);
      instance.SetDestructor(&destruct_HQAOutputPS);
      instance.SetStreamerFunc(&streamer_HQAOutputPS);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAOutputPS*)
   {
      return GenerateInitInstanceLocal((::HQAOutputPS*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAOutputPS*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAMaker_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAMaker(void *p = 0);
   static void *newArray_HQAMaker(Long_t size, void *p);
   static void delete_HQAMaker(void *p);
   static void deleteArray_HQAMaker(void *p);
   static void destruct_HQAMaker(void *p);
   static void streamer_HQAMaker(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAMaker*)
   {
      ::HQAMaker *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAMaker >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAMaker", ::HQAMaker::Class_Version(), "././hqamaker.h", 33,
                  typeid(::HQAMaker), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAMaker::Dictionary, isa_proxy, 0,
                  sizeof(::HQAMaker) );
      instance.SetNew(&new_HQAMaker);
      instance.SetNewArray(&newArray_HQAMaker);
      instance.SetDelete(&delete_HQAMaker);
      instance.SetDeleteArray(&deleteArray_HQAMaker);
      instance.SetDestructor(&destruct_HQAMaker);
      instance.SetStreamerFunc(&streamer_HQAMaker);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAMaker*)
   {
      return GenerateInitInstanceLocal((::HQAMaker*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAMaker*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAScaler_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAScaler(void *p = 0);
   static void *newArray_HQAScaler(Long_t size, void *p);
   static void delete_HQAScaler(void *p);
   static void deleteArray_HQAScaler(void *p);
   static void destruct_HQAScaler(void *p);
   static void streamer_HQAScaler(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAScaler*)
   {
      ::HQAScaler *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAScaler >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAScaler", ::HQAScaler::Class_Version(), "././hqascalers.h", 69,
                  typeid(::HQAScaler), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAScaler::Dictionary, isa_proxy, 0,
                  sizeof(::HQAScaler) );
      instance.SetNew(&new_HQAScaler);
      instance.SetNewArray(&newArray_HQAScaler);
      instance.SetDelete(&delete_HQAScaler);
      instance.SetDeleteArray(&deleteArray_HQAScaler);
      instance.SetDestructor(&destruct_HQAScaler);
      instance.SetStreamerFunc(&streamer_HQAScaler);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAScaler*)
   {
      return GenerateInitInstanceLocal((::HQAScaler*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAScaler*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HQAScaler6_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HQAScaler6(void *p = 0);
   static void *newArray_HQAScaler6(Long_t size, void *p);
   static void delete_HQAScaler6(void *p);
   static void deleteArray_HQAScaler6(void *p);
   static void destruct_HQAScaler6(void *p);
   static void streamer_HQAScaler6(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HQAScaler6*)
   {
      ::HQAScaler6 *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HQAScaler6 >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HQAScaler6", ::HQAScaler6::Class_Version(), "././hqascalers.h", 106,
                  typeid(::HQAScaler6), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HQAScaler6::Dictionary, isa_proxy, 0,
                  sizeof(::HQAScaler6) );
      instance.SetNew(&new_HQAScaler6);
      instance.SetNewArray(&newArray_HQAScaler6);
      instance.SetDelete(&delete_HQAScaler6);
      instance.SetDeleteArray(&deleteArray_HQAScaler6);
      instance.SetDestructor(&destruct_HQAScaler6);
      instance.SetStreamerFunc(&streamer_HQAScaler6);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HQAScaler6*)
   {
      return GenerateInitInstanceLocal((::HQAScaler6*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HQAScaler6*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HQAHistograms::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAHistograms::Class_Name()
{
   return "HQAHistograms";
}

//______________________________________________________________________________
const char *HQAHistograms::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAHistograms*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAHistograms::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAHistograms*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAHistograms::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAHistograms*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAHistograms::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAHistograms*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAFileInfoTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAFileInfoTree::Class_Name()
{
   return "HQAFileInfoTree";
}

//______________________________________________________________________________
const char *HQAFileInfoTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAFileInfoTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAFileInfoTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAFileInfoTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAFileInfoTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAFileInfoTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAFileInfoTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAFileInfoTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAStartTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAStartTree::Class_Name()
{
   return "HQAStartTree";
}

//______________________________________________________________________________
const char *HQAStartTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAStartTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAStartTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAStartTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAStartTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAStartTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAStartTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAStartTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQARichTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQARichTree::Class_Name()
{
   return "HQARichTree";
}

//______________________________________________________________________________
const char *HQARichTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQARichTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQARichTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQARichTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQARichTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQARichTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQARichTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQARichTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAMdcTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAMdcTree::Class_Name()
{
   return "HQAMdcTree";
}

//______________________________________________________________________________
const char *HQAMdcTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMdcTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAMdcTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMdcTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAMdcTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMdcTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAMdcTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMdcTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQATofTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQATofTree::Class_Name()
{
   return "HQATofTree";
}

//______________________________________________________________________________
const char *HQATofTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQATofTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQATofTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQATofTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQATofTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQATofTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQATofTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQATofTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQARpcTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQARpcTree::Class_Name()
{
   return "HQARpcTree";
}

//______________________________________________________________________________
const char *HQARpcTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQARpcTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQARpcTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQARpcTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQARpcTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQARpcTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQARpcTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQARpcTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAShowerTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAShowerTree::Class_Name()
{
   return "HQAShowerTree";
}

//______________________________________________________________________________
const char *HQAShowerTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAShowerTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAShowerTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAShowerTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAShowerTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAShowerTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAShowerTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAShowerTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAPhysicsTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAPhysicsTree::Class_Name()
{
   return "HQAPhysicsTree";
}

//______________________________________________________________________________
const char *HQAPhysicsTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAPhysicsTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAPhysicsTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAPhysicsTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAPhysicsTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAPhysicsTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAPhysicsTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAPhysicsTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAVariations::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAVariations::Class_Name()
{
   return "HQAVariations";
}

//______________________________________________________________________________
const char *HQAVariations::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAVariations*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAVariations::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAVariations*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAVariations::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAVariations*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAVariations::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAVariations*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAScalers::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAScalers::Class_Name()
{
   return "HQAScalers";
}

//______________________________________________________________________________
const char *HQAScalers::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScalers*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAScalers::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScalers*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAScalers::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScalers*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAScalers::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScalers*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAOutputPS::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAOutputPS::Class_Name()
{
   return "HQAOutputPS";
}

//______________________________________________________________________________
const char *HQAOutputPS::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAOutputPS*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAOutputPS::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAOutputPS*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAOutputPS::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAOutputPS*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAOutputPS::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAOutputPS*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAMaker::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAMaker::Class_Name()
{
   return "HQAMaker";
}

//______________________________________________________________________________
const char *HQAMaker::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMaker*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAMaker::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMaker*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAMaker::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMaker*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAMaker::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAMaker*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAScaler::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAScaler::Class_Name()
{
   return "HQAScaler";
}

//______________________________________________________________________________
const char *HQAScaler::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAScaler::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAScaler::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAScaler::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HQAScaler6::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HQAScaler6::Class_Name()
{
   return "HQAScaler6";
}

//______________________________________________________________________________
const char *HQAScaler6::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler6*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HQAScaler6::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler6*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HQAScaler6::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler6*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HQAScaler6::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HQAScaler6*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HQAMaker::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAMaker.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HReconstructor::Streamer(R__b);
      R__b >> catSplineTrk;
      R__b >> catRungeKuttaTrk;
      R__b >> catShoHit;
      R__b >> catTfHit;
      R__b >> fCatRpcHit;
      R__b >> fCatRpcCluster;
      R__b >> catTfClust;
      R__b >> fCatParticleCand;
      R__b >> SlowPar;
      fbeamtime.Streamer(R__b);
      TFileInfo.Streamer(R__b);
      TStart.Streamer(R__b);
      TRich.Streamer(R__b);
      TMdc.Streamer(R__b);
      TTof.Streamer(R__b);
      TRpc.Streamer(R__b);
      TShw.Streamer(R__b);
      TPhy.Streamer(R__b);
      lTrack.Streamer(R__b);
      lMdc.Streamer(R__b);
      R__b >> kFIRST;
      R__b >> kPDF;
      R__b >> outputTree;
      R__b >> fileTree;
      R__b.CheckByteCount(R__s, R__c, HQAMaker::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAMaker::IsA(), kTRUE);
      HReconstructor::Streamer(R__b);
      R__b << catSplineTrk;
      R__b << catRungeKuttaTrk;
      R__b << catShoHit;
      R__b << catTfHit;
      R__b << fCatRpcHit;
      R__b << fCatRpcCluster;
      R__b << catTfClust;
      R__b << fCatParticleCand;
      R__b << SlowPar;
      fbeamtime.Streamer(R__b);
      TFileInfo.Streamer(R__b);
      TStart.Streamer(R__b);
      TRich.Streamer(R__b);
      TMdc.Streamer(R__b);
      TTof.Streamer(R__b);
      TRpc.Streamer(R__b);
      TShw.Streamer(R__b);
      TPhy.Streamer(R__b);
      lTrack.Streamer(R__b);
      lMdc.Streamer(R__b);
      R__b << kFIRST;
      R__b << kPDF;
      R__b << outputTree;
      R__b << fileTree;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAMaker::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAMaker.
      TClass *R__cl = ::HQAMaker::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterStCal", &iterStCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterStHit", &iterStHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterRichCal", &iterRichCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterRichHit", &iterRichHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterMdcRaw", &iterMdcRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterMdcCal1", &iterMdcCal1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterMdcHit", &iterMdcHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterMdcSeg", &iterMdcSeg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterTofHit", &iterTofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterTofCluster", &iterTofCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterRpcHit", &iterRpcHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterRpcCluster", &iterRpcCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterShoHit", &iterShoHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterFwRaw", &iterFwRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterFwHit", &iterFwHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterSplineTrk", &iterSplineTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterRungeKuttaTrk", &iterRungeKuttaTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterMetaMatch", &iterMetaMatch);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterParticleCand", &iterParticleCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iterHTBoxChan", &iterHTBoxChan);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*catSplineTrk", &catSplineTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*catRungeKuttaTrk", &catRungeKuttaTrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*catShoHit", &catShoHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*catTfHit", &catTfHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatRpcHit", &fCatRpcHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatRpcCluster", &fCatRpcCluster);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*catTfClust", &catTfClust);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCatParticleCand", &fCatParticleCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SlowPar", &SlowPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbeamtime", &fbeamtime);
      R__insp.InspectMember(fbeamtime, "fbeamtime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TFileInfo", &TFileInfo);
      R__insp.InspectMember(TFileInfo, "TFileInfo.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TStart", &TStart);
      R__insp.InspectMember(TStart, "TStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TRich", &TRich);
      R__insp.InspectMember(TRich, "TRich.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TMdc", &TMdc);
      R__insp.InspectMember(TMdc, "TMdc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TTof", &TTof);
      R__insp.InspectMember(TTof, "TTof.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TRpc", &TRpc);
      R__insp.InspectMember(TRpc, "TRpc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TShw", &TShw);
      R__insp.InspectMember(TShw, "TShw.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TPhy", &TPhy);
      R__insp.InspectMember(TPhy, "TPhy.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lTrack", &lTrack);
      R__insp.InspectMember(lTrack, "lTrack.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lMdc", &lMdc);
      R__insp.InspectMember(lMdc, "lMdc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFIRST", &kFIRST);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kPDF", &kPDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kWriteToFile", &kWriteToFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSim", &isSim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUseSlowPar", &fUseSlowPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nProcessed", &nProcessed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvent", &nEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nCountCalEvents", &nCountCalEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nInterval", &nInterval);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "samplingRate", &samplingRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "intervalSize", &intervalSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "psFile", &psFile);
      R__insp.InspectMember(psFile, "psFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dstFile", &dstFile);
      R__insp.InspectMember(dstFile, "dstFile.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDir", &fDir);
      R__insp.InspectMember(fDir, "fDir.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*varHists", &varHists);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hists", &hists);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*scalers", &scalers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaMin", &betaMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outputTree", &outputTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fileTree", &fileTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cutStat", &cutStat);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAMaker(void *p) {
      return  p ? new(p) ::HQAMaker : new ::HQAMaker;
   }
   static void *newArray_HQAMaker(Long_t nElements, void *p) {
      return p ? new(p) ::HQAMaker[nElements] : new ::HQAMaker[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAMaker(void *p) {
      delete ((::HQAMaker*)p);
   }
   static void deleteArray_HQAMaker(void *p) {
      delete [] ((::HQAMaker*)p);
   }
   static void destruct_HQAMaker(void *p) {
      typedef ::HQAMaker current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAMaker(TBuffer &buf, void *obj) {
      ((::HQAMaker*)obj)->::HQAMaker::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAMaker

//______________________________________________________________________________
void HQAHistograms::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAHistograms.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> OutputTree;
      R__b >> hXdiffvsshowersectorRK;
      R__b >> hXdiffvstofstripRK;
      R__b >> hYdiffvsshowersectorRK;
      R__b >> hYdiffvstofstripRK;
      R__b >> hshower_qualityRK;
      R__b >> htof_qualityRK;
      R__b >> hXdiffvstofstripRK_neg;
      R__b >> hYdiffvstofstripRK_neg;
      R__b >> hXdiffvsthetaRK_neg;
      R__b >> hYdiffvsthetaRK_neg;
      R__b >> hXdiffvsshoColRK;
      R__b >> hXdiffvsshoRowRK;
      R__b >> hYdiffvsshoColRK;
      R__b >> hYdiffvsshoRowRK;
      int R__i;
      for (R__i = 0; R__i < 6; R__i++)
         R__b >> hXdiffTof[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b >> hYdiffTof[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b >> hXdiffsho[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b >> hYdiffsho[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b >> hXdiffRpc[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b >> hYdiffRpc[R__i];
      R__b >> hparticle_pi_tof_GaussFit_all_sys0;
      R__b >> hparticle_pi_tof_GaussFit_all_sys1;
      for (R__i = 0; R__i < 64; R__i++)
         R__b >> hparticle_pi_tof_GaussFit_sys0[R__i];
      for (R__i = 0; R__i < 64; R__i++)
         R__b >> hparticle_pi_tof_GaussFit_sys1[R__i];
      R__b >> hparticle_mass;
      R__b >> hparticle_mass_GaussFit;
      R__b >> hparticle_mass_GaussFit_1;
      R__b >> hparticle_mass_GaussFit_2;
      R__b >> hparticle_mass_RPC;
      R__b >> hparticle_mass_RPC_GaussFit;
      R__b >> hparticle_mass_RPC_GaussFit_1;
      R__b >> hparticle_mass_RPC_GaussFit_2;
      R__b >> hparticle_mass_TOF;
      R__b >> hparticle_mass_TOF_GaussFit;
      R__b >> hparticle_mass_TOF_GaussFit_1;
      R__b >> hparticle_mass_TOF_GaussFit_2;
      R__b >> hparticle_TofdEdx;
      R__b.CheckByteCount(R__s, R__c, HQAHistograms::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAHistograms::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << OutputTree;
      R__b << (TObject*)hXdiffvsshowersectorRK;
      R__b << (TObject*)hXdiffvstofstripRK;
      R__b << (TObject*)hYdiffvsshowersectorRK;
      R__b << (TObject*)hYdiffvstofstripRK;
      R__b << (TObject*)hshower_qualityRK;
      R__b << (TObject*)htof_qualityRK;
      R__b << (TObject*)hXdiffvstofstripRK_neg;
      R__b << (TObject*)hYdiffvstofstripRK_neg;
      R__b << (TObject*)hXdiffvsthetaRK_neg;
      R__b << (TObject*)hYdiffvsthetaRK_neg;
      R__b << (TObject*)hXdiffvsshoColRK;
      R__b << (TObject*)hXdiffvsshoRowRK;
      R__b << (TObject*)hYdiffvsshoColRK;
      R__b << (TObject*)hYdiffvsshoRowRK;
      int R__i;
      for (R__i = 0; R__i < 6; R__i++)
         R__b << (TObject*)hXdiffTof[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b << (TObject*)hYdiffTof[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b << (TObject*)hXdiffsho[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b << (TObject*)hYdiffsho[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b << (TObject*)hXdiffRpc[R__i];
      for (R__i = 0; R__i < 6; R__i++)
         R__b << (TObject*)hYdiffRpc[R__i];
      R__b << hparticle_pi_tof_GaussFit_all_sys0;
      R__b << hparticle_pi_tof_GaussFit_all_sys1;
      for (R__i = 0; R__i < 64; R__i++)
         R__b << hparticle_pi_tof_GaussFit_sys0[R__i];
      for (R__i = 0; R__i < 64; R__i++)
         R__b << hparticle_pi_tof_GaussFit_sys1[R__i];
      R__b << (TObject*)hparticle_mass;
      R__b << hparticle_mass_GaussFit;
      R__b << hparticle_mass_GaussFit_1;
      R__b << hparticle_mass_GaussFit_2;
      R__b << (TObject*)hparticle_mass_RPC;
      R__b << hparticle_mass_RPC_GaussFit;
      R__b << hparticle_mass_RPC_GaussFit_1;
      R__b << hparticle_mass_RPC_GaussFit_2;
      R__b << (TObject*)hparticle_mass_TOF;
      R__b << hparticle_mass_TOF_GaussFit;
      R__b << hparticle_mass_TOF_GaussFit_1;
      R__b << hparticle_mass_TOF_GaussFit_2;
      R__b << (TObject*)hparticle_TofdEdx;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAHistograms::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAHistograms.
      TClass *R__cl = ::HQAHistograms::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*OutputTree", &OutputTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histList", &histList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stCal_stripMod0", &stCal_stripMod0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stCal_stripMod1", &stCal_stripMod1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*vtCal_strip", &vtCal_strip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stLatchHist", &stLatchHist);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stCal_tof", &stCal_tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*vtCal_tof", &vtCal_tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stCal_tof_strip[64]", &stCal_tof_strip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*vtCal_tof_strip[64]", &vtCal_tof_strip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stHit_tof", &stHit_tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Stm0Vtdiff_vs_stStrip[64]", &Stm0Vtdiff_vs_stStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Stm1Vtdiff_vs_stStrip[64]", &Stm1Vtdiff_vs_stStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stHit_tof_vs_startstripe", &stHit_tof_vs_startstripe);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stHit_vs_stStrip", &stHit_vs_stStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stHit_vs_stStrip_Trigg[64]", &stHit_vs_stStrip_Trigg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stVertexXY", &stVertexXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stVertexZ", &stVertexZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histInputScalerTrend[8]", &histInputScalerTrend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histDownScalerTrend[8]", &histDownScalerTrend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histGatedScalerTrend[8]", &histGatedScalerTrend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histAcceptScalerTrend[8]", &histAcceptScalerTrend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histStartScalerTrend[8]", &histStartScalerTrend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histVetoScalerTrend[8]", &histVetoScalerTrend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histInputScaler", &histInputScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histDownScaler", &histDownScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histGatedScaler", &histGatedScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histAcceptScaler", &histAcceptScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histStartScaler", &histStartScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histVetoScaler", &histVetoScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histTofScaler", &histTofScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histRpcScaler", &histRpcScaler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histAllScalerCh", &histAllScalerCh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histAllScalerTrend", &histAllScalerTrend);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richCal_row", &richCal_row);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richCal_column", &richCal_column);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richCal_nSec", &richCal_nSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_scat", &richHit_scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_nSec", &richHit_nSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_phi", &richHit_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_theta", &richHit_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_radius", &richHit_radius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_centroid", &richHit_centroid);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_chargeAmpl", &richHit_chargeAmpl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_ringCol", &richHit_ringCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_ringRow", &richHit_ringRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_ringLocMax4", &richHit_ringLocMax4);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_houTraVsPatMat", &richHit_houTraVsPatMat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_patMatVsTheta", &richHit_patMatVsTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_houTraVsTheta", &richHit_houTraVsTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_chargeAmplVsTheta", &richHit_chargeAmplVsTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_radiusVsTheta", &richHit_radiusVsTheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_AverCharge[6]", &richHit_AverCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_NumPads[6]", &richHit_NumPads);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_NumRings[6]", &richHit_NumRings);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcRaw_mboVsSector_m0", &mdcRaw_mboVsSector_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcRaw_mboVsSector_m1", &mdcRaw_mboVsSector_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcRaw_mboVsSector_m2", &mdcRaw_mboVsSector_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcRaw_mboVsSector_m3", &mdcRaw_mboVsSector_m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_nVsSector_m0", &mdcCal1_nVsSector_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_nVsSector_m1", &mdcCal1_nVsSector_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_nVsSector_m2", &mdcCal1_nVsSector_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_nVsSector_m3", &mdcCal1_nVsSector_m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1VsSector_m0", &mdcCal1_time1VsSector_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1VsSector_m1", &mdcCal1_time1VsSector_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1VsSector_m2", &mdcCal1_time1VsSector_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1VsSector_m3", &mdcCal1_time1VsSector_m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_tatVsSector_m0", &mdcCal1_tatVsSector_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_tatVsSector_m1", &mdcCal1_tatVsSector_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_tatVsSector_m2", &mdcCal1_tatVsSector_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_tatVsSector_m3", &mdcCal1_tatVsSector_m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_t2mt1_vs_t1[6][4]", &mdcCal1_t2mt1_vs_t1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_t2mt1_vs_t1_plane[4]", &mdcCal1_t2mt1_vs_t1_plane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_t1[6][4]", &mdcCal1_t1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_t1_V2[6][4][6]", &mdcCal1_t1_V2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_t2mt1[6][4]", &mdcCal1_t2mt1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_t2mt1_V2[6][4][6]", &mdcCal1_t2mt1_V2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCutCounts[8]", &mdcCutCounts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcHit_scat_m0", &mdcHit_scat_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcHit_scat_m1", &mdcHit_scat_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcHit_scat_m2", &mdcHit_scat_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcHit_scat_m3", &mdcHit_scat_m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcSeg_Chi2[6][2]", &mdcSeg_Chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_n[6]", &tofHit_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_tot", &tofHit_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_nSec", &tofHit_nSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_scat", &tofHit_scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_tof", &tofHit_tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_phi", &tofHit_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_theta", &tofHit_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_n[6]", &rpcHit_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_tot", &rpcHit_tot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_nSec", &rpcHit_nSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_scat", &rpcHit_scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_tof", &rpcHit_tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_phi", &rpcHit_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_theta", &rpcHit_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_scat", &shoHit_scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_theta", &shoHit_theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_phi", &shoHit_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_chargeVsSector_m0", &shoHit_chargeVsSector_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_chargeVsSector_m1", &shoHit_chargeVsSector_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_chargeVsSector_m2", &shoHit_chargeVsSector_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_rowVsSector_m0", &shoHit_rowVsSector_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_rowVsSector_m1", &shoHit_rowVsSector_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_rowVsSector_m2", &shoHit_rowVsSector_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_colVsSector_m0", &shoHit_colVsSector_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_colVsSector_m1", &shoHit_colVsSector_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_colVsSector_m2", &shoHit_colVsSector_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_sectorVsModule", &shoHit_sectorVsModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_nSec", &shoHit_nSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHitTof_scat", &shoHitTof_scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHitTof_nSec", &shoHitTof_nSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_nRow", &shoHit_nRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_nCol", &shoHit_nCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHitSums[6][3]", &shoHitSums);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_n[6]", &shoHit_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_nm[6][3]", &shoHit_nm);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*splineTrack_massCharge", &splineTrack_massCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*splineTrack_scat", &splineTrack_scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rungeKuttaTrack_massCharge", &rungeKuttaTrack_massCharge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rungeKuttaTrack_scat", &rungeKuttaTrack_scat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallCellSmall", &hWallCellSmall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallCellMedium", &hWallCellMedium);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallCellLarge", &hWallCellLarge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hMultWall", &hMultWall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallCellTime", &hWallCellTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallCellAdc", &hWallCellAdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallXY", &hWallXY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallHitNumI", &hWallHitNumI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallHitNumII", &hWallHitNumII);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallHitNumIII", &hWallHitNumIII);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hWallHitNumIV", &hWallHitNumIV);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trackingSpline_sys0[6]", &trackingSpline_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trackingRK_sys0[6]", &trackingRK_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trackingSpline_sys1[6]", &trackingSpline_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trackingRK_sys1[6]", &trackingRK_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richmdc_dtheta[6]", &richmdc_dtheta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richmdc_dphi[6]", &richmdc_dphi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richmdc_lep", &richmdc_lep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsecspline", &hsecspline);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsecspline0", &hsecspline0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hsecspline1", &hsecspline1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsshowersector", &hXdiffvsshowersector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsshowersector", &hYdiffvsshowersector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsshw", &hXdiffvsshw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsshw", &hYdiffvsshw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hshower_quality", &hshower_quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htof_quality", &htof_quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvstofstrip", &hXdiffvstofstrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvstofstrip", &hYdiffvstofstrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsshoCol", &hXdiffvsshoCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsshoRow", &hXdiffvsshoRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsshoCol", &hYdiffvsshoCol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsshoRow", &hYdiffvsshoRow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsRpcsector", &hXdiffvsRpcsector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsRpcsector", &hYdiffvsRpcsector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsRpc", &hXdiffvsRpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsRpc", &hYdiffvsRpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hRpc_quality", &hRpc_quality);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsshowersectorRK", &hXdiffvsshowersectorRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvstofstripRK", &hXdiffvstofstripRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsshowersectorRK", &hYdiffvsshowersectorRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvstofstripRK", &hYdiffvstofstripRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hshower_qualityRK", &hshower_qualityRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*htof_qualityRK", &htof_qualityRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvstofstripRK_neg", &hXdiffvstofstripRK_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvstofstripRK_neg", &hYdiffvstofstripRK_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsthetaRK_neg", &hXdiffvsthetaRK_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsthetaRK_neg", &hYdiffvsthetaRK_neg);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsshoColRK", &hXdiffvsshoColRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffvsshoRowRK", &hXdiffvsshoRowRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsshoColRK", &hYdiffvsshoColRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffvsshoRowRK", &hYdiffvsshoRowRK);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffTof[6]", &hXdiffTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffTof[6]", &hYdiffTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffsho[6]", &hXdiffsho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffsho[6]", &hYdiffsho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hXdiffRpc[6]", &hXdiffRpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hYdiffRpc[6]", &hYdiffRpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_multrk", &hparticle_multrk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_vs_rod_sys0", &hparticle_lepton_tof_vs_rod_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_vs_rod_sys1", &hparticle_lepton_tof_vs_rod_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_vs_startstrip_sys0", &hparticle_lepton_tof_vs_startstrip_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_vs_startstrip_sys1", &hparticle_lepton_tof_vs_startstrip_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_all_sys0", &hparticle_lepton_tof_all_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_all_sys1", &hparticle_lepton_tof_all_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_vs_start_sys0[64]", &hparticle_lepton_tof_vs_start_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_lepton_tof_vs_start_sys1[64]", &hparticle_lepton_tof_vs_start_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_rod_sys0", &hparticle_pi_tof_vs_rod_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_rod_sys1", &hparticle_pi_tof_vs_rod_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_eloss_vs_rod_sys1", &hparticle_pi_eloss_vs_rod_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_p_eloss_vs_rod_sys1", &hparticle_p_eloss_vs_rod_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_metahit_vs_phi_sys1", &hparticle_pi_metahit_vs_phi_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_startstrip_sys0", &hparticle_pi_tof_vs_startstrip_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_startstrip_sys1", &hparticle_pi_tof_vs_startstrip_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_all_sys0", &hparticle_pi_tof_all_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_all_sys1", &hparticle_pi_tof_all_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_start_sys0[64]", &hparticle_pi_tof_vs_start_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_startMod0_sys0[64]", &hparticle_pi_tof_vs_startMod0_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_startMod1_sys0[64]", &hparticle_pi_tof_vs_startMod1_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_vs_start_sys1[64]", &hparticle_pi_tof_vs_start_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_GaussFit_all_sys0", &hparticle_pi_tof_GaussFit_all_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_GaussFit_all_sys1", &hparticle_pi_tof_GaussFit_all_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_GaussFit_sys0[64]", &hparticle_pi_tof_GaussFit_sys0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_pi_tof_GaussFit_sys1[64]", &hparticle_pi_tof_GaussFit_sys1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_RK_theta_sec[6]", &hparticle_RK_theta_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_RK_neg_theta_sec[6]", &hparticle_RK_neg_theta_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_RK_phi", &hparticle_RK_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_RK_neg_phi", &hparticle_RK_neg_phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_rk_momdif_sys0_sec[6]", &hparticle_rk_momdif_sys0_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_rk_momdif_sys1_sec[6]", &hparticle_rk_momdif_sys1_sec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcXdiff_pre[6]", &shorpcXdiff_pre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcXdiff_post1[6]", &shorpcXdiff_post1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcXdiff_post2[6]", &shorpcXdiff_post2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcYdiff_pre[6]", &shorpcYdiff_pre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcYdiff_post1[6]", &shorpcYdiff_post1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcYdiff_post2[6]", &shorpcYdiff_post2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcXvs_pre[6]", &shorpcXvs_pre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcXvs_post1[6]", &shorpcXvs_post1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcXvs_post2[6]", &shorpcXvs_post2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcYvs_pre[6]", &shorpcYvs_pre);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcYvs_post1[6]", &shorpcYvs_post1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shorpcYvs_post2[6]", &shorpcYvs_post2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_MetaMatchQualTof[6]", &hparticle_MetaMatchQualTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_MetaMatchQualRpc[6]", &hparticle_MetaMatchQualRpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_MetaMatchQualShw[6]", &hparticle_MetaMatchQualShw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mult[6][2]", &hparticle_mult);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mult_select[6][2]", &hparticle_mult_select);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass", &hparticle_mass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_GaussFit", &hparticle_mass_GaussFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_GaussFit_1", &hparticle_mass_GaussFit_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_GaussFit_2", &hparticle_mass_GaussFit_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_RPC", &hparticle_mass_RPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_RPC_GaussFit", &hparticle_mass_RPC_GaussFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_RPC_GaussFit_1", &hparticle_mass_RPC_GaussFit_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_RPC_GaussFit_2", &hparticle_mass_RPC_GaussFit_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_TOF", &hparticle_mass_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_TOF_GaussFit", &hparticle_mass_TOF_GaussFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_TOF_GaussFit_1", &hparticle_mass_TOF_GaussFit_1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_mass_TOF_GaussFit_2", &hparticle_mass_TOF_GaussFit_2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*hparticle_TofdEdx", &hparticle_TofdEdx);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAHistograms(void *p) {
      return  p ? new(p) ::HQAHistograms : new ::HQAHistograms;
   }
   static void *newArray_HQAHistograms(Long_t nElements, void *p) {
      return p ? new(p) ::HQAHistograms[nElements] : new ::HQAHistograms[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAHistograms(void *p) {
      delete ((::HQAHistograms*)p);
   }
   static void deleteArray_HQAHistograms(void *p) {
      delete [] ((::HQAHistograms*)p);
   }
   static void destruct_HQAHistograms(void *p) {
      typedef ::HQAHistograms current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAHistograms(TBuffer &buf, void *obj) {
      ((::HQAHistograms*)obj)->::HQAHistograms::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAHistograms

//______________________________________________________________________________
void HQAVariations::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAVariations.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HQAVariations::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAVariations::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAVariations::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAVariations.
      TClass *R__cl = ::HQAVariations::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*histList", &histList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxEvents", &maxEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*evtHeader_eventSize_Var", &evtHeader_eventSize_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*stCal_meanStrip_Var", &stCal_meanStrip_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*vtCal_meanStrip_Var", &vtCal_meanStrip_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richCal_n_Var", &richCal_n_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_n_Var", &richHit_n_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1_m0_Var", &mdcCal1_time1_m0_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1_m1_Var", &mdcCal1_time1_m1_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1_m2_Var", &mdcCal1_time1_m2_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time1_m3_Var", &mdcCal1_time1_m3_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time2m1_m0_Var", &mdcCal1_time2m1_m0_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time2m1_m1_Var", &mdcCal1_time2m1_m1_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time2m1_m2_Var", &mdcCal1_time2m1_m2_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_time2m1_m3_Var", &mdcCal1_time2m1_m3_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_n_Var", &tofHit_n_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rpcHit_n_Var", &rpcHit_n_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_n_Var", &shoHit_n_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHitTof_n_Var", &shoHitTof_n_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleCand_n_Var", &particleCand_n_Var);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*particleCandLep_n_Var", &particleCandLep_n_Var);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAVariations(void *p) {
      return  p ? new(p) ::HQAVariations : new ::HQAVariations;
   }
   static void *newArray_HQAVariations(Long_t nElements, void *p) {
      return p ? new(p) ::HQAVariations[nElements] : new ::HQAVariations[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAVariations(void *p) {
      delete ((::HQAVariations*)p);
   }
   static void deleteArray_HQAVariations(void *p) {
      delete [] ((::HQAVariations*)p);
   }
   static void destruct_HQAVariations(void *p) {
      typedef ::HQAVariations current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAVariations(TBuffer &buf, void *obj) {
      ((::HQAVariations*)obj)->::HQAVariations::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAVariations

//______________________________________________________________________________
void HQAScalers::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAScalers.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HQAScalers::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAScalers::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAScalers::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAScalers.
      TClass *R__cl = ::HQAScalers::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*scalerList", &scalerList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richCal_n", &richCal_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*richHit_n", &richHit_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_n_m0", &mdcCal1_n_m0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_n_m1", &mdcCal1_n_m1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_n_m2", &mdcCal1_n_m2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*mdcCal1_n_m3", &mdcCal1_n_m3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*tofHit_n", &tofHit_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHit_n", &shoHit_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shoHitTof_n", &shoHitTof_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*kickTrack_n", &kickTrack_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigRich_n", &trigRich_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigTof_n", &trigTof_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigShower_n", &trigShower_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigTlepton_n", &trigTlepton_n);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*trigSlepton_n", &trigSlepton_n);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAScalers(void *p) {
      return  p ? new(p) ::HQAScalers : new ::HQAScalers;
   }
   static void *newArray_HQAScalers(Long_t nElements, void *p) {
      return p ? new(p) ::HQAScalers[nElements] : new ::HQAScalers[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAScalers(void *p) {
      delete ((::HQAScalers*)p);
   }
   static void deleteArray_HQAScalers(void *p) {
      delete [] ((::HQAScalers*)p);
   }
   static void destruct_HQAScalers(void *p) {
      typedef ::HQAScalers current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAScalers(TBuffer &buf, void *obj) {
      ((::HQAScalers*)obj)->::HQAScalers::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAScalers

//______________________________________________________________________________
void HQAScaler::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAScaler.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> fData;
      R__b.CheckByteCount(R__s, R__c, HQAScaler::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAScaler::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << fData;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAScaler::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAScaler.
      TClass *R__cl = ::HQAScaler::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData", &fData);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAScaler(void *p) {
      return  p ? new(p) ::HQAScaler : new ::HQAScaler;
   }
   static void *newArray_HQAScaler(Long_t nElements, void *p) {
      return p ? new(p) ::HQAScaler[nElements] : new ::HQAScaler[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAScaler(void *p) {
      delete ((::HQAScaler*)p);
   }
   static void deleteArray_HQAScaler(void *p) {
      delete [] ((::HQAScaler*)p);
   }
   static void destruct_HQAScaler(void *p) {
      typedef ::HQAScaler current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAScaler(TBuffer &buf, void *obj) {
      ((::HQAScaler*)obj)->::HQAScaler::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAScaler

//______________________________________________________________________________
void HQAScaler6::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAScaler6.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b.ReadStaticArray((double*)fData);
      R__b.CheckByteCount(R__s, R__c, HQAScaler6::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAScaler6::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b.WriteArray(fData, 6);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAScaler6::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAScaler6.
      TClass *R__cl = ::HQAScaler6::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fData[6]", fData);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAScaler6(void *p) {
      return  p ? new(p) ::HQAScaler6 : new ::HQAScaler6;
   }
   static void *newArray_HQAScaler6(Long_t nElements, void *p) {
      return p ? new(p) ::HQAScaler6[nElements] : new ::HQAScaler6[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAScaler6(void *p) {
      delete ((::HQAScaler6*)p);
   }
   static void deleteArray_HQAScaler6(void *p) {
      delete [] ((::HQAScaler6*)p);
   }
   static void destruct_HQAScaler6(void *p) {
      typedef ::HQAScaler6 current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAScaler6(TBuffer &buf, void *obj) {
      ((::HQAScaler6*)obj)->::HQAScaler6::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAScaler6

//______________________________________________________________________________
void HQAOutputPS::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAOutputPS.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TPDF::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HQAOutputPS::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAOutputPS::IsA(), kTRUE);
      TPDF::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAOutputPS::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAOutputPS.
      TClass *R__cl = ::HQAOutputPS::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCanvas", &fCanvas);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistPad", &fHistPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pageCount", &pageCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "histCount", &histCount);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nProcessed", &nProcessed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHistPerPage", &nHistPerPage);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nEvent", &nEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kFIRST", &kFIRST);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "kPDF", &kPDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnamePS", &fnamePS);
      R__insp.InspectMember(fnamePS, "fnamePS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fnameDST", &fnameDST);
      R__insp.InspectMember(fnameDST, "fnameDST.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fdevice", &fdevice);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pageTitle", &pageTitle);
      R__insp.InspectMember(pageTitle, "pageTitle.");
      TPDF::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAOutputPS(void *p) {
      return  p ? new(p) ::HQAOutputPS : new ::HQAOutputPS;
   }
   static void *newArray_HQAOutputPS(Long_t nElements, void *p) {
      return p ? new(p) ::HQAOutputPS[nElements] : new ::HQAOutputPS[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAOutputPS(void *p) {
      delete ((::HQAOutputPS*)p);
   }
   static void deleteArray_HQAOutputPS(void *p) {
      delete [] ((::HQAOutputPS*)p);
   }
   static void destruct_HQAOutputPS(void *p) {
      typedef ::HQAOutputPS current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAOutputPS(TBuffer &buf, void *obj) {
      ((::HQAOutputPS*)obj)->::HQAOutputPS::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAOutputPS

//______________________________________________________________________________
void HQAFileInfoTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAFileInfoTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      fTFileName.Streamer(R__b);
      R__b >> fTNumEvents;
      R__b >> fTYear;
      R__b >> fTDay;
      R__b >> fTHour;
      R__b >> fTMin;
      R__b >> fTSec;
      R__b >> fTEvB;
      fTType.Streamer(R__b);
      R__b >> fTRunId;
      R__b >> fTRefId;
      R__b.CheckByteCount(R__s, R__c, HQAFileInfoTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAFileInfoTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      fTFileName.Streamer(R__b);
      R__b << fTNumEvents;
      R__b << fTYear;
      R__b << fTDay;
      R__b << fTHour;
      R__b << fTMin;
      R__b << fTSec;
      R__b << fTEvB;
      fTType.Streamer(R__b);
      R__b << fTRunId;
      R__b << fTRefId;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAFileInfoTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAFileInfoTree.
      TClass *R__cl = ::HQAFileInfoTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTFileName", &fTFileName);
      R__insp.InspectMember(fTFileName, "fTFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTNumEvents", &fTNumEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTYear", &fTYear);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTDay", &fTDay);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHour", &fTHour);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMin", &fTMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSec", &fTSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTEvB", &fTEvB);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTType", &fTType);
      R__insp.InspectMember(fTType, "fTType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRunId", &fTRunId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTRefId", &fTRefId);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAFileInfoTree(void *p) {
      return  p ? new(p) ::HQAFileInfoTree : new ::HQAFileInfoTree;
   }
   static void *newArray_HQAFileInfoTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQAFileInfoTree[nElements] : new ::HQAFileInfoTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAFileInfoTree(void *p) {
      delete ((::HQAFileInfoTree*)p);
   }
   static void deleteArray_HQAFileInfoTree(void *p) {
      delete [] ((::HQAFileInfoTree*)p);
   }
   static void destruct_HQAFileInfoTree(void *p) {
      typedef ::HQAFileInfoTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAFileInfoTree(TBuffer &buf, void *obj) {
      ((::HQAFileInfoTree*)obj)->::HQAFileInfoTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAFileInfoTree

//______________________________________________________________________________
void HQAStartTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAStartTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fTHitTimeMean;
      R__b >> fTHitTimeRms;
      R__b >> fTHitToNoveto;
      R__b.ReadStaticArray((float*)fTStCalTime);
      R__b.ReadStaticArray((float*)fTVtCalTime);
      R__b >> fTVertexX;
      R__b >> fTVertexY;
      R__b >> fTVertexZ;
      R__b.CheckByteCount(R__s, R__c, HQAStartTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAStartTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fTHitTimeMean;
      R__b << fTHitTimeRms;
      R__b << fTHitToNoveto;
      R__b.WriteArray(fTStCalTime, 64);
      R__b.WriteArray(fTVtCalTime, 64);
      R__b << fTVertexX;
      R__b << fTVertexY;
      R__b << fTVertexZ;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAStartTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAStartTree.
      TClass *R__cl = ::HQAStartTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTimeMean", &fTHitTimeMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTimeRms", &fTHitTimeRms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitToNoveto", &fTHitToNoveto);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTStCalTime[64]", fTStCalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTVtCalTime[64]", fTVtCalTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTVertexX", &fTVertexX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTVertexY", &fTVertexY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTVertexZ", &fTVertexZ);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAStartTree(void *p) {
      return  p ? new(p) ::HQAStartTree : new ::HQAStartTree;
   }
   static void *newArray_HQAStartTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQAStartTree[nElements] : new ::HQAStartTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAStartTree(void *p) {
      delete ((::HQAStartTree*)p);
   }
   static void deleteArray_HQAStartTree(void *p) {
      delete [] ((::HQAStartTree*)p);
   }
   static void destruct_HQAStartTree(void *p) {
      typedef ::HQAStartTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAStartTree(TBuffer &buf, void *obj) {
      ((::HQAStartTree*)obj)->::HQAStartTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAStartTree

//______________________________________________________________________________
void HQARichTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQARichTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((float*)fTAvChargeMax);
      R__b.ReadStaticArray((float*)fTNumPadsMax);
      R__b.ReadStaticArray((float*)fTNumRingsMax);
      R__b.ReadStaticArray((float*)fTAvChargeMean);
      R__b.ReadStaticArray((float*)fTNumPadsMean);
      R__b.ReadStaticArray((float*)fTNumRingsMean);
      R__b.ReadStaticArray((float*)fTHVMean);
      R__b.ReadStaticArray((float*)fTHVSigma);
      R__b.ReadStaticArray((float*)fTHVMin);
      R__b.ReadStaticArray((float*)fTHVMax);
      R__b.ReadStaticArray((float*)fTHVNData);
      R__b.CheckByteCount(R__s, R__c, HQARichTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQARichTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(fTAvChargeMax, 6);
      R__b.WriteArray(fTNumPadsMax, 6);
      R__b.WriteArray(fTNumRingsMax, 6);
      R__b.WriteArray(fTAvChargeMean, 6);
      R__b.WriteArray(fTNumPadsMean, 6);
      R__b.WriteArray(fTNumRingsMean, 6);
      R__b.WriteArray(fTHVMean, 6);
      R__b.WriteArray(fTHVSigma, 6);
      R__b.WriteArray(fTHVMin, 6);
      R__b.WriteArray(fTHVMax, 6);
      R__b.WriteArray(fTHVNData, 6);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQARichTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQARichTree.
      TClass *R__cl = ::HQARichTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAvChargeMax[6]", fTAvChargeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTNumPadsMax[6]", fTNumPadsMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTNumRingsMax[6]", fTNumRingsMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTAvChargeMean[6]", fTAvChargeMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTNumPadsMean[6]", fTNumPadsMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTNumRingsMean[6]", fTNumRingsMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVMean[6]", fTHVMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVSigma[6]", fTHVSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVMin[6]", fTHVMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVMax[6]", fTHVMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVNData[6]", fTHVNData);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQARichTree(void *p) {
      return  p ? new(p) ::HQARichTree : new ::HQARichTree;
   }
   static void *newArray_HQARichTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQARichTree[nElements] : new ::HQARichTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQARichTree(void *p) {
      delete ((::HQARichTree*)p);
   }
   static void deleteArray_HQARichTree(void *p) {
      delete [] ((::HQARichTree*)p);
   }
   static void destruct_HQARichTree(void *p) {
      typedef ::HQARichTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQARichTree(TBuffer &buf, void *obj) {
      ((::HQARichTree*)obj)->::HQARichTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQARichTree

//______________________________________________________________________________
void HQAMdcTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAMdcTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((float*)fTMboCounts);
      R__b.ReadStaticArray((float*)fTLayerCounts);
      R__b.ReadStaticArray((float*)fTCountsRaw);
      R__b.ReadStaticArray((float*)fTCountsCal);
      R__b.ReadStaticArray((float*)fTToTCalMean);
      R__b.ReadStaticArray((float*)fTToTCalMax);
      R__b.ReadStaticArray((float*)fTTime1CalMean);
      R__b.ReadStaticArray((float*)fTTime1CalMax);
      R__b.ReadStaticArray((float*)fTSegCounter);
      R__b.ReadStaticArray((float*)fTSegCounterFit);
      R__b.ReadStaticArray((float*)fTSegChi2Mean);
      R__b.ReadStaticArray((float*)fTSegChi2Max);
      R__b.ReadStaticArray((float*)fTHVMean);
      R__b.ReadStaticArray((float*)fTHVSigma);
      R__b.ReadStaticArray((float*)fTHVMin);
      R__b.ReadStaticArray((float*)fTHVMax);
      R__b.ReadStaticArray((float*)fTHVNData);
      R__b.CheckByteCount(R__s, R__c, HQAMdcTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAMdcTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray((float*)fTMboCounts, 384);
      R__b.WriteArray((float*)fTLayerCounts, 144);
      R__b.WriteArray((float*)fTCountsRaw, 24);
      R__b.WriteArray((float*)fTCountsCal, 24);
      R__b.WriteArray((float*)fTToTCalMean, 144);
      R__b.WriteArray((float*)fTToTCalMax, 144);
      R__b.WriteArray((float*)fTTime1CalMean, 144);
      R__b.WriteArray((float*)fTTime1CalMax, 144);
      R__b.WriteArray((float*)fTSegCounter, 12);
      R__b.WriteArray((float*)fTSegCounterFit, 12);
      R__b.WriteArray((float*)fTSegChi2Mean, 12);
      R__b.WriteArray((float*)fTSegChi2Max, 12);
      R__b.WriteArray((float*)fTHVMean, 288);
      R__b.WriteArray((float*)fTHVSigma, 288);
      R__b.WriteArray((float*)fTHVMin, 288);
      R__b.WriteArray((float*)fTHVMax, 288);
      R__b.WriteArray((float*)fTHVNData, 288);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAMdcTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAMdcTree.
      TClass *R__cl = ::HQAMdcTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMboCounts[6][4][16]", fTMboCounts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTLayerCounts[6][4][6]", fTLayerCounts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCountsRaw[6][4]", fTCountsRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTCountsCal[6][4]", fTCountsCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTToTCalMean[6][4][6]", fTToTCalMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTToTCalMax[6][4][6]", fTToTCalMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTime1CalMean[6][4][6]", fTTime1CalMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTime1CalMax[6][4][6]", fTTime1CalMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSegCounter[6][2]", fTSegCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSegCounterFit[6][2]", fTSegCounterFit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSegChi2Mean[6][2]", fTSegChi2Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTSegChi2Max[6][2]", fTSegChi2Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVMean[6][4][12]", fTHVMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVSigma[6][4][12]", fTHVSigma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVMin[6][4][12]", fTHVMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVMax[6][4][12]", fTHVMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHVNData[6][4][12]", fTHVNData);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAMdcTree(void *p) {
      return  p ? new(p) ::HQAMdcTree : new ::HQAMdcTree;
   }
   static void *newArray_HQAMdcTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQAMdcTree[nElements] : new ::HQAMdcTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAMdcTree(void *p) {
      delete ((::HQAMdcTree*)p);
   }
   static void deleteArray_HQAMdcTree(void *p) {
      delete [] ((::HQAMdcTree*)p);
   }
   static void destruct_HQAMdcTree(void *p) {
      typedef ::HQAMdcTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAMdcTree(TBuffer &buf, void *obj) {
      ((::HQAMdcTree*)obj)->::HQAMdcTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAMdcTree

//______________________________________________________________________________
void HQATofTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQATofTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((float*)fTHitMultiMax);
      R__b.ReadStaticArray((float*)fTHitMultiMean);
      R__b >> fTHitTotMultiMax;
      R__b >> fTHitTotMultiMax2;
      R__b >> fTHitTotMultiMean;
      R__b.ReadStaticArray((float*)fTHits);
      R__b >> fTHitTofMax;
      R__b >> fTHitTofMean;
      R__b.CheckByteCount(R__s, R__c, HQATofTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQATofTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(fTHitMultiMax, 6);
      R__b.WriteArray(fTHitMultiMean, 6);
      R__b << fTHitTotMultiMax;
      R__b << fTHitTotMultiMax2;
      R__b << fTHitTotMultiMean;
      R__b.WriteArray(fTHits, 6);
      R__b << fTHitTofMax;
      R__b << fTHitTofMean;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQATofTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQATofTree.
      TClass *R__cl = ::HQATofTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitMultiMax[6]", fTHitMultiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitMultiMean[6]", fTHitMultiMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTotMultiMax", &fTHitTotMultiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTotMultiMax2", &fTHitTotMultiMax2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTotMultiMean", &fTHitTotMultiMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHits[6]", fTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTofMax", &fTHitTofMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTofMean", &fTHitTofMean);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQATofTree(void *p) {
      return  p ? new(p) ::HQATofTree : new ::HQATofTree;
   }
   static void *newArray_HQATofTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQATofTree[nElements] : new ::HQATofTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQATofTree(void *p) {
      delete ((::HQATofTree*)p);
   }
   static void deleteArray_HQATofTree(void *p) {
      delete [] ((::HQATofTree*)p);
   }
   static void destruct_HQATofTree(void *p) {
      typedef ::HQATofTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQATofTree(TBuffer &buf, void *obj) {
      ((::HQATofTree*)obj)->::HQATofTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQATofTree

//______________________________________________________________________________
void HQARpcTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQARpcTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((float*)fTHitMultiMax);
      R__b.ReadStaticArray((float*)fTHitMultiMean);
      R__b >> fTHitTotMultiMax;
      R__b >> fTHitTotMultiMax2;
      R__b >> fTHitTotMultiMean;
      R__b.ReadStaticArray((float*)fTHits);
      R__b >> fTHitTofMax;
      R__b >> fTHitTofMean;
      R__b.CheckByteCount(R__s, R__c, HQARpcTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQARpcTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray(fTHitMultiMax, 6);
      R__b.WriteArray(fTHitMultiMean, 6);
      R__b << fTHitTotMultiMax;
      R__b << fTHitTotMultiMax2;
      R__b << fTHitTotMultiMean;
      R__b.WriteArray(fTHits, 6);
      R__b << fTHitTofMax;
      R__b << fTHitTofMean;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQARpcTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQARpcTree.
      TClass *R__cl = ::HQARpcTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitMultiMax[6]", fTHitMultiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitMultiMean[6]", fTHitMultiMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTotMultiMax", &fTHitTotMultiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTotMultiMax2", &fTHitTotMultiMax2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTotMultiMean", &fTHitTotMultiMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHits[6]", fTHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTofMax", &fTHitTofMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitTofMean", &fTHitTofMean);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQARpcTree(void *p) {
      return  p ? new(p) ::HQARpcTree : new ::HQARpcTree;
   }
   static void *newArray_HQARpcTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQARpcTree[nElements] : new ::HQARpcTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQARpcTree(void *p) {
      delete ((::HQARpcTree*)p);
   }
   static void deleteArray_HQARpcTree(void *p) {
      delete [] ((::HQARpcTree*)p);
   }
   static void destruct_HQARpcTree(void *p) {
      typedef ::HQARpcTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQARpcTree(TBuffer &buf, void *obj) {
      ((::HQARpcTree*)obj)->::HQARpcTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQARpcTree

//______________________________________________________________________________
void HQAShowerTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAShowerTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b.ReadStaticArray((float*)fTHitMultiMax);
      R__b.ReadStaticArray((float*)fTHitMultiMean);
      R__b.ReadStaticArray((float*)fTHitChargeMax);
      R__b.ReadStaticArray((float*)fTHitChargeMean);
      R__b.CheckByteCount(R__s, R__c, HQAShowerTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAShowerTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b.WriteArray((float*)fTHitMultiMax, 18);
      R__b.WriteArray((float*)fTHitMultiMean, 18);
      R__b.WriteArray((float*)fTHitChargeMax, 18);
      R__b.WriteArray((float*)fTHitChargeMean, 18);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAShowerTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAShowerTree.
      TClass *R__cl = ::HQAShowerTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitMultiMax[6][3]", fTHitMultiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitMultiMean[6][3]", fTHitMultiMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitChargeMax[6][3]", fTHitChargeMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTHitChargeMean[6][3]", fTHitChargeMean);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAShowerTree(void *p) {
      return  p ? new(p) ::HQAShowerTree : new ::HQAShowerTree;
   }
   static void *newArray_HQAShowerTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQAShowerTree[nElements] : new ::HQAShowerTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAShowerTree(void *p) {
      delete ((::HQAShowerTree*)p);
   }
   static void deleteArray_HQAShowerTree(void *p) {
      delete [] ((::HQAShowerTree*)p);
   }
   static void destruct_HQAShowerTree(void *p) {
      typedef ::HQAShowerTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAShowerTree(TBuffer &buf, void *obj) {
      ((::HQAShowerTree*)obj)->::HQAShowerTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAShowerTree

//______________________________________________________________________________
void HQAPhysicsTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HQAPhysicsTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fTMass_proton;
      R__b >> fTMass_pip;
      R__b >> fTMass_pim;
      R__b >> fTMass_proton_RPC;
      R__b >> fTMass_pip_RPC;
      R__b >> fTMass_pim_RPC;
      R__b >> fTMass_proton_TOF;
      R__b >> fTMass_pip_TOF;
      R__b >> fTMass_pim_TOF;
      R__b >> fTChi2_proton;
      R__b >> fTChi2_pip;
      R__b >> fTChi2_pim;
      R__b >> fTChi2_proton_RPC;
      R__b >> fTChi2_pip_RPC;
      R__b >> fTChi2_pim_RPC;
      R__b >> fTChi2_proton_TOF;
      R__b >> fTChi2_pip_TOF;
      R__b >> fTChi2_pim_TOF;
      R__b.ReadStaticArray((float*)fTMetaMatchTofMean);
      R__b.ReadStaticArray((float*)fTMetaMatchTofMax);
      R__b.ReadStaticArray((float*)fTMetaMatchTofMax2);
      R__b.ReadStaticArray((float*)fTMetaMatchRpcMean);
      R__b.ReadStaticArray((float*)fTMetaMatchRpcMax);
      R__b.ReadStaticArray((float*)fTMetaMatchRpcMax2);
      R__b.ReadStaticArray((float*)fTMetaMatchShwMean);
      R__b.ReadStaticArray((float*)fTMetaMatchShwMax);
      R__b.ReadStaticArray((float*)fTMetaMatchShwMax2);
      R__b.ReadStaticArray((float*)fTMultiMax);
      R__b.ReadStaticArray((float*)fTMultiMean);
      R__b.ReadStaticArray((float*)fTMultiMaxSelect);
      R__b.ReadStaticArray((float*)fTMultiMeanSelect);
      R__b >> fTTimeLepSumSys0Mean;
      R__b >> fTTimeLepSumSys0Max;
      R__b >> fTTimeLepSumSys0Sig;
      R__b.ReadStaticArray((float*)fTTimeLepStaSys0Mean);
      R__b.ReadStaticArray((float*)fTTimeLepStaSys0Max);
      R__b.ReadStaticArray((float*)fTTimeLepStaSys0Sig);
      R__b >> fTTimeLepSumSys1Mean;
      R__b >> fTTimeLepSumSys1Max;
      R__b >> fTTimeLepSumSys1Sig;
      R__b.ReadStaticArray((float*)fTTimeLepStaSys1Mean);
      R__b.ReadStaticArray((float*)fTTimeLepStaSys1Max);
      R__b.ReadStaticArray((float*)fTTimeLepStaSys1Sig);
      R__b >> fTTimePiSumSys0Mean;
      R__b >> fTTimePiSumSys0Max;
      R__b >> fTTimePiSumSys0Sig;
      R__b.ReadStaticArray((float*)fTTimePiStaSys0Mean);
      R__b.ReadStaticArray((float*)fTTimePiStaSys0Max);
      R__b.ReadStaticArray((float*)fTTimePiStaSys0Sig);
      R__b >> fTTimePiSumSys1Mean;
      R__b >> fTTimePiSumSys1Max;
      R__b >> fTTimePiSumSys1Sig;
      R__b.ReadStaticArray((float*)fTTimePiStaSys1Mean);
      R__b.ReadStaticArray((float*)fTTimePiStaSys1Max);
      R__b.ReadStaticArray((float*)fTTimePiStaSys1Sig);
      R__b >> fTTimePiSumSys0FitMean;
      R__b >> fTTimePiSumSys1FitMean;
      R__b.ReadStaticArray((float*)fTTimePiStaSys0FitMean);
      R__b.ReadStaticArray((float*)fTTimePiStaSys1FitMean);
      R__b >> fTTofdEdxMean;
      R__b >> fTTofdEdxMax;
      R__b.CheckByteCount(R__s, R__c, HQAPhysicsTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HQAPhysicsTree::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fTMass_proton;
      R__b << fTMass_pip;
      R__b << fTMass_pim;
      R__b << fTMass_proton_RPC;
      R__b << fTMass_pip_RPC;
      R__b << fTMass_pim_RPC;
      R__b << fTMass_proton_TOF;
      R__b << fTMass_pip_TOF;
      R__b << fTMass_pim_TOF;
      R__b << fTChi2_proton;
      R__b << fTChi2_pip;
      R__b << fTChi2_pim;
      R__b << fTChi2_proton_RPC;
      R__b << fTChi2_pip_RPC;
      R__b << fTChi2_pim_RPC;
      R__b << fTChi2_proton_TOF;
      R__b << fTChi2_pip_TOF;
      R__b << fTChi2_pim_TOF;
      R__b.WriteArray(fTMetaMatchTofMean, 6);
      R__b.WriteArray(fTMetaMatchTofMax, 6);
      R__b.WriteArray(fTMetaMatchTofMax2, 6);
      R__b.WriteArray(fTMetaMatchRpcMean, 6);
      R__b.WriteArray(fTMetaMatchRpcMax, 6);
      R__b.WriteArray(fTMetaMatchRpcMax2, 6);
      R__b.WriteArray(fTMetaMatchShwMean, 6);
      R__b.WriteArray(fTMetaMatchShwMax, 6);
      R__b.WriteArray(fTMetaMatchShwMax2, 6);
      R__b.WriteArray((float*)fTMultiMax, 12);
      R__b.WriteArray((float*)fTMultiMean, 12);
      R__b.WriteArray((float*)fTMultiMaxSelect, 12);
      R__b.WriteArray((float*)fTMultiMeanSelect, 12);
      R__b << fTTimeLepSumSys0Mean;
      R__b << fTTimeLepSumSys0Max;
      R__b << fTTimeLepSumSys0Sig;
      R__b.WriteArray(fTTimeLepStaSys0Mean, 64);
      R__b.WriteArray(fTTimeLepStaSys0Max, 64);
      R__b.WriteArray(fTTimeLepStaSys0Sig, 64);
      R__b << fTTimeLepSumSys1Mean;
      R__b << fTTimeLepSumSys1Max;
      R__b << fTTimeLepSumSys1Sig;
      R__b.WriteArray(fTTimeLepStaSys1Mean, 64);
      R__b.WriteArray(fTTimeLepStaSys1Max, 64);
      R__b.WriteArray(fTTimeLepStaSys1Sig, 64);
      R__b << fTTimePiSumSys0Mean;
      R__b << fTTimePiSumSys0Max;
      R__b << fTTimePiSumSys0Sig;
      R__b.WriteArray(fTTimePiStaSys0Mean, 64);
      R__b.WriteArray(fTTimePiStaSys0Max, 64);
      R__b.WriteArray(fTTimePiStaSys0Sig, 64);
      R__b << fTTimePiSumSys1Mean;
      R__b << fTTimePiSumSys1Max;
      R__b << fTTimePiSumSys1Sig;
      R__b.WriteArray(fTTimePiStaSys1Mean, 64);
      R__b.WriteArray(fTTimePiStaSys1Max, 64);
      R__b.WriteArray(fTTimePiStaSys1Sig, 64);
      R__b << fTTimePiSumSys0FitMean;
      R__b << fTTimePiSumSys1FitMean;
      R__b.WriteArray(fTTimePiStaSys0FitMean, 64);
      R__b.WriteArray(fTTimePiStaSys1FitMean, 64);
      R__b << fTTofdEdxMean;
      R__b << fTTofdEdxMax;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HQAPhysicsTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HQAPhysicsTree.
      TClass *R__cl = ::HQAPhysicsTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_proton", &fTMass_proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_pip", &fTMass_pip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_pim", &fTMass_pim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_proton_RPC", &fTMass_proton_RPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_pip_RPC", &fTMass_pip_RPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_pim_RPC", &fTMass_pim_RPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_proton_TOF", &fTMass_proton_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_pip_TOF", &fTMass_pip_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMass_pim_TOF", &fTMass_pim_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_proton", &fTChi2_proton);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_pip", &fTChi2_pip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_pim", &fTChi2_pim);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_proton_RPC", &fTChi2_proton_RPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_pip_RPC", &fTChi2_pip_RPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_pim_RPC", &fTChi2_pim_RPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_proton_TOF", &fTChi2_proton_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_pip_TOF", &fTChi2_pip_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTChi2_pim_TOF", &fTChi2_pim_TOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchTofMean[6]", fTMetaMatchTofMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchTofMax[6]", fTMetaMatchTofMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchTofMax2[6]", fTMetaMatchTofMax2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchRpcMean[6]", fTMetaMatchRpcMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchRpcMax[6]", fTMetaMatchRpcMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchRpcMax2[6]", fTMetaMatchRpcMax2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchShwMean[6]", fTMetaMatchShwMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchShwMax[6]", fTMetaMatchShwMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMetaMatchShwMax2[6]", fTMetaMatchShwMax2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMultiMax[6][2]", fTMultiMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMultiMean[6][2]", fTMultiMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMultiMaxSelect[6][2]", fTMultiMaxSelect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTMultiMeanSelect[6][2]", fTMultiMeanSelect);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepSumSys0Mean", &fTTimeLepSumSys0Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepSumSys0Max", &fTTimeLepSumSys0Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepSumSys0Sig", &fTTimeLepSumSys0Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepStaSys0Mean[64]", fTTimeLepStaSys0Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepStaSys0Max[64]", fTTimeLepStaSys0Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepStaSys0Sig[64]", fTTimeLepStaSys0Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepSumSys1Mean", &fTTimeLepSumSys1Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepSumSys1Max", &fTTimeLepSumSys1Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepSumSys1Sig", &fTTimeLepSumSys1Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepStaSys1Mean[64]", fTTimeLepStaSys1Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepStaSys1Max[64]", fTTimeLepStaSys1Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimeLepStaSys1Sig[64]", fTTimeLepStaSys1Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys0Mean", &fTTimePiSumSys0Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys0Max", &fTTimePiSumSys0Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys0Sig", &fTTimePiSumSys0Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys0Mean[64]", fTTimePiStaSys0Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys0Max[64]", fTTimePiStaSys0Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys0Sig[64]", fTTimePiStaSys0Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys1Mean", &fTTimePiSumSys1Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys1Max", &fTTimePiSumSys1Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys1Sig", &fTTimePiSumSys1Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys1Mean[64]", fTTimePiStaSys1Mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys1Max[64]", fTTimePiStaSys1Max);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys1Sig[64]", fTTimePiStaSys1Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys0FitMean", &fTTimePiSumSys0FitMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiSumSys1FitMean", &fTTimePiSumSys1FitMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys0FitMean[64]", fTTimePiStaSys0FitMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTimePiStaSys1FitMean[64]", fTTimePiStaSys1FitMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTofdEdxMean", &fTTofdEdxMean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTTofdEdxMax", &fTTofdEdxMax);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HQAPhysicsTree(void *p) {
      return  p ? new(p) ::HQAPhysicsTree : new ::HQAPhysicsTree;
   }
   static void *newArray_HQAPhysicsTree(Long_t nElements, void *p) {
      return p ? new(p) ::HQAPhysicsTree[nElements] : new ::HQAPhysicsTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HQAPhysicsTree(void *p) {
      delete ((::HQAPhysicsTree*)p);
   }
   static void deleteArray_HQAPhysicsTree(void *p) {
      delete [] ((::HQAPhysicsTree*)p);
   }
   static void destruct_HQAPhysicsTree(void *p) {
      typedef ::HQAPhysicsTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HQAPhysicsTree(TBuffer &buf, void *obj) {
      ((::HQAPhysicsTree*)obj)->::HQAPhysicsTree::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HQAPhysicsTree

/********************************************************
* ../build/pc/QADict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableQADict();

extern "C" void G__set_cpp_environmentQADict() {
  G__cpp_reset_tagtableQADict();
}
#include <new>
extern "C" int G__cpp_dllrevQADict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HQAHistograms */
static int G__QADict_542_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAHistograms* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAHistograms[n];
     } else {
       p = new((void*) gvp) HQAHistograms[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAHistograms;
     } else {
       p = new((void*) gvp) HQAHistograms;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAHistograms));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAHistograms*) G__getstructoffset())->bookHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAHistograms*) G__getstructoffset())->activateHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HQAHistograms*) G__getstructoffset())->getHistList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAHistograms::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAHistograms::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAHistograms::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAHistograms::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAHistograms*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAHistograms::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAHistograms::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAHistograms::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_542_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAHistograms::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_542_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAHistograms* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAHistograms(*(HQAHistograms*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAHistograms));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAHistograms G__THQAHistograms;
static int G__QADict_542_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAHistograms*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAHistograms*) (soff+(sizeof(HQAHistograms)*i)))->~G__THQAHistograms();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAHistograms*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAHistograms*) (soff))->~G__THQAHistograms();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_542_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAHistograms* dest = (HQAHistograms*) G__getstructoffset();
   *dest = *(HQAHistograms*) libp->para[0].ref;
   const HQAHistograms& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAFileInfoTree */
static int G__QADict_589_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAFileInfoTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAFileInfoTree[n];
     } else {
       p = new((void*) gvp) HQAFileInfoTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAFileInfoTree;
     } else {
       p = new((void*) gvp) HQAFileInfoTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAFileInfoTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAFileInfoTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAFileInfoTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAFileInfoTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAFileInfoTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAFileInfoTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAFileInfoTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAFileInfoTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_589_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAFileInfoTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_589_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAFileInfoTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAFileInfoTree(*(HQAFileInfoTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAFileInfoTree G__THQAFileInfoTree;
static int G__QADict_589_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAFileInfoTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAFileInfoTree*) (soff+(sizeof(HQAFileInfoTree)*i)))->~G__THQAFileInfoTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAFileInfoTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAFileInfoTree*) (soff))->~G__THQAFileInfoTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_589_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAFileInfoTree* dest = (HQAFileInfoTree*) G__getstructoffset();
   *dest = *(HQAFileInfoTree*) libp->para[0].ref;
   const HQAFileInfoTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAStartTree */
static int G__QADict_590_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAStartTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAStartTree[n];
     } else {
       p = new((void*) gvp) HQAStartTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAStartTree;
     } else {
       p = new((void*) gvp) HQAStartTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAStartTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAStartTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAStartTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAStartTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAStartTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAStartTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAStartTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAStartTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAStartTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_590_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAStartTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_590_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAStartTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAStartTree(*(HQAStartTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAStartTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAStartTree G__THQAStartTree;
static int G__QADict_590_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAStartTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAStartTree*) (soff+(sizeof(HQAStartTree)*i)))->~G__THQAStartTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAStartTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAStartTree*) (soff))->~G__THQAStartTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_590_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAStartTree* dest = (HQAStartTree*) G__getstructoffset();
   *dest = *(HQAStartTree*) libp->para[0].ref;
   const HQAStartTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQARichTree */
static int G__QADict_591_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQARichTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQARichTree[n];
     } else {
       p = new((void*) gvp) HQARichTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQARichTree;
     } else {
       p = new((void*) gvp) HQARichTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQARichTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQARichTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQARichTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQARichTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQARichTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQARichTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQARichTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQARichTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQARichTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_591_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQARichTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_591_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQARichTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQARichTree(*(HQARichTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQARichTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQARichTree G__THQARichTree;
static int G__QADict_591_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQARichTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQARichTree*) (soff+(sizeof(HQARichTree)*i)))->~G__THQARichTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQARichTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQARichTree*) (soff))->~G__THQARichTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_591_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQARichTree* dest = (HQARichTree*) G__getstructoffset();
   *dest = *(HQARichTree*) libp->para[0].ref;
   const HQARichTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAMdcTree */
static int G__QADict_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAMdcTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAMdcTree[n];
     } else {
       p = new((void*) gvp) HQAMdcTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAMdcTree;
     } else {
       p = new((void*) gvp) HQAMdcTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAMdcTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAMdcTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAMdcTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAMdcTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAMdcTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMdcTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAMdcTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAMdcTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAMdcTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_592_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAMdcTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_592_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAMdcTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAMdcTree(*(HQAMdcTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAMdcTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAMdcTree G__THQAMdcTree;
static int G__QADict_592_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAMdcTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAMdcTree*) (soff+(sizeof(HQAMdcTree)*i)))->~G__THQAMdcTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAMdcTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAMdcTree*) (soff))->~G__THQAMdcTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_592_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAMdcTree* dest = (HQAMdcTree*) G__getstructoffset();
   *dest = *(HQAMdcTree*) libp->para[0].ref;
   const HQAMdcTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQATofTree */
static int G__QADict_593_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQATofTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQATofTree[n];
     } else {
       p = new((void*) gvp) HQATofTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQATofTree;
     } else {
       p = new((void*) gvp) HQATofTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQATofTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQATofTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQATofTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQATofTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQATofTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQATofTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQATofTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQATofTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQATofTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_593_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQATofTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_593_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQATofTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQATofTree(*(HQATofTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQATofTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQATofTree G__THQATofTree;
static int G__QADict_593_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQATofTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQATofTree*) (soff+(sizeof(HQATofTree)*i)))->~G__THQATofTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQATofTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQATofTree*) (soff))->~G__THQATofTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_593_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQATofTree* dest = (HQATofTree*) G__getstructoffset();
   *dest = *(HQATofTree*) libp->para[0].ref;
   const HQATofTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQARpcTree */
static int G__QADict_594_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQARpcTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQARpcTree[n];
     } else {
       p = new((void*) gvp) HQARpcTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQARpcTree;
     } else {
       p = new((void*) gvp) HQARpcTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQARpcTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQARpcTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQARpcTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQARpcTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQARpcTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQARpcTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQARpcTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQARpcTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQARpcTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_594_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQARpcTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_594_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQARpcTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQARpcTree(*(HQARpcTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQARpcTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQARpcTree G__THQARpcTree;
static int G__QADict_594_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQARpcTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQARpcTree*) (soff+(sizeof(HQARpcTree)*i)))->~G__THQARpcTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQARpcTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQARpcTree*) (soff))->~G__THQARpcTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_594_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQARpcTree* dest = (HQARpcTree*) G__getstructoffset();
   *dest = *(HQARpcTree*) libp->para[0].ref;
   const HQARpcTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAShowerTree */
static int G__QADict_595_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAShowerTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAShowerTree[n];
     } else {
       p = new((void*) gvp) HQAShowerTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAShowerTree;
     } else {
       p = new((void*) gvp) HQAShowerTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAShowerTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAShowerTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAShowerTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAShowerTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAShowerTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAShowerTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAShowerTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAShowerTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAShowerTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_595_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAShowerTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_595_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAShowerTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAShowerTree(*(HQAShowerTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAShowerTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAShowerTree G__THQAShowerTree;
static int G__QADict_595_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAShowerTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAShowerTree*) (soff+(sizeof(HQAShowerTree)*i)))->~G__THQAShowerTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAShowerTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAShowerTree*) (soff))->~G__THQAShowerTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_595_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAShowerTree* dest = (HQAShowerTree*) G__getstructoffset();
   *dest = *(HQAShowerTree*) libp->para[0].ref;
   const HQAShowerTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAPhysicsTree */
static int G__QADict_596_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAPhysicsTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAPhysicsTree[n];
     } else {
       p = new((void*) gvp) HQAPhysicsTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAPhysicsTree;
     } else {
       p = new((void*) gvp) HQAPhysicsTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAPhysicsTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAPhysicsTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAPhysicsTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAPhysicsTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAPhysicsTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAPhysicsTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAPhysicsTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAPhysicsTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_596_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAPhysicsTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_596_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAPhysicsTree* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAPhysicsTree(*(HQAPhysicsTree*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAPhysicsTree G__THQAPhysicsTree;
static int G__QADict_596_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAPhysicsTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAPhysicsTree*) (soff+(sizeof(HQAPhysicsTree)*i)))->~G__THQAPhysicsTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAPhysicsTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAPhysicsTree*) (soff))->~G__THQAPhysicsTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_596_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAPhysicsTree* dest = (HQAPhysicsTree*) G__getstructoffset();
   *dest = *(HQAPhysicsTree*) libp->para[0].ref;
   const HQAPhysicsTree& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAVariations */
static int G__QADict_621_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAVariations* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAVariations((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HQAVariations((Int_t) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HQAVariations[n];
       } else {
         p = new((void*) gvp) HQAVariations[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HQAVariations;
       } else {
         p = new((void*) gvp) HQAVariations;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAVariations));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAVariations*) G__getstructoffset())->bookHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAVariations*) G__getstructoffset())->activateHist();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HQAVariations*) G__getstructoffset())->getHistList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAVariations::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAVariations::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAVariations::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAVariations::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAVariations*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAVariations::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAVariations::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAVariations::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_621_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAVariations::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_621_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAVariations* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAVariations(*(HQAVariations*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAVariations));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAVariations G__THQAVariations;
static int G__QADict_621_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAVariations*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAVariations*) (soff+(sizeof(HQAVariations)*i)))->~G__THQAVariations();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAVariations*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAVariations*) (soff))->~G__THQAVariations();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_621_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAVariations* dest = (HQAVariations*) G__getstructoffset();
   *dest = *(HQAVariations*) libp->para[0].ref;
   const HQAVariations& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAScalers */
static int G__QADict_622_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScalers* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAScalers[n];
     } else {
       p = new((void*) gvp) HQAScalers[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAScalers;
     } else {
       p = new((void*) gvp) HQAScalers;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScalers));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAScalers*) G__getstructoffset())->bookScalers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAScalers*) G__getstructoffset())->activateScalers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HQAScalers*) G__getstructoffset())->getScalerList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAScalers::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScalers::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAScalers::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAScalers::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAScalers*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScalers::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAScalers::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScalers::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_622_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAScalers::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_622_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAScalers* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAScalers(*(HQAScalers*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScalers));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAScalers G__THQAScalers;
static int G__QADict_622_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAScalers*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAScalers*) (soff+(sizeof(HQAScalers)*i)))->~G__THQAScalers();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAScalers*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAScalers*) (soff))->~G__THQAScalers();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_622_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScalers* dest = (HQAScalers*) G__getstructoffset();
   *dest = *(HQAScalers*) libp->para[0].ref;
   const HQAScalers& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAOutputPS */
static int G__QADict_626_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAOutputPS* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAOutputPS[n];
     } else {
       p = new((void*) gvp) HQAOutputPS[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAOutputPS;
     } else {
       p = new((void*) gvp) HQAOutputPS;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAOutputPS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAOutputPS* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HQAOutputPS(*((TString*) G__int(libp->para[0])));
   } else {
     p = new((void*) gvp) HQAOutputPS(*((TString*) G__int(libp->para[0])));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAOutputPS));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->writeHist((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->writeHist((TList*) G__int(libp->para[0]), (TList*) G__int(libp->para[1])
, *((TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->makeHist((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->makeText((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->saveScal((TList*) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->closePS();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->setNHistPerPage((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HQAOutputPS*) G__getstructoffset())->setStats((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HQAOutputPS*) G__getstructoffset())->setStats((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->setDSTFileName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAOutputPS::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAOutputPS::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAOutputPS::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAOutputPS::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAOutputPS*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAOutputPS::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAOutputPS::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAOutputPS::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_626_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAOutputPS::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAOutputPS G__THQAOutputPS;
static int G__QADict_626_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAOutputPS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAOutputPS*) (soff+(sizeof(HQAOutputPS)*i)))->~G__THQAOutputPS();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAOutputPS*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAOutputPS*) (soff))->~G__THQAOutputPS();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAMaker */
static int G__QADict_628_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAMaker[n];
     } else {
       p = new((void*) gvp) HQAMaker[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAMaker;
     } else {
       p = new((void*) gvp) HQAMaker;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAMaker* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HQAMaker((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HQAMaker((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAMaker));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->setSamplingRate((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->setIntervalSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->setPSFileName((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->setOutputDir((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->setUseSlowPar((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HQAMaker*) G__getstructoffset())->generatePDF((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HQAMaker*) G__getstructoffset())->generatePDF();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HQAMaker*) G__getstructoffset())->getIteratorPointers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->initIteratorPointers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->setParContainers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HQAMaker*) G__getstructoffset())->Print((Option_t*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HQAMaker*) G__getstructoffset())->Print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HQAMaker*) G__getstructoffset())->writeToFile((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HQAMaker*) G__getstructoffset())->writeToFile();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->setBeamTime(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAMaker::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAMaker::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAMaker::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAMaker::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAMaker*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAMaker::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAMaker::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAMaker::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_628_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAMaker::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAMaker G__THQAMaker;
static int G__QADict_628_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAMaker*) (soff+(sizeof(HQAMaker)*i)))->~G__THQAMaker();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAMaker*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAMaker*) (soff))->~G__THQAMaker();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAScaler */
static int G__QADict_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScaler* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAScaler[n];
     } else {
       p = new((void*) gvp) HQAScaler[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAScaler;
     } else {
       p = new((void*) gvp) HQAScaler;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScaler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScaler* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HQAScaler((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HQAScaler((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScaler));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         HQAScaler* pobj;
         HQAScaler xobj = ((HQAScaler*) G__getstructoffset())->operator=((Double_t) G__double(libp->para[0]));
         pobj = new HQAScaler(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAScaler::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScaler::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAScaler::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAScaler::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAScaler*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScaler::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAScaler::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScaler::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_637_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAScaler::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_637_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAScaler* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAScaler(*(HQAScaler*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScaler));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAScaler G__THQAScaler;
static int G__QADict_637_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAScaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAScaler*) (soff+(sizeof(HQAScaler)*i)))->~G__THQAScaler();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAScaler*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAScaler*) (soff))->~G__THQAScaler();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_637_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScaler* dest = (HQAScaler*) G__getstructoffset();
   *dest = *(HQAScaler*) libp->para[0].ref;
   const HQAScaler& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HQAScaler6 */
static int G__QADict_638_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScaler6* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAScaler6[n];
     } else {
       p = new((void*) gvp) HQAScaler6[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HQAScaler6;
     } else {
       p = new((void*) gvp) HQAScaler6;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScaler6));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScaler6* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HQAScaler6((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HQAScaler6((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScaler6));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HQAScaler6& obj = ((HQAScaler6*) G__getstructoffset())->operator=((Double_t) G__double(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Double_t& obj = ((HQAScaler6*) G__getstructoffset())->operator[]((Int_t) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HQAScaler6::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScaler6::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HQAScaler6::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HQAScaler6::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HQAScaler6*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScaler6::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAScaler6::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HQAScaler6::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__QADict_638_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HQAScaler6::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__QADict_638_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HQAScaler6* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HQAScaler6(*(HQAScaler6*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__QADictLN_HQAScaler6));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HQAScaler6 G__THQAScaler6;
static int G__QADict_638_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HQAScaler6*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HQAScaler6*) (soff+(sizeof(HQAScaler6)*i)))->~G__THQAScaler6();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HQAScaler6*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HQAScaler6*) (soff))->~G__THQAScaler6();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__QADict_638_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HQAScaler6* dest = (HQAScaler6*) G__getstructoffset();
   *dest = *(HQAScaler6*) libp->para[0].ref;
   const HQAScaler6& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HQAHistograms */

/* HQAFileInfoTree */

/* HQAStartTree */

/* HQARichTree */

/* HQAMdcTree */

/* HQATofTree */

/* HQARpcTree */

/* HQAShowerTree */

/* HQAPhysicsTree */

/* HQAVariations */

/* HQAScalers */

/* HQAOutputPS */

/* HQAMaker */

/* HQAScaler */

/* HQAScaler6 */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncQADict {
 public:
  G__Sizep2memfuncQADict(): p(&G__Sizep2memfuncQADict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncQADict::*p)();
};

size_t G__get_sizep2memfuncQADict()
{
  G__Sizep2memfuncQADict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceQADict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAHistograms))) {
     HQAHistograms *G__Lderived;
     G__Lderived=(HQAHistograms*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAHistograms),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree))) {
     HQAFileInfoTree *G__Lderived;
     G__Lderived=(HQAFileInfoTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAStartTree))) {
     HQAStartTree *G__Lderived;
     G__Lderived=(HQAStartTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAStartTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQARichTree))) {
     HQARichTree *G__Lderived;
     G__Lderived=(HQARichTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQARichTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAMdcTree))) {
     HQAMdcTree *G__Lderived;
     G__Lderived=(HQAMdcTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAMdcTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQATofTree))) {
     HQATofTree *G__Lderived;
     G__Lderived=(HQATofTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQATofTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQARpcTree))) {
     HQARpcTree *G__Lderived;
     G__Lderived=(HQARpcTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQARpcTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAShowerTree))) {
     HQAShowerTree *G__Lderived;
     G__Lderived=(HQAShowerTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAShowerTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree))) {
     HQAPhysicsTree *G__Lderived;
     G__Lderived=(HQAPhysicsTree*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAVariations))) {
     HQAVariations *G__Lderived;
     G__Lderived=(HQAVariations*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAVariations),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAScalers))) {
     HQAScalers *G__Lderived;
     G__Lderived=(HQAScalers*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAScalers),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS))) {
     HQAOutputPS *G__Lderived;
     G__Lderived=(HQAOutputPS*)0x1000;
     {
       TPDF *G__Lpbase=(TPDF*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TPDF),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TVirtualPS *G__Lpbase=(TVirtualPS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TVirtualPS),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS),G__get_linked_tagnum(&G__QADictLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAMaker))) {
     HQAMaker *G__Lderived;
     G__Lderived=(HQAMaker*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAMaker),G__get_linked_tagnum(&G__QADictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAMaker),G__get_linked_tagnum(&G__QADictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAMaker),G__get_linked_tagnum(&G__QADictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAMaker),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_TVirtualPS))) {
     TVirtualPS *G__Lderived;
     G__Lderived=(TVirtualPS*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TVirtualPS),G__get_linked_tagnum(&G__QADictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TVirtualPS),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TVirtualPS),G__get_linked_tagnum(&G__QADictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TVirtualPS),G__get_linked_tagnum(&G__QADictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TVirtualPS),G__get_linked_tagnum(&G__QADictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TVirtualPS),G__get_linked_tagnum(&G__QADictLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_TPDF))) {
     TPDF *G__Lderived;
     G__Lderived=(TPDF*)0x1000;
     {
       TVirtualPS *G__Lpbase=(TVirtualPS*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TPDF),G__get_linked_tagnum(&G__QADictLN_TVirtualPS),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TPDF),G__get_linked_tagnum(&G__QADictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TPDF),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TPDF),G__get_linked_tagnum(&G__QADictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TPDF),G__get_linked_tagnum(&G__QADictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TPDF),G__get_linked_tagnum(&G__QADictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttText *G__Lpbase=(TAttText*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_TPDF),G__get_linked_tagnum(&G__QADictLN_TAttText),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAScaler))) {
     HQAScaler *G__Lderived;
     G__Lderived=(HQAScaler*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler),G__get_linked_tagnum(&G__QADictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__QADictLN_HQAScaler6))) {
     HQAScaler6 *G__Lderived;
     G__Lderived=(HQAScaler6*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler6),G__get_linked_tagnum(&G__QADictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler6),G__get_linked_tagnum(&G__QADictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableQADict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__QADictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__QADictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__QADictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__QADictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__QADictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__QADictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__QADictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__QADictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__QADictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__QADictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__QADictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__QADictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__QADictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__QADictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__QADictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__QADictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__QADictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__QADictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,HSlowChan*>",117,G__get_linked_tagnum(&G__QADictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,HSlowChan*,less<TString> >",117,G__get_linked_tagnum(&G__QADictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,map<TString,HSlowChan*>*>",117,G__get_linked_tagnum(&G__QADictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*>",117,G__get_linked_tagnum(&G__QADictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*,less<int> >",117,G__get_linked_tagnum(&G__QADictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__QADictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__QADictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__QADictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__QADictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__QADictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__QADictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HQAHistograms */
static void G__setup_memvarHQAHistograms(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAHistograms));
   { HQAHistograms *p; p=(HQAHistograms*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->OutputTree)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TTree),-1,-1,1,"OutputTree=",0,"A Tree where important numbers from Histograms are stored!");
   G__memvar_setup((void*)((long)(&p->histList)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TList),-1,-1,1,"histList=",0,"! List of all booked histograms");
   G__memvar_setup((void*)((long)(&p->stCal_stripMod0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"stCal_stripMod0=",0,"! startCal: strip pattern");
   G__memvar_setup((void*)((long)(&p->stCal_stripMod1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"stCal_stripMod1=",0,"! startCal: strip pattern for Mod 1");
   G__memvar_setup((void*)((long)(&p->vtCal_strip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"vtCal_strip=",0,"! startCal: strip pattern");
   G__memvar_setup((void*)((long)(&p->stLatchHist)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"stLatchHist=",0,"! startCal: strip pattern");
   G__memvar_setup((void*)((long)(&p->stCal_tof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"stCal_tof=",0,"! startCal: time of flight");
   G__memvar_setup((void*)((long)(&p->vtCal_tof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"vtCal_tof=",0,"! vetoCal:  time of flight");
   G__memvar_setup((void*)((long)(&p->stCal_tof_strip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"stCal_tof_strip[64]=",0,"! startCal: time of flight for each strip");
   G__memvar_setup((void*)((long)(&p->vtCal_tof_strip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"vtCal_tof_strip[64]=",0,"! vetoCal:  time of flight for each strip");
   G__memvar_setup((void*)((long)(&p->stHit_tof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"stHit_tof=",0,"! startHit: time of flight");
   G__memvar_setup((void*)((long)(&p->Stm0Vtdiff_vs_stStrip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"Stm0Vtdiff_vs_stStrip[64]=",0,"! startCal: St-Vt Time diff for 8 Veto channels  module 0");
   G__memvar_setup((void*)((long)(&p->Stm1Vtdiff_vs_stStrip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"Stm1Vtdiff_vs_stStrip[64]=",0,"! startCal: St-Vt Time diff for 8 Veto channels  module 1");
   G__memvar_setup((void*)((long)(&p->stHit_tof_vs_startstripe)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"stHit_tof_vs_startstripe=",0,"! startHit: tofTOF vs startstripe");
   G__memvar_setup((void*)((long)(&p->stHit_vs_stStrip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"stHit_vs_stStrip=",0,"! startHit: startHitTime vs start stripe");
   G__memvar_setup((void*)((long)(&p->stHit_vs_stStrip_Trigg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"stHit_vs_stStrip_Trigg[64]=",0,"! startHit: startHitTime vs strip for 8 trigger inputs");
   G__memvar_setup((void*)((long)(&p->stVertexXY)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"stVertexXY=",0,"! event vertex information, X vs Y");
   G__memvar_setup((void*)((long)(&p->stVertexZ)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"stVertexZ=",0,"! event vertex information, Z position");
   G__memvar_setup((void*)((long)(&p->histInputScalerTrend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histInputScalerTrend[8]=",0,"! daqScaler: Trigger Box input - trend");
   G__memvar_setup((void*)((long)(&p->histDownScalerTrend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histDownScalerTrend[8]=",0,"! daqScaler: Trigger Box input - trend");
   G__memvar_setup((void*)((long)(&p->histGatedScalerTrend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histGatedScalerTrend[8]=",0,"! daqScaler: Trigger Box input - trend");
   G__memvar_setup((void*)((long)(&p->histAcceptScalerTrend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histAcceptScalerTrend[8]=",0,"! daqScaler: Trigger Box accepted - trend");
   G__memvar_setup((void*)((long)(&p->histStartScalerTrend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histStartScalerTrend[8]=",0,"! daqScaler: Start 8 channels - trend");
   G__memvar_setup((void*)((long)(&p->histVetoScalerTrend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histVetoScalerTrend[8]=",0,"! daqScaler: Veto 8 channels - trend         ");
   G__memvar_setup((void*)((long)(&p->histInputScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histInputScaler=",0,"! daqScaler: Trigger Box input      ");
   G__memvar_setup((void*)((long)(&p->histDownScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histDownScaler=",0,"! daqScaler: Trigger Box downscaled    ");
   G__memvar_setup((void*)((long)(&p->histGatedScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histGatedScaler=",0,"! daqScaler: Trigger Box gated with Start       ");
   G__memvar_setup((void*)((long)(&p->histAcceptScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histAcceptScaler=",0,"! daqScaler: Trigger Box accepted by DAQ       ");
   G__memvar_setup((void*)((long)(&p->histStartScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histStartScaler=",0,"! daqScaler: Start Patttern     ");
   G__memvar_setup((void*)((long)(&p->histVetoScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histVetoScaler=",0,"! daqScaler: Veto Pattern ");
   G__memvar_setup((void*)((long)(&p->histTofScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histTofScaler=",0,"! daqScaler: Tof Pattern ");
   G__memvar_setup((void*)((long)(&p->histRpcScaler)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histRpcScaler=",0,"! daqScaler: Rpc Pattern       ");
   G__memvar_setup((void*)((long)(&p->histAllScalerCh)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"histAllScalerCh=",0,"! daqScaler: counts for all 146 Scaler channels");
   G__memvar_setup((void*)((long)(&p->histAllScalerTrend)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"histAllScalerTrend=",0,"! daqScaler: shows trend for all 146 Scaler channels");
   G__memvar_setup((void*)((long)(&p->richCal_row)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richCal_row=",0,"! richCal: row");
   G__memvar_setup((void*)((long)(&p->richCal_column)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richCal_column=",0,"! richCal: column");
   G__memvar_setup((void*)((long)(&p->richCal_nSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richCal_nSec=",0,"! richCal: fired pads by sector");
   G__memvar_setup((void*)((long)(&p->richHit_scat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"richHit_scat=",0,"! richHit: hit distribution in lab frame");
   G__memvar_setup((void*)((long)(&p->richHit_nSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_nSec=",0,"! richHit: hits by sector");
   G__memvar_setup((void*)((long)(&p->richHit_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_phi=",0,"! richHit: phi angle");
   G__memvar_setup((void*)((long)(&p->richHit_theta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_theta=",0,"! richHit: theta angle");
   G__memvar_setup((void*)((long)(&p->richHit_radius)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_radius=",0,"! richHit: Ring radius");
   G__memvar_setup((void*)((long)(&p->richHit_centroid)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_centroid=",0,"! richHit: Ring centroid");
   G__memvar_setup((void*)((long)(&p->richHit_chargeAmpl)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_chargeAmpl=",0,"! richHit: Ring charge amplitude");
   G__memvar_setup((void*)((long)(&p->richHit_ringCol)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_ringCol=",0,"! richHit: Ring column");
   G__memvar_setup((void*)((long)(&p->richHit_ringRow)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_ringRow=",0,"! richHit: Ring row");
   G__memvar_setup((void*)((long)(&p->richHit_ringLocMax4)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_ringLocMax4=",0,"! richHit: Ring Loc Max4");
   G__memvar_setup((void*)((long)(&p->richHit_houTraVsPatMat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"richHit_houTraVsPatMat=",0,"! richHit: ring algorithm comparison");
   G__memvar_setup((void*)((long)(&p->richHit_patMatVsTheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"richHit_patMatVsTheta=",0,"! richHit: #theta vs. PM");
   G__memvar_setup((void*)((long)(&p->richHit_houTraVsTheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"richHit_houTraVsTheta=",0,"! richHit: #theta vs. HT");
   G__memvar_setup((void*)((long)(&p->richHit_chargeAmplVsTheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"richHit_chargeAmplVsTheta=",0,"! richHit: #theta vs. ring amplitude");
   G__memvar_setup((void*)((long)(&p->richHit_radiusVsTheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"richHit_radiusVsTheta=",0,"! richHit: #theta vs. radius");
   G__memvar_setup((void*)((long)(&p->richHit_AverCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_AverCharge[6]=",0,"! richHit: RingAmplitude per Number of pads in Ring for ach Sector");
   G__memvar_setup((void*)((long)(&p->richHit_NumPads)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_NumPads[6]=",0,"! richHit: Number of pads per Ring for each Sector");
   G__memvar_setup((void*)((long)(&p->richHit_NumRings)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richHit_NumRings[6]=",0,"! richHit: Number of Rings per Event for each Sector");
   G__memvar_setup((void*)((long)(&p->mdcRaw_mboVsSector_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcRaw_mboVsSector_m0=",0,"! mdcRaw: Plane I, sector vs. mbo mult.");
   G__memvar_setup((void*)((long)(&p->mdcRaw_mboVsSector_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcRaw_mboVsSector_m1=",0,"! mdcRaw: Plane II, sector vs. mbo mult.");
   G__memvar_setup((void*)((long)(&p->mdcRaw_mboVsSector_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcRaw_mboVsSector_m2=",0,"! mdcRaw: Plane III, sector vs. mbo mult.");
   G__memvar_setup((void*)((long)(&p->mdcRaw_mboVsSector_m3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcRaw_mboVsSector_m3=",0,"! mdcRaw: Plane IV, sector vs. mbo mult.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_nVsSector_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_nVsSector_m0=",0,"! mdcCal1: Plane I, sector vs. multiplicity");
   G__memvar_setup((void*)((long)(&p->mdcCal1_nVsSector_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_nVsSector_m1=",0,"! mdcCal1: Plane II, sector vs. multiplicity");
   G__memvar_setup((void*)((long)(&p->mdcCal1_nVsSector_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_nVsSector_m2=",0,"! mdcCal1: Plane III, sector vs. multiplicity");
   G__memvar_setup((void*)((long)(&p->mdcCal1_nVsSector_m3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_nVsSector_m3=",0,"! mdcCal1: Plane IV, sector vs. multiplicity");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1VsSector_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_time1VsSector_m0=",0,"! mdcCal1: Plane I, sector vs. time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1VsSector_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_time1VsSector_m1=",0,"! mdcCal1: Plane II, sector vs. time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1VsSector_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_time1VsSector_m2=",0,"! mdcCal1: Plane III, sector vs. time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1VsSector_m3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_time1VsSector_m3=",0,"! mdcCal1: Plane IV, sector vs. time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_tatVsSector_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_tatVsSector_m0=",0,"! mdcCal1: Plane I, sector vs. t.a.t.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_tatVsSector_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_tatVsSector_m1=",0,"! mdcCal1: Plane II, sector vs. t.a.t.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_tatVsSector_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_tatVsSector_m2=",0,"! mdcCal1: Plane III, sector vs. t.a.t.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_tatVsSector_m3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_tatVsSector_m3=",0,"! mdcCal1: Plane IV, sector vs. t.a.t.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_t2mt1_vs_t1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_t2mt1_vs_t1[6][4]=",0,"! mdcCal1: plane, sector t2-t1 vs. t1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_t2mt1_vs_t1_plane)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcCal1_t2mt1_vs_t1_plane[4]=",0,"! mdcCal1: plane(all sectors) t2-t1 vs. t1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_t1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"mdcCal1_t1[6][4]=",0,"! mdcCal1: plane, sector t1 distribution");
   G__memvar_setup((void*)((long)(&p->mdcCal1_t1_V2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"mdcCal1_t1_V2[6][4][6]=",0,"! mdcCal1: plane, sector, layer t1 distribution");
   G__memvar_setup((void*)((long)(&p->mdcCal1_t2mt1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"mdcCal1_t2mt1[6][4]=",0,"! mdcCal1: plane, sector t2-t1 distribution");
   G__memvar_setup((void*)((long)(&p->mdcCal1_t2mt1_V2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"mdcCal1_t2mt1_V2[6][4][6]=",0,"! mdcCal1: plane, sector, layer  t2-t1 distribution");
   G__memvar_setup((void*)((long)(&p->mdcCutCounts)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"mdcCutCounts[8]=",0,"! mdc event counts total and vs. cuts applied");
   G__memvar_setup((void*)((long)(&p->mdcHit_scat_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcHit_scat_m0=",0,"! mdcHit: Plane I, hit distribution");
   G__memvar_setup((void*)((long)(&p->mdcHit_scat_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcHit_scat_m1=",0,"! mdcHit: Plane II, hit distribution");
   G__memvar_setup((void*)((long)(&p->mdcHit_scat_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcHit_scat_m2=",0,"! mdcHit: Plane III, hit distribution");
   G__memvar_setup((void*)((long)(&p->mdcHit_scat_m3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"mdcHit_scat_m3=",0,"! mdcHit: Plane IV, hit distribution");
   G__memvar_setup((void*)((long)(&p->mdcSeg_Chi2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"mdcSeg_Chi2[6][2]=",0,"! mdcSeg: sector, I/O Segmment chi2 distribution");
   G__memvar_setup((void*)((long)(&p->tofHit_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"tofHit_n[6]=",0,"! tofHit: hit multiplicity for each sector");
   G__memvar_setup((void*)((long)(&p->tofHit_tot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"tofHit_tot=",0,"! tofHit: total hit multiplicity");
   G__memvar_setup((void*)((long)(&p->tofHit_nSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"tofHit_nSec=",0,"! tofHit: hit multiplicity/sector");
   G__memvar_setup((void*)((long)(&p->tofHit_scat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"tofHit_scat=",0,"! tofHit: hit distribution in lab frame");
   G__memvar_setup((void*)((long)(&p->tofHit_tof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"tofHit_tof=",0,"! tofHit: time of flight");
   G__memvar_setup((void*)((long)(&p->tofHit_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"tofHit_phi=",0,"! tofHit: phi angle");
   G__memvar_setup((void*)((long)(&p->tofHit_theta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"tofHit_theta=",0,"! tofHit: theta angle");
   G__memvar_setup((void*)((long)(&p->rpcHit_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"rpcHit_n[6]=",0,"! rpcHit: hit multiplicity");
   G__memvar_setup((void*)((long)(&p->rpcHit_tot)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"rpcHit_tot=",0,"! rpcHit: total hit multiplicity");
   G__memvar_setup((void*)((long)(&p->rpcHit_nSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"rpcHit_nSec=",0,"! rpcHit: hit multiplicity/sector");
   G__memvar_setup((void*)((long)(&p->rpcHit_scat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"rpcHit_scat=",0,"! rpcHit: hit distribution in lab frame");
   G__memvar_setup((void*)((long)(&p->rpcHit_tof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"rpcHit_tof=",0,"! rpcHit: time of flight");
   G__memvar_setup((void*)((long)(&p->rpcHit_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"rpcHit_phi=",0,"! rpcHit: phi angle");
   G__memvar_setup((void*)((long)(&p->rpcHit_theta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"rpcHit_theta=",0,"! rpcHit: theta angle");
   G__memvar_setup((void*)((long)(&p->shoHit_scat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_scat=",0,"! showerHit: hit distribution in lab frame");
   G__memvar_setup((void*)((long)(&p->shoHit_theta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHit_theta=",0,"! showerHit: theta angle");
   G__memvar_setup((void*)((long)(&p->shoHit_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHit_phi=",0,"! showerHit: phi angle");
   G__memvar_setup((void*)((long)(&p->shoHit_chargeVsSector_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_chargeVsSector_m0=",0,"! showerHit: Mod 0, charge on loc. max.");
   G__memvar_setup((void*)((long)(&p->shoHit_chargeVsSector_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_chargeVsSector_m1=",0,"! showerHit: Mod 1, charge on loc. max.");
   G__memvar_setup((void*)((long)(&p->shoHit_chargeVsSector_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_chargeVsSector_m2=",0,"! showerHit: Mod 2, charge on loc. max.");
   G__memvar_setup((void*)((long)(&p->shoHit_rowVsSector_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_rowVsSector_m0=",0,"! showerHit: Mod 0, sector vs. row");
   G__memvar_setup((void*)((long)(&p->shoHit_rowVsSector_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_rowVsSector_m1=",0,"! showerHit: Mod 1, sector vs. row");
   G__memvar_setup((void*)((long)(&p->shoHit_rowVsSector_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_rowVsSector_m2=",0,"! showerHit: Mod 2, sector vs. row");
   G__memvar_setup((void*)((long)(&p->shoHit_colVsSector_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_colVsSector_m0=",0,"! showerHit: Mod 0, sector vs. col");
   G__memvar_setup((void*)((long)(&p->shoHit_colVsSector_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_colVsSector_m1=",0,"! showerHit: Mod 1, sector vs. col");
   G__memvar_setup((void*)((long)(&p->shoHit_colVsSector_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_colVsSector_m2=",0,"! showerHit: Mod 2, sector vs. col");
   G__memvar_setup((void*)((long)(&p->shoHit_sectorVsModule)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHit_sectorVsModule=",0,"! showerHit: num hits by module");
   G__memvar_setup((void*)((long)(&p->shoHit_nSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHit_nSec=",0,"! showerHit: num hits/event/sector");
   G__memvar_setup((void*)((long)(&p->shoHitTof_scat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shoHitTof_scat=",0,"! showerHitTof: hit distribution in lab frame");
   G__memvar_setup((void*)((long)(&p->shoHitTof_nSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHitTof_nSec=",0,"! showerHitTof: num hits/event/sector");
   G__memvar_setup((void*)((long)(&p->shoHit_nRow)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHit_nRow=",0,"! Shower Rows (All sectors)");
   G__memvar_setup((void*)((long)(&p->shoHit_nCol)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHit_nCol=",0,"! Shower Cols (All sectors)");
   G__memvar_setup((void*)((long)(&p->shoHitSums)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHitSums[6][3]=",0,"! ShowerSums");
   G__memvar_setup((void*)((long)(&p->shoHit_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHit_n[6]=",0,"! Shower hit multiplicities per Sector");
   G__memvar_setup((void*)((long)(&p->shoHit_nm)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shoHit_nm[6][3]=",0,"! Shower hit multiplicities per Sector and module");
   G__memvar_setup((void*)((long)(&p->splineTrack_massCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"splineTrack_massCharge=",0,"! spline track: mass * charge");
   G__memvar_setup((void*)((long)(&p->splineTrack_scat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"splineTrack_scat=",0,"! splineTrack: track distribution in lab frame");
   G__memvar_setup((void*)((long)(&p->rungeKuttaTrack_massCharge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"rungeKuttaTrack_massCharge=",0,"! spline track: mass * charge");
   G__memvar_setup((void*)((long)(&p->rungeKuttaTrack_scat)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"rungeKuttaTrack_scat=",0,"! splineTrack: track distribution in lab frame");
   G__memvar_setup((void*)((long)(&p->hWallCellSmall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hWallCellSmall=",0,"!Wall cell Small");
   G__memvar_setup((void*)((long)(&p->hWallCellMedium)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hWallCellMedium=",0,"!Wall cell Medium");
   G__memvar_setup((void*)((long)(&p->hWallCellLarge)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hWallCellLarge=",0,"!Wall cell Large");
   G__memvar_setup((void*)((long)(&p->hMultWall)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hMultWall=",0,"!Wall mult");
   G__memvar_setup((void*)((long)(&p->hWallCellTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hWallCellTime=",0,"!Wall Time vs Cell");
   G__memvar_setup((void*)((long)(&p->hWallCellAdc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hWallCellAdc=",0,"!Wall Charge vs Cell");
   G__memvar_setup((void*)((long)(&p->hWallXY)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hWallXY=",0,"!Wall X vs Wall Y");
   G__memvar_setup((void*)((long)(&p->hWallHitNumI)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hWallHitNumI=",0,"!Number of hits I   quarter");
   G__memvar_setup((void*)((long)(&p->hWallHitNumII)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hWallHitNumII=",0,"!Number of hits II  quarter");
   G__memvar_setup((void*)((long)(&p->hWallHitNumIII)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hWallHitNumIII=",0,"!Number of hits III quarter");
   G__memvar_setup((void*)((long)(&p->hWallHitNumIV)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hWallHitNumIV=",0,"!Number of hits IV  quarter");
   G__memvar_setup((void*)((long)(&p->trackingSpline_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"trackingSpline_sys0[6]=",0,"! Spline     tracking MDC12-3(4)");
   G__memvar_setup((void*)((long)(&p->trackingRK_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"trackingRK_sys0[6]=",0,"! RungeKutta tracking MDC12-3(4)");
   G__memvar_setup((void*)((long)(&p->trackingSpline_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"trackingSpline_sys1[6]=",0,"! Spline     tracking MDC12-3(4)");
   G__memvar_setup((void*)((long)(&p->trackingRK_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"trackingRK_sys1[6]=",0,"! RungeKutta tracking MDC12-3(4)");
   G__memvar_setup((void*)((long)(&p->richmdc_dtheta)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richmdc_dtheta[6]=",0,"! RichHit-MdcInerSeg: delta theta (sectorwise)");
   G__memvar_setup((void*)((long)(&p->richmdc_dphi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richmdc_dphi[6]=",0,"! RichHit-MdcInerSeg: delta phi (sectorwise)");
   G__memvar_setup((void*)((long)(&p->richmdc_lep)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"richmdc_lep=",0,"! RichHit-MdcInerSeg: leptons per event (sectorwise)");
   G__memvar_setup((void*)((long)(&p->hsecspline)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hsecspline=",0,"! Number of spline objects matched to meta per sector");
   G__memvar_setup((void*)((long)(&p->hsecspline0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hsecspline0=",0,"! the same for system 0");
   G__memvar_setup((void*)((long)(&p->hsecspline1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hsecspline1=",0,"! the same for system 1");
   G__memvar_setup((void*)((long)(&p->hXdiffvsshowersector)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsshowersector=",0,"! Difference between X SHOWER hit position and crossing of track through SHOWER, vs sector");
   G__memvar_setup((void*)((long)(&p->hYdiffvsshowersector)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsshowersector=",0,"! Difference between Y SHOWER hit position and crossing of track through SHOWER, vs sector");
   G__memvar_setup((void*)((long)(&p->hXdiffvsshw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsshw=",0,"! Diff.  ShwX and MdcX vs sector / SigmaShw");
   G__memvar_setup((void*)((long)(&p->hYdiffvsshw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsshw=",0,"! Diff.  ShwY and MdcY vs sector / SigmaShw");
   G__memvar_setup((void*)((long)(&p->hshower_quality)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hshower_quality=",0,"! SHOWER quality vs sector");
   G__memvar_setup((void*)((long)(&p->htof_quality)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"htof_quality=",0,"! TOF    quality vs sector");
   G__memvar_setup((void*)((long)(&p->hXdiffvstofstrip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvstofstrip=",0,"! Difference between X TOF hit position and crossing of track through TOF, vs TOF strip");
   G__memvar_setup((void*)((long)(&p->hYdiffvstofstrip)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvstofstrip=",0,"! Difference between Y TOF hit position and crossing of track through TOF, vs TOF strip");
   G__memvar_setup((void*)((long)(&p->hXdiffvsshoCol)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsshoCol=",0,"! Difference between X SHOWER hit position and crossing of track through SHOWER, vs Column");
   G__memvar_setup((void*)((long)(&p->hXdiffvsshoRow)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsshoRow=",0,"! Difference between X SHOWER hit position and crossing of track through SHOWER, vs Row");
   G__memvar_setup((void*)((long)(&p->hYdiffvsshoCol)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsshoCol=",0,"! Difference between Y SHOWER hit position and crossing of track through SHOWER, vs Column");
   G__memvar_setup((void*)((long)(&p->hYdiffvsshoRow)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsshoRow=",0,"! Difference between Y SHOWER hit position and crossing of track through SHOWER, vs Row");
   G__memvar_setup((void*)((long)(&p->hXdiffvsRpcsector)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsRpcsector=",0,"! Difference between X Rpc hit position and crossing of track through Rpc, vs Sector");
   G__memvar_setup((void*)((long)(&p->hYdiffvsRpcsector)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsRpcsector=",0,"! Difference between Y Rpc hit position and crossing of track through Rpc, vs Sector");
   G__memvar_setup((void*)((long)(&p->hXdiffvsRpc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsRpc=",0,"! Diff.  RpcX and MetaX vs sector / SigmaRpc");
   G__memvar_setup((void*)((long)(&p->hYdiffvsRpc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsRpc=",0,"! Diff.  RpcY and MetaY vs sector / SigmaRpc");
   G__memvar_setup((void*)((long)(&p->hRpc_quality)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hRpc_quality=",0,"! SHOWER Rpc quality vs sector");
   G__memvar_setup((void*)((long)(&p->hXdiffvsshowersectorRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsshowersectorRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hXdiffvstofstripRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvstofstripRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffvsshowersectorRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsshowersectorRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffvstofstripRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvstofstripRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hshower_qualityRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hshower_qualityRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->htof_qualityRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"htof_qualityRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hXdiffvstofstripRK_neg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvstofstripRK_neg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffvstofstripRK_neg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvstofstripRK_neg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hXdiffvsthetaRK_neg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsthetaRK_neg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffvsthetaRK_neg)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsthetaRK_neg=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hXdiffvsshoColRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsshoColRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hXdiffvsshoRowRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hXdiffvsshoRowRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffvsshoColRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsshoColRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffvsshoRowRK)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hYdiffvsshoRowRK=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hXdiffTof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hXdiffTof[6]=",0,"Delta X for TOF-MDC in MetahitClass");
   G__memvar_setup((void*)((long)(&p->hYdiffTof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hYdiffTof[6]=",0,"Delta Y for TOF-MDC in MetahitClass");
   G__memvar_setup((void*)((long)(&p->hXdiffsho)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hXdiffsho[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffsho)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hYdiffsho[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hXdiffRpc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hXdiffRpc[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hYdiffRpc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hYdiffRpc[6]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hparticle_multrk)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_multrk=",0,"! multiplicity of runge-kutta tracks");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_vs_rod_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_lepton_tof_vs_rod_sys0=",0,"! lepton time vs rod for sys0");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_vs_rod_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_lepton_tof_vs_rod_sys1=",0,"! lepton time vs rod for sys1");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_vs_startstrip_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_lepton_tof_vs_startstrip_sys0=",0,"! lepton time in system0 vs strip for start");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_vs_startstrip_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_lepton_tof_vs_startstrip_sys1=",0,"! lepton time in system1 vs strip for start");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_all_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_lepton_tof_all_sys0=",0,"! lepton time in system 0 for all start strips");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_all_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_lepton_tof_all_sys1=",0,"! lepton time in system 1 for all start strips");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_vs_start_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_lepton_tof_vs_start_sys0[64]=",0,"! lepton time for in system0 each start strip");
   G__memvar_setup((void*)((long)(&p->hparticle_lepton_tof_vs_start_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_lepton_tof_vs_start_sys1[64]=",0,"! lepton time for in system1 each start strip for start");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_rod_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_pi_tof_vs_rod_sys0=",0,"! pion  time vs rod sys0");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_rod_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_pi_tof_vs_rod_sys1=",0,"! pion time vs rod sys1");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_eloss_vs_rod_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_pi_eloss_vs_rod_sys1=",0,"! pion eloss vs rod sys1");
   G__memvar_setup((void*)((long)(&p->hparticle_p_eloss_vs_rod_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_p_eloss_vs_rod_sys1=",0,"! slow proton eloss vs rod sys1");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_metahit_vs_phi_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_pi_metahit_vs_phi_sys1=",0,"! pion rod vs track phi - sys1");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_startstrip_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_pi_tof_vs_startstrip_sys0=",0,"! pi timediff in system0 vs strip for start");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_startstrip_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_pi_tof_vs_startstrip_sys1=",0,"! pi timediff in system1 vs strip for start");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_all_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_pi_tof_all_sys0=",0,"! pi timediff in system 0 for all start strips");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_all_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_pi_tof_all_sys1=",0,"! pi timediff in system 1 for all start strips");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_start_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_pi_tof_vs_start_sys0[64]=",0,"! pi timediff for in system0 each start strip");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_startMod0_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_pi_tof_vs_startMod0_sys0[64]=",0,"! pi timediff for in system0 each start strip Mod0");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_startMod1_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_pi_tof_vs_startMod1_sys0[64]=",0,"! pi timediff for in system0 each start strip Mod1");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_vs_start_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_pi_tof_vs_start_sys1[64]=",0,"! pi timediff for in system1 each start strip for start");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_GaussFit_all_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_pi_tof_GaussFit_all_sys0=",0,"Gauss fit for Pion Tof");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_GaussFit_all_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_pi_tof_GaussFit_all_sys1=",0,"Gauss fit for Pion Tof");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_GaussFit_sys0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_pi_tof_GaussFit_sys0[64]=",0,"Gauss fit for Pion Tof");
   G__memvar_setup((void*)((long)(&p->hparticle_pi_tof_GaussFit_sys1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_pi_tof_GaussFit_sys1[64]=",0,"Gauss fit for Pion Tof");
   G__memvar_setup((void*)((long)(&p->hparticle_RK_theta_sec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_RK_theta_sec[6]=",0,"! theta distr. for all tracks RK");
   G__memvar_setup((void*)((long)(&p->hparticle_RK_neg_theta_sec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_RK_neg_theta_sec[6]=",0,"! theta distr. for neg. tracks and mom > 300 RK");
   G__memvar_setup((void*)((long)(&p->hparticle_RK_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_RK_phi=",0,"! phi distr. for all tracks RK");
   G__memvar_setup((void*)((long)(&p->hparticle_RK_neg_phi)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_RK_neg_phi=",0,"! phi distr. for neg. tracks and mom > 300 RK");
   G__memvar_setup((void*)((long)(&p->hparticle_rk_momdif_sys0_sec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_rk_momdif_sys0_sec[6]=",0,"! runge-kutta, sya0");
   G__memvar_setup((void*)((long)(&p->hparticle_rk_momdif_sys1_sec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"hparticle_rk_momdif_sys1_sec[6]=",0,"! runge-kutta, sys1");
   G__memvar_setup((void*)((long)(&p->shorpcXdiff_pre)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shorpcXdiff_pre[6]=",0,"! Difference between X SHOWER Pre hit position and RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcXdiff_post1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shorpcXdiff_post1[6]=",0,"! Difference between X SHOWER Post I hit position and RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcXdiff_post2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shorpcXdiff_post2[6]=",0,"! Difference between X SHOWER Post II hit position and RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcYdiff_pre)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shorpcYdiff_pre[6]=",0,"! Difference between Y SHOWER Pre hit position and RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcYdiff_post1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shorpcYdiff_post1[6]=",0,"! Difference between Y SHOWER Post I hit position and RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcYdiff_post2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"shorpcYdiff_post2[6]=",0,"! Difference between Y SHOWER Post II hit position and RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcXvs_pre)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shorpcXvs_pre[6]=",0,"! X SHOWER Pre hit position vs RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcXvs_post1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shorpcXvs_post1[6]=",0,"! X SHOWER Post I hit position vs RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcXvs_post2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shorpcXvs_post2[6]=",0,"! X SHOWER Post II hit position vs RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcYvs_pre)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shorpcYvs_pre[6]=",0,"! Y SHOWER Pre hit position vs RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcYvs_post1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shorpcYvs_post1[6]=",0,"! Y SHOWER Post I hit position vs RPC hit position");
   G__memvar_setup((void*)((long)(&p->shorpcYvs_post2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH2F),-1,-1,1,"shorpcYvs_post2[6]=",0,"! Y SHOWER Post II hit position vs RPC hit position");
   G__memvar_setup((void*)((long)(&p->hparticle_MetaMatchQualTof)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_MetaMatchQualTof[6]=",0,"! HParticleCand: MetaMatchQuality in Tof");
   G__memvar_setup((void*)((long)(&p->hparticle_MetaMatchQualRpc)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_MetaMatchQualRpc[6]=",0,"! HParticleCand: MetaMatchQuality in Rpc");
   G__memvar_setup((void*)((long)(&p->hparticle_MetaMatchQualShw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_MetaMatchQualShw[6]=",0,"! HParticleCand: MetaMatchQuality in Shower");
   G__memvar_setup((void*)((long)(&p->hparticle_mult)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_mult[6][2]=",0,"! HParticleCand: Multiplicity for each Sector(6) and System==0 or System==1 (2)");
   G__memvar_setup((void*)((long)(&p->hparticle_mult_select)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_mult_select[6][2]=",0,"! HParticleCand: Multiplicity for each Sector(6) and System==0 or System==1 (2) for accepted particles");
   G__memvar_setup((void*)((long)(&p->hparticle_mass)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_mass=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hparticle_mass_GaussFit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_GaussFit=",0,"fit protons");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_GaussFit_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_GaussFit_1=",0,"fit pi+");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_GaussFit_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_GaussFit_2=",0,"fit pi-");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_RPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_mass_RPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hparticle_mass_RPC_GaussFit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_RPC_GaussFit=",0,"fit protons");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_RPC_GaussFit_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_RPC_GaussFit_1=",0,"fit pi+");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_RPC_GaussFit_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_RPC_GaussFit_2=",0,"fit pi-");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_TOF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_mass_TOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->hparticle_mass_TOF_GaussFit)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_TOF_GaussFit=",0,"fit protons");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_TOF_GaussFit_1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_TOF_GaussFit_1=",0,"fit pi+");
   G__memvar_setup((void*)((long)(&p->hparticle_mass_TOF_GaussFit_2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TF1),-1,-1,1,"hparticle_mass_TOF_GaussFit_2=",0,"fit pi-");
   G__memvar_setup((void*)((long)(&p->hparticle_TofdEdx)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TH1F),-1,-1,1,"hparticle_TofdEdx=",0,"dEdx of Tof detector");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAFileInfoTree */
static void G__setup_memvarHQAFileInfoTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree));
   { HQAFileInfoTree *p; p=(HQAFileInfoTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTFileName)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,1,"fTFileName=",0,"DST Filename");
   G__memvar_setup((void*)((long)(&p->fTNumEvents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTNumEvents=",0,"Number of events in file");
   G__memvar_setup((void*)((long)(&p->fTYear)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTYear=",0,"year when file was taken");
   G__memvar_setup((void*)((long)(&p->fTDay)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTDay=",0,"day when file was taken");
   G__memvar_setup((void*)((long)(&p->fTHour)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTHour=",0,"hour when file was taken");
   G__memvar_setup((void*)((long)(&p->fTMin)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTMin=",0,"Minute when file was taken");
   G__memvar_setup((void*)((long)(&p->fTSec)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTSec=",0,"Second when file was taken");
   G__memvar_setup((void*)((long)(&p->fTEvB)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTEvB=",0,"Eventbuider which wrote file");
   G__memvar_setup((void*)((long)(&p->fTType)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,1,"fTType=",0,"Type of file (be, te,co ...)");
   G__memvar_setup((void*)((long)(&p->fTRunId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTRunId=",0,"RunID of file");
   G__memvar_setup((void*)((long)(&p->fTRefId)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"fTRefId=",0,"RunID of file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAStartTree */
static void G__setup_memvarHQAStartTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAStartTree));
   { HQAStartTree *p; p=(HQAStartTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTHitTimeMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTimeMean=",0,"Mean value of start time from StartHit");
   G__memvar_setup((void*)((long)(&p->fTHitTimeRms)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTimeRms=",0,"RMS of start time from StartHit");
   G__memvar_setup((void*)((long)(&p->fTHitToNoveto)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitToNoveto=",0,"Ratio of Hits in start to hits in veto");
   G__memvar_setup((void*)((long)(&p->fTStCalTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTStCalTime[64]=",0,"Mean value of Start time of Start for each Strip");
   G__memvar_setup((void*)((long)(&p->fTVtCalTime)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTVtCalTime[64]=",0,"Mean value of Start time of Veto for each Strip");
   G__memvar_setup((void*)((long)(&p->fTVertexX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTVertexX=",0,"Mean of Vertex in X");
   G__memvar_setup((void*)((long)(&p->fTVertexY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTVertexY=",0,"Mean of Vertex in Y");
   G__memvar_setup((void*)((long)(&p->fTVertexZ)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTVertexZ=",0,"Mean of Vertex in Z");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQARichTree */
static void G__setup_memvarHQARichTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQARichTree));
   { HQARichTree *p; p=(HQARichTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTAvChargeMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTAvChargeMax[6]=",0,"Charge divided by number of pads for found Rings in each Sector (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTNumPadsMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTNumPadsMax[6]=",0,"Number of pads per Ring for each Sector (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTNumRingsMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTNumRingsMax[6]=",0,"Number of Rings for each event and each Sector (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTAvChargeMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTAvChargeMean[6]=",0,"Charge divided by number of pads for found Rings in each Sector (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTNumPadsMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTNumPadsMean[6]=",0,"Number of pads per Ring for each Sector (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTNumRingsMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTNumRingsMean[6]=",0,"Number of Rings for each event and each Sector (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTHVMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVMean[6]=",0,"HV mean value from Oracle for each sector(6)");
   G__memvar_setup((void*)((long)(&p->fTHVSigma)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVSigma[6]=",0,"HV sigma value from Oracle for each sector(6)");
   G__memvar_setup((void*)((long)(&p->fTHVMin)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVMin[6]=",0,"HV minimum value from Oracle for each sector(6)");
   G__memvar_setup((void*)((long)(&p->fTHVMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVMax[6]=",0,"HV maximum value from Oracle for each sector(6)");
   G__memvar_setup((void*)((long)(&p->fTHVNData)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVNData[6]=",0,"HV NData points from Oracle for each sector(6)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAMdcTree */
static void G__setup_memvarHQAMdcTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAMdcTree));
   { HQAMdcTree *p; p=(HQAMdcTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTMboCounts)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMboCounts[6][4][16]=",0,"Average Number of hits for each mbo(16) in each sector(6) and each module(4)");
   G__memvar_setup((void*)((long)(&p->fTLayerCounts)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTLayerCounts[6][4][6]=",0,"Average Number of hits for each Layer(6) in each sector(6) and each module(4)");
   G__memvar_setup((void*)((long)(&p->fTCountsRaw)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTCountsRaw[6][4]=",0,"Average Number of hits in each sector(6) and each module(4) on Raw Level");
   G__memvar_setup((void*)((long)(&p->fTCountsCal)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTCountsCal[6][4]=",0,"Average Number of hits in each sector(6) and each module(4) on Cal1 Level");
   G__memvar_setup((void*)((long)(&p->fTToTCalMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTToTCalMean[6][4][6]=",0,"Mean value of TimeOverThreshold for each sector, module and layer");
   G__memvar_setup((void*)((long)(&p->fTToTCalMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTToTCalMax[6][4][6]=",0,"TimeOverThreshold for each sector, module and layer (most probable value)");
   G__memvar_setup((void*)((long)(&p->fTTime1CalMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTime1CalMean[6][4][6]=",0,"Mean value of Drift time for each sector, module and layer");
   G__memvar_setup((void*)((long)(&p->fTTime1CalMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTime1CalMax[6][4][6]=",0,"Drift time for each sector, module and layer (most probable value)");
   G__memvar_setup((void*)((long)(&p->fTSegCounter)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTSegCounter[6][2]=",0,"Average Number of Segments per Event in each sector(6) and Inner-Outer MDCs(2)");
   G__memvar_setup((void*)((long)(&p->fTSegCounterFit)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTSegCounterFit[6][2]=",0,"Average Number of Segments per Event in each sector(6) and Inner-Outer MDCs(2) which were fitted");
   G__memvar_setup((void*)((long)(&p->fTSegChi2Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTSegChi2Mean[6][2]=",0,"Mean Value of chi2 for all sectors(6) and Inner-Outer MDCs(2)");
   G__memvar_setup((void*)((long)(&p->fTSegChi2Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTSegChi2Max[6][2]=",0,"Most probable value of chi2 for all sectors(6) and Inner-Outer MDCs(2)");
   G__memvar_setup((void*)((long)(&p->fTHVMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVMean[6][4][12]=",0,"HV mean value from Oracle for each plane(4) each sector(6) and each channel (12)");
   G__memvar_setup((void*)((long)(&p->fTHVSigma)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVSigma[6][4][12]=",0,"HV sigma value from Oracle for each plane(5) each sector(7) and each channel (12)");
   G__memvar_setup((void*)((long)(&p->fTHVMin)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVMin[6][4][12]=",0,"HV minimum value from Oracle for each plane(5) each sector(7) and each channel (12)");
   G__memvar_setup((void*)((long)(&p->fTHVMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVMax[6][4][12]=",0,"HV maximum value from Oracle for each plane(5) each sector(7) and each channel (12)");
   G__memvar_setup((void*)((long)(&p->fTHVNData)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHVNData[6][4][12]=",0,"HV NData points from Oracle for each plane(5) each sector(7) and each channel (12)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQATofTree */
static void G__setup_memvarHQATofTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQATofTree));
   { HQATofTree *p; p=(HQATofTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTHitMultiMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitMultiMax[6]=",0,"Hit Multiplicity in each Sector (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitMultiMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitMultiMean[6]=",0,"Hit Multiplicity in each Sector (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTHitTotMultiMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTotMultiMax=",0,"Total Hit Multiplicity  (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitTotMultiMax2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTotMultiMax2=",0,"Total Hit Multiplicity for multiplicities larger than 10 (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitTotMultiMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTotMultiMean=",0,"Total Hit Multiplicity  (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTHits)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHits[6]=",0,"Average Number of Hist for each sector");
   G__memvar_setup((void*)((long)(&p->fTHitTofMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTofMax=",0,"Measured time (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitTofMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTofMean=",0,"Measured time (Mean value)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQARpcTree */
static void G__setup_memvarHQARpcTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQARpcTree));
   { HQARpcTree *p; p=(HQARpcTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTHitMultiMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitMultiMax[6]=",0,"Hit Multiplicity in each Sector (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitMultiMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitMultiMean[6]=",0,"Hit Multiplicity in each Sector (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTHitTotMultiMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTotMultiMax=",0,"Total Hit Multiplicity  (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitTotMultiMax2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTotMultiMax2=",0,"Total Hit Multiplicity for multiplicities larger than 10 (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitTotMultiMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTotMultiMean=",0,"Total Hit Multiplicity  (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTHits)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHits[6]=",0,"Average Number of Hist for each sector");
   G__memvar_setup((void*)((long)(&p->fTHitTofMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTofMax=",0,"Measured time (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitTofMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitTofMean=",0,"Measured time (Mean value)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAShowerTree */
static void G__setup_memvarHQAShowerTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAShowerTree));
   { HQAShowerTree *p; p=(HQAShowerTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTHitMultiMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitMultiMax[6][3]=",0,"Hit Multiplicity in each Sector(6) and Module(3) (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitMultiMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitMultiMean[6][3]=",0,"Hit Multiplicity in each Sector(6) and Module(3) (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTHitChargeMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitChargeMax[6][3]=",0,"Charge in each Sector(6) and Module(3) (Most probable value)");
   G__memvar_setup((void*)((long)(&p->fTHitChargeMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTHitChargeMean[6][3]=",0,"Charge in each Sector(6) and Module(3) (Mean value)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAPhysicsTree */
static void G__setup_memvarHQAPhysicsTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree));
   { HQAPhysicsTree *p; p=(HQAPhysicsTree*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fTMass_proton)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_proton=",0,"Fitted mass of Proton Canddidate from both detectors");
   G__memvar_setup((void*)((long)(&p->fTMass_pip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_pip=",0,"Fitted mass of Pip Canddidate from both detectors");
   G__memvar_setup((void*)((long)(&p->fTMass_pim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_pim=",0,"Fitted mass of Pim Canddidate from both detectors");
   G__memvar_setup((void*)((long)(&p->fTMass_proton_RPC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_proton_RPC=",0,"Fitted mass of Proton Canddidate from RPC only");
   G__memvar_setup((void*)((long)(&p->fTMass_pip_RPC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_pip_RPC=",0,"Fitted mass of Pip Canddidate from RPC only");
   G__memvar_setup((void*)((long)(&p->fTMass_pim_RPC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_pim_RPC=",0,"Fitted mass of Pim Canddidate from RPC only");
   G__memvar_setup((void*)((long)(&p->fTMass_proton_TOF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_proton_TOF=",0,"Fitted mass of Proton Canddidate from TOF only");
   G__memvar_setup((void*)((long)(&p->fTMass_pip_TOF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_pip_TOF=",0,"Fitted mass of Pip Canddidate from TOF only");
   G__memvar_setup((void*)((long)(&p->fTMass_pim_TOF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMass_pim_TOF=",0,"Fitted mass of Pim Canddidate from TOF only");
   G__memvar_setup((void*)((long)(&p->fTChi2_proton)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_proton=",0,"Fitted chi2 of Proton Canddidate from both detectors");
   G__memvar_setup((void*)((long)(&p->fTChi2_pip)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_pip=",0,"Fitted chi2 of Pip Canddidate from both detectors");
   G__memvar_setup((void*)((long)(&p->fTChi2_pim)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_pim=",0,"Fitted chi2 of Pim Canddidate from both detectors");
   G__memvar_setup((void*)((long)(&p->fTChi2_proton_RPC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_proton_RPC=",0,"Fitted chi2 of Proton Canddidate from RPC only");
   G__memvar_setup((void*)((long)(&p->fTChi2_pip_RPC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_pip_RPC=",0,"Fitted chi2 of Pip Canddidate from RPC only");
   G__memvar_setup((void*)((long)(&p->fTChi2_pim_RPC)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_pim_RPC=",0,"Fitted chi2 of Pim Canddidate from RPC only");
   G__memvar_setup((void*)((long)(&p->fTChi2_proton_TOF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_proton_TOF=",0,"Fitted chi2 of Proton Canddidate from TOF only");
   G__memvar_setup((void*)((long)(&p->fTChi2_pip_TOF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_pip_TOF=",0,"Fitted chi2 of Pip Canddidate from TOF only");
   G__memvar_setup((void*)((long)(&p->fTChi2_pim_TOF)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTChi2_pim_TOF=",0,"Fitted chi2 of Pim Canddidate from TOF only");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchTofMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchTofMean[6]=",0,"MetaMatch Quality for Tof (Mean Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchTofMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchTofMax[6]=",0,"MetaMatch Quality for Tof (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchTofMax2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchTofMax2[6]=",0,"MetaMatch Quality for Tof with Quality >0 (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchRpcMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchRpcMean[6]=",0,"MetaMatch Quality for Rpc (Mean Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchRpcMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchRpcMax[6]=",0,"MetaMatch Quality for Rpc (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchRpcMax2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchRpcMax2[6]=",0,"MetaMatch Quality for Rpc with Quality >0 (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchShwMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchShwMean[6]=",0,"MetaMatch Quality for Rpc (Mean Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchShwMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchShwMax[6]=",0,"MetaMatch Quality for Rpc (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMetaMatchShwMax2)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMetaMatchShwMax2[6]=",0,"MetaMatch Quality for Rpc with Quality >0 (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMultiMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMultiMax[6][2]=",0,"Multiplicity for each sector (6) and each system (2) (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMultiMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMultiMean[6][2]=",0,"Multiplicity for each sector (6) and each system (2) (Mean Value)");
   G__memvar_setup((void*)((long)(&p->fTMultiMaxSelect)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMultiMaxSelect[6][2]=",0,"Multiplicity for each sector (6) and each system (2) for accepted tracks (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTMultiMeanSelect)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTMultiMeanSelect[6][2]=",0,"Multiplicity for each sector (6) and each system (2) for accepted tracks (Mean Value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepSumSys0Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepSumSys0Mean=",0,"Normalized Time of leptons in System 0 (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepSumSys0Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepSumSys0Max=",0,"Normalized Time of leptons in System 0 (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepSumSys0Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepSumSys0Sig=",0,"Normalized Time of leptons in System 0 (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepStaSys0Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepStaSys0Mean[64]=",0,"Normalized Time of leptons in System 0 and each start strip (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepStaSys0Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepStaSys0Max[64]=",0,"Normalized Time of leptons in System 0 and each start strip (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepStaSys0Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepStaSys0Sig[64]=",0,"Normalized Time of leptons in System 0 and each start strip (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepSumSys1Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepSumSys1Mean=",0,"Normalized Time of leptons in System 1 (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepSumSys1Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepSumSys1Max=",0,"Normalized Time of leptons in System 1 (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepSumSys1Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepSumSys1Sig=",0,"Normalized Time of leptons in System 1 (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepStaSys1Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepStaSys1Mean[64]=",0,"Normalized Time of leptons in System 1 and each start strip (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepStaSys1Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepStaSys1Max[64]=",0,"Normalized Time of leptons in System 1 and each start strip (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimeLepStaSys1Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimeLepStaSys1Sig[64]=",0,"Normalized Time of leptons in System 1 and each start strip (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys0Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys0Mean=",0,"Time diff of pions in System 0 (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys0Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys0Max=",0,"Time diff of pions in System 0 (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys0Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys0Sig=",0,"Time diff of pions in System 0 (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys0Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys0Mean[64]=",0,"Time diff of pions in System 0 and each start strip (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys0Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys0Max[64]=",0,"Time diff of pions in System 0 and each start strip (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys0Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys0Sig[64]=",0,"Time diff of pions in System 0 and each start strip (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys1Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys1Mean=",0,"Time diff of pions in System 1 (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys1Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys1Max=",0,"Time diff of pions in System 1 (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys1Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys1Sig=",0,"Time diff of pions in System 1 (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys1Mean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys1Mean[64]=",0,"Time diff of pions in System 1 and each start strip (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys1Max)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys1Max[64]=",0,"Time diff of pions in System 1 and each start strip (Most Probable Value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys1Sig)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys1Sig[64]=",0,"Time diff of pions in System 1 and each start strip (Sigma)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys0FitMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys0FitMean=",0,"Time diff of pions in System 0 (Fit Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiSumSys1FitMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiSumSys1FitMean=",0,"Time diff of pions in System 1 (Fit Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys0FitMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys0FitMean[64]=",0,"Time diff of pions in System 0 and each start strip (Fit Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTimePiStaSys1FitMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTimePiStaSys1FitMean[64]=",0,"Time diff of pions in System 1 and each start strip (Fit Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTofdEdxMean)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTofdEdxMean=",0,"dEdx from Tof detector (Mean value)");
   G__memvar_setup((void*)((long)(&p->fTTofdEdxMax)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTTofdEdxMax=",0,"dEdx from Tof detector (Most Probable value)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAVariations */
static void G__setup_memvarHQAVariations(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAVariations));
   { HQAVariations *p; p=(HQAVariations*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->histList)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TList),-1,-1,1,"histList=",0,"! List of booked histograms");
   G__memvar_setup((void*)((long)(&p->maxEvents)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"maxEvents=",0,"! Max. #events to be QA'd (= 200*IntervalSize)");
   G__memvar_setup((void*)((long)(&p->evtHeader_eventSize_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"evtHeader_eventSize_Var=",0,"! evtHeader: event size");
   G__memvar_setup((void*)((long)(&p->stCal_meanStrip_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"stCal_meanStrip_Var=",0,"! startCal: mean strip number");
   G__memvar_setup((void*)((long)(&p->vtCal_meanStrip_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"vtCal_meanStrip_Var=",0,"! vetoCal: mean strip number");
   G__memvar_setup((void*)((long)(&p->richCal_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"richCal_n_Var=",0,"! richCal: fired pads/event");
   G__memvar_setup((void*)((long)(&p->richHit_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"richHit_n_Var=",0,"! richHit: hits/event");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1_m0_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time1_m0_Var=",0,"! mdcCal1: Plane I, average time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1_m1_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time1_m1_Var=",0,"! mdcCal1: Plane II, average time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1_m2_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time1_m2_Var=",0,"! mdcCal1: Plane III, average time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time1_m3_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time1_m3_Var=",0,"! mdcCal1: Plane IV, average time1");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time2m1_m0_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time2m1_m0_Var=",0,"! mdcCal1: Plane I, average time above threshold");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time2m1_m1_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time2m1_m1_Var=",0,"! mdcCal1: Plane II, average time above threshold");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time2m1_m2_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time2m1_m2_Var=",0,"! mdcCal1: Plane III, average time above threshold");
   G__memvar_setup((void*)((long)(&p->mdcCal1_time2m1_m3_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"mdcCal1_time2m1_m3_Var=",0,"! mdcCal1: Plane IV, average time above threshold");
   G__memvar_setup((void*)((long)(&p->tofHit_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"tofHit_n_Var=",0,"! tofHit: num hits/event");
   G__memvar_setup((void*)((long)(&p->rpcHit_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"rpcHit_n_Var=",0,"! rpcHit: num hits/event");
   G__memvar_setup((void*)((long)(&p->shoHit_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"shoHit_n_Var=",0,"! showerHit: num hits/event");
   G__memvar_setup((void*)((long)(&p->shoHitTof_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"shoHitTof_n_Var=",0,"! showerHitTof: num hits/event");
   G__memvar_setup((void*)((long)(&p->particleCand_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"particleCand_n_Var=",0,"! particleCand objects/event");
   G__memvar_setup((void*)((long)(&p->particleCandLep_n_Var)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TProfile),-1,-1,1,"particleCandLep_n_Var=",0,"! pidTrackCand objects with ring/event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAScalers */
static void G__setup_memvarHQAScalers(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAScalers));
   { HQAScalers *p; p=(HQAScalers*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->scalerList)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_TList),-1,-1,1,"scalerList=",0,"! List of scalers");
   G__memvar_setup((void*)((long)(&p->richCal_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"richCal_n=",0,"! richCal: pads/event");
   G__memvar_setup((void*)((long)(&p->richHit_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"richHit_n=",0,"! richHit: hits/event (*1000)");
   G__memvar_setup((void*)((long)(&p->mdcCal1_n_m0)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"mdcCal1_n_m0=",0,"! mdcCal1: Plane I, avg. mult.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_n_m1)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"mdcCal1_n_m1=",0,"! mdcCal1: Plane II, avg. mult.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_n_m2)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"mdcCal1_n_m2=",0,"! mdcCal1: Plane III, avg. mult.");
   G__memvar_setup((void*)((long)(&p->mdcCal1_n_m3)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"mdcCal1_n_m3=",0,"! mdcCal1: Plane IV, avg. mult.");
   G__memvar_setup((void*)((long)(&p->tofHit_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"tofHit_n=",0,"! tofHit: multiplicity/event");
   G__memvar_setup((void*)((long)(&p->shoHit_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"shoHit_n=",0,"! showerHit: multiplicity/event");
   G__memvar_setup((void*)((long)(&p->shoHitTof_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"shoHitTof_n=",0,"! showerHit: multiplicity/event");
   G__memvar_setup((void*)((long)(&p->kickTrack_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"kickTrack_n=",0,"! kickTrack: tracks/event");
   G__memvar_setup((void*)((long)(&p->trigRich_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"trigRich_n=",0,"! trigRich    : RichIPU   hits/event");
   G__memvar_setup((void*)((long)(&p->trigTof_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"trigTof_n=",0,"! trigTof     : TofIPU    hits/event");
   G__memvar_setup((void*)((long)(&p->trigShower_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"trigShower_n=",0,"! trigShower  : ShowerIPU hits/event");
   G__memvar_setup((void*)((long)(&p->trigTlepton_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"trigTlepton_n=",0,"! trigTlepton : MU Leptons from Tof hits    / event");
   G__memvar_setup((void*)((long)(&p->trigSlepton_n)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScaler6),-1,-1,1,"trigSlepton_n=",0,"! trigSlepton : MU Leptons from Shower hits / event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAOutputPS */
static void G__setup_memvarHQAOutputPS(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS));
   { HQAOutputPS *p; p=(HQAOutputPS*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TCanvas),-1,-1,4,"fCanvas=",0,"! canvas");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TPad),-1,-1,4,"fHistPad=",0,"! histogram pad");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"pageCount=",0,"! counts pages of a certain type");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"histCount=",0,"! counts histograms for page breaks");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nProcessed=",0,"! number of events QA'd");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nHistPerPage=",0,"! user-supplied parameter (default=6)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nEvent=",0,"! total number of events in output file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"kFIRST=",0,"! needed for one-time formatting");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"kPDF=",0,"! generate PDF file using ps2pdf; default = kTRUE");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,4,"fnamePS=",0,"! PS filename");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,4,"fnameDST=",0,"! DST filename (used in page header)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fdevice=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,4,"pageTitle=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAMaker */
static void G__setup_memvarHQAMaker(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAMaker));
   { HQAMaker *p; p=(HQAMaker*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterStCal=",0,"! HStartCal iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterStHit=",0,"! HStartHit iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterRichCal=",0,"! HRichCal iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterRichHit=",0,"! HRichHit iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterMdcRaw=",0,"! HMdcRaw iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterMdcCal1=",0,"! HMdcCal1 iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterMdcHit=",0,"! HMdcHit iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterMdcSeg=",0,"! HMdcSeg iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterTofHit=",0,"! HTofHit iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterTofCluster=",0,"! HTofCluster iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterRpcHit=",0,"! HRpcHit iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterRpcCluster=",0,"! HRpcCluster iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterShoHit=",0,"! HShowerHit iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterFwRaw=",0,"! HWallRaw iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterFwHit=",0,"! HWallHit iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterSplineTrk=",0,"! HSplineTrack iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterRungeKuttaTrk=",0,"! HSplineTrack iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterMetaMatch=",0,"! HMetaMatch iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterParticleCand=",0,"! HPidTrackCand iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HIterator),-1,-1,4,"iterHTBoxChan=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"catSplineTrk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"catRungeKuttaTrk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"catShoHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"catTfHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"fCatRpcHit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"fCatRpcCluster=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"catTfClust=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HCategory),-1,-1,4,"fCatParticleCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HSlowPar),-1,-1,4,"SlowPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,4,"fbeamtime=",0,"beam time needed for oraslowmanager");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree),-1,-1,4,"TFileInfo=",0,"Object for File characteristics, which is filled to tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQAStartTree),-1,-1,4,"TStart=",0,"Object for Start detector, which is filled to Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQARichTree),-1,-1,4,"TRich=",0,"Object for Rich detector, which is filled to Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQAMdcTree),-1,-1,4,"TMdc=",0,"Object for Mdc detector, which is filled to Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQATofTree),-1,-1,4,"TTof=",0,"Object for Tof detector, which is filled to Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQARpcTree),-1,-1,4,"TRpc=",0,"Object for Tof detector, which is filled to Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQAShowerTree),-1,-1,4,"TShw=",0,"Object for Shower detector, which is filled to Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree),-1,-1,4,"TPhy=",0,"Object with Physics Information which is written to Tree");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HLocation),-1,-1,4,"lTrack=",0,"location used in the execute for HKickTrack");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_HLocation),-1,-1,4,"lMdc=",0,"location used in the execute for HMdcSeg");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"kFIRST=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"kPDF=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"kWriteToFile=",0,"! boolean for writing hists to gHades output file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isSim=",0,"! boolean for sim/real");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"fUseSlowPar=",0,"! kTRUE(defualt) to use HSlowPar container");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nProcessed=",0,"! number of events QA-analyzed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nEvent=",0,"! number of events analyzed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nCountCalEvents=",0,"! number of calibration events analyzed");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nInterval=",0,"! interval number (for variation hists)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"samplingRate=",0,"! rate of event sampling");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"intervalSize=",0,"! number of events per interval (for variation hists)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,4,"psFile=",0,"! PostScript output filename");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,4,"dstFile=",0,"! DST filename");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__QADictLN_TString),-1,-1,4,"fDir=",0,"! QA output directory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAVariations),-1,-1,4,"varHists=",0,"! Run variation histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAHistograms),-1,-1,4,"hists=",0,"! General QA histograms");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HQAScalers),-1,-1,4,"scalers=",0,"! Run QA scalers");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"betaMin=",0,"! beta cut");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TTree),-1,-1,4,"outputTree=",0,"This is the tree where important numbers of the different histograms are stored");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TFile),-1,-1,4,"fileTree=",0,"This is the output file for the outputTree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_HMdcCutStat),-1,-1,2,"cutStat=",0,"! container for statistics on cuts //asd");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"cutResults[4]=",0,"contains 0/1 for cuts in t1,t2 and t2-1 after testTimeCuts()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAScaler */
static void G__setup_memvarHQAScaler(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler));
   { HQAScaler *p; p=(HQAScaler*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fData)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HQAScaler6 */
static void G__setup_memvarHQAScaler6(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler6));
   { HQAScaler6 *p; p=(HQAScaler6*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->fData)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"fData[6]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__QADictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarQADict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHQAHistograms(void) {
   /* HQAHistograms */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAHistograms));
   G__memfunc_setup("HQAHistograms",1275,G__QADict_542_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAHistograms), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookHist",835,G__QADict_542_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateHist",1257,G__QADict_542_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHistList",1140,G__QADict_542_0_4, 85, G__get_linked_tagnum(&G__QADictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetPointers",1399,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookHistStart",1361,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistRich",1225,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistMdc",1111,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistShower",1467,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistTof",1132,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistRpc",1128,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistWall",1235,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistRichMDC",1437,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistMatching",1646,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistTracking",1654,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistPid",1120,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistDaqScalers",1830,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistShowerRpc",1760,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__QADict_542_0_19, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAHistograms::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_542_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAHistograms::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_542_0_21, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAHistograms::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_542_0_22, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAHistograms::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_542_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_542_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAHistograms::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_542_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAHistograms::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_542_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAHistograms::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_542_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAHistograms::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAHistograms", 1275, G__QADict_542_0_31, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAHistograms), -1, 0, 1, 1, 1, 0, "u 'HQAHistograms' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAHistograms", 1401, G__QADict_542_0_32, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_542_0_33, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAHistograms), -1, 1, 1, 1, 1, 0, "u 'HQAHistograms' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAFileInfoTree(void) {
   /* HQAFileInfoTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree));
   G__memfunc_setup("HQAFileInfoTree",1398,G__QADict_589_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_589_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAFileInfoTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_589_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAFileInfoTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_589_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAFileInfoTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_589_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAFileInfoTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_589_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_589_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAFileInfoTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_589_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAFileInfoTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_589_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAFileInfoTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_589_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAFileInfoTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAFileInfoTree", 1398, G__QADict_589_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree), -1, 0, 1, 1, 1, 0, "u 'HQAFileInfoTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAFileInfoTree", 1524, G__QADict_589_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_589_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAFileInfoTree), -1, 1, 1, 1, 1, 0, "u 'HQAFileInfoTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAStartTree(void) {
   /* HQAStartTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAStartTree));
   G__memfunc_setup("HQAStartTree",1144,G__QADict_590_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAStartTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_590_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAStartTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_590_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAStartTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_590_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAStartTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_590_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAStartTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_590_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_590_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAStartTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_590_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAStartTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_590_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAStartTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_590_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAStartTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAStartTree", 1144, G__QADict_590_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAStartTree), -1, 0, 1, 1, 1, 0, "u 'HQAStartTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAStartTree", 1270, G__QADict_590_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_590_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAStartTree), -1, 1, 1, 1, 1, 0, "u 'HQAStartTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQARichTree(void) {
   /* HQARichTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQARichTree));
   G__memfunc_setup("HQARichTree",1008,G__QADict_591_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQARichTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_591_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQARichTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_591_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQARichTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_591_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQARichTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_591_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQARichTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_591_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_591_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQARichTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_591_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQARichTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_591_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQARichTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_591_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQARichTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQARichTree", 1008, G__QADict_591_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQARichTree), -1, 0, 1, 1, 1, 0, "u 'HQARichTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQARichTree", 1134, G__QADict_591_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_591_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQARichTree), -1, 1, 1, 1, 1, 0, "u 'HQARichTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAMdcTree(void) {
   /* HQAMdcTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAMdcTree));
   G__memfunc_setup("HQAMdcTree",894,G__QADict_592_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAMdcTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_592_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAMdcTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_592_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAMdcTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_592_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAMdcTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_592_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAMdcTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_592_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_592_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAMdcTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_592_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAMdcTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_592_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAMdcTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_592_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAMdcTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAMdcTree", 894, G__QADict_592_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAMdcTree), -1, 0, 1, 1, 1, 0, "u 'HQAMdcTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAMdcTree", 1020, G__QADict_592_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_592_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAMdcTree), -1, 1, 1, 1, 1, 0, "u 'HQAMdcTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQATofTree(void) {
   /* HQATofTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQATofTree));
   G__memfunc_setup("HQATofTree",915,G__QADict_593_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQATofTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_593_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQATofTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_593_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQATofTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_593_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQATofTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_593_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQATofTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_593_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_593_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQATofTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_593_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQATofTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_593_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQATofTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_593_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQATofTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQATofTree", 915, G__QADict_593_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQATofTree), -1, 0, 1, 1, 1, 0, "u 'HQATofTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQATofTree", 1041, G__QADict_593_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_593_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQATofTree), -1, 1, 1, 1, 1, 0, "u 'HQATofTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQARpcTree(void) {
   /* HQARpcTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQARpcTree));
   G__memfunc_setup("HQARpcTree",911,G__QADict_594_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQARpcTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_594_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQARpcTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_594_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQARpcTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_594_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQARpcTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_594_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQARpcTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_594_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_594_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQARpcTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_594_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQARpcTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_594_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQARpcTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_594_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQARpcTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQARpcTree", 911, G__QADict_594_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQARpcTree), -1, 0, 1, 1, 1, 0, "u 'HQARpcTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQARpcTree", 1037, G__QADict_594_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_594_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQARpcTree), -1, 1, 1, 1, 1, 0, "u 'HQARpcTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAShowerTree(void) {
   /* HQAShowerTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAShowerTree));
   G__memfunc_setup("HQAShowerTree",1250,G__QADict_595_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAShowerTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_595_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAShowerTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_595_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAShowerTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_595_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAShowerTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_595_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAShowerTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_595_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_595_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAShowerTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_595_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAShowerTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_595_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAShowerTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_595_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAShowerTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAShowerTree", 1250, G__QADict_595_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAShowerTree), -1, 0, 1, 1, 1, 0, "u 'HQAShowerTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAShowerTree", 1376, G__QADict_595_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_595_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAShowerTree), -1, 1, 1, 1, 1, 0, "u 'HQAShowerTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAPhysicsTree(void) {
   /* HQAPhysicsTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree));
   G__memfunc_setup("HQAPhysicsTree",1357,G__QADict_596_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_596_0_2, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAPhysicsTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_596_0_3, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAPhysicsTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_596_0_4, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAPhysicsTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_596_0_5, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAPhysicsTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_596_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_596_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAPhysicsTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_596_0_11, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAPhysicsTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_596_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAPhysicsTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_596_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAPhysicsTree::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAPhysicsTree", 1357, G__QADict_596_0_14, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree), -1, 0, 1, 1, 1, 0, "u 'HQAPhysicsTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAPhysicsTree", 1483, G__QADict_596_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_596_0_16, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAPhysicsTree), -1, 1, 1, 1, 1, 0, "u 'HQAPhysicsTree' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAVariations(void) {
   /* HQAVariations */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAVariations));
   G__memfunc_setup("HQAVariations",1274,G__QADict_621_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAVariations), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '5000' intervalSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookHist",835,G__QADict_621_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateHist",1257,G__QADict_621_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHistList",1140,G__QADict_621_0_4, 85, G__get_linked_tagnum(&G__QADictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookHistEvent",1349,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistStart",1361,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistRich",1225,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistMdc",1111,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistShower",1467,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistTof",1132,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistRpc",1128,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("bookHistPid",1120,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resetPointers",1399,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_621_0_14, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAVariations::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_621_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAVariations::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_621_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAVariations::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_621_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAVariations::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_621_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_621_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAVariations::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_621_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAVariations::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_621_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAVariations::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_621_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAVariations::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAVariations", 1274, G__QADict_621_0_26, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAVariations), -1, 0, 1, 1, 1, 0, "u 'HQAVariations' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAVariations", 1400, G__QADict_621_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_621_0_28, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAVariations), -1, 1, 1, 1, 1, 0, "u 'HQAVariations' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAScalers(void) {
   /* HQAScalers */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAScalers));
   G__memfunc_setup("HQAScalers",935,G__QADict_622_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAScalers), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("bookScalers",1144,G__QADict_622_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateScalers",1566,G__QADict_622_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getScalerList",1334,G__QADict_622_0_4, 85, G__get_linked_tagnum(&G__QADictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetPointers",1399,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_622_0_6, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAScalers::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_622_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScalers::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_622_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAScalers::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_622_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAScalers::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_622_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_622_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScalers::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_622_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAScalers::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_622_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScalers::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_622_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAScalers::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAScalers", 935, G__QADict_622_0_18, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAScalers), -1, 0, 1, 1, 1, 0, "u 'HQAScalers' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAScalers", 1061, G__QADict_622_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_622_0_20, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAScalers), -1, 1, 1, 1, 1, 0, "u 'HQAScalers' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAOutputPS(void) {
   /* HQAOutputPS */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAOutputPS));
   G__memfunc_setup("HQAOutputPS",1038,G__QADict_626_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAOutputPS), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HQAOutputPS",1038,G__QADict_626_0_2, 105, G__get_linked_tagnum(&G__QADictLN_HQAOutputPS), -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHist",963,G__QADict_626_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHist",963,G__QADict_626_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'TList' - 0 - h1 U 'TList' - 0 - h2 "
"u 'TString' - 0 - fnamePS", "for 2 lists into another root file //asd", (void*) NULL, 0);
   G__memfunc_setup("makeHist",822,G__QADict_626_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeText",835,G__QADict_626_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveScal",818,G__QADict_626_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TList' - 0 - h u 'TString' - 0 - fnamePS", "asd txt-file output for scalers", (void*) NULL, 0);
   G__memfunc_setup("closePS",697,G__QADict_626_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNHistPerPage",1494,G__QADict_626_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nh", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStats",859,G__QADict_626_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - nEvents i - 'Int_t' 0 '0' nQAProcessed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDSTFileName",1336,G__QADict_626_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - file", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeNewPage",1093,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "u 'TString' - 0 - type", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStyle",861,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_626_0_14, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAOutputPS::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_626_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAOutputPS::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_626_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAOutputPS::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_626_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAOutputPS::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_626_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_626_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAOutputPS::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_626_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAOutputPS::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_626_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAOutputPS::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_626_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAOutputPS::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HQAOutputPS", 1164, G__QADict_626_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAMaker(void) {
   /* HQAMaker */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAMaker));
   G__memfunc_setup("HQAMaker",714,G__QADict_628_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAMaker), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HQAMaker",714,G__QADict_628_0_2, 105, G__get_linked_tagnum(&G__QADictLN_HQAMaker), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSamplingRate",1555,G__QADict_628_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - rate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIntervalSize",1580,G__QADict_628_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPSFileName",1264,G__QADict_628_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - fname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutputDir",1276,G__QADict_628_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - fdir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUseSlowPar",1345,G__QADict_628_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - use", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("generatePDF",1061,G__QADict_628_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' kpdf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIteratorPointers",2014,G__QADict_628_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initIteratorPointers",2130,G__QADict_628_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParContainers",1669,G__QADict_628_0_11, 121, -1, -1, 0, 0, 1, 1, 0, "", "asd", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__QADict_628_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeToFile",1134,G__QADict_628_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' kwtf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamTime",1104,G__QADict_628_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - beam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("buildPSFilename",1492,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistStart",1357,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistRich",1221,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistMdc",1107,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistTof",1128,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistRpc",1124,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistShower",1463,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistWall",1231,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistSpline",1450,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistRungeKutta",1865,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistRichMDC",1433,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistMatching",1642,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistPid",1116,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillScalers",1140,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistDaqScaler",1711,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHistShowerRpc",1756,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillGlobalVertex",1654,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillMassSpectrum",1678,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistStart",1784,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistRich",1648,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistMdc",1534,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistTof",1555,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistRpc",1551,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistShower",1890,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistSpline",1877,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistRichMDC",1860,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistDaqScaler",2138,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistPid",1543,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeHistShowerRpc",2183,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeMassSpectrum",2105,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makePS",577,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_628_0_49, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAMaker::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_628_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAMaker::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_628_0_51, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAMaker::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_628_0_52, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAMaker::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_628_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_628_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAMaker::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_628_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAMaker::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_628_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAMaker::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_628_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAMaker::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HQAMaker", 840, G__QADict_628_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAScaler(void) {
   /* HQAScaler */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler));
   G__memfunc_setup("HQAScaler",820,G__QADict_637_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAScaler), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HQAScaler",820,G__QADict_637_0_2, 105, G__get_linked_tagnum(&G__QADictLN_HQAScaler), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__QADict_637_0_3, 117, G__get_linked_tagnum(&G__QADictLN_HQAScaler), -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_637_0_4, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAScaler::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_637_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScaler::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_637_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAScaler::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_637_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAScaler::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_637_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_637_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScaler::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_637_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAScaler::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_637_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScaler::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_637_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAScaler::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAScaler", 820, G__QADict_637_0_16, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAScaler), -1, 0, 1, 1, 1, 0, "u 'HQAScaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAScaler", 946, G__QADict_637_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_637_0_18, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAScaler), -1, 1, 1, 1, 1, 0, "u 'HQAScaler' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHQAScaler6(void) {
   /* HQAScaler6 */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__QADictLN_HQAScaler6));
   G__memfunc_setup("HQAScaler6",874,G__QADict_638_0_1, 105, G__get_linked_tagnum(&G__QADictLN_HQAScaler6), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HQAScaler6",874,G__QADict_638_0_2, 105, G__get_linked_tagnum(&G__QADictLN_HQAScaler6), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 - name C - 'Char_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,G__QADict_638_0_3, 117, G__get_linked_tagnum(&G__QADictLN_HQAScaler6), -1, 1, 1, 1, 1, 0, "d - 'Double_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__QADict_638_0_4, 100, -1, G__defined_typename("Double_t"), 1, 1, 1, 1, 0, "i - 'Int_t' 0 - sec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__QADict_638_0_5, 85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HQAScaler6::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__QADict_638_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScaler6::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__QADict_638_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HQAScaler6::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__QADict_638_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HQAScaler6::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__QADictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__QADict_638_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__QADict_638_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScaler6::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__QADict_638_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAScaler6::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__QADict_638_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HQAScaler6::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__QADict_638_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HQAScaler6::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HQAScaler6", 874, G__QADict_638_0_17, (int) ('i'), G__get_linked_tagnum(&G__QADictLN_HQAScaler6), -1, 0, 1, 1, 1, 0, "u 'HQAScaler6' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HQAScaler6", 1000, G__QADict_638_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__QADict_638_0_19, (int) ('u'), G__get_linked_tagnum(&G__QADictLN_HQAScaler6), -1, 1, 1, 1, 1, 0, "u 'HQAScaler6' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncQADict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalQADict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcQADict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__QADictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__QADictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__QADictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__QADictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__QADictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__QADictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__QADictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__QADictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__QADictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__QADictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__QADictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__QADictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__QADictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__QADictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__QADictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__QADictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__QADictLN_TF1 = { "TF1" , 99 , -1 };
G__linked_taginfo G__QADictLN_TH1F = { "TH1F" , 99 , -1 };
G__linked_taginfo G__QADictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__QADictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__QADictLN_TProfile = { "TProfile" , 99 , -1 };
G__linked_taginfo G__QADictLN_TH2F = { "TH2F" , 99 , -1 };
G__linked_taginfo G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__QADictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__QADictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAHistograms = { "HQAHistograms" , 99 , -1 };
G__linked_taginfo G__QADictLN_HTask = { "HTask" , 99 , -1 };
G__linked_taginfo G__QADictLN_HLocation = { "HLocation" , 99 , -1 };
G__linked_taginfo G__QADictLN_HReconstructor = { "HReconstructor" , 99 , -1 };
G__linked_taginfo G__QADictLN_HCategory = { "HCategory" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAFileInfoTree = { "HQAFileInfoTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAStartTree = { "HQAStartTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQARichTree = { "HQARichTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAMdcTree = { "HQAMdcTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQATofTree = { "HQATofTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQARpcTree = { "HQARpcTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAShowerTree = { "HQAShowerTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAPhysicsTree = { "HQAPhysicsTree" , 99 , -1 };
G__linked_taginfo G__QADictLN_HSlowPar = { "HSlowPar" , 99 , -1 };
G__linked_taginfo G__QADictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR = { "map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >" , 99 , -1 };
G__linked_taginfo G__QADictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR = { "map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*,less<int>,allocator<pair<const int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*> > >" , 99 , -1 };
G__linked_taginfo G__QADictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__QADictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAVariations = { "HQAVariations" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAScalers = { "HQAScalers" , 99 , -1 };
G__linked_taginfo G__QADictLN_HIterator = { "HIterator" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAOutputPS = { "HQAOutputPS" , 99 , -1 };
G__linked_taginfo G__QADictLN_HMdcCutStat = { "HMdcCutStat" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAMaker = { "HQAMaker" , 99 , -1 };
G__linked_taginfo G__QADictLN_TAttText = { "TAttText" , 99 , -1 };
G__linked_taginfo G__QADictLN_TVirtualPS = { "TVirtualPS" , 99 , -1 };
G__linked_taginfo G__QADictLN_TPDF = { "TPDF" , 99 , -1 };
G__linked_taginfo G__QADictLN_TCanvas = { "TCanvas" , 99 , -1 };
G__linked_taginfo G__QADictLN_TPad = { "TPad" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAScaler = { "HQAScaler" , 99 , -1 };
G__linked_taginfo G__QADictLN_HQAScaler6 = { "HQAScaler6" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableQADict() {
  G__QADictLN_TClass.tagnum = -1 ;
  G__QADictLN_TBuffer.tagnum = -1 ;
  G__QADictLN_TMemberInspector.tagnum = -1 ;
  G__QADictLN_TObject.tagnum = -1 ;
  G__QADictLN_TNamed.tagnum = -1 ;
  G__QADictLN_TString.tagnum = -1 ;
  G__QADictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__QADictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__QADictLN_TList.tagnum = -1 ;
  G__QADictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__QADictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__QADictLN_TAttLine.tagnum = -1 ;
  G__QADictLN_TAttFill.tagnum = -1 ;
  G__QADictLN_TAttMarker.tagnum = -1 ;
  G__QADictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__QADictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__QADictLN_TF1.tagnum = -1 ;
  G__QADictLN_TH1F.tagnum = -1 ;
  G__QADictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__QADictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__QADictLN_TProfile.tagnum = -1 ;
  G__QADictLN_TH2F.tagnum = -1 ;
  G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__QADictLN_TTree.tagnum = -1 ;
  G__QADictLN_TFile.tagnum = -1 ;
  G__QADictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__QADictLN_HQAHistograms.tagnum = -1 ;
  G__QADictLN_HTask.tagnum = -1 ;
  G__QADictLN_HLocation.tagnum = -1 ;
  G__QADictLN_HReconstructor.tagnum = -1 ;
  G__QADictLN_HCategory.tagnum = -1 ;
  G__QADictLN_HQAFileInfoTree.tagnum = -1 ;
  G__QADictLN_HQAStartTree.tagnum = -1 ;
  G__QADictLN_HQARichTree.tagnum = -1 ;
  G__QADictLN_HQAMdcTree.tagnum = -1 ;
  G__QADictLN_HQATofTree.tagnum = -1 ;
  G__QADictLN_HQARpcTree.tagnum = -1 ;
  G__QADictLN_HQAShowerTree.tagnum = -1 ;
  G__QADictLN_HQAPhysicsTree.tagnum = -1 ;
  G__QADictLN_HSlowPar.tagnum = -1 ;
  G__QADictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR.tagnum = -1 ;
  G__QADictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__QADictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__QADictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__QADictLN_HQAVariations.tagnum = -1 ;
  G__QADictLN_HQAScalers.tagnum = -1 ;
  G__QADictLN_HIterator.tagnum = -1 ;
  G__QADictLN_HQAOutputPS.tagnum = -1 ;
  G__QADictLN_HMdcCutStat.tagnum = -1 ;
  G__QADictLN_HQAMaker.tagnum = -1 ;
  G__QADictLN_TAttText.tagnum = -1 ;
  G__QADictLN_TVirtualPS.tagnum = -1 ;
  G__QADictLN_TPDF.tagnum = -1 ;
  G__QADictLN_TCanvas.tagnum = -1 ;
  G__QADictLN_TPad.tagnum = -1 ;
  G__QADictLN_HQAScaler.tagnum = -1 ;
  G__QADictLN_HQAScaler6.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableQADict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__QADictLN_TClass);
   G__get_linked_tagnum_fwd(&G__QADictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__QADictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__QADictLN_TObject);
   G__get_linked_tagnum_fwd(&G__QADictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__QADictLN_TString);
   G__get_linked_tagnum_fwd(&G__QADictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_TList);
   G__get_linked_tagnum_fwd(&G__QADictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__QADictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__QADictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__QADictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__QADictLN_TF1);
   G__get_linked_tagnum_fwd(&G__QADictLN_TH1F);
   G__get_linked_tagnum_fwd(&G__QADictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__QADictLN_TProfile);
   G__get_linked_tagnum_fwd(&G__QADictLN_TH2F);
   G__get_linked_tagnum_fwd(&G__QADictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_TTree);
   G__get_linked_tagnum_fwd(&G__QADictLN_TFile);
   G__get_linked_tagnum_fwd(&G__QADictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAHistograms),sizeof(HQAHistograms),-1,29952,"QA general histograms",G__setup_memvarHQAHistograms,G__setup_memfuncHQAHistograms);
   G__get_linked_tagnum_fwd(&G__QADictLN_HTask);
   G__get_linked_tagnum_fwd(&G__QADictLN_HLocation);
   G__get_linked_tagnum_fwd(&G__QADictLN_HReconstructor);
   G__get_linked_tagnum_fwd(&G__QADictLN_HCategory);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAFileInfoTree),sizeof(HQAFileInfoTree),-1,29952,(char*)NULL,G__setup_memvarHQAFileInfoTree,G__setup_memfuncHQAFileInfoTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAStartTree),sizeof(HQAStartTree),-1,29952,(char*)NULL,G__setup_memvarHQAStartTree,G__setup_memfuncHQAStartTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQARichTree),sizeof(HQARichTree),-1,29952,(char*)NULL,G__setup_memvarHQARichTree,G__setup_memfuncHQARichTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAMdcTree),sizeof(HQAMdcTree),-1,29952,(char*)NULL,G__setup_memvarHQAMdcTree,G__setup_memfuncHQAMdcTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQATofTree),sizeof(HQATofTree),-1,29952,(char*)NULL,G__setup_memvarHQATofTree,G__setup_memfuncHQATofTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQARpcTree),sizeof(HQARpcTree),-1,29952,(char*)NULL,G__setup_memvarHQARpcTree,G__setup_memfuncHQARpcTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAShowerTree),sizeof(HQAShowerTree),-1,29952,(char*)NULL,G__setup_memvarHQAShowerTree,G__setup_memfuncHQAShowerTree);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAPhysicsTree),sizeof(HQAPhysicsTree),-1,29952,(char*)NULL,G__setup_memvarHQAPhysicsTree,G__setup_memfuncHQAPhysicsTree);
   G__get_linked_tagnum_fwd(&G__QADictLN_HSlowPar);
   G__get_linked_tagnum_fwd(&G__QADictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__QADictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAVariations),sizeof(HQAVariations),-1,29952,"QA variation histograms",G__setup_memvarHQAVariations,G__setup_memfuncHQAVariations);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAScalers),sizeof(HQAScalers),-1,29952,"QA scalers",G__setup_memvarHQAScalers,G__setup_memfuncHQAScalers);
   G__get_linked_tagnum_fwd(&G__QADictLN_HIterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAOutputPS),sizeof(HQAOutputPS),-1,62720,"QA Postscript file generator",G__setup_memvarHQAOutputPS,G__setup_memfuncHQAOutputPS);
   G__get_linked_tagnum_fwd(&G__QADictLN_HMdcCutStat);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAMaker),sizeof(HQAMaker),-1,62720,"Hydra task for filling QA histograms and scalers",G__setup_memvarHQAMaker,G__setup_memfuncHQAMaker);
   G__get_linked_tagnum_fwd(&G__QADictLN_TAttText);
   G__get_linked_tagnum_fwd(&G__QADictLN_TVirtualPS);
   G__get_linked_tagnum_fwd(&G__QADictLN_TPDF);
   G__get_linked_tagnum_fwd(&G__QADictLN_TCanvas);
   G__get_linked_tagnum_fwd(&G__QADictLN_TPad);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAScaler),sizeof(HQAScaler),-1,64768,"TObject wrapper DOUBLE",G__setup_memvarHQAScaler,G__setup_memfuncHQAScaler);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__QADictLN_HQAScaler6),sizeof(HQAScaler6),-1,64768,"TObject wrapper for double[6]",G__setup_memvarHQAScaler6,G__setup_memfuncHQAScaler6);
}
extern "C" void G__cpp_setupQADict(void) {
  G__check_setup_version(30051515,"G__cpp_setupQADict()");
  G__set_cpp_environmentQADict();
  G__cpp_setup_tagtableQADict();

  G__cpp_setup_inheritanceQADict();

  G__cpp_setup_typetableQADict();

  G__cpp_setup_memvarQADict();

  G__cpp_setup_memfuncQADict();
  G__cpp_setup_globalQADict();
  G__cpp_setup_funcQADict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncQADict();
  return;
}
class G__cpp_setup_initQADict {
  public:
    G__cpp_setup_initQADict() { G__add_setup_func("QADict",(G__incsetup)(&G__cpp_setupQADict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initQADict() { G__remove_setup_func("QADict"); }
};
G__cpp_setup_initQADict G__cpp_setup_initializerQADict;

