//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:46:06 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIEventDisplayDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EventDisplayDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HEDTransform_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDTransform(void *p = 0);
   static void *newArray_HEDTransform(Long_t size, void *p);
   static void delete_HEDTransform(void *p);
   static void deleteArray_HEDTransform(void *p);
   static void destruct_HEDTransform(void *p);
   static void streamer_HEDTransform(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDTransform*)
   {
      ::HEDTransform *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDTransform >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDTransform", ::HEDTransform::Class_Version(), "././hedhelpers.h", 35,
                  typeid(::HEDTransform), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDTransform::Dictionary, isa_proxy, 0,
                  sizeof(::HEDTransform) );
      instance.SetNew(&new_HEDTransform);
      instance.SetNewArray(&newArray_HEDTransform);
      instance.SetDelete(&delete_HEDTransform);
      instance.SetDeleteArray(&deleteArray_HEDTransform);
      instance.SetDestructor(&destruct_HEDTransform);
      instance.SetStreamerFunc(&streamer_HEDTransform);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDTransform*)
   {
      return GenerateInitInstanceLocal((::HEDTransform*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDTransform*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDMdcWireManager_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDMdcWireManager(void *p = 0);
   static void *newArray_HEDMdcWireManager(Long_t size, void *p);
   static void delete_HEDMdcWireManager(void *p);
   static void deleteArray_HEDMdcWireManager(void *p);
   static void destruct_HEDMdcWireManager(void *p);
   static void streamer_HEDMdcWireManager(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDMdcWireManager*)
   {
      ::HEDMdcWireManager *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDMdcWireManager >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDMdcWireManager", ::HEDMdcWireManager::Class_Version(), "././hedhelpers.h", 79,
                  typeid(::HEDMdcWireManager), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDMdcWireManager::Dictionary, isa_proxy, 0,
                  sizeof(::HEDMdcWireManager) );
      instance.SetNew(&new_HEDMdcWireManager);
      instance.SetNewArray(&newArray_HEDMdcWireManager);
      instance.SetDelete(&delete_HEDMdcWireManager);
      instance.SetDeleteArray(&deleteArray_HEDMdcWireManager);
      instance.SetDestructor(&destruct_HEDMdcWireManager);
      instance.SetStreamerFunc(&streamer_HEDMdcWireManager);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDMdcWireManager*)
   {
      return GenerateInitInstanceLocal((::HEDMdcWireManager*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDMdcWireManager*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDMakeContainers_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDMakeContainers(void *p = 0);
   static void *newArray_HEDMakeContainers(Long_t size, void *p);
   static void delete_HEDMakeContainers(void *p);
   static void deleteArray_HEDMakeContainers(void *p);
   static void destruct_HEDMakeContainers(void *p);
   static void streamer_HEDMakeContainers(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDMakeContainers*)
   {
      ::HEDMakeContainers *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDMakeContainers >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDMakeContainers", ::HEDMakeContainers::Class_Version(), "././hedhelpers.h", 112,
                  typeid(::HEDMakeContainers), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDMakeContainers::Dictionary, isa_proxy, 0,
                  sizeof(::HEDMakeContainers) );
      instance.SetNew(&new_HEDMakeContainers);
      instance.SetNewArray(&newArray_HEDMakeContainers);
      instance.SetDelete(&delete_HEDMakeContainers);
      instance.SetDeleteArray(&deleteArray_HEDMakeContainers);
      instance.SetDestructor(&destruct_HEDMakeContainers);
      instance.SetStreamerFunc(&streamer_HEDMakeContainers);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDMakeContainers*)
   {
      return GenerateInitInstanceLocal((::HEDMakeContainers*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDMakeContainers*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDVertex(void *p = 0);
   static void *newArray_HEDVertex(Long_t size, void *p);
   static void delete_HEDVertex(void *p);
   static void deleteArray_HEDVertex(void *p);
   static void destruct_HEDVertex(void *p);
   static void streamer_HEDVertex(TBuffer &buf, void *obj);
   static Long64_t merge_HEDVertex(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDVertex*)
   {
      ::HEDVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDVertex", ::HEDVertex::Class_Version(), "././hedhitobjects.h", 33,
                  typeid(::HEDVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDVertex::Dictionary, isa_proxy, 0,
                  sizeof(::HEDVertex) );
      instance.SetNew(&new_HEDVertex);
      instance.SetNewArray(&newArray_HEDVertex);
      instance.SetDelete(&delete_HEDVertex);
      instance.SetDeleteArray(&deleteArray_HEDVertex);
      instance.SetDestructor(&destruct_HEDVertex);
      instance.SetStreamerFunc(&streamer_HEDVertex);
      instance.SetMerge(&merge_HEDVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDVertex*)
   {
      return GenerateInitInstanceLocal((::HEDVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDSegment_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDSegment(void *p = 0);
   static void *newArray_HEDSegment(Long_t size, void *p);
   static void delete_HEDSegment(void *p);
   static void deleteArray_HEDSegment(void *p);
   static void destruct_HEDSegment(void *p);
   static void streamer_HEDSegment(TBuffer &buf, void *obj);
   static Long64_t merge_HEDSegment(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDSegment*)
   {
      ::HEDSegment *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDSegment >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDSegment", ::HEDSegment::Class_Version(), "././hedhitobjects.h", 46,
                  typeid(::HEDSegment), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDSegment::Dictionary, isa_proxy, 0,
                  sizeof(::HEDSegment) );
      instance.SetNew(&new_HEDSegment);
      instance.SetNewArray(&newArray_HEDSegment);
      instance.SetDelete(&delete_HEDSegment);
      instance.SetDeleteArray(&deleteArray_HEDSegment);
      instance.SetDestructor(&destruct_HEDSegment);
      instance.SetStreamerFunc(&streamer_HEDSegment);
      instance.SetMerge(&merge_HEDSegment);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDSegment*)
   {
      return GenerateInitInstanceLocal((::HEDSegment*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDSegment*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDMdcWire_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDMdcWire(void *p = 0);
   static void *newArray_HEDMdcWire(Long_t size, void *p);
   static void delete_HEDMdcWire(void *p);
   static void deleteArray_HEDMdcWire(void *p);
   static void destruct_HEDMdcWire(void *p);
   static void streamer_HEDMdcWire(TBuffer &buf, void *obj);
   static Long64_t merge_HEDMdcWire(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDMdcWire*)
   {
      ::HEDMdcWire *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDMdcWire >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDMdcWire", ::HEDMdcWire::Class_Version(), "././hedhitobjects.h", 59,
                  typeid(::HEDMdcWire), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDMdcWire::Dictionary, isa_proxy, 0,
                  sizeof(::HEDMdcWire) );
      instance.SetNew(&new_HEDMdcWire);
      instance.SetNewArray(&newArray_HEDMdcWire);
      instance.SetDelete(&delete_HEDMdcWire);
      instance.SetDeleteArray(&deleteArray_HEDMdcWire);
      instance.SetDestructor(&destruct_HEDMdcWire);
      instance.SetStreamerFunc(&streamer_HEDMdcWire);
      instance.SetMerge(&merge_HEDMdcWire);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDMdcWire*)
   {
      return GenerateInitInstanceLocal((::HEDMdcWire*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDMdcWire*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRichHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDRichHit(void *p = 0);
   static void *newArray_HEDRichHit(Long_t size, void *p);
   static void delete_HEDRichHit(void *p);
   static void deleteArray_HEDRichHit(void *p);
   static void destruct_HEDRichHit(void *p);
   static void streamer_HEDRichHit(TBuffer &buf, void *obj);
   static Long64_t merge_HEDRichHit(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRichHit*)
   {
      ::HEDRichHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRichHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRichHit", ::HEDRichHit::Class_Version(), "././hedhitobjects.h", 78,
                  typeid(::HEDRichHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRichHit::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRichHit) );
      instance.SetNew(&new_HEDRichHit);
      instance.SetNewArray(&newArray_HEDRichHit);
      instance.SetDelete(&delete_HEDRichHit);
      instance.SetDeleteArray(&deleteArray_HEDRichHit);
      instance.SetDestructor(&destruct_HEDRichHit);
      instance.SetStreamerFunc(&streamer_HEDRichHit);
      instance.SetMerge(&merge_HEDRichHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRichHit*)
   {
      return GenerateInitInstanceLocal((::HEDRichHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRichHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDWallHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDWallHit(void *p = 0);
   static void *newArray_HEDWallHit(Long_t size, void *p);
   static void delete_HEDWallHit(void *p);
   static void deleteArray_HEDWallHit(void *p);
   static void destruct_HEDWallHit(void *p);
   static void streamer_HEDWallHit(TBuffer &buf, void *obj);
   static Long64_t merge_HEDWallHit(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDWallHit*)
   {
      ::HEDWallHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDWallHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDWallHit", ::HEDWallHit::Class_Version(), "././hedhitobjects.h", 91,
                  typeid(::HEDWallHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDWallHit::Dictionary, isa_proxy, 0,
                  sizeof(::HEDWallHit) );
      instance.SetNew(&new_HEDWallHit);
      instance.SetNewArray(&newArray_HEDWallHit);
      instance.SetDelete(&delete_HEDWallHit);
      instance.SetDeleteArray(&deleteArray_HEDWallHit);
      instance.SetDestructor(&destruct_HEDWallHit);
      instance.SetStreamerFunc(&streamer_HEDWallHit);
      instance.SetMerge(&merge_HEDWallHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDWallHit*)
   {
      return GenerateInitInstanceLocal((::HEDWallHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDWallHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDWallPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDWallPlane(void *p = 0);
   static void *newArray_HEDWallPlane(Long_t size, void *p);
   static void delete_HEDWallPlane(void *p);
   static void deleteArray_HEDWallPlane(void *p);
   static void destruct_HEDWallPlane(void *p);
   static void streamer_HEDWallPlane(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDWallPlane*)
   {
      ::HEDWallPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDWallPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDWallPlane", ::HEDWallPlane::Class_Version(), "././hedhitobjects.h", 104,
                  typeid(::HEDWallPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDWallPlane::Dictionary, isa_proxy, 0,
                  sizeof(::HEDWallPlane) );
      instance.SetNew(&new_HEDWallPlane);
      instance.SetNewArray(&newArray_HEDWallPlane);
      instance.SetDelete(&delete_HEDWallPlane);
      instance.SetDeleteArray(&deleteArray_HEDWallPlane);
      instance.SetDestructor(&destruct_HEDWallPlane);
      instance.SetStreamerFunc(&streamer_HEDWallPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDWallPlane*)
   {
      return GenerateInitInstanceLocal((::HEDWallPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDWallPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDTofHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDTofHit(void *p = 0);
   static void *newArray_HEDTofHit(Long_t size, void *p);
   static void delete_HEDTofHit(void *p);
   static void deleteArray_HEDTofHit(void *p);
   static void destruct_HEDTofHit(void *p);
   static void streamer_HEDTofHit(TBuffer &buf, void *obj);
   static Long64_t merge_HEDTofHit(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDTofHit*)
   {
      ::HEDTofHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDTofHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDTofHit", ::HEDTofHit::Class_Version(), "././hedhitobjects.h", 118,
                  typeid(::HEDTofHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDTofHit::Dictionary, isa_proxy, 0,
                  sizeof(::HEDTofHit) );
      instance.SetNew(&new_HEDTofHit);
      instance.SetNewArray(&newArray_HEDTofHit);
      instance.SetDelete(&delete_HEDTofHit);
      instance.SetDeleteArray(&deleteArray_HEDTofHit);
      instance.SetDestructor(&destruct_HEDTofHit);
      instance.SetStreamerFunc(&streamer_HEDTofHit);
      instance.SetMerge(&merge_HEDTofHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDTofHit*)
   {
      return GenerateInitInstanceLocal((::HEDTofHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDTofHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDTofCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDTofCluster(void *p = 0);
   static void *newArray_HEDTofCluster(Long_t size, void *p);
   static void delete_HEDTofCluster(void *p);
   static void deleteArray_HEDTofCluster(void *p);
   static void destruct_HEDTofCluster(void *p);
   static void streamer_HEDTofCluster(TBuffer &buf, void *obj);
   static Long64_t merge_HEDTofCluster(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDTofCluster*)
   {
      ::HEDTofCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDTofCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDTofCluster", ::HEDTofCluster::Class_Version(), "././hedhitobjects.h", 131,
                  typeid(::HEDTofCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDTofCluster::Dictionary, isa_proxy, 0,
                  sizeof(::HEDTofCluster) );
      instance.SetNew(&new_HEDTofCluster);
      instance.SetNewArray(&newArray_HEDTofCluster);
      instance.SetDelete(&delete_HEDTofCluster);
      instance.SetDeleteArray(&deleteArray_HEDTofCluster);
      instance.SetDestructor(&destruct_HEDTofCluster);
      instance.SetStreamerFunc(&streamer_HEDTofCluster);
      instance.SetMerge(&merge_HEDTofCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDTofCluster*)
   {
      return GenerateInitInstanceLocal((::HEDTofCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDTofCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRpcCluster_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDRpcCluster(void *p = 0);
   static void *newArray_HEDRpcCluster(Long_t size, void *p);
   static void delete_HEDRpcCluster(void *p);
   static void deleteArray_HEDRpcCluster(void *p);
   static void destruct_HEDRpcCluster(void *p);
   static void streamer_HEDRpcCluster(TBuffer &buf, void *obj);
   static Long64_t merge_HEDRpcCluster(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRpcCluster*)
   {
      ::HEDRpcCluster *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRpcCluster >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRpcCluster", ::HEDRpcCluster::Class_Version(), "././hedhitobjects.h", 144,
                  typeid(::HEDRpcCluster), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRpcCluster::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRpcCluster) );
      instance.SetNew(&new_HEDRpcCluster);
      instance.SetNewArray(&newArray_HEDRpcCluster);
      instance.SetDelete(&delete_HEDRpcCluster);
      instance.SetDeleteArray(&deleteArray_HEDRpcCluster);
      instance.SetDestructor(&destruct_HEDRpcCluster);
      instance.SetStreamerFunc(&streamer_HEDRpcCluster);
      instance.SetMerge(&merge_HEDRpcCluster);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRpcCluster*)
   {
      return GenerateInitInstanceLocal((::HEDRpcCluster*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRpcCluster*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDShowerHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDShowerHit(void *p = 0);
   static void *newArray_HEDShowerHit(Long_t size, void *p);
   static void delete_HEDShowerHit(void *p);
   static void deleteArray_HEDShowerHit(void *p);
   static void destruct_HEDShowerHit(void *p);
   static void streamer_HEDShowerHit(TBuffer &buf, void *obj);
   static Long64_t merge_HEDShowerHit(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDShowerHit*)
   {
      ::HEDShowerHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDShowerHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDShowerHit", ::HEDShowerHit::Class_Version(), "././hedhitobjects.h", 157,
                  typeid(::HEDShowerHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDShowerHit::Dictionary, isa_proxy, 0,
                  sizeof(::HEDShowerHit) );
      instance.SetNew(&new_HEDShowerHit);
      instance.SetNewArray(&newArray_HEDShowerHit);
      instance.SetDelete(&delete_HEDShowerHit);
      instance.SetDeleteArray(&deleteArray_HEDShowerHit);
      instance.SetDestructor(&destruct_HEDShowerHit);
      instance.SetStreamerFunc(&streamer_HEDShowerHit);
      instance.SetMerge(&merge_HEDShowerHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDShowerHit*)
   {
      return GenerateInitInstanceLocal((::HEDShowerHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDShowerHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDParticleCand_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDParticleCand(void *p = 0);
   static void *newArray_HEDParticleCand(Long_t size, void *p);
   static void delete_HEDParticleCand(void *p);
   static void deleteArray_HEDParticleCand(void *p);
   static void destruct_HEDParticleCand(void *p);
   static void streamer_HEDParticleCand(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDParticleCand*)
   {
      ::HEDParticleCand *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDParticleCand >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDParticleCand", ::HEDParticleCand::Class_Version(), "././hedhitobjects.h", 171,
                  typeid(::HEDParticleCand), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDParticleCand::Dictionary, isa_proxy, 0,
                  sizeof(::HEDParticleCand) );
      instance.SetNew(&new_HEDParticleCand);
      instance.SetNewArray(&newArray_HEDParticleCand);
      instance.SetDelete(&delete_HEDParticleCand);
      instance.SetDeleteArray(&deleteArray_HEDParticleCand);
      instance.SetDestructor(&destruct_HEDParticleCand);
      instance.SetStreamerFunc(&streamer_HEDParticleCand);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDParticleCand*)
   {
      return GenerateInitInstanceLocal((::HEDParticleCand*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDParticleCand*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRichPadPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HEDRichPadPlane(void *p);
   static void deleteArray_HEDRichPadPlane(void *p);
   static void destruct_HEDRichPadPlane(void *p);
   static void streamer_HEDRichPadPlane(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRichPadPlane*)
   {
      ::HEDRichPadPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRichPadPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRichPadPlane", ::HEDRichPadPlane::Class_Version(), "././hedhitobjects.h", 192,
                  typeid(::HEDRichPadPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRichPadPlane::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRichPadPlane) );
      instance.SetDelete(&delete_HEDRichPadPlane);
      instance.SetDeleteArray(&deleteArray_HEDRichPadPlane);
      instance.SetDestructor(&destruct_HEDRichPadPlane);
      instance.SetStreamerFunc(&streamer_HEDRichPadPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRichPadPlane*)
   {
      return GenerateInitInstanceLocal((::HEDRichPadPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRichPadPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRich700PadPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDRich700PadPlane(void *p = 0);
   static void *newArray_HEDRich700PadPlane(Long_t size, void *p);
   static void delete_HEDRich700PadPlane(void *p);
   static void deleteArray_HEDRich700PadPlane(void *p);
   static void destruct_HEDRich700PadPlane(void *p);
   static void streamer_HEDRich700PadPlane(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRich700PadPlane*)
   {
      ::HEDRich700PadPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRich700PadPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRich700PadPlane", ::HEDRich700PadPlane::Class_Version(), "././hedhitobjects.h", 205,
                  typeid(::HEDRich700PadPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRich700PadPlane::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRich700PadPlane) );
      instance.SetNew(&new_HEDRich700PadPlane);
      instance.SetNewArray(&newArray_HEDRich700PadPlane);
      instance.SetDelete(&delete_HEDRich700PadPlane);
      instance.SetDeleteArray(&deleteArray_HEDRich700PadPlane);
      instance.SetDestructor(&destruct_HEDRich700PadPlane);
      instance.SetStreamerFunc(&streamer_HEDRich700PadPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRich700PadPlane*)
   {
      return GenerateInitInstanceLocal((::HEDRich700PadPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRich700PadPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRichRing_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDRichRing(void *p = 0);
   static void *newArray_HEDRichRing(Long_t size, void *p);
   static void delete_HEDRichRing(void *p);
   static void deleteArray_HEDRichRing(void *p);
   static void destruct_HEDRichRing(void *p);
   static void streamer_HEDRichRing(TBuffer &buf, void *obj);
   static Long64_t merge_HEDRichRing(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRichRing*)
   {
      ::HEDRichRing *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRichRing >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRichRing", ::HEDRichRing::Class_Version(), "././hedhitobjects.h", 217,
                  typeid(::HEDRichRing), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRichRing::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRichRing) );
      instance.SetNew(&new_HEDRichRing);
      instance.SetNewArray(&newArray_HEDRichRing);
      instance.SetDelete(&delete_HEDRichRing);
      instance.SetDeleteArray(&deleteArray_HEDRichRing);
      instance.SetDestructor(&destruct_HEDRichRing);
      instance.SetStreamerFunc(&streamer_HEDRichRing);
      instance.SetMerge(&merge_HEDRichRing);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRichRing*)
   {
      return GenerateInitInstanceLocal((::HEDRichRing*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRichRing*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRichHitPadPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDRichHitPadPlane(void *p = 0);
   static void *newArray_HEDRichHitPadPlane(Long_t size, void *p);
   static void delete_HEDRichHitPadPlane(void *p);
   static void deleteArray_HEDRichHitPadPlane(void *p);
   static void destruct_HEDRichHitPadPlane(void *p);
   static void streamer_HEDRichHitPadPlane(TBuffer &buf, void *obj);
   static Long64_t merge_HEDRichHitPadPlane(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRichHitPadPlane*)
   {
      ::HEDRichHitPadPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRichHitPadPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRichHitPadPlane", ::HEDRichHitPadPlane::Class_Version(), "././hedhitobjects.h", 230,
                  typeid(::HEDRichHitPadPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRichHitPadPlane::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRichHitPadPlane) );
      instance.SetNew(&new_HEDRichHitPadPlane);
      instance.SetNewArray(&newArray_HEDRichHitPadPlane);
      instance.SetDelete(&delete_HEDRichHitPadPlane);
      instance.SetDeleteArray(&deleteArray_HEDRichHitPadPlane);
      instance.SetDestructor(&destruct_HEDRichHitPadPlane);
      instance.SetStreamerFunc(&streamer_HEDRichHitPadPlane);
      instance.SetMerge(&merge_HEDRichHitPadPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRichHitPadPlane*)
   {
      return GenerateInitInstanceLocal((::HEDRichHitPadPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRichHitPadPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRichGeantPadPlane_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDRichGeantPadPlane(void *p = 0);
   static void *newArray_HEDRichGeantPadPlane(Long_t size, void *p);
   static void delete_HEDRichGeantPadPlane(void *p);
   static void deleteArray_HEDRichGeantPadPlane(void *p);
   static void destruct_HEDRichGeantPadPlane(void *p);
   static void streamer_HEDRichGeantPadPlane(TBuffer &buf, void *obj);
   static Long64_t merge_HEDRichGeantPadPlane(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRichGeantPadPlane*)
   {
      ::HEDRichGeantPadPlane *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRichGeantPadPlane >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRichGeantPadPlane", ::HEDRichGeantPadPlane::Class_Version(), "././hedhitobjects.h", 242,
                  typeid(::HEDRichGeantPadPlane), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRichGeantPadPlane::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRichGeantPadPlane) );
      instance.SetNew(&new_HEDRichGeantPadPlane);
      instance.SetNewArray(&newArray_HEDRichGeantPadPlane);
      instance.SetDelete(&delete_HEDRichGeantPadPlane);
      instance.SetDeleteArray(&deleteArray_HEDRichGeantPadPlane);
      instance.SetDestructor(&destruct_HEDRichGeantPadPlane);
      instance.SetStreamerFunc(&streamer_HEDRichGeantPadPlane);
      instance.SetMerge(&merge_HEDRichGeantPadPlane);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRichGeantPadPlane*)
   {
      return GenerateInitInstanceLocal((::HEDRichGeantPadPlane*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRichGeantPadPlane*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRichGeantMirror_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HEDRichGeantMirror(void *p);
   static void deleteArray_HEDRichGeantMirror(void *p);
   static void destruct_HEDRichGeantMirror(void *p);
   static void streamer_HEDRichGeantMirror(TBuffer &buf, void *obj);
   static Long64_t merge_HEDRichGeantMirror(void *obj, TCollection *coll,TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRichGeantMirror*)
   {
      ::HEDRichGeantMirror *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRichGeantMirror >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRichGeantMirror", ::HEDRichGeantMirror::Class_Version(), "././hedhitobjects.h", 254,
                  typeid(::HEDRichGeantMirror), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRichGeantMirror::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRichGeantMirror) );
      instance.SetDelete(&delete_HEDRichGeantMirror);
      instance.SetDeleteArray(&deleteArray_HEDRichGeantMirror);
      instance.SetDestructor(&destruct_HEDRichGeantMirror);
      instance.SetStreamerFunc(&streamer_HEDRichGeantMirror);
      instance.SetMerge(&merge_HEDRichGeantMirror);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRichGeantMirror*)
   {
      return GenerateInitInstanceLocal((::HEDRichGeantMirror*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRichGeantMirror*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDRichCompound_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDRichCompound(void *p = 0);
   static void *newArray_HEDRichCompound(Long_t size, void *p);
   static void delete_HEDRichCompound(void *p);
   static void deleteArray_HEDRichCompound(void *p);
   static void destruct_HEDRichCompound(void *p);
   static void streamer_HEDRichCompound(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDRichCompound*)
   {
      ::HEDRichCompound *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDRichCompound >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDRichCompound", ::HEDRichCompound::Class_Version(), "././hedhitobjects.h", 267,
                  typeid(::HEDRichCompound), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDRichCompound::Dictionary, isa_proxy, 0,
                  sizeof(::HEDRichCompound) );
      instance.SetNew(&new_HEDRichCompound);
      instance.SetNewArray(&newArray_HEDRichCompound);
      instance.SetDelete(&delete_HEDRichCompound);
      instance.SetDeleteArray(&deleteArray_HEDRichCompound);
      instance.SetDestructor(&destruct_HEDRichCompound);
      instance.SetStreamerFunc(&streamer_HEDRichCompound);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDRichCompound*)
   {
      return GenerateInitInstanceLocal((::HEDRichCompound*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDRichCompound*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDGroup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDGroup(void *p = 0);
   static void *newArray_HEDGroup(Long_t size, void *p);
   static void delete_HEDGroup(void *p);
   static void deleteArray_HEDGroup(void *p);
   static void destruct_HEDGroup(void *p);
   static void streamer_HEDGroup(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDGroup*)
   {
      ::HEDGroup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDGroup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDGroup", ::HEDGroup::Class_Version(), "././hedhitobjects.h", 300,
                  typeid(::HEDGroup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDGroup::Dictionary, isa_proxy, 0,
                  sizeof(::HEDGroup) );
      instance.SetNew(&new_HEDGroup);
      instance.SetNewArray(&newArray_HEDGroup);
      instance.SetDelete(&delete_HEDGroup);
      instance.SetDeleteArray(&deleteArray_HEDGroup);
      instance.SetDestructor(&destruct_HEDGroup);
      instance.SetStreamerFunc(&streamer_HEDGroup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDGroup*)
   {
      return GenerateInitInstanceLocal((::HEDGroup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDGroup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDGroup2D_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDGroup2D(void *p = 0);
   static void *newArray_HEDGroup2D(Long_t size, void *p);
   static void delete_HEDGroup2D(void *p);
   static void deleteArray_HEDGroup2D(void *p);
   static void destruct_HEDGroup2D(void *p);
   static void streamer_HEDGroup2D(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDGroup2D*)
   {
      ::HEDGroup2D *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDGroup2D >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDGroup2D", ::HEDGroup2D::Class_Version(), "././hedhitobjects.h", 320,
                  typeid(::HEDGroup2D), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDGroup2D::Dictionary, isa_proxy, 0,
                  sizeof(::HEDGroup2D) );
      instance.SetNew(&new_HEDGroup2D);
      instance.SetNewArray(&newArray_HEDGroup2D);
      instance.SetDelete(&delete_HEDGroup2D);
      instance.SetDeleteArray(&deleteArray_HEDGroup2D);
      instance.SetDestructor(&destruct_HEDGroup2D);
      instance.SetStreamerFunc(&streamer_HEDGroup2D);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDGroup2D*)
   {
      return GenerateInitInstanceLocal((::HEDGroup2D*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDGroup2D*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDColorDef_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HEDColorDef(void *p);
   static void deleteArray_HEDColorDef(void *p);
   static void destruct_HEDColorDef(void *p);
   static void streamer_HEDColorDef(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDColorDef*)
   {
      ::HEDColorDef *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDColorDef >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDColorDef", ::HEDColorDef::Class_Version(), "././hedgui.h", 24,
                  typeid(::HEDColorDef), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDColorDef::Dictionary, isa_proxy, 0,
                  sizeof(::HEDColorDef) );
      instance.SetDelete(&delete_HEDColorDef);
      instance.SetDeleteArray(&deleteArray_HEDColorDef);
      instance.SetDestructor(&destruct_HEDColorDef);
      instance.SetStreamerFunc(&streamer_HEDColorDef);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDColorDef*)
   {
      return GenerateInitInstanceLocal((::HEDColorDef*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDColorDef*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDNumberLabeled_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HEDNumberLabeled(void *p);
   static void deleteArray_HEDNumberLabeled(void *p);
   static void destruct_HEDNumberLabeled(void *p);
   static void streamer_HEDNumberLabeled(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDNumberLabeled*)
   {
      ::HEDNumberLabeled *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDNumberLabeled >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDNumberLabeled", ::HEDNumberLabeled::Class_Version(), "././hedgui.h", 129,
                  typeid(::HEDNumberLabeled), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDNumberLabeled::Dictionary, isa_proxy, 0,
                  sizeof(::HEDNumberLabeled) );
      instance.SetDelete(&delete_HEDNumberLabeled);
      instance.SetDeleteArray(&deleteArray_HEDNumberLabeled);
      instance.SetDestructor(&destruct_HEDNumberLabeled);
      instance.SetStreamerFunc(&streamer_HEDNumberLabeled);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDNumberLabeled*)
   {
      return GenerateInitInstanceLocal((::HEDNumberLabeled*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDNumberLabeled*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDSetup_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HEDSetup(void *p);
   static void deleteArray_HEDSetup(void *p);
   static void destruct_HEDSetup(void *p);
   static void streamer_HEDSetup(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDSetup*)
   {
      ::HEDSetup *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDSetup >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDSetup", ::HEDSetup::Class_Version(), "././hedgui.h", 167,
                  typeid(::HEDSetup), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDSetup::Dictionary, isa_proxy, 0,
                  sizeof(::HEDSetup) );
      instance.SetDelete(&delete_HEDSetup);
      instance.SetDeleteArray(&deleteArray_HEDSetup);
      instance.SetDestructor(&destruct_HEDSetup);
      instance.SetStreamerFunc(&streamer_HEDSetup);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDSetup*)
   {
      return GenerateInitInstanceLocal((::HEDSetup*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDSetup*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEDField_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEDField(void *p = 0);
   static void *newArray_HEDField(Long_t size, void *p);
   static void delete_HEDField(void *p);
   static void deleteArray_HEDField(void *p);
   static void destruct_HEDField(void *p);
   static void streamer_HEDField(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEDField*)
   {
      ::HEDField *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEDField >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEDField", ::HEDField::Class_Version(), "././hedfield.h", 30,
                  typeid(::HEDField), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEDField::Dictionary, isa_proxy, 1,
                  sizeof(::HEDField) );
      instance.SetNew(&new_HEDField);
      instance.SetNewArray(&newArray_HEDField);
      instance.SetDelete(&delete_HEDField);
      instance.SetDeleteArray(&deleteArray_HEDField);
      instance.SetDestructor(&destruct_HEDField);
      instance.SetStreamerFunc(&streamer_HEDField);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEDField*)
   {
      return GenerateInitInstanceLocal((::HEDField*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEDField*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HEDTransform::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDTransform::Class_Name()
{
   return "HEDTransform";
}

//______________________________________________________________________________
const char *HEDTransform::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTransform*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDTransform::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTransform*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDTransform::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTransform*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDTransform::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTransform*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDMdcWireManager::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDMdcWireManager::Class_Name()
{
   return "HEDMdcWireManager";
}

//______________________________________________________________________________
const char *HEDMdcWireManager::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWireManager*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDMdcWireManager::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWireManager*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDMdcWireManager::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWireManager*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDMdcWireManager::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWireManager*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDMakeContainers::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDMakeContainers::Class_Name()
{
   return "HEDMakeContainers";
}

//______________________________________________________________________________
const char *HEDMakeContainers::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMakeContainers*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDMakeContainers::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMakeContainers*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDMakeContainers::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMakeContainers*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDMakeContainers::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMakeContainers*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDVertex::Class_Name()
{
   return "HEDVertex";
}

//______________________________________________________________________________
const char *HEDVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDVertex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDSegment::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDSegment::Class_Name()
{
   return "HEDSegment";
}

//______________________________________________________________________________
const char *HEDSegment::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSegment*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDSegment::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSegment*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDSegment::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSegment*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDSegment::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSegment*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDMdcWire::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDMdcWire::Class_Name()
{
   return "HEDMdcWire";
}

//______________________________________________________________________________
const char *HEDMdcWire::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWire*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDMdcWire::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWire*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDMdcWire::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWire*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDMdcWire::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDMdcWire*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRichHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRichHit::Class_Name()
{
   return "HEDRichHit";
}

//______________________________________________________________________________
const char *HEDRichHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRichHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRichHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRichHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDWallHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDWallHit::Class_Name()
{
   return "HEDWallHit";
}

//______________________________________________________________________________
const char *HEDWallHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDWallHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDWallHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDWallHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDWallPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDWallPlane::Class_Name()
{
   return "HEDWallPlane";
}

//______________________________________________________________________________
const char *HEDWallPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDWallPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDWallPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDWallPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDWallPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDTofHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDTofHit::Class_Name()
{
   return "HEDTofHit";
}

//______________________________________________________________________________
const char *HEDTofHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDTofHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDTofHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDTofHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDTofCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDTofCluster::Class_Name()
{
   return "HEDTofCluster";
}

//______________________________________________________________________________
const char *HEDTofCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDTofCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDTofCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDTofCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDTofCluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRpcCluster::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRpcCluster::Class_Name()
{
   return "HEDRpcCluster";
}

//______________________________________________________________________________
const char *HEDRpcCluster::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRpcCluster*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRpcCluster::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRpcCluster*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRpcCluster::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRpcCluster*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRpcCluster::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRpcCluster*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDShowerHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDShowerHit::Class_Name()
{
   return "HEDShowerHit";
}

//______________________________________________________________________________
const char *HEDShowerHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDShowerHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDShowerHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDShowerHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDShowerHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDShowerHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDShowerHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDShowerHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDParticleCand::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDParticleCand::Class_Name()
{
   return "HEDParticleCand";
}

//______________________________________________________________________________
const char *HEDParticleCand::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDParticleCand*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDParticleCand::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDParticleCand*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDParticleCand::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDParticleCand*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDParticleCand::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDParticleCand*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRichPadPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRichPadPlane::Class_Name()
{
   return "HEDRichPadPlane";
}

//______________________________________________________________________________
const char *HEDRichPadPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichPadPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRichPadPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichPadPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRichPadPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichPadPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRichPadPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichPadPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRich700PadPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRich700PadPlane::Class_Name()
{
   return "HEDRich700PadPlane";
}

//______________________________________________________________________________
const char *HEDRich700PadPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRich700PadPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRich700PadPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRich700PadPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRich700PadPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRich700PadPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRich700PadPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRich700PadPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRichRing::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRichRing::Class_Name()
{
   return "HEDRichRing";
}

//______________________________________________________________________________
const char *HEDRichRing::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichRing*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRichRing::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichRing*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRichRing::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichRing*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRichRing::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichRing*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRichHitPadPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRichHitPadPlane::Class_Name()
{
   return "HEDRichHitPadPlane";
}

//______________________________________________________________________________
const char *HEDRichHitPadPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHitPadPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRichHitPadPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHitPadPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRichHitPadPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHitPadPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRichHitPadPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichHitPadPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRichGeantPadPlane::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRichGeantPadPlane::Class_Name()
{
   return "HEDRichGeantPadPlane";
}

//______________________________________________________________________________
const char *HEDRichGeantPadPlane::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantPadPlane*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRichGeantPadPlane::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantPadPlane*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRichGeantPadPlane::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantPadPlane*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRichGeantPadPlane::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantPadPlane*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRichGeantMirror::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRichGeantMirror::Class_Name()
{
   return "HEDRichGeantMirror";
}

//______________________________________________________________________________
const char *HEDRichGeantMirror::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantMirror*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRichGeantMirror::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantMirror*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRichGeantMirror::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantMirror*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRichGeantMirror::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichGeantMirror*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDRichCompound::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDRichCompound::Class_Name()
{
   return "HEDRichCompound";
}

//______________________________________________________________________________
const char *HEDRichCompound::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichCompound*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDRichCompound::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichCompound*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDRichCompound::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichCompound*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDRichCompound::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDRichCompound*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDGroup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDGroup::Class_Name()
{
   return "HEDGroup";
}

//______________________________________________________________________________
const char *HEDGroup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDGroup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDGroup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDGroup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDGroup2D::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDGroup2D::Class_Name()
{
   return "HEDGroup2D";
}

//______________________________________________________________________________
const char *HEDGroup2D::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup2D*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDGroup2D::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup2D*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDGroup2D::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup2D*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDGroup2D::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDGroup2D*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDColorDef::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDColorDef::Class_Name()
{
   return "HEDColorDef";
}

//______________________________________________________________________________
const char *HEDColorDef::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDColorDef*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDColorDef::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDColorDef*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDColorDef::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDColorDef*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDColorDef::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDColorDef*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDNumberLabeled::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDNumberLabeled::Class_Name()
{
   return "HEDNumberLabeled";
}

//______________________________________________________________________________
const char *HEDNumberLabeled::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDNumberLabeled*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDNumberLabeled::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDNumberLabeled*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDNumberLabeled::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDNumberLabeled*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDNumberLabeled::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDNumberLabeled*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDSetup::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDSetup::Class_Name()
{
   return "HEDSetup";
}

//______________________________________________________________________________
const char *HEDSetup::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSetup*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDSetup::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSetup*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDSetup::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSetup*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDSetup::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDSetup*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEDField::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEDField::Class_Name()
{
   return "HEDField";
}

//______________________________________________________________________________
const char *HEDField::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDField*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEDField::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEDField*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEDField::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDField*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEDField::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEDField*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HEDColorDef::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDColorDef.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HEDColorDef::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDColorDef.
      TClass *R__cl = ::HEDColorDef::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volSEC", &volSEC);
      R__insp.InspectMember(volSEC, "volSEC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volRICH", &volRICH);
      R__insp.InspectMember(volRICH, "volRICH.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volMDC", &volMDC);
      R__insp.InspectMember(volMDC, "volMDC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volTOF", &volTOF);
      R__insp.InspectMember(volTOF, "volTOF.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volRPC", &volRPC);
      R__insp.InspectMember(volRPC, "volRPC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volSHOWER", &volSHOWER);
      R__insp.InspectMember(volSHOWER, "volSHOWER.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volWALL", &volWALL);
      R__insp.InspectMember(volWALL, "volWALL.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volCOILS", &volCOILS);
      R__insp.InspectMember(volCOILS, "volCOILS.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "volFRAMES", &volFRAMES);
      R__insp.InspectMember(volFRAMES, "volFRAMES.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nodesMDC", &nodesMDC);
      R__insp.InspectMember(nodesMDC, "nodesMDC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nodesTOF", &nodesTOF);
      R__insp.InspectMember(nodesTOF, "nodesTOF.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nodesRPC", &nodesRPC);
      R__insp.InspectMember(nodesRPC, "nodesRPC.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nodesSHOWER", &nodesSHOWER);
      R__insp.InspectMember(nodesSHOWER, "nodesSHOWER.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nodesWALL", &nodesWALL);
      R__insp.InspectMember(nodesWALL, "nodesWALL.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HEDColorDef(void *p) {
      delete ((::HEDColorDef*)p);
   }
   static void deleteArray_HEDColorDef(void *p) {
      delete [] ((::HEDColorDef*)p);
   }
   static void destruct_HEDColorDef(void *p) {
      typedef ::HEDColorDef current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDColorDef(TBuffer &buf, void *obj) {
      ((::HEDColorDef*)obj)->::HEDColorDef::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDColorDef

//______________________________________________________________________________
void HEDTransform::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDTransform.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HEDTransform::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDTransform.
      TClass *R__cl = ::HEDTransform::IsA();
      if (R__cl || R__insp.IsA()) { }
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDTransform(void *p) {
      return  p ? new(p) ::HEDTransform : new ::HEDTransform;
   }
   static void *newArray_HEDTransform(Long_t nElements, void *p) {
      return p ? new(p) ::HEDTransform[nElements] : new ::HEDTransform[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDTransform(void *p) {
      delete ((::HEDTransform*)p);
   }
   static void deleteArray_HEDTransform(void *p) {
      delete [] ((::HEDTransform*)p);
   }
   static void destruct_HEDTransform(void *p) {
      typedef ::HEDTransform current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDTransform(TBuffer &buf, void *obj) {
      ((::HEDTransform*)obj)->::HEDTransform::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDTransform

//______________________________________________________________________________
void HEDMdcWireManager::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDMdcWireManager.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HEDMdcWireManager::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDMdcWireManager.
      TClass *R__cl = ::HEDMdcWireManager::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wires[6][4][6][220]", wires);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDMdcWireManager(void *p) {
      return  p ? new(p) ::HEDMdcWireManager : new ::HEDMdcWireManager;
   }
   static void *newArray_HEDMdcWireManager(Long_t nElements, void *p) {
      return p ? new(p) ::HEDMdcWireManager[nElements] : new ::HEDMdcWireManager[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDMdcWireManager(void *p) {
      delete ((::HEDMdcWireManager*)p);
   }
   static void deleteArray_HEDMdcWireManager(void *p) {
      delete [] ((::HEDMdcWireManager*)p);
   }
   static void destruct_HEDMdcWireManager(void *p) {
      typedef ::HEDMdcWireManager current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDMdcWireManager(TBuffer &buf, void *obj) {
      ((::HEDMdcWireManager*)obj)->::HEDMdcWireManager::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDMdcWireManager

//______________________________________________________________________________
void HEDMakeContainers::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDMakeContainers.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HEDMakeContainers::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDMakeContainers.
      TClass *R__cl = ::HEDMakeContainers::IsA();
      if (R__cl || R__insp.IsA()) { }
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDMakeContainers(void *p) {
      return  p ? new(p) ::HEDMakeContainers : new ::HEDMakeContainers;
   }
   static void *newArray_HEDMakeContainers(Long_t nElements, void *p) {
      return p ? new(p) ::HEDMakeContainers[nElements] : new ::HEDMakeContainers[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDMakeContainers(void *p) {
      delete ((::HEDMakeContainers*)p);
   }
   static void deleteArray_HEDMakeContainers(void *p) {
      delete [] ((::HEDMakeContainers*)p);
   }
   static void destruct_HEDMakeContainers(void *p) {
      typedef ::HEDMakeContainers current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDMakeContainers(TBuffer &buf, void *obj) {
      ((::HEDMakeContainers*)obj)->::HEDMakeContainers::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDMakeContainers

//______________________________________________________________________________
void HEDField::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDField.
      TClass *R__cl = ::HEDField::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfz", &nfz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfr", &nfr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfp", &nfp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zflmin", &zflmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zflmax", &zflmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zfldel", &zfldel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rflmin", &rflmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rflmax", &rflmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rfldel", &rfldel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pflmin", &pflmin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pflmax", &pflmax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pfldel", &pfldel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fpol", &fpol);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_tzfl", &p_tzfl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_trfl", &p_trfl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_tpfl", &p_tpfl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "step1z", &step1z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "step1r", &step1r);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "step1p", &step1p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dconv", &dconv);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nfz_nfr", &nfz_nfr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "one_sixtyth", &one_sixtyth);
      TNamed::ShowMembers(R__insp);
      TEveMagField::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDField(void *p) {
      return  p ? new(p) ::HEDField : new ::HEDField;
   }
   static void *newArray_HEDField(Long_t nElements, void *p) {
      return p ? new(p) ::HEDField[nElements] : new ::HEDField[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDField(void *p) {
      delete ((::HEDField*)p);
   }
   static void deleteArray_HEDField(void *p) {
      delete [] ((::HEDField*)p);
   }
   static void destruct_HEDField(void *p) {
      typedef ::HEDField current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDField(TBuffer &buf, void *obj) {
      ((::HEDField*)obj)->::HEDField::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDField

//______________________________________________________________________________
void HEDVertex::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDVertex.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDVertex.
      TClass *R__cl = ::HEDVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDVertex(void *p) {
      return  p ? new(p) ::HEDVertex : new ::HEDVertex;
   }
   static void *newArray_HEDVertex(Long_t nElements, void *p) {
      return p ? new(p) ::HEDVertex[nElements] : new ::HEDVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDVertex(void *p) {
      delete ((::HEDVertex*)p);
   }
   static void deleteArray_HEDVertex(void *p) {
      delete [] ((::HEDVertex*)p);
   }
   static void destruct_HEDVertex(void *p) {
      typedef ::HEDVertex current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDVertex(TBuffer &buf, void *obj) {
      ((::HEDVertex*)obj)->::HEDVertex::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDVertex(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDVertex*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDVertex

//______________________________________________________________________________
void HEDSegment::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDSegment.

   TEveLine::Streamer(R__b);
}

//______________________________________________________________________________
void HEDSegment::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDSegment.
      TClass *R__cl = ::HEDSegment::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEveLine::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDSegment(void *p) {
      return  p ? new(p) ::HEDSegment : new ::HEDSegment;
   }
   static void *newArray_HEDSegment(Long_t nElements, void *p) {
      return p ? new(p) ::HEDSegment[nElements] : new ::HEDSegment[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDSegment(void *p) {
      delete ((::HEDSegment*)p);
   }
   static void deleteArray_HEDSegment(void *p) {
      delete [] ((::HEDSegment*)p);
   }
   static void destruct_HEDSegment(void *p) {
      typedef ::HEDSegment current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDSegment(TBuffer &buf, void *obj) {
      ((::HEDSegment*)obj)->::HEDSegment::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDSegment(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDSegment*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDSegment

//______________________________________________________________________________
void HEDMdcWire::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDMdcWire.

   TEveLine::Streamer(R__b);
}

//______________________________________________________________________________
void HEDMdcWire::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDMdcWire.
      TClass *R__cl = ::HEDMdcWire::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTimes", &nTimes);
      TEveLine::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDMdcWire(void *p) {
      return  p ? new(p) ::HEDMdcWire : new ::HEDMdcWire;
   }
   static void *newArray_HEDMdcWire(Long_t nElements, void *p) {
      return p ? new(p) ::HEDMdcWire[nElements] : new ::HEDMdcWire[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDMdcWire(void *p) {
      delete ((::HEDMdcWire*)p);
   }
   static void deleteArray_HEDMdcWire(void *p) {
      delete [] ((::HEDMdcWire*)p);
   }
   static void destruct_HEDMdcWire(void *p) {
      typedef ::HEDMdcWire current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDMdcWire(TBuffer &buf, void *obj) {
      ((::HEDMdcWire*)obj)->::HEDMdcWire::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDMdcWire(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDMdcWire*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDMdcWire

//______________________________________________________________________________
void HEDRichHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRichHit.

   TEveLine::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRichHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRichHit.
      TClass *R__cl = ::HEDRichHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEveLine::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDRichHit(void *p) {
      return  p ? new(p) ::HEDRichHit : new ::HEDRichHit;
   }
   static void *newArray_HEDRichHit(Long_t nElements, void *p) {
      return p ? new(p) ::HEDRichHit[nElements] : new ::HEDRichHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDRichHit(void *p) {
      delete ((::HEDRichHit*)p);
   }
   static void deleteArray_HEDRichHit(void *p) {
      delete [] ((::HEDRichHit*)p);
   }
   static void destruct_HEDRichHit(void *p) {
      typedef ::HEDRichHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRichHit(TBuffer &buf, void *obj) {
      ((::HEDRichHit*)obj)->::HEDRichHit::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDRichHit(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDRichHit*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDRichHit

//______________________________________________________________________________
void HEDWallHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDWallHit.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDWallHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDWallHit.
      TClass *R__cl = ::HEDWallHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDWallHit(void *p) {
      return  p ? new(p) ::HEDWallHit : new ::HEDWallHit;
   }
   static void *newArray_HEDWallHit(Long_t nElements, void *p) {
      return p ? new(p) ::HEDWallHit[nElements] : new ::HEDWallHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDWallHit(void *p) {
      delete ((::HEDWallHit*)p);
   }
   static void deleteArray_HEDWallHit(void *p) {
      delete [] ((::HEDWallHit*)p);
   }
   static void destruct_HEDWallHit(void *p) {
      typedef ::HEDWallHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDWallHit(TBuffer &buf, void *obj) {
      ((::HEDWallHit*)obj)->::HEDWallHit::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDWallHit(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDWallHit*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDWallHit

//______________________________________________________________________________
void HEDWallPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDWallPlane.

   TEveQuadSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDWallPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDWallPlane.
      TClass *R__cl = ::HEDWallPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*box", &box);
      TEveQuadSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDWallPlane(void *p) {
      return  p ? new(p) ::HEDWallPlane : new ::HEDWallPlane;
   }
   static void *newArray_HEDWallPlane(Long_t nElements, void *p) {
      return p ? new(p) ::HEDWallPlane[nElements] : new ::HEDWallPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDWallPlane(void *p) {
      delete ((::HEDWallPlane*)p);
   }
   static void deleteArray_HEDWallPlane(void *p) {
      delete [] ((::HEDWallPlane*)p);
   }
   static void destruct_HEDWallPlane(void *p) {
      typedef ::HEDWallPlane current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDWallPlane(TBuffer &buf, void *obj) {
      ((::HEDWallPlane*)obj)->::HEDWallPlane::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDWallPlane

//______________________________________________________________________________
void HEDTofHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDTofHit.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDTofHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDTofHit.
      TClass *R__cl = ::HEDTofHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDTofHit(void *p) {
      return  p ? new(p) ::HEDTofHit : new ::HEDTofHit;
   }
   static void *newArray_HEDTofHit(Long_t nElements, void *p) {
      return p ? new(p) ::HEDTofHit[nElements] : new ::HEDTofHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDTofHit(void *p) {
      delete ((::HEDTofHit*)p);
   }
   static void deleteArray_HEDTofHit(void *p) {
      delete [] ((::HEDTofHit*)p);
   }
   static void destruct_HEDTofHit(void *p) {
      typedef ::HEDTofHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDTofHit(TBuffer &buf, void *obj) {
      ((::HEDTofHit*)obj)->::HEDTofHit::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDTofHit(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDTofHit*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDTofHit

//______________________________________________________________________________
void HEDTofCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDTofCluster.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDTofCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDTofCluster.
      TClass *R__cl = ::HEDTofCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDTofCluster(void *p) {
      return  p ? new(p) ::HEDTofCluster : new ::HEDTofCluster;
   }
   static void *newArray_HEDTofCluster(Long_t nElements, void *p) {
      return p ? new(p) ::HEDTofCluster[nElements] : new ::HEDTofCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDTofCluster(void *p) {
      delete ((::HEDTofCluster*)p);
   }
   static void deleteArray_HEDTofCluster(void *p) {
      delete [] ((::HEDTofCluster*)p);
   }
   static void destruct_HEDTofCluster(void *p) {
      typedef ::HEDTofCluster current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDTofCluster(TBuffer &buf, void *obj) {
      ((::HEDTofCluster*)obj)->::HEDTofCluster::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDTofCluster(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDTofCluster*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDTofCluster

//______________________________________________________________________________
void HEDRpcCluster::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRpcCluster.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRpcCluster::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRpcCluster.
      TClass *R__cl = ::HEDRpcCluster::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDRpcCluster(void *p) {
      return  p ? new(p) ::HEDRpcCluster : new ::HEDRpcCluster;
   }
   static void *newArray_HEDRpcCluster(Long_t nElements, void *p) {
      return p ? new(p) ::HEDRpcCluster[nElements] : new ::HEDRpcCluster[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDRpcCluster(void *p) {
      delete ((::HEDRpcCluster*)p);
   }
   static void deleteArray_HEDRpcCluster(void *p) {
      delete [] ((::HEDRpcCluster*)p);
   }
   static void destruct_HEDRpcCluster(void *p) {
      typedef ::HEDRpcCluster current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRpcCluster(TBuffer &buf, void *obj) {
      ((::HEDRpcCluster*)obj)->::HEDRpcCluster::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDRpcCluster(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDRpcCluster*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDRpcCluster

//______________________________________________________________________________
void HEDShowerHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDShowerHit.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDShowerHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDShowerHit.
      TClass *R__cl = ::HEDShowerHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDShowerHit(void *p) {
      return  p ? new(p) ::HEDShowerHit : new ::HEDShowerHit;
   }
   static void *newArray_HEDShowerHit(Long_t nElements, void *p) {
      return p ? new(p) ::HEDShowerHit[nElements] : new ::HEDShowerHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDShowerHit(void *p) {
      delete ((::HEDShowerHit*)p);
   }
   static void deleteArray_HEDShowerHit(void *p) {
      delete [] ((::HEDShowerHit*)p);
   }
   static void destruct_HEDShowerHit(void *p) {
      typedef ::HEDShowerHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDShowerHit(TBuffer &buf, void *obj) {
      ((::HEDShowerHit*)obj)->::HEDShowerHit::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDShowerHit(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDShowerHit*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDShowerHit

//______________________________________________________________________________
void HEDParticleCand::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDParticleCand.

   TEveCompound::Streamer(R__b);
}

//______________________________________________________________________________
void HEDParticleCand::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDParticleCand.
      TClass *R__cl = ::HEDParticleCand::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEveCompound::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDParticleCand(void *p) {
      return  p ? new(p) ::HEDParticleCand : new ::HEDParticleCand;
   }
   static void *newArray_HEDParticleCand(Long_t nElements, void *p) {
      return p ? new(p) ::HEDParticleCand[nElements] : new ::HEDParticleCand[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDParticleCand(void *p) {
      delete ((::HEDParticleCand*)p);
   }
   static void deleteArray_HEDParticleCand(void *p) {
      delete [] ((::HEDParticleCand*)p);
   }
   static void destruct_HEDParticleCand(void *p) {
      typedef ::HEDParticleCand current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDParticleCand(TBuffer &buf, void *obj) {
      ((::HEDParticleCand*)obj)->::HEDParticleCand::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDParticleCand

//______________________________________________________________________________
void HEDRichPadPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRichPadPlane.

   TEveQuadSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRichPadPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRichPadPlane.
      TClass *R__cl = ::HEDRichPadPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*box", &box);
      TEveQuadSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HEDRichPadPlane(void *p) {
      delete ((::HEDRichPadPlane*)p);
   }
   static void deleteArray_HEDRichPadPlane(void *p) {
      delete [] ((::HEDRichPadPlane*)p);
   }
   static void destruct_HEDRichPadPlane(void *p) {
      typedef ::HEDRichPadPlane current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRichPadPlane(TBuffer &buf, void *obj) {
      ((::HEDRichPadPlane*)obj)->::HEDRichPadPlane::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDRichPadPlane

//______________________________________________________________________________
void HEDRich700PadPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRich700PadPlane.

   TEveQuadSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRich700PadPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRich700PadPlane.
      TClass *R__cl = ::HEDRich700PadPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEveQuadSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDRich700PadPlane(void *p) {
      return  p ? new(p) ::HEDRich700PadPlane : new ::HEDRich700PadPlane;
   }
   static void *newArray_HEDRich700PadPlane(Long_t nElements, void *p) {
      return p ? new(p) ::HEDRich700PadPlane[nElements] : new ::HEDRich700PadPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDRich700PadPlane(void *p) {
      delete ((::HEDRich700PadPlane*)p);
   }
   static void deleteArray_HEDRich700PadPlane(void *p) {
      delete [] ((::HEDRich700PadPlane*)p);
   }
   static void destruct_HEDRich700PadPlane(void *p) {
      typedef ::HEDRich700PadPlane current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRich700PadPlane(TBuffer &buf, void *obj) {
      ((::HEDRich700PadPlane*)obj)->::HEDRich700PadPlane::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDRich700PadPlane

//______________________________________________________________________________
void HEDRichRing::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRichRing.

   TEveLine::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRichRing::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRichRing.
      TClass *R__cl = ::HEDRichRing::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEveLine::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDRichRing(void *p) {
      return  p ? new(p) ::HEDRichRing : new ::HEDRichRing;
   }
   static void *newArray_HEDRichRing(Long_t nElements, void *p) {
      return p ? new(p) ::HEDRichRing[nElements] : new ::HEDRichRing[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDRichRing(void *p) {
      delete ((::HEDRichRing*)p);
   }
   static void deleteArray_HEDRichRing(void *p) {
      delete [] ((::HEDRichRing*)p);
   }
   static void destruct_HEDRichRing(void *p) {
      typedef ::HEDRichRing current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRichRing(TBuffer &buf, void *obj) {
      ((::HEDRichRing*)obj)->::HEDRichRing::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDRichRing(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDRichRing*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDRichRing

//______________________________________________________________________________
void HEDRichHitPadPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRichHitPadPlane.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRichHitPadPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRichHitPadPlane.
      TClass *R__cl = ::HEDRichHitPadPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDRichHitPadPlane(void *p) {
      return  p ? new(p) ::HEDRichHitPadPlane : new ::HEDRichHitPadPlane;
   }
   static void *newArray_HEDRichHitPadPlane(Long_t nElements, void *p) {
      return p ? new(p) ::HEDRichHitPadPlane[nElements] : new ::HEDRichHitPadPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDRichHitPadPlane(void *p) {
      delete ((::HEDRichHitPadPlane*)p);
   }
   static void deleteArray_HEDRichHitPadPlane(void *p) {
      delete [] ((::HEDRichHitPadPlane*)p);
   }
   static void destruct_HEDRichHitPadPlane(void *p) {
      typedef ::HEDRichHitPadPlane current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRichHitPadPlane(TBuffer &buf, void *obj) {
      ((::HEDRichHitPadPlane*)obj)->::HEDRichHitPadPlane::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDRichHitPadPlane(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDRichHitPadPlane*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDRichHitPadPlane

//______________________________________________________________________________
void HEDRichGeantPadPlane::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRichGeantPadPlane.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRichGeantPadPlane::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRichGeantPadPlane.
      TClass *R__cl = ::HEDRichGeantPadPlane::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDRichGeantPadPlane(void *p) {
      return  p ? new(p) ::HEDRichGeantPadPlane : new ::HEDRichGeantPadPlane;
   }
   static void *newArray_HEDRichGeantPadPlane(Long_t nElements, void *p) {
      return p ? new(p) ::HEDRichGeantPadPlane[nElements] : new ::HEDRichGeantPadPlane[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDRichGeantPadPlane(void *p) {
      delete ((::HEDRichGeantPadPlane*)p);
   }
   static void deleteArray_HEDRichGeantPadPlane(void *p) {
      delete [] ((::HEDRichGeantPadPlane*)p);
   }
   static void destruct_HEDRichGeantPadPlane(void *p) {
      typedef ::HEDRichGeantPadPlane current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRichGeantPadPlane(TBuffer &buf, void *obj) {
      ((::HEDRichGeantPadPlane*)obj)->::HEDRichGeantPadPlane::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDRichGeantPadPlane(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDRichGeantPadPlane*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDRichGeantPadPlane

//______________________________________________________________________________
void HEDRichGeantMirror::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRichGeantMirror.

   TEvePointSet::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRichGeantMirror::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRichGeantMirror.
      TClass *R__cl = ::HEDRichGeantMirror::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEvePointSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HEDRichGeantMirror(void *p) {
      delete ((::HEDRichGeantMirror*)p);
   }
   static void deleteArray_HEDRichGeantMirror(void *p) {
      delete [] ((::HEDRichGeantMirror*)p);
   }
   static void destruct_HEDRichGeantMirror(void *p) {
      typedef ::HEDRichGeantMirror current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRichGeantMirror(TBuffer &buf, void *obj) {
      ((::HEDRichGeantMirror*)obj)->::HEDRichGeantMirror::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t  merge_HEDRichGeantMirror(void *obj,TCollection *coll,TFileMergeInfo *) {
      return ((::HEDRichGeantMirror*)obj)->Merge(coll);
   }
} // end of namespace ROOTDict for class ::HEDRichGeantMirror

//______________________________________________________________________________
void HEDRichCompound::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDRichCompound.

   TEveCompound::Streamer(R__b);
}

//______________________________________________________________________________
void HEDRichCompound::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDRichCompound.
      TClass *R__cl = ::HEDRichCompound::IsA();
      if (R__cl || R__insp.IsA()) { }
      TEveCompound::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDRichCompound(void *p) {
      return  p ? new(p) ::HEDRichCompound : new ::HEDRichCompound;
   }
   static void *newArray_HEDRichCompound(Long_t nElements, void *p) {
      return p ? new(p) ::HEDRichCompound[nElements] : new ::HEDRichCompound[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDRichCompound(void *p) {
      delete ((::HEDRichCompound*)p);
   }
   static void deleteArray_HEDRichCompound(void *p) {
      delete [] ((::HEDRichCompound*)p);
   }
   static void destruct_HEDRichCompound(void *p) {
      typedef ::HEDRichCompound current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDRichCompound(TBuffer &buf, void *obj) {
      ((::HEDRichCompound*)obj)->::HEDRichCompound::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDRichCompound

//______________________________________________________________________________
void HEDGroup::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDGroup.

   TEveElementList::Streamer(R__b);
}

//______________________________________________________________________________
void HEDGroup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDGroup.
      TClass *R__cl = ::HEDGroup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size", &size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*list", &list);
      TEveElementList::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDGroup(void *p) {
      return  p ? new(p) ::HEDGroup : new ::HEDGroup;
   }
   static void *newArray_HEDGroup(Long_t nElements, void *p) {
      return p ? new(p) ::HEDGroup[nElements] : new ::HEDGroup[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDGroup(void *p) {
      delete ((::HEDGroup*)p);
   }
   static void deleteArray_HEDGroup(void *p) {
      delete [] ((::HEDGroup*)p);
   }
   static void destruct_HEDGroup(void *p) {
      typedef ::HEDGroup current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDGroup(TBuffer &buf, void *obj) {
      ((::HEDGroup*)obj)->::HEDGroup::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDGroup

//______________________________________________________________________________
void HEDGroup2D::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDGroup2D.

   TEveElementList::Streamer(R__b);
}

//______________________________________________________________________________
void HEDGroup2D::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDGroup2D.
      TClass *R__cl = ::HEDGroup2D::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size1", &size1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size2", &size2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*list1", &list1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*list2", &list2);
      TEveElementList::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEDGroup2D(void *p) {
      return  p ? new(p) ::HEDGroup2D : new ::HEDGroup2D;
   }
   static void *newArray_HEDGroup2D(Long_t nElements, void *p) {
      return p ? new(p) ::HEDGroup2D[nElements] : new ::HEDGroup2D[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEDGroup2D(void *p) {
      delete ((::HEDGroup2D*)p);
   }
   static void deleteArray_HEDGroup2D(void *p) {
      delete [] ((::HEDGroup2D*)p);
   }
   static void destruct_HEDGroup2D(void *p) {
      typedef ::HEDGroup2D current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDGroup2D(TBuffer &buf, void *obj) {
      ((::HEDGroup2D*)obj)->::HEDGroup2D::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDGroup2D

//______________________________________________________________________________
void HEDNumberLabeled::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDNumberLabeled.

   TGHorizontalFrame::Streamer(R__b);
}

//______________________________________________________________________________
void HEDNumberLabeled::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDNumberLabeled.
      TClass *R__cl = ::HEDNumberLabeled::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fEntry", &fEntry);
      TGHorizontalFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HEDNumberLabeled(void *p) {
      delete ((::HEDNumberLabeled*)p);
   }
   static void deleteArray_HEDNumberLabeled(void *p) {
      delete [] ((::HEDNumberLabeled*)p);
   }
   static void destruct_HEDNumberLabeled(void *p) {
      typedef ::HEDNumberLabeled current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDNumberLabeled(TBuffer &buf, void *obj) {
      ((::HEDNumberLabeled*)obj)->::HEDNumberLabeled::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDNumberLabeled

//______________________________________________________________________________
void HEDSetup::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEDSetup.

   TGMainFrame::Streamer(R__b);
}

//______________________________________________________________________________
void HEDSetup::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEDSetup.
      TClass *R__cl = ::HEDSetup::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckSector[6]", &fCheckSector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckFRAMES", &fCheckFRAMES);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckCOILS", &fCheckCOILS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckRICH", &fCheckRICH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckMDC[4]", &fCheckMDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckTOF", &fCheckTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckRPC", &fCheckRPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckSHOWER", &fCheckSHOWER);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckWALL", &fCheckWALL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNext", &fNext);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextLoop", &fNextLoop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fRedraw", &fRedraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckTimed", &fCheckTimed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNumberLoopTime", &fNumberLoopTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckMDCMod[6][4]", &fCheckMDCMod);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckTOFSec[6]", &fCheckTOFSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckRPCSec[6]", &fCheckRPCSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCheckSHOWERSec[6]", &fCheckSHOWERSec);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IDs", (void*)&IDs);
      R__insp.InspectMember("HEDIDList", (void*)&IDs, "IDs.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colFRAMES", &colFRAMES);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colCOILS", &colCOILS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colRICH", &colRICH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colMDC[4]", &colMDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colTOF", &colTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colRPC", &colRPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colSHOWER", &colSHOWER);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*colWALL", &colWALL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transFRAMES", &transFRAMES);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transCOILS", &transCOILS);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transRICH", &transRICH);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transMDC[4]", &transMDC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transTOF", &transTOF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transRPC", &transRPC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transSHOWER", &transSHOWER);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*transWALL", &transWALL);
      TGMainFrame::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HEDSetup(void *p) {
      delete ((::HEDSetup*)p);
   }
   static void deleteArray_HEDSetup(void *p) {
      delete [] ((::HEDSetup*)p);
   }
   static void destruct_HEDSetup(void *p) {
      typedef ::HEDSetup current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEDSetup(TBuffer &buf, void *obj) {
      ((::HEDSetup*)obj)->::HEDSetup::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEDSetup

/********************************************************
* ../build/pc/EventDisplayDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableEventDisplayDict();

extern "C" void G__set_cpp_environmentEventDisplayDict() {
  G__cpp_reset_tagtableEventDisplayDict();
}
#include <new>
extern "C" int G__cpp_dllrevEventDisplayDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HEDTransform */
static int G__EventDisplayDict_218_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      HEDTransform::setIsNewRich((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      HEDTransform::setIsNewRich();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::isNewRich());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) HEDTransform::calcPhiToLab((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDTransform::setRichSecTrans((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDTransform::setRichMirrorTrans((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::getRichSecTrans());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::getRichMirrorTrans());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDTransform::setRichMirror((TGeoSphere*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::getRichMirror());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcSegPointsLab((HMdcSeg*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref
, *(HGeomVector*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcWirePointsLab((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, *(HGeomVector*) libp->para[4].ref, *(HGeomVector*) libp->para[5].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcSegKickPlanePointLab((HMdcSeg*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcWallHitPointLab((HWallHit*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcTofHitPointLab((HTofHit*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcShowerHitPointLab((HShowerHit*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcRpcClustPointLab((HRpcCluster*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcVertexPoint(*(HGeomVector*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) HEDTransform::calcRichLinePointLab((HRichHit*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref
, *(HGeomVector*) libp->para[2].ref, (HParticleCand*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) HEDTransform::calcRichLinePointLab((HRichHit*) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref
, *(HGeomVector*) libp->para[2].ref));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcRichPadPlaneToLab((Int_t) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref
, *(HGeomTransform*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::calcRichSectorFrame((Int_t) G__int(libp->para[0]), *(HGeomTransform*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::calcWallFrame());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcWallCell((HWallHit*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcRichPadSector((HRichCal*) G__int(libp->para[0]), *(HGeomTransform*) libp->para[1].ref
, (Float_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcRichMirrorHit(*(HGeomVector*) libp->para[0].ref, *(HGeomVector*) libp->para[1].ref
, *(HGeomVector*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::createParticle(
(Int_t) G__int(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3])
, (Double_t) G__double(libp->para[4]), (Double_t) G__double(libp->para[5])
, (Double_t) G__double(libp->para[6]), (TEveTrackPropagator*) G__int(libp->para[7])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::createKineParticle((HGeantKine*) G__int(libp->para[0]), (TEveTrackPropagator*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcRichGeantPadplanePointLab((Int_t) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcMdcGeantLayerPointLab((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(HGeomVector*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcWallGeantPointLab((Int_t) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcTofGeantPointLab((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), *(HGeomVector*) libp->para[3].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcRpcGeantPointLab((Int_t) G__int(libp->para[0]), *(HGeomVector*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HEDTransform::calcShowerGeantPointLab((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, *(HGeomVector*) libp->para[2].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTransform::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTransform::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDTransform::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDTransform::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDTransform*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTransform::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDTransform::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTransform::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_218_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDTransform::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic default constructor
static int G__EventDisplayDict_218_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDTransform *p;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDTransform[n];
     } else {
       p = new((void*) gvp) HEDTransform[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDTransform;
     } else {
       p = new((void*) gvp) HEDTransform;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDisplayDict_218_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HEDTransform* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HEDTransform(*(HEDTransform*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDTransform G__THEDTransform;
static int G__EventDisplayDict_218_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDTransform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDTransform*) (soff+(sizeof(HEDTransform)*i)))->~G__THEDTransform();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDTransform*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDTransform*) (soff))->~G__THEDTransform();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDisplayDict_218_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDTransform* dest = (HEDTransform*) G__getstructoffset();
   *dest = *(HEDTransform*) libp->para[0].ref;
   const HEDTransform& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDMdcWireManager */
static int G__EventDisplayDict_219_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDMdcWireManager* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDMdcWireManager[n];
     } else {
       p = new((void*) gvp) HEDMdcWireManager[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDMdcWireManager;
     } else {
       p = new((void*) gvp) HEDMdcWireManager;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEDMdcWireManager*) G__getstructoffset())->fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEDMdcWireManager*) G__getstructoffset())->isUsedNtimes((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDMdcWireManager*) G__getstructoffset())->getAddress(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEDMdcWireManager*) G__getstructoffset())->setAddress((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDMdcWireManager::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMdcWireManager::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDMdcWireManager::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDMdcWireManager::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDMdcWireManager*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMdcWireManager::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDMdcWireManager::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMdcWireManager::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_219_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDMdcWireManager::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDisplayDict_219_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HEDMdcWireManager* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HEDMdcWireManager(*(HEDMdcWireManager*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDMdcWireManager G__THEDMdcWireManager;
static int G__EventDisplayDict_219_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDMdcWireManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDMdcWireManager*) (soff+(sizeof(HEDMdcWireManager)*i)))->~G__THEDMdcWireManager();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDMdcWireManager*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDMdcWireManager*) (soff))->~G__THEDMdcWireManager();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDisplayDict_219_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDMdcWireManager* dest = (HEDMdcWireManager*) G__getstructoffset();
   *dest = *(HEDMdcWireManager*) libp->para[0].ref;
   const HEDMdcWireManager& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDMakeContainers */
static int G__EventDisplayDict_220_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDMakeContainers* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDMakeContainers((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEDMakeContainers((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDMakeContainers((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDMakeContainers((const Text_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDMakeContainers[n];
       } else {
         p = new((void*) gvp) HEDMakeContainers[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDMakeContainers;
       } else {
         p = new((void*) gvp) HEDMakeContainers;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDMakeContainers::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMakeContainers::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDMakeContainers::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDMakeContainers::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDMakeContainers*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMakeContainers::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDMakeContainers::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMakeContainers::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_220_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDMakeContainers::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDMakeContainers G__THEDMakeContainers;
static int G__EventDisplayDict_220_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDMakeContainers*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDMakeContainers*) (soff+(sizeof(HEDMakeContainers)*i)))->~G__THEDMakeContainers();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDMakeContainers*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDMakeContainers*) (soff))->~G__THEDMakeContainers();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDVertex */
static int G__EventDisplayDict_713_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDVertex[n];
     } else {
       p = new((void*) gvp) HEDVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDVertex;
     } else {
       p = new((void*) gvp) HEDVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDVertex*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_713_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDVertex G__THEDVertex;
static int G__EventDisplayDict_713_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDVertex*) (soff+(sizeof(HEDVertex)*i)))->~G__THEDVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDVertex*) (soff))->~G__THEDVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDSegment */
static int G__EventDisplayDict_714_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDSegment* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDSegment((HMdcSegSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDSegment((HMdcSegSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDSegment[n];
       } else {
         p = new((void*) gvp) HEDSegment[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDSegment;
       } else {
         p = new((void*) gvp) HEDSegment;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDSegment*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDSegment::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDSegment::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDSegment::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDSegment::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDSegment*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDSegment::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDSegment::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDSegment::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_714_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDSegment::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDSegment G__THEDSegment;
static int G__EventDisplayDict_714_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDSegment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDSegment*) (soff+(sizeof(HEDSegment)*i)))->~G__THEDSegment();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDSegment*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDSegment*) (soff))->~G__THEDSegment();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDMdcWire */
static int G__EventDisplayDict_715_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDMdcWire* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDMdcWire((HMdcCal1Sim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDMdcWire((HMdcCal1Sim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDMdcWire[n];
       } else {
         p = new((void*) gvp) HEDMdcWire[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDMdcWire;
       } else {
         p = new((void*) gvp) HEDMdcWire;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDMdcWire* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HEDMdcWire(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) HEDMdcWire(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HEDMdcWire*) G__getstructoffset())->setNtimes((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDMdcWire*) G__getstructoffset())->setNtimes();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEDMdcWire*) G__getstructoffset())->getNtimes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDMdcWire*) G__getstructoffset())->countUp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDMdcWire*) G__getstructoffset())->countDown();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDMdcWire*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDMdcWire::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMdcWire::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDMdcWire::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDMdcWire::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDMdcWire*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMdcWire::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDMdcWire::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDMdcWire::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_715_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDMdcWire::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDMdcWire G__THEDMdcWire;
static int G__EventDisplayDict_715_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDMdcWire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDMdcWire*) (soff+(sizeof(HEDMdcWire)*i)))->~G__THEDMdcWire();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDMdcWire*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDMdcWire*) (soff))->~G__THEDMdcWire();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRichHit */
static int G__EventDisplayDict_716_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRichHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichHit((HRichHitSim*) G__int(libp->para[0]), (HParticleCandSim*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEDRichHit((HRichHitSim*) G__int(libp->para[0]), (HParticleCandSim*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichHit((HRichHitSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDRichHit((HRichHitSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichHit[n];
       } else {
         p = new((void*) gvp) HEDRichHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichHit;
       } else {
         p = new((void*) gvp) HEDRichHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichHit*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRichHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRichHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRichHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_716_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRichHit G__THEDRichHit;
static int G__EventDisplayDict_716_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRichHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRichHit*) (soff+(sizeof(HEDRichHit)*i)))->~G__THEDRichHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRichHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRichHit*) (soff))->~G__THEDRichHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDWallHit */
static int G__EventDisplayDict_717_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDWallHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDWallHit((HWallHitSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDWallHit((HWallHitSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDWallHit[n];
       } else {
         p = new((void*) gvp) HEDWallHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDWallHit;
       } else {
         p = new((void*) gvp) HEDWallHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDWallHit*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDWallHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDWallHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDWallHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDWallHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDWallHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDWallHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDWallHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDWallHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_717_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDWallHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDWallHit G__THEDWallHit;
static int G__EventDisplayDict_717_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDWallHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDWallHit*) (soff+(sizeof(HEDWallHit)*i)))->~G__THEDWallHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDWallHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDWallHit*) (soff))->~G__THEDWallHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDWallPlane */
static int G__EventDisplayDict_718_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDWallPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDWallPlane[n];
     } else {
       p = new((void*) gvp) HEDWallPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDWallPlane;
     } else {
       p = new((void*) gvp) HEDWallPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDWallPlane*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDWallPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDWallPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDWallPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDWallPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDWallPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDWallPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDWallPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDWallPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_718_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDWallPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDWallPlane G__THEDWallPlane;
static int G__EventDisplayDict_718_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDWallPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDWallPlane*) (soff+(sizeof(HEDWallPlane)*i)))->~G__THEDWallPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDWallPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDWallPlane*) (soff))->~G__THEDWallPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDTofHit */
static int G__EventDisplayDict_719_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDTofHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDTofHit((HTofHitSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDTofHit((HTofHitSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDTofHit[n];
       } else {
         p = new((void*) gvp) HEDTofHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDTofHit;
       } else {
         p = new((void*) gvp) HEDTofHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDTofHit*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTofHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTofHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDTofHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDTofHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDTofHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTofHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDTofHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTofHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_719_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDTofHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDTofHit G__THEDTofHit;
static int G__EventDisplayDict_719_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDTofHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDTofHit*) (soff+(sizeof(HEDTofHit)*i)))->~G__THEDTofHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDTofHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDTofHit*) (soff))->~G__THEDTofHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDTofCluster */
static int G__EventDisplayDict_720_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDTofCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDTofCluster((HTofClusterSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDTofCluster((HTofClusterSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDTofCluster[n];
       } else {
         p = new((void*) gvp) HEDTofCluster[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDTofCluster;
       } else {
         p = new((void*) gvp) HEDTofCluster;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDTofCluster*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDTofCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTofCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDTofCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDTofCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDTofCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTofCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDTofCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDTofCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_720_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDTofCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDTofCluster G__THEDTofCluster;
static int G__EventDisplayDict_720_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDTofCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDTofCluster*) (soff+(sizeof(HEDTofCluster)*i)))->~G__THEDTofCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDTofCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDTofCluster*) (soff))->~G__THEDTofCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRpcCluster */
static int G__EventDisplayDict_721_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRpcCluster* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRpcCluster((HRpcClusterSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDRpcCluster((HRpcClusterSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRpcCluster[n];
       } else {
         p = new((void*) gvp) HEDRpcCluster[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRpcCluster;
       } else {
         p = new((void*) gvp) HEDRpcCluster;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRpcCluster*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRpcCluster::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRpcCluster::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRpcCluster::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRpcCluster::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRpcCluster*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRpcCluster::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRpcCluster::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRpcCluster::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_721_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRpcCluster::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRpcCluster G__THEDRpcCluster;
static int G__EventDisplayDict_721_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRpcCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRpcCluster*) (soff+(sizeof(HEDRpcCluster)*i)))->~G__THEDRpcCluster();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRpcCluster*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRpcCluster*) (soff))->~G__THEDRpcCluster();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDShowerHit */
static int G__EventDisplayDict_722_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDShowerHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDShowerHit((HShowerHitSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDShowerHit((HShowerHitSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDShowerHit[n];
       } else {
         p = new((void*) gvp) HEDShowerHit[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDShowerHit;
       } else {
         p = new((void*) gvp) HEDShowerHit;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDShowerHit*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDShowerHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDShowerHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDShowerHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDShowerHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDShowerHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDShowerHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDShowerHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDShowerHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_722_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDShowerHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDShowerHit G__THEDShowerHit;
static int G__EventDisplayDict_722_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDShowerHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDShowerHit*) (soff+(sizeof(HEDShowerHit)*i)))->~G__THEDShowerHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDShowerHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDShowerHit*) (soff))->~G__THEDShowerHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDParticleCand */
static int G__EventDisplayDict_723_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDParticleCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDParticleCand((HParticleCandSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDParticleCand((HParticleCandSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDParticleCand[n];
       } else {
         p = new((void*) gvp) HEDParticleCand[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDParticleCand;
       } else {
         p = new((void*) gvp) HEDParticleCand;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetLineWidth((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetMarkerColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetMarkerStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetMarkerSize((Size_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetRnrLine((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->SetRnrPoints((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDParticleCand::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDParticleCand::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDParticleCand::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDParticleCand::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDParticleCand*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDParticleCand::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDParticleCand::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDParticleCand::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_723_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDParticleCand::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDParticleCand G__THEDParticleCand;
static int G__EventDisplayDict_723_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDParticleCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDParticleCand*) (soff+(sizeof(HEDParticleCand)*i)))->~G__THEDParticleCand();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDParticleCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDParticleCand*) (soff))->~G__THEDParticleCand();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRichPadPlane */
static int G__EventDisplayDict_724_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRichPadPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichPadPlane((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEDRichPadPlane((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichPadPlane((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDRichPadPlane((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichPadPlane*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRichPadPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichPadPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRichPadPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRichPadPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichPadPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichPadPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichPadPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichPadPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_724_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichPadPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRichPadPlane G__THEDRichPadPlane;
static int G__EventDisplayDict_724_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRichPadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRichPadPlane*) (soff+(sizeof(HEDRichPadPlane)*i)))->~G__THEDRichPadPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRichPadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRichPadPlane*) (soff))->~G__THEDRichPadPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRich700PadPlane */
static int G__EventDisplayDict_725_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRich700PadPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRich700PadPlane[n];
     } else {
       p = new((void*) gvp) HEDRich700PadPlane[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRich700PadPlane;
     } else {
       p = new((void*) gvp) HEDRich700PadPlane;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRich700PadPlane*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRich700PadPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRich700PadPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRich700PadPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRich700PadPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRich700PadPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRich700PadPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRich700PadPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRich700PadPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_725_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRich700PadPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRich700PadPlane G__THEDRich700PadPlane;
static int G__EventDisplayDict_725_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRich700PadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRich700PadPlane*) (soff+(sizeof(HEDRich700PadPlane)*i)))->~G__THEDRich700PadPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRich700PadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRich700PadPlane*) (soff))->~G__THEDRich700PadPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRichRing */
static int G__EventDisplayDict_726_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRichRing* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichRing((HRichHitSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDRichRing((HRichHitSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichRing[n];
       } else {
         p = new((void*) gvp) HEDRichRing[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichRing;
       } else {
         p = new((void*) gvp) HEDRichRing;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichRing*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRichRing::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichRing::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRichRing::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRichRing::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichRing*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichRing::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichRing::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichRing::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_726_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichRing::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRichRing G__THEDRichRing;
static int G__EventDisplayDict_726_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRichRing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRichRing*) (soff+(sizeof(HEDRichRing)*i)))->~G__THEDRichRing();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRichRing*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRichRing*) (soff))->~G__THEDRichRing();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRichHitPadPlane */
static int G__EventDisplayDict_727_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRichHitPadPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichHitPadPlane((HRichHitSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDRichHitPadPlane((HRichHitSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichHitPadPlane[n];
       } else {
         p = new((void*) gvp) HEDRichHitPadPlane[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichHitPadPlane;
       } else {
         p = new((void*) gvp) HEDRichHitPadPlane;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichHitPadPlane*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRichHitPadPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichHitPadPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRichHitPadPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRichHitPadPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichHitPadPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichHitPadPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichHitPadPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichHitPadPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_727_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichHitPadPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRichHitPadPlane G__THEDRichHitPadPlane;
static int G__EventDisplayDict_727_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRichHitPadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRichHitPadPlane*) (soff+(sizeof(HEDRichHitPadPlane)*i)))->~G__THEDRichHitPadPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRichHitPadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRichHitPadPlane*) (soff))->~G__THEDRichHitPadPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRichGeantPadPlane */
static int G__EventDisplayDict_728_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRichGeantPadPlane* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichGeantPadPlane(
(HGeantKine*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (HGeantRichDirect*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HEDRichGeantPadPlane(
(HGeantKine*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (HGeantRichDirect*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichGeantPadPlane((HGeantKine*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEDRichGeantPadPlane((HGeantKine*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichGeantPadPlane((HGeantKine*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDRichGeantPadPlane((HGeantKine*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichGeantPadPlane[n];
       } else {
         p = new((void*) gvp) HEDRichGeantPadPlane[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichGeantPadPlane;
       } else {
         p = new((void*) gvp) HEDRichGeantPadPlane;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichGeantPadPlane*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRichGeantPadPlane::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichGeantPadPlane::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRichGeantPadPlane::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRichGeantPadPlane::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichGeantPadPlane*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichGeantPadPlane::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichGeantPadPlane::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichGeantPadPlane::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_728_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichGeantPadPlane::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRichGeantPadPlane G__THEDRichGeantPadPlane;
static int G__EventDisplayDict_728_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRichGeantPadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRichGeantPadPlane*) (soff+(sizeof(HEDRichGeantPadPlane)*i)))->~G__THEDRichGeantPadPlane();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRichGeantPadPlane*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRichGeantPadPlane*) (soff))->~G__THEDRichGeantPadPlane();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRichGeantMirror */
static int G__EventDisplayDict_729_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRichGeantMirror* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HEDRichGeantMirror((HGeantRichMirror*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HEDRichGeantMirror((HGeantRichMirror*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichGeantMirror*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRichGeantMirror::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichGeantMirror::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRichGeantMirror::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRichGeantMirror::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichGeantMirror*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichGeantMirror::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichGeantMirror::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichGeantMirror::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_729_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichGeantMirror::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRichGeantMirror G__THEDRichGeantMirror;
static int G__EventDisplayDict_729_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRichGeantMirror*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRichGeantMirror*) (soff+(sizeof(HEDRichGeantMirror)*i)))->~G__THEDRichGeantMirror();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRichGeantMirror*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRichGeantMirror*) (soff))->~G__THEDRichGeantMirror();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDRichCompound */
static int G__EventDisplayDict_730_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDRichCompound* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDRichCompound((HRichHitSim*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDRichCompound((HRichHitSim*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichCompound[n];
       } else {
         p = new((void*) gvp) HEDRichCompound[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDRichCompound;
       } else {
         p = new((void*) gvp) HEDRichCompound;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->Print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetLineColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetLineStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetLineWidth((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetColor((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetColorMirrorHit((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetColorPadPlaneHit((Color_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetMarkerStyle((Style_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetMarkerSize((Size_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetRnrLine((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->SetRnrPoints((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDRichCompound::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichCompound::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDRichCompound::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDRichCompound::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDRichCompound*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichCompound::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichCompound::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDRichCompound::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_730_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDRichCompound::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDRichCompound G__THEDRichCompound;
static int G__EventDisplayDict_730_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDRichCompound*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDRichCompound*) (soff+(sizeof(HEDRichCompound)*i)))->~G__THEDRichCompound();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDRichCompound*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDRichCompound*) (soff))->~G__THEDRichCompound();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDGroup */
static int G__EventDisplayDict_731_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDGroup* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HEDGroup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HEDGroup(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEDGroup((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDGroup((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDGroup[n];
       } else {
         p = new((void*) gvp) HEDGroup[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDGroup;
       } else {
         p = new((void*) gvp) HEDGroup;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HEDGroup*) G__getstructoffset())->getList((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDGroup*) G__getstructoffset())->AddElement((Int_t) G__int(libp->para[0]), (TEveElement*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDGroup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDGroup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDGroup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDGroup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDGroup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDGroup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDGroup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDGroup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_731_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDGroup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDGroup G__THEDGroup;
static int G__EventDisplayDict_731_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDGroup*) (soff+(sizeof(HEDGroup)*i)))->~G__THEDGroup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDGroup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDGroup*) (soff))->~G__THEDGroup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDGroup2D */
static int G__EventDisplayDict_732_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDGroup2D* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 6:
     //m: 6
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5]));
     } else {
       p = new((void*) gvp) HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]), (const Char_t*) G__int(libp->para[5]));
     }
     break;
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (const Char_t*) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HEDGroup2D(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup2D((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEDGroup2D((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDGroup2D((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDGroup2D((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDGroup2D[n];
       } else {
         p = new((void*) gvp) HEDGroup2D[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDGroup2D;
       } else {
         p = new((void*) gvp) HEDGroup2D;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HEDGroup2D*) G__getstructoffset())->getList((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDGroup2D*) G__getstructoffset())->AddElement((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (TEveElement*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDGroup2D::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDGroup2D::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDGroup2D::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDGroup2D::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDGroup2D*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDGroup2D::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDGroup2D::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDGroup2D::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_732_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDGroup2D::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDGroup2D G__THEDGroup2D;
static int G__EventDisplayDict_732_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDGroup2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDGroup2D*) (soff+(sizeof(HEDGroup2D)*i)))->~G__THEDGroup2D();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDGroup2D*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDGroup2D*) (soff))->~G__THEDGroup2D();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDColorDef */
static int G__EventDisplayDict_966_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDColorDef::getEDColorDef());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDColorDef::setDefault();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->showSec((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showSec((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showSec();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showCoils((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showCoils();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showFrames((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showFrames();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showWall((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showWall();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showRich((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showRich();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HEDColorDef*) G__getstructoffset())->showMdc((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HEDColorDef*) G__getstructoffset())->showMdc((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showMdc((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showMdc();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->showTof((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showTof((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showTof();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->showRpc((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showRpc((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showRpc();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->showShower((Bool_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->showShower((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HEDColorDef*) G__getstructoffset())->showShower();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colCoils((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colCoils((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colFrames((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colFrames((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colRich((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colRich((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HEDColorDef*) G__getstructoffset())->colMdc((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colMdc((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colMdc((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colTof((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colTof((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colRpc((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colRpc((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colShower((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colShower((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HEDColorDef*) G__getstructoffset())->colWall((Pixel_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HEDColorDef*) G__getstructoffset())->colWall((Pixel_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDColorDef::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDColorDef::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDColorDef::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDColorDef::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDColorDef*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDColorDef::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDColorDef::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDColorDef::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_966_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDColorDef::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDColorDef G__THEDColorDef;
static int G__EventDisplayDict_966_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDColorDef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDColorDef*) (soff+(sizeof(HEDColorDef)*i)))->~G__THEDColorDef();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDColorDef*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDColorDef*) (soff))->~G__THEDColorDef();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDNumberLabeled */
static int G__EventDisplayDict_967_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDNumberLabeled* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HEDNumberLabeled((TGWindow*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HEDNumberLabeled((TGWindow*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HEDNumberLabeled*) G__getstructoffset())->GetEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HEDNumberLabeled*) G__getstructoffset())->GetTGNumberEntry());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDNumberLabeled::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDNumberLabeled::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDNumberLabeled::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDNumberLabeled::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDNumberLabeled*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDNumberLabeled::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDNumberLabeled::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDNumberLabeled::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_967_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDNumberLabeled::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDNumberLabeled G__THEDNumberLabeled;
static int G__EventDisplayDict_967_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDNumberLabeled*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDNumberLabeled*) (soff+(sizeof(HEDNumberLabeled)*i)))->~G__THEDNumberLabeled();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDNumberLabeled*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDNumberLabeled*) (soff))->~G__THEDNumberLabeled();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDSetup */
static int G__EventDisplayDict_969_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) HEDSetup::getEDSetup((TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, (UInt_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HEDSetup::getEDSetup((TGWindow*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HEDSetup::getEDSetup((TGWindow*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) HEDSetup::getEDSetup());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDSetup*) G__getstructoffset())->reDraw();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDSetup::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDSetup::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDSetup::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDSetup::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDSetup*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDSetup::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDSetup::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDSetup::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_969_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDSetup::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDSetup G__THEDSetup;
static int G__EventDisplayDict_969_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDSetup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDSetup*) (soff+(sizeof(HEDSetup)*i)))->~G__THEDSetup();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDSetup*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDSetup*) (soff))->~G__THEDSetup();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEDField */
static int G__EventDisplayDict_988_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDField* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDField(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) HEDField(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDField((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEDField((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEDField((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEDField((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDField[n];
       } else {
         p = new((void*) gvp) HEDField[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEDField;
       } else {
         p = new((void*) gvp) HEDField;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDField*) G__getstructoffset())->SetPolarity((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDField*) G__getstructoffset())->Clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HEDField*) G__getstructoffset())->CalcField((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDField*) G__getstructoffset())->ReadAscii(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDField*) G__getstructoffset())->WriteAscii(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TEveVector* pobj;
         const TEveVector xobj = ((const HEDField*) G__getstructoffset())->GetField(*(TEveVector*) libp->para[0].ref);
         pobj = new TEveVector(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEDField::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDField::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEDField::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEDField::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEDField*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDField::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDField::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEDField::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventDisplayDict_988_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEDField::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventDisplayDict_988_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HEDField* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HEDField(*(HEDField*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEDField G__THEDField;
static int G__EventDisplayDict_988_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEDField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEDField*) (soff+(sizeof(HEDField)*i)))->~G__THEDField();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEDField*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEDField*) (soff))->~G__THEDField();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventDisplayDict_988_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEDField* dest = (HEDField*) G__getstructoffset();
   *dest = *(HEDField*) libp->para[0].ref;
   const HEDField& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HEDTransform */

/* HEDMdcWireManager */

/* HEDMakeContainers */

/* HEDVertex */

/* HEDSegment */

/* HEDMdcWire */

/* HEDRichHit */

/* HEDWallHit */

/* HEDWallPlane */

/* HEDTofHit */

/* HEDTofCluster */

/* HEDRpcCluster */

/* HEDShowerHit */

/* HEDParticleCand */

/* HEDRichPadPlane */

/* HEDRich700PadPlane */

/* HEDRichRing */

/* HEDRichHitPadPlane */

/* HEDRichGeantPadPlane */

/* HEDRichGeantMirror */

/* HEDRichCompound */

/* HEDGroup */

/* HEDGroup2D */

/* HEDColorDef */

/* HEDNumberLabeled */

/* HEDSetup */

/* HEDField */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEventDisplayDict {
 public:
  G__Sizep2memfuncEventDisplayDict(): p(&G__Sizep2memfuncEventDisplayDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEventDisplayDict::*p)();
};

size_t G__get_sizep2memfuncEventDisplayDict()
{
  G__Sizep2memfuncEventDisplayDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEventDisplayDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform))) {
     HEDTransform *G__Lderived;
     G__Lderived=(HEDTransform*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager))) {
     HEDMdcWireManager *G__Lderived;
     G__Lderived=(HEDMdcWireManager*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers))) {
     HEDMakeContainers *G__Lderived;
     G__Lderived=(HEDMakeContainers*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers),G__get_linked_tagnum(&G__EventDisplayDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers),G__get_linked_tagnum(&G__EventDisplayDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex))) {
     HEDVertex *G__Lderived;
     G__Lderived=(HEDVertex*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment))) {
     HEDSegment *G__Lderived;
     G__Lderived=(HEDSegment*)0x1000;
     {
       TEveLine *G__Lpbase=(TEveLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire))) {
     HEDMdcWire *G__Lderived;
     G__Lderived=(HEDMdcWire*)0x1000;
     {
       TEveLine *G__Lpbase=(TEveLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit))) {
     HEDRichHit *G__Lderived;
     G__Lderived=(HEDRichHit*)0x1000;
     {
       TEveLine *G__Lpbase=(TEveLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit))) {
     HEDWallHit *G__Lderived;
     G__Lderived=(HEDWallHit*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane))) {
     HEDWallPlane *G__Lderived;
     G__Lderived=(HEDWallPlane*)0x1000;
     {
       TEveQuadSet *G__Lpbase=(TEveQuadSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveQuadSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveDigitSet *G__Lpbase=(TEveDigitSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveDigitSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveSecondarySelectable *G__Lpbase=(TEveSecondarySelectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveSecondarySelectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit))) {
     HEDTofHit *G__Lderived;
     G__Lderived=(HEDTofHit*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster))) {
     HEDTofCluster *G__Lderived;
     G__Lderived=(HEDTofCluster*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster))) {
     HEDRpcCluster *G__Lderived;
     G__Lderived=(HEDRpcCluster*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit))) {
     HEDShowerHit *G__Lderived;
     G__Lderived=(HEDShowerHit*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand))) {
     HEDParticleCand *G__Lderived;
     G__Lderived=(HEDParticleCand*)0x1000;
     {
       TEveCompound *G__Lpbase=(TEveCompound*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveCompound),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElementList *G__Lpbase=(TEveElementList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane))) {
     HEDRichPadPlane *G__Lderived;
     G__Lderived=(HEDRichPadPlane*)0x1000;
     {
       TEveQuadSet *G__Lpbase=(TEveQuadSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveQuadSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveDigitSet *G__Lpbase=(TEveDigitSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveDigitSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveSecondarySelectable *G__Lpbase=(TEveSecondarySelectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveSecondarySelectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane))) {
     HEDRich700PadPlane *G__Lderived;
     G__Lderived=(HEDRich700PadPlane*)0x1000;
     {
       TEveQuadSet *G__Lpbase=(TEveQuadSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveQuadSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveDigitSet *G__Lpbase=(TEveDigitSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveDigitSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveSecondarySelectable *G__Lpbase=(TEveSecondarySelectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveSecondarySelectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing))) {
     HEDRichRing *G__Lderived;
     G__Lderived=(HEDRichRing*)0x1000;
     {
       TEveLine *G__Lpbase=(TEveLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveLine),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane))) {
     HEDRichHitPadPlane *G__Lderived;
     G__Lderived=(HEDRichHitPadPlane*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane))) {
     HEDRichGeantPadPlane *G__Lderived;
     G__Lderived=(HEDRichGeantPadPlane*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror))) {
     HEDRichGeantMirror *G__Lderived;
     G__Lderived=(HEDRichGeantMirror*)0x1000;
     {
       TEvePointSet *G__Lpbase=(TEvePointSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPointSet3D *G__Lpbase=(TPointSet3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TPointSet3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TPolyMarker3D *G__Lpbase=(TPolyMarker3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TPolyMarker3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAtt3D *G__Lpbase=(TAtt3D*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TAtt3D),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttBBox *G__Lpbase=(TAttBBox*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TAttBBox),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEvePointSelectorConsumer *G__Lpbase=(TEvePointSelectorConsumer*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePointSelectorConsumer),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound))) {
     HEDRichCompound *G__Lderived;
     G__Lderived=(HEDRichCompound*)0x1000;
     {
       TEveCompound *G__Lpbase=(TEveCompound*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveCompound),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElementList *G__Lpbase=(TEveElementList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup))) {
     HEDGroup *G__Lderived;
     G__Lderived=(HEDGroup*)0x1000;
     {
       TEveElementList *G__Lpbase=(TEveElementList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D))) {
     HEDGroup2D *G__Lderived;
     G__Lderived=(HEDGroup2D*)0x1000;
     {
       TEveElementList *G__Lpbase=(TEveElementList*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TEveElement *G__Lpbase=(TEveElement*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElement),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveProjectable *G__Lpbase=(TEveProjectable*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveProjectable),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDColorDef))) {
     HEDColorDef *G__Lderived;
     G__Lderived=(HEDColorDef*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDColorDef),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled))) {
     HEDNumberLabeled *G__Lderived;
     G__Lderived=(HEDNumberLabeled*)0x1000;
     {
       TGHorizontalFrame *G__Lpbase=(TGHorizontalFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),G__get_linked_tagnum(&G__EventDisplayDictLN_TGHorizontalFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),G__get_linked_tagnum(&G__EventDisplayDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),G__get_linked_tagnum(&G__EventDisplayDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),G__get_linked_tagnum(&G__EventDisplayDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),G__get_linked_tagnum(&G__EventDisplayDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup))) {
     HEDSetup *G__Lderived;
     G__Lderived=(HEDSetup*)0x1000;
     {
       TGMainFrame *G__Lpbase=(TGMainFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),G__get_linked_tagnum(&G__EventDisplayDictLN_TGMainFrame),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TGCompositeFrame *G__Lpbase=(TGCompositeFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),G__get_linked_tagnum(&G__EventDisplayDictLN_TGCompositeFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGFrame *G__Lpbase=(TGFrame*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),G__get_linked_tagnum(&G__EventDisplayDictLN_TGFrame),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGWindow *G__Lpbase=(TGWindow*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),G__get_linked_tagnum(&G__EventDisplayDictLN_TGWindow),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TGObject *G__Lpbase=(TGObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),G__get_linked_tagnum(&G__EventDisplayDictLN_TGObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TQObject *G__Lpbase=(TQObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),G__get_linked_tagnum(&G__EventDisplayDictLN_TQObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField))) {
     HEDField *G__Lderived;
     G__Lderived=(HEDField*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField),G__get_linked_tagnum(&G__EventDisplayDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField),G__get_linked_tagnum(&G__EventDisplayDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TEveMagField *G__Lpbase=(TEveMagField*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField),G__get_linked_tagnum(&G__EventDisplayDictLN_TEveMagField),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEventDisplayDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Style_t",115,-1,0,-1);
   G__setnewtype(-1,"Style number (short)",0);
   G__search_typename2("Color_t",115,-1,0,-1);
   G__setnewtype(-1,"Color number (short)",0);
   G__search_typename2("Size_t",102,-1,0,-1);
   G__setnewtype(-1,"Attribute size (float)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Pixel_t",107,-1,0,-1);
   G__setnewtype(-1,"Pixel value",0);
   G__search_typename2("map<TEveElement*,Int_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TEveElement*,int>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TEveElement*,int,less<TEveElement*> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TEveProjected*>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement*>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement*,less<TEveElement*> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveListTreeInfo>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement::TEveListTreeInfo>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TEveElement*>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVectorT<Float_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVectorT<Double_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector4T<Float_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVector4TlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector4T<Double_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVector4TlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector2T<Float_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVector2TlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEveVector2T<Double_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVector2TlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TArrayC*>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETArrayCmUcOallocatorlETArrayCmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETArrayCmUcOallocatorlETArrayCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETArrayCmUcOallocatorlETArrayCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETArrayCmUcOallocatorlETArrayCmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETArrayCmUcOallocatorlETArrayCmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("set<Int_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<UInt_t,Int_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_pairlEunsignedsPintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<UInt_t,Int_t> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<unsigned int,int> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TEveVector2>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TEveVector2T<float> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TGeoShape*>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_listlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEvePathMarkT<Float_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePathMarkTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TEvePathMarkT<Double_t>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_TEvePathMarkTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TEveVector4D>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TEveVector4T<double> >",117,G__get_linked_tagnum(&G__EventDisplayDictLN_vectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HEDTransform */
static void G__setup_memvarHEDTransform(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform));
   { HEDTransform *p; p=(HEDTransform*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_HGeomTransform),-1,-2,4,"richSecTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_HGeomTransform),-1,-2,4,"richMirrorTrans=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGeoSphere),-1,-2,4,"richMirror=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,4,"fisNewRich=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDMdcWireManager */
static void G__setup_memvarHEDMdcWireManager(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager));
   { HEDMdcWireManager *p; p=(HEDMdcWireManager*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"wires[6][4][6][220]=",0,"! wire address -> ntimes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDMakeContainers */
static void G__setup_memvarHEDMakeContainers(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers));
   { HEDMakeContainers *p; p=(HEDMakeContainers*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDVertex */
static void G__setup_memvarHEDVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex));
   { HEDVertex *p; p=(HEDVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDSegment */
static void G__setup_memvarHEDSegment(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment));
   { HEDSegment *p; p=(HEDSegment*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDMdcWire */
static void G__setup_memvarHEDMdcWire(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire));
   { HEDMdcWire *p; p=(HEDMdcWire*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nTimes=",0,"how many times this wire has been used");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRichHit */
static void G__setup_memvarHEDRichHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit));
   { HEDRichHit *p; p=(HEDRichHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDWallHit */
static void G__setup_memvarHEDWallHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit));
   { HEDWallHit *p; p=(HEDWallHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDWallPlane */
static void G__setup_memvarHEDWallPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane));
   { HEDWallPlane *p; p=(HEDWallPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveFrameBox),-1,-1,4,"box=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDTofHit */
static void G__setup_memvarHEDTofHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit));
   { HEDTofHit *p; p=(HEDTofHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDTofCluster */
static void G__setup_memvarHEDTofCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster));
   { HEDTofCluster *p; p=(HEDTofCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRpcCluster */
static void G__setup_memvarHEDRpcCluster(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster));
   { HEDRpcCluster *p; p=(HEDRpcCluster*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDShowerHit */
static void G__setup_memvarHEDShowerHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit));
   { HEDShowerHit *p; p=(HEDShowerHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDParticleCand */
static void G__setup_memvarHEDParticleCand(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand));
   { HEDParticleCand *p; p=(HEDParticleCand*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRichPadPlane */
static void G__setup_memvarHEDRichPadPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane));
   { HEDRichPadPlane *p; p=(HEDRichPadPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveFrameBox),-1,-1,4,"box=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRich700PadPlane */
static void G__setup_memvarHEDRich700PadPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane));
   { HEDRich700PadPlane *p; p=(HEDRich700PadPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRichRing */
static void G__setup_memvarHEDRichRing(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing));
   { HEDRichRing *p; p=(HEDRichRing*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRichHitPadPlane */
static void G__setup_memvarHEDRichHitPadPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane));
   { HEDRichHitPadPlane *p; p=(HEDRichHitPadPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRichGeantPadPlane */
static void G__setup_memvarHEDRichGeantPadPlane(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane));
   { HEDRichGeantPadPlane *p; p=(HEDRichGeantPadPlane*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRichGeantMirror */
static void G__setup_memvarHEDRichGeantMirror(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror));
   { HEDRichGeantMirror *p; p=(HEDRichGeantMirror*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDRichCompound */
static void G__setup_memvarHEDRichCompound(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound));
   { HEDRichCompound *p; p=(HEDRichCompound*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDGroup */
static void G__setup_memvarHEDGroup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup));
   { HEDGroup *p; p=(HEDGroup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"size=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList),-1,-1,4,"list=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDGroup2D */
static void G__setup_memvarHEDGroup2D(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D));
   { HEDGroup2D *p; p=(HEDGroup2D*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"size1=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"size2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList),-1,-1,4,"list1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,3,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList),-1,-1,4,"list2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDColorDef */
static void G__setup_memvarHEDColorDef(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDColorDef));
   { HEDColorDef *p; p=(HEDColorDef*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDColorDef),-1,-2,4,"gEDColorDef=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volSEC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volSEC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volRICH)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volRICH=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volMDC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volMDC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volTOF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volTOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volRPC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volRPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volSHOWER)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volSHOWER=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volWALL)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volWALL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volCOILS)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volCOILS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->volFRAMES)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"volFRAMES=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nodesMDC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"nodesMDC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nodesTOF)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"nodesTOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nodesRPC)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"nodesRPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nodesSHOWER)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"nodesSHOWER=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->nodesWALL)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TObjArray),-1,-1,1,"nodesWALL=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::gGeoTopNode),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TEveGeoTopNode),-1,-2,1,"gGeoTopNode=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colMDC),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colMDC[4]=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colTOF),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colTOF=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colRPC),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colRPC=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colSHOWER),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colSHOWER=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colRICH),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colRICH=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colWALL),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colWALL=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colFRAMES),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colFRAMES=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::colCOILS),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"colCOILS=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transMDC),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transMDC[4]=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transTOF),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transTOF=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transRPC),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transRPC=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transSHOWER),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transSHOWER=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transRICH),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transRICH=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transWALL),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transWALL=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transFRAMES),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transFRAMES=",0,(char*)NULL);
   G__memvar_setup((void*)(&HEDColorDef::transCOILS),105,0,0,-1,G__defined_typename("Int_t"),-2,1,"transCOILS=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDNumberLabeled */
static void G__setup_memvarHEDNumberLabeled(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled));
   { HEDNumberLabeled *p; p=(HEDNumberLabeled*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,2,"fEntry=",0,"! pointer to element to get the numbers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDSetup */
static void G__setup_memvarHEDSetup(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup));
   { HEDSetup *p; p=(HEDSetup*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup),-1,-2,4,"gEDSetup=",0,"!");
   G__memvar_setup((void*)((long)(&p->fCheckSector)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckSector[6]=",0,"! Check buttons Sector selection");
   G__memvar_setup((void*)((long)(&p->fCheckFRAMES)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckFRAMES=",0,"! Check buttons show FRAMES");
   G__memvar_setup((void*)((long)(&p->fCheckCOILS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckCOILS=",0,"! Check buttons show COLIS");
   G__memvar_setup((void*)((long)(&p->fCheckRICH)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckRICH=",0,"! Check buttons show RICH");
   G__memvar_setup((void*)((long)(&p->fCheckMDC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckMDC[4]=",0,"! Check buttons show MDC");
   G__memvar_setup((void*)((long)(&p->fCheckTOF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckTOF=",0,"! Check buttons show TOF");
   G__memvar_setup((void*)((long)(&p->fCheckRPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckRPC=",0,"! Check buttons show RPC");
   G__memvar_setup((void*)((long)(&p->fCheckSHOWER)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckSHOWER=",0,"! Check buttons show SHOWER");
   G__memvar_setup((void*)((long)(&p->fCheckWALL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckWALL=",0,"! Check buttons show WALL");
   G__memvar_setup((void*)((long)(&p->fNext)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGTextButton),-1,-1,1,"fNext=",0,"! call nextEvent() on click text button");
   G__memvar_setup((void*)((long)(&p->fNextLoop)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGTextButton),-1,-1,1,"fNextLoop=",0,"! call nextEventLoop() on click text button");
   G__memvar_setup((void*)((long)(&p->fRedraw)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGTextButton),-1,-1,1,"fRedraw=",0,"! call reDraw() on click text button");
   G__memvar_setup((void*)((long)(&p->fCheckTimed)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckTimed=",0,"! run nextEvent() with timer");
   G__memvar_setup((void*)((long)(&p->fNumberLoopTime)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled),-1,-1,1,"fNumberLoopTime=",0,"! loop time in seconds");
   G__memvar_setup((void*)((long)(&p->fCheckMDCMod)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckMDCMod[6][4]=",0,"! swich MDC modules");
   G__memvar_setup((void*)((long)(&p->fCheckTOFSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckTOFSec[6]=",0,"! swich TOF sectors");
   G__memvar_setup((void*)((long)(&p->fCheckRPCSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckRPCSec[6]=",0,"! swich RPC    sectors");
   G__memvar_setup((void*)((long)(&p->fCheckSHOWERSec)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGCheckButton),-1,-1,1,"fCheckSHOWERSec[6]=",0,"! swich SHOWER sectors");
   G__memvar_setup((void*)((long)(&p->IDs)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDIDList),-1,-1,1,"IDs=",0,"! Widget IDs generator");
   G__memvar_setup((void*)((long)(&p->colFRAMES)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colFRAMES=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->colCOILS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colCOILS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->colRICH)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colRICH=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->colMDC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colMDC[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->colTOF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colTOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->colRPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colRPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->colSHOWER)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colSHOWER=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->colWALL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGColorSelect),-1,-1,1,"colWALL=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transFRAMES)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transFRAMES=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transCOILS)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transCOILS=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transRICH)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transRICH=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transMDC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transMDC[4]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transTOF)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transTOF=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transRPC)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transRPC=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transSHOWER)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transSHOWER=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->transWALL)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry),-1,-1,1,"transWALL=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEDField */
static void G__setup_memvarHEDField(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField));
   { HEDField *p; p=(HEDField*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nfz=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nfr=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nfp=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zflmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zflmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"zfldel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rflmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rflmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"rfldel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pflmin=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pflmax=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"pfldel=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fpol=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"p_tzfl=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"p_trfl=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"p_tpfl=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"step1z=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"step1r=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"step1p=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"dconv=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nfz_nfr=",0,"!");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"one_sixtyth=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEventDisplayDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHEDTransform(void) {
   /* HEDTransform */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform));
   G__memfunc_setup("setIsNewRich",1208,G__EventDisplayDict_218_0_1, 121, -1, -1, 0, 1, 3, 1, 0, "g - 'Bool_t' 0 'kTRUE' newrich", (char*)NULL, (void*) G__func2void( (void (*)(Bool_t))(&HEDTransform::setIsNewRich) ), 0);
   G__memfunc_setup("isNewRich",908,G__EventDisplayDict_218_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Bool_t (*)())(&HEDTransform::isNewRich) ), 0);
   G__memfunc_setup("calcPhiToLab",1158,G__EventDisplayDict_218_0_3, 102, -1, G__defined_typename("Float_t"), 0, 1, 3, 1, 0, "i - 'Int_t' 0 - sec", (char*)NULL, (void*) G__func2void( (Float_t (*)(Int_t))(&HEDTransform::calcPhiToLab) ), 0);
   G__memfunc_setup("setRichSecTrans",1525,G__EventDisplayDict_218_0_4, 121, -1, -1, 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - rot1 "
"d - 'Double_t' 0 - rot2 d - 'Double_t' 0 - rot3", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t))(&HEDTransform::setRichSecTrans) ), 0);
   G__memfunc_setup("setRichMirrorTrans",1877,G__EventDisplayDict_218_0_5, 121, -1, -1, 0, 6, 3, 1, 0, 
"d - 'Double_t' 0 - x d - 'Double_t' 0 - y "
"d - 'Double_t' 0 - z d - 'Double_t' 0 - rot1 "
"d - 'Double_t' 0 - rot2 d - 'Double_t' 0 - rot3", (char*)NULL, (void*) G__func2void( (void (*)(Double_t, Double_t, Double_t, Double_t, Double_t, Double_t))(&HEDTransform::setRichMirrorTrans) ), 0);
   G__memfunc_setup("getRichSecTrans",1513,G__EventDisplayDict_218_0_6, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_HGeomTransform), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (HGeomTransform* (*)())(&HEDTransform::getRichSecTrans) ), 0);
   G__memfunc_setup("getRichMirrorTrans",1865,G__EventDisplayDict_218_0_7, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_HGeomTransform), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (HGeomTransform* (*)())(&HEDTransform::getRichMirrorTrans) ), 0);
   G__memfunc_setup("setRichMirror",1357,G__EventDisplayDict_218_0_8, 121, -1, -1, 0, 1, 3, 1, 0, "U 'TGeoSphere' - 0 - mirr", (char*)NULL, (void*) G__func2void( (void (*)(TGeoSphere*))(&HEDTransform::setRichMirror) ), 0);
   G__memfunc_setup("getRichMirror",1345,G__EventDisplayDict_218_0_9, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TGeoSphere), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TGeoSphere* (*)())(&HEDTransform::getRichMirror) ), 0);
   G__memfunc_setup("calcSegPointsLab",1598,G__EventDisplayDict_218_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"U 'HMdcSeg' - 0 - seg u 'HGeomVector' - 1 - p1 "
"u 'HGeomVector' - 1 - p2", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HMdcSeg*, HGeomVector&, HGeomVector&))(&HEDTransform::calcSegPointsLab) ), 0);
   G__memfunc_setup("calcWirePointsLab",1718,G__EventDisplayDict_218_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 6, 3, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - l i - 'Int_t' 0 - c "
"u 'HGeomVector' - 1 - p1 u 'HGeomVector' - 1 - p2", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Int_t, Int_t, Int_t, HGeomVector&, HGeomVector&))(&HEDTransform::calcWirePointsLab) ), 0);
   G__memfunc_setup("calcSegKickPlanePointLab",2365,G__EventDisplayDict_218_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'HMdcSeg' - 0 - seg u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HMdcSeg*, HGeomVector&))(&HEDTransform::calcSegKickPlanePointLab) ), 0);
   G__memfunc_setup("calcWallHitPointLab",1889,G__EventDisplayDict_218_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'HWallHit' - 0 - hit u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HWallHit*, HGeomVector&))(&HEDTransform::calcWallHitPointLab) ), 0);
   G__memfunc_setup("calcTofHitPointLab",1786,G__EventDisplayDict_218_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'HTofHit' - 0 - hit u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HTofHit*, HGeomVector&))(&HEDTransform::calcTofHitPointLab) ), 0);
   G__memfunc_setup("calcShowerHitPointLab",2121,G__EventDisplayDict_218_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'HShowerHit' - 0 - hit u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HShowerHit*, HGeomVector&))(&HEDTransform::calcShowerHitPointLab) ), 0);
   G__memfunc_setup("calcRpcClustPointLab",2012,G__EventDisplayDict_218_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'HRpcCluster' - 0 - hit u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HRpcCluster*, HGeomVector&))(&HEDTransform::calcRpcClustPointLab) ), 0);
   G__memfunc_setup("calcVertexPoint",1563,G__EventDisplayDict_218_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 1, 3, 1, 0, "u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HGeomVector&))(&HEDTransform::calcVertexPoint) ), 0);
   G__memfunc_setup("calcRichLinePointLab",1978,G__EventDisplayDict_218_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 4, 3, 1, 0, 
"U 'HRichHit' - 0 - hit u 'HGeomVector' - 1 - p1 "
"u 'HGeomVector' - 1 - p2 U 'HParticleCand' - 0 '0' cand", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HRichHit*, HGeomVector&, HGeomVector&, HParticleCand*))(&HEDTransform::calcRichLinePointLab) ), 0);
   G__memfunc_setup("calcRichPadPlaneToLab",2032,G__EventDisplayDict_218_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - sec u 'HGeomVector' - 1 - p "
"u 'HGeomTransform' - 1 - trans", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, HGeomVector&, HGeomTransform&))(&HEDTransform::calcRichPadPlaneToLab) ), 0);
   G__memfunc_setup("calcRichSectorFrame",1908,G__EventDisplayDict_218_0_20, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveFrameBox), -1, 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - sec u 'HGeomTransform' - 1 - trans", (char*)NULL, (void*) G__func2void( (TEveFrameBox* (*)(Int_t, HGeomTransform&))(&HEDTransform::calcRichSectorFrame) ), 0);
   G__memfunc_setup("calcWallFrame",1294,G__EventDisplayDict_218_0_21, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveFrameBox), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TEveFrameBox* (*)())(&HEDTransform::calcWallFrame) ), 0);
   G__memfunc_setup("calcWallCell",1187,G__EventDisplayDict_218_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'HWallHit' - 0 - hit F - 'Float_t' 0 - coord", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HWallHit*, Float_t*))(&HEDTransform::calcWallCell) ), 0);
   G__memfunc_setup("calcRichPadSector",1694,G__EventDisplayDict_218_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"U 'HRichCal' - 0 - cal u 'HGeomTransform' - 1 - trans "
"F - 'Float_t' 0 - coord", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HRichCal*, HGeomTransform&, Float_t*))(&HEDTransform::calcRichPadSector) ), 0);
   G__memfunc_setup("calcRichMirrorHit",1721,G__EventDisplayDict_218_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"u 'HGeomVector' - 11 - p1 u 'HGeomVector' - 11 - p2 "
"u 'HGeomVector' - 1 - pout", (char*)NULL, (void*) G__func2void( (Bool_t (*)(const HGeomVector&, const HGeomVector&, HGeomVector&))(&HEDTransform::calcRichMirrorHit) ), 0);
   G__memfunc_setup("createParticle",1448,G__EventDisplayDict_218_0_25, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveTrack), -1, 0, 8, 3, 1, 0, 
"i - 'Int_t' 0 - pid d - 'Double_t' 0 - vx "
"d - 'Double_t' 0 - vy d - 'Double_t' 0 - vz "
"d - 'Double_t' 0 - px d - 'Double_t' 0 - py "
"d - 'Double_t' 0 - pz U 'TEveTrackPropagator' - 0 - prop", (char*)NULL, (void*) G__func2void( (TEveTrack* (*)(Int_t, Double_t, Double_t, Double_t, Double_t, Double_t, Double_t, TEveTrackPropagator*))(&HEDTransform::createParticle) ), 0);
   G__memfunc_setup("createKineParticle",1839,G__EventDisplayDict_218_0_26, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveTrack), -1, 0, 2, 3, 1, 0, 
"U 'HGeantKine' - 0 - - U 'TEveTrackPropagator' - 0 - -", (char*)NULL, (void*) G__func2void( (TEveTrack* (*)(HGeantKine*, TEveTrackPropagator*))(&HEDTransform::createKineParticle) ), 0);
   G__memfunc_setup("calcRichGeantPadplanePointLab",2886,G__EventDisplayDict_218_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - s u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, HGeomVector&))(&HEDTransform::calcRichGeantPadplanePointLab) ), 0);
   G__memfunc_setup("calcMdcGeantLayerPointLab",2476,G__EventDisplayDict_218_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - l u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Int_t, Int_t, HGeomVector&))(&HEDTransform::calcMdcGeantLayerPointLab) ), 0);
   G__memfunc_setup("calcWallGeantPointLab",2091,G__EventDisplayDict_218_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - c u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, HGeomVector&))(&HEDTransform::calcWallGeantPointLab) ), 0);
   G__memfunc_setup("calcTofGeantPointLab",1988,G__EventDisplayDict_218_0_30, 103, -1, G__defined_typename("Bool_t"), 0, 4, 3, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - c u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Int_t, Int_t, HGeomVector&))(&HEDTransform::calcTofGeantPointLab) ), 0);
   G__memfunc_setup("calcRpcGeantPointLab",1984,G__EventDisplayDict_218_0_31, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - s u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, HGeomVector&))(&HEDTransform::calcRpcGeantPointLab) ), 0);
   G__memfunc_setup("calcShowerGeantPointLab",2323,G__EventDisplayDict_218_0_32, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"u 'HGeomVector' - 1 - p", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Int_t, HGeomVector&))(&HEDTransform::calcShowerGeantPointLab) ), 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_218_0_33, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDTransform::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_218_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTransform::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_218_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDTransform::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_218_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDTransform::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_218_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_218_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTransform::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_218_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDTransform::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_218_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTransform::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_218_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDTransform::DeclFileLine) ), 0);
   // automatic default constructor
   G__memfunc_setup("HEDTransform", 1165, G__EventDisplayDict_218_0_45, (int) ('i'), G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform), -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HEDTransform", 1165, G__EventDisplayDict_218_0_46, (int) ('i'), G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform), -1, 0, 1, 1, 1, 0, "u 'HEDTransform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HEDTransform", 1291, G__EventDisplayDict_218_0_47, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDisplayDict_218_0_48, (int) ('u'), G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTransform), -1, 1, 1, 1, 1, 0, "u 'HEDTransform' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDMdcWireManager(void) {
   /* HEDMdcWireManager */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager));
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillAllWires",1226,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillSegmentWires",1668,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HEDMdcWireManager",1591,G__EventDisplayDict_219_0_4, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__EventDisplayDict_219_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isUsedNtimes",1245,G__EventDisplayDict_219_0_6, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - l i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__EventDisplayDict_219_0_7, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 1 - s i - 'Int_t' 1 - m "
"i - 'Int_t' 1 - l i - 'Int_t' 1 - c "
"i - 'Int_t' 1 - addr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__EventDisplayDict_219_0_8, 105, -1, G__defined_typename("Int_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - l i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_219_0_9, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDMdcWireManager::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_219_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMdcWireManager::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_219_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDMdcWireManager::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_219_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDMdcWireManager::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_219_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_219_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMdcWireManager::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_219_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDMdcWireManager::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_219_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMdcWireManager::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_219_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDMdcWireManager::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HEDMdcWireManager", 1591, G__EventDisplayDict_219_0_21, (int) ('i'), G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager), -1, 0, 1, 1, 1, 0, "u 'HEDMdcWireManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HEDMdcWireManager", 1717, G__EventDisplayDict_219_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDisplayDict_219_0_23, (int) ('u'), G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWireManager), -1, 1, 1, 1, 1, 0, "u 'HEDMdcWireManager' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDMakeContainers(void) {
   /* HEDMakeContainers */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers));
   G__memfunc_setup("HEDMakeContainers",1637,G__EventDisplayDict_220_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMakeContainers), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 '\"EDMakeContainers\"' name C - 'Text_t' 10 '\"Container for ED\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventDisplayDict_220_0_6, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDMakeContainers::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_220_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMakeContainers::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_220_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDMakeContainers::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_220_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDMakeContainers::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_220_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_220_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMakeContainers::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_220_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDMakeContainers::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_220_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMakeContainers::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_220_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDMakeContainers::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDMakeContainers", 1763, G__EventDisplayDict_220_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDVertex(void) {
   /* HEDVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex));
   G__memfunc_setup("HEDVertex",847,G__EventDisplayDict_713_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_713_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_713_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_713_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_713_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_713_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_713_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_713_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_713_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_713_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_713_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDVertex::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDVertex", 973, G__EventDisplayDict_713_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDSegment(void) {
   /* HEDSegment */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment));
   G__memfunc_setup("HEDSegment",932,G__EventDisplayDict_714_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSegment), -1, 0, 1, 1, 1, 0, "U 'HMdcSegSim' - 0 '0' seg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_714_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_714_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDSegment::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_714_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDSegment::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_714_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDSegment::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_714_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDSegment::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_714_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_714_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDSegment::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_714_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDSegment::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_714_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDSegment::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_714_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDSegment::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDSegment", 1058, G__EventDisplayDict_714_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDMdcWire(void) {
   /* HEDMdcWire */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire));
   G__memfunc_setup("makeWire",821,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 4, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - l i - 'Int_t' 0 - c "
"U 'HMdcCal1Sim' - 0 '0' cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HEDMdcWire",892,G__EventDisplayDict_715_0_2, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire), -1, 0, 1, 1, 1, 0, "U 'HMdcCal1Sim' - 0 '0' cal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HEDMdcWire",892,G__EventDisplayDict_715_0_3, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDMdcWire), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - m "
"i - 'Int_t' 0 - l i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNtimes",956,G__EventDisplayDict_715_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' times", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNtimes",944,G__EventDisplayDict_715_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("countUp",750,G__EventDisplayDict_715_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("countDown",961,G__EventDisplayDict_715_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_715_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_715_0_9, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDMdcWire::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_715_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMdcWire::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_715_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDMdcWire::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_715_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDMdcWire::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_715_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_715_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMdcWire::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_715_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDMdcWire::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_715_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDMdcWire::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_715_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDMdcWire::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDMdcWire", 1018, G__EventDisplayDict_715_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRichHit(void) {
   /* HEDRichHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit));
   G__memfunc_setup("HEDRichHit",892,G__EventDisplayDict_716_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHit), -1, 0, 2, 1, 1, 0, 
"U 'HRichHitSim' - 0 '0' hit U 'HParticleCandSim' - 0 '0' cand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_716_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_716_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRichHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_716_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_716_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRichHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_716_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRichHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_716_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_716_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_716_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_716_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_716_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRichHit", 1018, G__EventDisplayDict_716_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDWallHit(void) {
   /* HEDWallHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit));
   G__memfunc_setup("HEDWallHit",902,G__EventDisplayDict_717_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallHit), -1, 0, 1, 1, 1, 0, "U 'HWallHitSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_717_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_717_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDWallHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_717_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDWallHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_717_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDWallHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_717_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDWallHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_717_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_717_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDWallHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_717_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDWallHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_717_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDWallHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_717_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDWallHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDWallHit", 1028, G__EventDisplayDict_717_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDWallPlane(void) {
   /* HEDWallPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane));
   G__memfunc_setup("HEDWallPlane",1105,G__EventDisplayDict_718_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDWallPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_718_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_718_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDWallPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_718_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDWallPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_718_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDWallPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_718_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDWallPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_718_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_718_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDWallPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_718_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDWallPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_718_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDWallPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_718_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDWallPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDWallPlane", 1231, G__EventDisplayDict_718_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDTofHit(void) {
   /* HEDTofHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit));
   G__memfunc_setup("HEDTofHit",799,G__EventDisplayDict_719_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofHit), -1, 0, 1, 1, 1, 0, "U 'HTofHitSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_719_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_719_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDTofHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_719_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTofHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_719_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDTofHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_719_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDTofHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_719_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_719_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTofHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_719_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDTofHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_719_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTofHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_719_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDTofHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDTofHit", 925, G__EventDisplayDict_719_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDTofCluster(void) {
   /* HEDTofCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster));
   G__memfunc_setup("HEDTofCluster",1244,G__EventDisplayDict_720_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDTofCluster), -1, 0, 1, 1, 1, 0, "U 'HTofClusterSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_720_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_720_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDTofCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_720_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTofCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_720_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDTofCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_720_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDTofCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_720_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_720_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTofCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_720_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDTofCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_720_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDTofCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_720_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDTofCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDTofCluster", 1370, G__EventDisplayDict_720_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRpcCluster(void) {
   /* HEDRpcCluster */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster));
   G__memfunc_setup("HEDRpcCluster",1240,G__EventDisplayDict_721_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRpcCluster), -1, 0, 1, 1, 1, 0, "U 'HRpcClusterSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_721_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_721_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRpcCluster::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_721_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRpcCluster::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_721_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRpcCluster::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_721_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRpcCluster::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_721_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_721_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRpcCluster::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_721_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRpcCluster::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_721_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRpcCluster::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_721_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRpcCluster::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRpcCluster", 1366, G__EventDisplayDict_721_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDShowerHit(void) {
   /* HEDShowerHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit));
   G__memfunc_setup("HEDShowerHit",1134,G__EventDisplayDict_722_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDShowerHit), -1, 0, 1, 1, 1, 0, "U 'HShowerHitSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_722_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_722_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDShowerHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_722_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDShowerHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_722_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDShowerHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_722_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDShowerHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_722_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_722_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDShowerHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_722_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDShowerHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_722_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDShowerHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_722_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDShowerHit::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDShowerHit", 1260, G__EventDisplayDict_722_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDParticleCand(void) {
   /* HEDParticleCand */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand));
   G__memfunc_setup("HEDParticleCand",1403,G__EventDisplayDict_723_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDParticleCand), -1, 0, 1, 1, 1, 0, "U 'HParticleCandSim' - 0 '0' cand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_723_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineColor",1203,G__EventDisplayDict_723_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineStyle",1221,G__EventDisplayDict_723_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineWidth",1204,G__EventDisplayDict_723_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerColor",1421,G__EventDisplayDict_723_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerStyle",1439,G__EventDisplayDict_723_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerSize",1321,G__EventDisplayDict_723_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Size_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRnrLine",998,G__EventDisplayDict_723_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRnrPoints",1243,G__EventDisplayDict_723_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_723_0_11, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDParticleCand::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_723_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDParticleCand::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_723_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDParticleCand::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_723_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDParticleCand::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_723_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_723_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDParticleCand::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_723_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDParticleCand::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_723_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDParticleCand::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_723_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDParticleCand::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDParticleCand", 1529, G__EventDisplayDict_723_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRichPadPlane(void) {
   /* HEDRichPadPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane));
   G__memfunc_setup("HEDRichPadPlane",1372,G__EventDisplayDict_724_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichPadPlane), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 '0' cleaned", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_724_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_724_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRichPadPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_724_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichPadPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_724_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRichPadPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_724_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRichPadPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_724_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_724_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichPadPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_724_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichPadPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_724_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichPadPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_724_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichPadPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRichPadPlane", 1498, G__EventDisplayDict_724_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRich700PadPlane(void) {
   /* HEDRich700PadPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane));
   G__memfunc_setup("HEDRich700PadPlane",1523,G__EventDisplayDict_725_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRich700PadPlane), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_725_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_725_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRich700PadPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_725_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRich700PadPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_725_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRich700PadPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_725_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRich700PadPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_725_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_725_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRich700PadPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_725_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRich700PadPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_725_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRich700PadPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_725_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRich700PadPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRich700PadPlane", 1649, G__EventDisplayDict_725_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRichRing(void) {
   /* HEDRichRing */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing));
   G__memfunc_setup("HEDRichRing",999,G__EventDisplayDict_726_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichRing), -1, 0, 1, 1, 1, 0, "U 'HRichHitSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_726_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_726_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRichRing::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_726_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichRing::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_726_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRichRing::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_726_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRichRing::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_726_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_726_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichRing::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_726_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichRing::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_726_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichRing::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_726_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichRing::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRichRing", 1125, G__EventDisplayDict_726_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRichHitPadPlane(void) {
   /* HEDRichHitPadPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane));
   G__memfunc_setup("HEDRichHitPadPlane",1665,G__EventDisplayDict_727_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichHitPadPlane), -1, 0, 1, 1, 1, 0, "U 'HRichHitSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_727_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_727_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRichHitPadPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_727_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichHitPadPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_727_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRichHitPadPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_727_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRichHitPadPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_727_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_727_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichHitPadPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_727_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichHitPadPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_727_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichHitPadPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_727_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichHitPadPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRichHitPadPlane", 1791, G__EventDisplayDict_727_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRichGeantPadPlane(void) {
   /* HEDRichGeantPadPlane */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane));
   G__memfunc_setup("HEDRichGeantPadPlane",1867,G__EventDisplayDict_728_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantPadPlane), -1, 0, 3, 1, 1, 0, 
"U 'HGeantKine' - 0 '0' kine i - 'Int_t' 0 '0' select "
"U 'HGeantRichDirect' - 0 '0' geaDir", "select = 0 -> photon, 1 = direct", (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_728_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_728_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRichGeantPadPlane::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_728_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichGeantPadPlane::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_728_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRichGeantPadPlane::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_728_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRichGeantPadPlane::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_728_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_728_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichGeantPadPlane::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_728_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichGeantPadPlane::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_728_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichGeantPadPlane::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_728_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichGeantPadPlane::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRichGeantPadPlane", 1993, G__EventDisplayDict_728_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRichGeantMirror(void) {
   /* HEDRichGeantMirror */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror));
   G__memfunc_setup("HEDRichGeantMirror",1729,G__EventDisplayDict_729_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichGeantMirror), -1, 0, 1, 1, 1, 0, "U 'HGeantRichMirror' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_729_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_729_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRichGeantMirror::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_729_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichGeantMirror::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_729_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRichGeantMirror::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_729_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRichGeantMirror::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_729_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_729_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichGeantMirror::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_729_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichGeantMirror::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_729_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichGeantMirror::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_729_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichGeantMirror::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRichGeantMirror", 1855, G__EventDisplayDict_729_0_15, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDRichCompound(void) {
   /* HEDRichCompound */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound));
   G__memfunc_setup("HEDRichCompound",1436,G__EventDisplayDict_730_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDRichCompound), -1, 0, 1, 1, 1, 0, "U 'HRichHitSim' - 0 '0' hit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Print",525,G__EventDisplayDict_730_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineColor",1203,G__EventDisplayDict_730_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineStyle",1221,G__EventDisplayDict_730_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetLineWidth",1204,G__EventDisplayDict_730_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColor",811,G__EventDisplayDict_730_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColorMirrorHit",1739,G__EventDisplayDict_730_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetColorPadPlaneHit",1877,G__EventDisplayDict_730_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Color_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerStyle",1439,G__EventDisplayDict_730_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Style_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetMarkerSize",1321,G__EventDisplayDict_730_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Size_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRnrLine",998,G__EventDisplayDict_730_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRnrPoints",1243,G__EventDisplayDict_730_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_730_0_13, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDRichCompound::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_730_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichCompound::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_730_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDRichCompound::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_730_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDRichCompound::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_730_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_730_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichCompound::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_730_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichCompound::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_730_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDRichCompound::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_730_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDRichCompound::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDRichCompound", 1562, G__EventDisplayDict_730_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDGroup(void) {
   /* HEDGroup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup));
   G__memfunc_setup("HEDGroup",734,G__EventDisplayDict_731_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup), -1, 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '6' n C - 'Char_t' 10 '\"Sector\"' subname", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getList",732,G__EventDisplayDict_731_0_2, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddElement",979,G__EventDisplayDict_731_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n U 'TEveElement' - 0 - el", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyElements",1575,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventDisplayDict_731_0_5, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDGroup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_731_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDGroup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_731_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDGroup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_731_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDGroup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_731_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_731_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDGroup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_731_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDGroup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_731_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDGroup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_731_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDGroup::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDGroup", 860, G__EventDisplayDict_731_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDGroup2D(void) {
   /* HEDGroup2D */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D));
   G__memfunc_setup("HEDGroup2D",852,G__EventDisplayDict_732_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDGroup2D), -1, 0, 6, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"i - 'Int_t' 0 '6' n1 i - 'Int_t' 0 '4' n2 "
"C - 'Char_t' 10 '\"Sector\"' subname1 C - 'Char_t' 10 '\"Module\"' subname2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getList",732,G__EventDisplayDict_732_0_2, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveElementList), -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("AddElement",979,G__EventDisplayDict_732_0_3, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - i i - 'Int_t' 0 - j "
"U 'TEveElement' - 0 - el", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DestroyElements",1575,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventDisplayDict_732_0_5, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDGroup2D::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_732_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDGroup2D::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_732_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDGroup2D::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_732_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDGroup2D::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_732_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_732_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDGroup2D::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_732_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDGroup2D::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_732_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDGroup2D::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_732_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDGroup2D::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDGroup2D", 978, G__EventDisplayDict_732_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDColorDef(void) {
   /* HEDColorDef */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDColorDef));
   G__memfunc_setup("HEDColorDef",991,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDColorDef), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEDColorDef",1239,G__EventDisplayDict_966_0_2, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDColorDef), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (HEDColorDef* (*)())(&HEDColorDef::getEDColorDef) ), 0);
   G__memfunc_setup("setDefault",1041,G__EventDisplayDict_966_0_3, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDColorDef::setDefault) ), 0);
   G__memfunc_setup("showSec",732,G__EventDisplayDict_966_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' show i - 'Int_t' 0 '-1' sec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showCoils",955,G__EventDisplayDict_966_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' show", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showFrames",1055,G__EventDisplayDict_966_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' show", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showWall",849,G__EventDisplayDict_966_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' show", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showRich",839,G__EventDisplayDict_966_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' show", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showMdc",725,G__EventDisplayDict_966_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' show i - 'Int_t' 0 '-1' sec "
"i - 'Int_t' 0 '-1' mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showTof",746,G__EventDisplayDict_966_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' show i - 'Int_t' 0 '-1' sec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showRpc",742,G__EventDisplayDict_966_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' show i - 'Int_t' 0 '-1' sec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("showShower",1081,G__EventDisplayDict_966_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"g - 'Bool_t' 0 'kTRUE' show i - 'Int_t' 0 '-1' sec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colCoils",824,G__EventDisplayDict_966_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colFrames",924,G__EventDisplayDict_966_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colRich",708,G__EventDisplayDict_966_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colMdc",594,G__EventDisplayDict_966_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans "
"i - 'Int_t' 0 '-1' mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colTof",615,G__EventDisplayDict_966_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colRpc",611,G__EventDisplayDict_966_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colShower",950,G__EventDisplayDict_966_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("colWall",718,G__EventDisplayDict_966_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"k - 'Pixel_t' 0 - pixel i - 'Int_t' 0 '-1' trans", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_966_0_21, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDColorDef::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_966_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDColorDef::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_966_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDColorDef::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_966_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDColorDef::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_966_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_966_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDColorDef::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_966_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDColorDef::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_966_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDColorDef::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_966_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDColorDef::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDColorDef", 1117, G__EventDisplayDict_966_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDNumberLabeled(void) {
   /* HEDNumberLabeled */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled));
   G__memfunc_setup("HEDNumberLabeled",1507,G__EventDisplayDict_967_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDNumberLabeled), -1, 0, 2, 1, 1, 0, 
"U 'TGWindow' - 10 - p C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEntry",818,G__EventDisplayDict_967_0_2, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TGTextEntry), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetTGNumberEntry",1590,G__EventDisplayDict_967_0_3, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TGNumberEntry), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_967_0_4, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDNumberLabeled::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_967_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDNumberLabeled::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_967_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDNumberLabeled::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_967_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDNumberLabeled::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_967_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_967_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDNumberLabeled::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_967_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDNumberLabeled::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_967_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDNumberLabeled::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_967_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDNumberLabeled::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDNumberLabeled", 1633, G__EventDisplayDict_967_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDSetup(void) {
   /* HEDSetup */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup));
   G__memfunc_setup("HEDSetup",738,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup), -1, 0, 3, 1, 4, 0, 
"U 'TGWindow' - 10 - p h - 'UInt_t' 0 - w "
"h - 'UInt_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEDSetup",986,G__EventDisplayDict_969_0_2, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDSetup), -1, 0, 3, 3, 1, 0, 
"U 'TGWindow' - 10 '0' p h - 'UInt_t' 0 '0' w "
"h - 'UInt_t' 0 '0' h", (char*)NULL, (void*) G__func2void( (HEDSetup* (*)(const TGWindow*, UInt_t, UInt_t))(&HEDSetup::getEDSetup) ), 0);
   G__memfunc_setup("reDraw",613,G__EventDisplayDict_969_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventDisplayDict_969_0_4, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDSetup::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_969_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDSetup::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_969_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDSetup::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_969_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDSetup::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_969_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_969_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDSetup::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_969_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDSetup::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_969_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDSetup::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_969_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDSetup::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEDSetup", 864, G__EventDisplayDict_969_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEDField(void) {
   /* HEDField */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField));
   G__memfunc_setup("HEDField",693,G__EventDisplayDict_988_0_1, 105, G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"HADES_FIELD_MAP\"' name C - 'Char_t' 10 '\"HADES_FIELD_MAP\"' title "
"d - 'Double_t' 0 '1' fPolarity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPolarity",1152,G__EventDisplayDict_988_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - fPolarity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,G__EventDisplayDict_988_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcField",855,G__EventDisplayDict_988_0_4, 121, -1, -1, 0, 2, 1, 1, 8, 
"D - 'Double_t' 0 - xv D - 'Double_t' 0 - btos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReadAscii",869,G__EventDisplayDict_988_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - infile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteAscii",1012,G__EventDisplayDict_988_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - outfile", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetField",772,(G__InterfaceMethod) NULL,117, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVectorTlEfloatgR), G__defined_typename("TEveVector"), 0, 3, 1, 1, 8, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetField",772,G__EventDisplayDict_988_0_8, 117, G__get_linked_tagnum(&G__EventDisplayDictLN_TEveVectorTlEfloatgR), G__defined_typename("TEveVector"), 0, 1, 1, 1, 8, "u 'TEveVectorT<float>' 'TEveVector' 11 - v", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetMaxFieldMag",1343,(G__InterfaceMethod) NULL,102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventDisplayDict_988_0_10, 85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEDField::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventDisplayDict_988_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDField::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventDisplayDict_988_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEDField::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventDisplayDict_988_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEDField::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventDisplayDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventDisplayDict_988_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventDisplayDict_988_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDField::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventDisplayDict_988_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDField::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventDisplayDict_988_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEDField::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventDisplayDict_988_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEDField::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HEDField", 693, G__EventDisplayDict_988_0_22, (int) ('i'), G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField), -1, 0, 1, 1, 1, 0, "u 'HEDField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HEDField", 819, G__EventDisplayDict_988_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventDisplayDict_988_0_24, (int) ('u'), G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField), -1, 1, 1, 1, 1, 0, "u 'HEDField' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEventDisplayDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {
}

static void G__cpp_setup_global4() {
}

static void G__cpp_setup_global5() {
}

static void G__cpp_setup_global6() {
}

static void G__cpp_setup_global7() {
   G__memvar_setup((void*)(&gEDField),85,0,0,G__get_linked_tagnum(&G__EventDisplayDictLN_HEDField),-1,-1,1,"gEDField=",0,(char*)NULL);

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEventDisplayDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
  G__cpp_setup_global4();
  G__cpp_setup_global5();
  G__cpp_setup_global6();
  G__cpp_setup_global7();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEventDisplayDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EventDisplayDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HTask = { "HTask" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGMainFrame = { "TGMainFrame" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HReconstructor = { "HReconstructor" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HParticleCand = { "HParticleCand" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HMdcSeg = { "HMdcSeg" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HTofHit = { "HTofHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HWallHit = { "HWallHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HShowerHit = { "HShowerHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HRichHit = { "HRichHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HRpcCluster = { "HRpcCluster" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HRichCal = { "HRichCal" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HGeantKine = { "HGeantKine" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveFrameBox = { "TEveFrameBox" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveTrack = { "TEveTrack" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveTrackPropagator = { "TEveTrackPropagator" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HGeomVector = { "HGeomVector" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HGeomTransform = { "HGeomTransform" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGeoSphere = { "TGeoSphere" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDTransform = { "HEDTransform" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDMdcWireManager = { "HEDMdcWireManager" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDMakeContainers = { "HEDMakeContainers" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR = { "set<int,less<int>,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveElement = { "TEveElement" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR = { "map<TEveElement*,int,less<TEveElement*>,allocator<pair<TEveElement* const,int> > >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveProjectable = { "TEveProjectable" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR = { "list<TEveProjected*,allocator<TEveProjected*> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR = { "set<TEveElement*,less<TEveElement*>,allocator<TEveElement*> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveCompound = { "TEveCompound" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR = { "set<TEveElement::TEveListTreeInfo,less<TEveElement::TEveListTreeInfo>,allocator<TEveElement::TEveListTreeInfo> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR = { "list<TEveElement*,allocator<TEveElement*> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveElementList = { "TEveElementList" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEvePointSelectorConsumer = { "TEvePointSelectorConsumer" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TAtt3D = { "TAtt3D" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TPolyMarker3D = { "TPolyMarker3D" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TAttBBox = { "TAttBBox" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TPointSet3D = { "TPointSet3D" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TQObject = { "TQObject" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEvePointSet = { "TEvePointSet" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveVectorTlEfloatgR = { "TEveVectorT<float>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveVectorTlEdoublegR = { "TEveVectorT<double>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveVector4TlEfloatgR = { "TEveVector4T<float>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveVector4TlEdoublegR = { "TEveVector4T<double>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveVector2TlEfloatgR = { "TEveVector2T<float>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveVector2TlEdoublegR = { "TEveVector2T<double>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveLine = { "TEveLine" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlETArrayCmUcOallocatorlETArrayCmUgRsPgR = { "vector<TArrayC*,allocator<TArrayC*> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_reverse_iteratorlEvectorlETArrayCmUcOallocatorlETArrayCmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TArrayC*,allocator<TArrayC*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveSecondarySelectable = { "TEveSecondarySelectable" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveDigitSet = { "TEveDigitSet" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveQuadSet = { "TEveQuadSet" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HMdcSegSim = { "HMdcSegSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HMdcCal1Sim = { "HMdcCal1Sim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HTofHitSim = { "HTofHitSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HWallHitSim = { "HWallHitSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HTofClusterSim = { "HTofClusterSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HShowerHitSim = { "HShowerHitSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HRichHitSim = { "HRichHitSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HRpcClusterSim = { "HRpcClusterSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HParticleCandSim = { "HParticleCandSim" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HGeantRichMirror = { "HGeantRichMirror" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HGeantRichDirect = { "HGeantRichDirect" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDVertex = { "HEDVertex" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDSegment = { "HEDSegment" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDMdcWire = { "HEDMdcWire" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRichHit = { "HEDRichHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDWallHit = { "HEDWallHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDWallPlane = { "HEDWallPlane" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDTofHit = { "HEDTofHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDTofCluster = { "HEDTofCluster" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRpcCluster = { "HEDRpcCluster" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDShowerHit = { "HEDShowerHit" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDParticleCand = { "HEDParticleCand" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRichPadPlane = { "HEDRichPadPlane" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRich700PadPlane = { "HEDRich700PadPlane" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRichRing = { "HEDRichRing" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRichHitPadPlane = { "HEDRichHitPadPlane" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRichGeantPadPlane = { "HEDRichGeantPadPlane" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRichGeantMirror = { "HEDRichGeantMirror" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDRichCompound = { "HEDRichCompound" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDGroup = { "HEDGroup" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDGroup2D = { "HEDGroup2D" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGObject = { "TGObject" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGWindow = { "TGWindow" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_pairlEunsignedsPintcOintgR = { "pair<unsigned int,int>" , 115 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR = { "vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<unsigned int,int>,allocator<pair<unsigned int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGFrame = { "TGFrame" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGCompositeFrame = { "TGCompositeFrame" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGTextButton = { "TGTextButton" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGHorizontalFrame = { "TGHorizontalFrame" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR = { "vector<TEveVector2T<float>,allocator<TEveVector2T<float> > >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TEveVector2T<float>,allocator<TEveVector2T<float> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_listlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR = { "list<TGeoShape*,allocator<TGeoShape*> >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveGeoTopNode = { "TEveGeoTopNode" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGCheckButton = { "TGCheckButton" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGTextEntry = { "TGTextEntry" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGNumberEntry = { "TGNumberEntry" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TGColorSelect = { "TGColorSelect" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDColorDef = { "HEDColorDef" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDNumberLabeled = { "HEDNumberLabeled" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDIDList = { "HEDIDList" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDSetup = { "HEDSetup" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEvePathMarkTlEfloatgR = { "TEvePathMarkT<float>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEvePathMarkTlEdoublegR = { "TEvePathMarkT<double>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_TEveMagField = { "TEveMagField" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_vectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgR = { "vector<TEveVector4T<double>,allocator<TEveVector4T<double> > >" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TEveVector4T<double>,allocator<TEveVector4T<double> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventDisplayDictLN_HEDField = { "HEDField" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEventDisplayDict() {
  G__EventDisplayDictLN_TClass.tagnum = -1 ;
  G__EventDisplayDictLN_TBuffer.tagnum = -1 ;
  G__EventDisplayDictLN_TMemberInspector.tagnum = -1 ;
  G__EventDisplayDictLN_TObject.tagnum = -1 ;
  G__EventDisplayDictLN_TNamed.tagnum = -1 ;
  G__EventDisplayDictLN_TString.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDisplayDictLN_TObjArray.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDisplayDictLN_HTask.tagnum = -1 ;
  G__EventDisplayDictLN_TGMainFrame.tagnum = -1 ;
  G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__EventDisplayDictLN_HReconstructor.tagnum = -1 ;
  G__EventDisplayDictLN_HParticleCand.tagnum = -1 ;
  G__EventDisplayDictLN_HMdcSeg.tagnum = -1 ;
  G__EventDisplayDictLN_HTofHit.tagnum = -1 ;
  G__EventDisplayDictLN_HWallHit.tagnum = -1 ;
  G__EventDisplayDictLN_HShowerHit.tagnum = -1 ;
  G__EventDisplayDictLN_HRichHit.tagnum = -1 ;
  G__EventDisplayDictLN_HRpcCluster.tagnum = -1 ;
  G__EventDisplayDictLN_HRichCal.tagnum = -1 ;
  G__EventDisplayDictLN_HGeantKine.tagnum = -1 ;
  G__EventDisplayDictLN_TEveFrameBox.tagnum = -1 ;
  G__EventDisplayDictLN_TEveTrack.tagnum = -1 ;
  G__EventDisplayDictLN_TEveTrackPropagator.tagnum = -1 ;
  G__EventDisplayDictLN_HGeomVector.tagnum = -1 ;
  G__EventDisplayDictLN_HGeomTransform.tagnum = -1 ;
  G__EventDisplayDictLN_TGeoSphere.tagnum = -1 ;
  G__EventDisplayDictLN_HEDTransform.tagnum = -1 ;
  G__EventDisplayDictLN_HEDMdcWireManager.tagnum = -1 ;
  G__EventDisplayDictLN_HEDMakeContainers.tagnum = -1 ;
  G__EventDisplayDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveElement.tagnum = -1 ;
  G__EventDisplayDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveProjectable.tagnum = -1 ;
  G__EventDisplayDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveCompound.tagnum = -1 ;
  G__EventDisplayDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveElementList.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEvePointSelectorConsumer.tagnum = -1 ;
  G__EventDisplayDictLN_TAttMarker.tagnum = -1 ;
  G__EventDisplayDictLN_TAtt3D.tagnum = -1 ;
  G__EventDisplayDictLN_TPolyMarker3D.tagnum = -1 ;
  G__EventDisplayDictLN_TAttBBox.tagnum = -1 ;
  G__EventDisplayDictLN_TPointSet3D.tagnum = -1 ;
  G__EventDisplayDictLN_TQObject.tagnum = -1 ;
  G__EventDisplayDictLN_TEvePointSet.tagnum = -1 ;
  G__EventDisplayDictLN_TEveVectorTlEfloatgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveVectorTlEdoublegR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveVector4TlEfloatgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveVector4TlEdoublegR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveVector2TlEfloatgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveVector2TlEdoublegR.tagnum = -1 ;
  G__EventDisplayDictLN_TAttLine.tagnum = -1 ;
  G__EventDisplayDictLN_TEveLine.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlETArrayCmUcOallocatorlETArrayCmUgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_reverse_iteratorlEvectorlETArrayCmUcOallocatorlETArrayCmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveSecondarySelectable.tagnum = -1 ;
  G__EventDisplayDictLN_TEveDigitSet.tagnum = -1 ;
  G__EventDisplayDictLN_TEveQuadSet.tagnum = -1 ;
  G__EventDisplayDictLN_HMdcSegSim.tagnum = -1 ;
  G__EventDisplayDictLN_HMdcCal1Sim.tagnum = -1 ;
  G__EventDisplayDictLN_HTofHitSim.tagnum = -1 ;
  G__EventDisplayDictLN_HWallHitSim.tagnum = -1 ;
  G__EventDisplayDictLN_HTofClusterSim.tagnum = -1 ;
  G__EventDisplayDictLN_HShowerHitSim.tagnum = -1 ;
  G__EventDisplayDictLN_HRichHitSim.tagnum = -1 ;
  G__EventDisplayDictLN_HRpcClusterSim.tagnum = -1 ;
  G__EventDisplayDictLN_HParticleCandSim.tagnum = -1 ;
  G__EventDisplayDictLN_HGeantRichMirror.tagnum = -1 ;
  G__EventDisplayDictLN_HGeantRichDirect.tagnum = -1 ;
  G__EventDisplayDictLN_HEDVertex.tagnum = -1 ;
  G__EventDisplayDictLN_HEDSegment.tagnum = -1 ;
  G__EventDisplayDictLN_HEDMdcWire.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRichHit.tagnum = -1 ;
  G__EventDisplayDictLN_HEDWallHit.tagnum = -1 ;
  G__EventDisplayDictLN_HEDWallPlane.tagnum = -1 ;
  G__EventDisplayDictLN_HEDTofHit.tagnum = -1 ;
  G__EventDisplayDictLN_HEDTofCluster.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRpcCluster.tagnum = -1 ;
  G__EventDisplayDictLN_HEDShowerHit.tagnum = -1 ;
  G__EventDisplayDictLN_HEDParticleCand.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRichPadPlane.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRich700PadPlane.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRichRing.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRichHitPadPlane.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRichGeantPadPlane.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRichGeantMirror.tagnum = -1 ;
  G__EventDisplayDictLN_HEDRichCompound.tagnum = -1 ;
  G__EventDisplayDictLN_HEDGroup.tagnum = -1 ;
  G__EventDisplayDictLN_HEDGroup2D.tagnum = -1 ;
  G__EventDisplayDictLN_TGObject.tagnum = -1 ;
  G__EventDisplayDictLN_TGWindow.tagnum = -1 ;
  G__EventDisplayDictLN_pairlEunsignedsPintcOintgR.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDisplayDictLN_TGFrame.tagnum = -1 ;
  G__EventDisplayDictLN_TGCompositeFrame.tagnum = -1 ;
  G__EventDisplayDictLN_TGTextButton.tagnum = -1 ;
  G__EventDisplayDictLN_TGHorizontalFrame.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDisplayDictLN_listlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveGeoTopNode.tagnum = -1 ;
  G__EventDisplayDictLN_TGCheckButton.tagnum = -1 ;
  G__EventDisplayDictLN_TGTextEntry.tagnum = -1 ;
  G__EventDisplayDictLN_TGNumberEntry.tagnum = -1 ;
  G__EventDisplayDictLN_TGColorSelect.tagnum = -1 ;
  G__EventDisplayDictLN_HEDColorDef.tagnum = -1 ;
  G__EventDisplayDictLN_HEDNumberLabeled.tagnum = -1 ;
  G__EventDisplayDictLN_HEDIDList.tagnum = -1 ;
  G__EventDisplayDictLN_HEDSetup.tagnum = -1 ;
  G__EventDisplayDictLN_TEvePathMarkTlEfloatgR.tagnum = -1 ;
  G__EventDisplayDictLN_TEvePathMarkTlEdoublegR.tagnum = -1 ;
  G__EventDisplayDictLN_TEveMagField.tagnum = -1 ;
  G__EventDisplayDictLN_vectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgR.tagnum = -1 ;
  G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventDisplayDictLN_HEDField.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEventDisplayDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TString);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HTask);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGMainFrame);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HReconstructor);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HParticleCand);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HMdcSeg);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HTofHit);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HWallHit);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HShowerHit);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HRichHit);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HRpcCluster);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HRichCal);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HGeantKine);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveFrameBox);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveTrack);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveTrackPropagator);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HGeomVector);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HGeomTransform);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGeoSphere);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDTransform),sizeof(HEDTransform),-1,28672,(char*)NULL,G__setup_memvarHEDTransform,G__setup_memfuncHEDTransform);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDMdcWireManager),sizeof(HEDMdcWireManager),-1,29952,"helper class to do wire statistics",G__setup_memvarHEDMdcWireManager,G__setup_memfuncHEDMdcWireManager);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDMakeContainers),sizeof(HEDMakeContainers),-1,62720,"dummy tasks to create all needed containers",G__setup_memvarHEDMakeContainers,G__setup_memfuncHEDMakeContainers);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_setlEintcOlesslEintgRcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveElement);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_maplETEveElementmUcOintcOlesslETEveElementmUgRcOallocatorlEpairlETEveElementmUsPconstcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveProjectable);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_listlETEveProjectedmUcOallocatorlETEveProjectedmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_setlETEveElementmUcOlesslETEveElementmUgRcOallocatorlETEveElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveCompound);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_setlETEveElementcLcLTEveListTreeInfocOlesslETEveElementcLcLTEveListTreeInfogRcOallocatorlETEveElementcLcLTEveListTreeInfogRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_listlETEveElementmUcOallocatorlETEveElementmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveElementList);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEvePointSelectorConsumer);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TAtt3D);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TPolyMarker3D);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TAttBBox);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TPointSet3D);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TQObject);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEvePointSet);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveVector4TlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveVector4TlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveVector2TlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveVector2TlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveLine);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlETArrayCmUcOallocatorlETArrayCmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETArrayCmUcOallocatorlETArrayCmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveSecondarySelectable);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveDigitSet);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveQuadSet);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HMdcSegSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HMdcCal1Sim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HTofHitSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HWallHitSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HTofClusterSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HShowerHitSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HRichHitSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HRpcClusterSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HParticleCandSim);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HGeantRichMirror);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HGeantRichDirect);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDVertex),sizeof(HEDVertex),-1,62720,"event vertex",G__setup_memvarHEDVertex,G__setup_memfuncHEDVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDSegment),sizeof(HEDSegment),-1,62720,"MDC segment",G__setup_memvarHEDSegment,G__setup_memfuncHEDSegment);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDMdcWire),sizeof(HEDMdcWire),-1,62720,"MDC wire",G__setup_memvarHEDMdcWire,G__setup_memfuncHEDMdcWire);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRichHit),sizeof(HEDRichHit),-1,62720,"RICH hit",G__setup_memvarHEDRichHit,G__setup_memfuncHEDRichHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDWallHit),sizeof(HEDWallHit),-1,62720,"WALL hit",G__setup_memvarHEDWallHit,G__setup_memfuncHEDWallHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDWallPlane),sizeof(HEDWallPlane),-1,62720,"Wall plane + fired cells",G__setup_memvarHEDWallPlane,G__setup_memfuncHEDWallPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDTofHit),sizeof(HEDTofHit),-1,62720,"TOF hit",G__setup_memvarHEDTofHit,G__setup_memfuncHEDTofHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDTofCluster),sizeof(HEDTofCluster),-1,62720,"TOF cluster",G__setup_memvarHEDTofCluster,G__setup_memfuncHEDTofCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRpcCluster),sizeof(HEDRpcCluster),-1,62720,"RPC cluster",G__setup_memvarHEDRpcCluster,G__setup_memfuncHEDRpcCluster);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDShowerHit),sizeof(HEDShowerHit),-1,62720,"SHOWER hit",G__setup_memvarHEDShowerHit,G__setup_memfuncHEDShowerHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDParticleCand),sizeof(HEDParticleCand),-1,62720,"RICH hit + inner/outer segment + kickplane hit + META hit",G__setup_memvarHEDParticleCand,G__setup_memfuncHEDParticleCand);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRichPadPlane),sizeof(HEDRichPadPlane),-1,62464,"RICH pad plane + fired cells per sector",G__setup_memvarHEDRichPadPlane,G__setup_memfuncHEDRichPadPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRich700PadPlane),sizeof(HEDRich700PadPlane),-1,62720,"RICH700 pad plane fired cells",G__setup_memvarHEDRich700PadPlane,G__setup_memfuncHEDRich700PadPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRichRing),sizeof(HEDRichRing),-1,62720,"RICH ring at pad plane",G__setup_memvarHEDRichRing,G__setup_memfuncHEDRichRing);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRichHitPadPlane),sizeof(HEDRichHitPadPlane),-1,62720,"RICH hit at pad plane",G__setup_memvarHEDRichHitPadPlane,G__setup_memfuncHEDRichHitPadPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRichGeantPadPlane),sizeof(HEDRichGeantPadPlane),-1,62720,"RICH hit at pad plane (GEANT)",G__setup_memvarHEDRichGeantPadPlane,G__setup_memfuncHEDRichGeantPadPlane);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRichGeantMirror),sizeof(HEDRichGeantMirror),-1,62464,"RICH hit at Mirror (GEANT)",G__setup_memvarHEDRichGeantMirror,G__setup_memfuncHEDRichGeantMirror);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDRichCompound),sizeof(HEDRichCompound),-1,62720,"RICH hit at pad plane + ring + mirror hit",G__setup_memvarHEDRichCompound,G__setup_memfuncHEDRichCompound);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDGroup),sizeof(HEDGroup),-1,62720,"Group objects in n lists like fashion",G__setup_memvarHEDGroup,G__setup_memfuncHEDGroup);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDGroup2D),sizeof(HEDGroup2D),-1,62720,"Group objects in 2 dim array lists",G__setup_memvarHEDGroup2D,G__setup_memfuncHEDGroup2D);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGObject);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGWindow);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_pairlEunsignedsPintcOintgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_reverse_iteratorlEvectorlEpairlEunsignedsPintcOintgRcOallocatorlEpairlEunsignedsPintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGFrame);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGCompositeFrame);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGTextButton);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGHorizontalFrame);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector2TlEfloatgRcOallocatorlETEveVector2TlEfloatgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_listlETGeoShapemUcOallocatorlETGeoShapemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveGeoTopNode);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGCheckButton);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGTextEntry);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGNumberEntry);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TGColorSelect);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDColorDef),sizeof(HEDColorDef),-1,29952,(char*)NULL,G__setup_memvarHEDColorDef,G__setup_memfuncHEDColorDef);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDNumberLabeled),sizeof(HEDNumberLabeled),-1,62464,(char*)NULL,G__setup_memvarHEDNumberLabeled,G__setup_memfuncHEDNumberLabeled);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDIDList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDSetup),sizeof(HEDSetup),-1,62464,(char*)NULL,G__setup_memvarHEDSetup,G__setup_memfuncHEDSetup);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEvePathMarkTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEvePathMarkTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_TEveMagField);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_vectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_reverse_iteratorlEvectorlETEveVector4TlEdoublegRcOallocatorlETEveVector4TlEdoublegRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventDisplayDictLN_HEDField),sizeof(HEDField),-1,128256,(char*)NULL,G__setup_memvarHEDField,G__setup_memfuncHEDField);
}
extern "C" void G__cpp_setupEventDisplayDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupEventDisplayDict()");
  G__set_cpp_environmentEventDisplayDict();
  G__cpp_setup_tagtableEventDisplayDict();

  G__cpp_setup_inheritanceEventDisplayDict();

  G__cpp_setup_typetableEventDisplayDict();

  G__cpp_setup_memvarEventDisplayDict();

  G__cpp_setup_memfuncEventDisplayDict();
  G__cpp_setup_globalEventDisplayDict();
  G__cpp_setup_funcEventDisplayDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEventDisplayDict();
  return;
}
class G__cpp_setup_initEventDisplayDict {
  public:
    G__cpp_setup_initEventDisplayDict() { G__add_setup_func("EventDisplayDict",(G__incsetup)(&G__cpp_setupEventDisplayDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEventDisplayDict() { G__remove_setup_func("EventDisplayDict"); }
};
G__cpp_setup_initEventDisplayDict G__cpp_setup_initializerEventDisplayDict;

