//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:44:43 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIRuntimeDbDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RuntimeDbDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HParSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParSet(void *p = 0);
   static void *newArray_HParSet(Long_t size, void *p);
   static void delete_HParSet(void *p);
   static void deleteArray_HParSet(void *p);
   static void destruct_HParSet(void *p);
   static void streamer_HParSet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParSet*)
   {
      ::HParSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParSet", ::HParSet::Class_Version(), "./runtimedb/hparset.h", 9,
                  typeid(::HParSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParSet::Dictionary, isa_proxy, 1,
                  sizeof(::HParSet) );
      instance.SetNew(&new_HParSet);
      instance.SetNewArray(&newArray_HParSet);
      instance.SetDelete(&delete_HParSet);
      instance.SetDeleteArray(&deleteArray_HParSet);
      instance.SetDestructor(&destruct_HParSet);
      instance.SetStreamerFunc(&streamer_HParSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParSet*)
   {
      return GenerateInitInstanceLocal((::HParSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HContainer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HContainer(void *p);
   static void deleteArray_HContainer(void *p);
   static void destruct_HContainer(void *p);
   static void streamer_HContainer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HContainer*)
   {
      ::HContainer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HContainer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HContainer", ::HContainer::Class_Version(), "./runtimedb/hcontfact.h", 9,
                  typeid(::HContainer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HContainer::Dictionary, isa_proxy, 0,
                  sizeof(::HContainer) );
      instance.SetDelete(&delete_HContainer);
      instance.SetDeleteArray(&deleteArray_HContainer);
      instance.SetDestructor(&destruct_HContainer);
      instance.SetStreamerFunc(&streamer_HContainer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HContainer*)
   {
      return GenerateInitInstanceLocal((::HContainer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HContainer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HContFact(void *p = 0);
   static void *newArray_HContFact(Long_t size, void *p);
   static void delete_HContFact(void *p);
   static void deleteArray_HContFact(void *p);
   static void destruct_HContFact(void *p);
   static void streamer_HContFact(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HContFact*)
   {
      ::HContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HContFact", ::HContFact::Class_Version(), "./runtimedb/hcontfact.h", 28,
                  typeid(::HContFact), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HContFact::Dictionary, isa_proxy, 0,
                  sizeof(::HContFact) );
      instance.SetNew(&new_HContFact);
      instance.SetNewArray(&newArray_HContFact);
      instance.SetDelete(&delete_HContFact);
      instance.SetDeleteArray(&deleteArray_HContFact);
      instance.SetDestructor(&destruct_HContFact);
      instance.SetStreamerFunc(&streamer_HContFact);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HContFact*)
   {
      return GenerateInitInstanceLocal((::HContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HBaseContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HBaseContFact(void *p = 0);
   static void *newArray_HBaseContFact(Long_t size, void *p);
   static void delete_HBaseContFact(void *p);
   static void deleteArray_HBaseContFact(void *p);
   static void destruct_HBaseContFact(void *p);
   static void streamer_HBaseContFact(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HBaseContFact*)
   {
      ::HBaseContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HBaseContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HBaseContFact", ::HBaseContFact::Class_Version(), "./runtimedb/hbasecontfact.h", 8,
                  typeid(::HBaseContFact), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HBaseContFact::Dictionary, isa_proxy, 0,
                  sizeof(::HBaseContFact) );
      instance.SetNew(&new_HBaseContFact);
      instance.SetNewArray(&newArray_HBaseContFact);
      instance.SetDelete(&delete_HBaseContFact);
      instance.SetDeleteArray(&deleteArray_HBaseContFact);
      instance.SetDestructor(&destruct_HBaseContFact);
      instance.SetStreamerFunc(&streamer_HBaseContFact);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HBaseContFact*)
   {
      return GenerateInitInstanceLocal((::HBaseContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HBaseContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParIo(void *p = 0);
   static void *newArray_HParIo(Long_t size, void *p);
   static void delete_HParIo(void *p);
   static void deleteArray_HParIo(void *p);
   static void destruct_HParIo(void *p);
   static void streamer_HParIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParIo*)
   {
      ::HParIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParIo", ::HParIo::Class_Version(), "./runtimedb/hpario.h", 11,
                  typeid(::HParIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParIo::Dictionary, isa_proxy, 0,
                  sizeof(::HParIo) );
      instance.SetNew(&new_HParIo);
      instance.SetNewArray(&newArray_HParIo);
      instance.SetDelete(&delete_HParIo);
      instance.SetDeleteArray(&deleteArray_HParIo);
      instance.SetDestructor(&destruct_HParIo);
      instance.SetStreamerFunc(&streamer_HParIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParIo*)
   {
      return GenerateInitInstanceLocal((::HParIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HRun_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HRun(void *p = 0);
   static void *newArray_HRun(Long_t size, void *p);
   static void delete_HRun(void *p);
   static void deleteArray_HRun(void *p);
   static void destruct_HRun(void *p);
   static void streamer_HRun(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HRun*)
   {
      ::HRun *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HRun >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HRun", ::HRun::Class_Version(), "./runtimedb/hrun.h", 34,
                  typeid(::HRun), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HRun::Dictionary, isa_proxy, 0,
                  sizeof(::HRun) );
      instance.SetNew(&new_HRun);
      instance.SetNewArray(&newArray_HRun);
      instance.SetDelete(&delete_HRun);
      instance.SetDeleteArray(&deleteArray_HRun);
      instance.SetDestructor(&destruct_HRun);
      instance.SetStreamerFunc(&streamer_HRun);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HRun*)
   {
      return GenerateInitInstanceLocal((::HRun*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HRun*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParamFileGenerator_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParamFileGenerator(void *p);
   static void deleteArray_HParamFileGenerator(void *p);
   static void destruct_HParamFileGenerator(void *p);
   static void streamer_HParamFileGenerator(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParamFileGenerator*)
   {
      ::HParamFileGenerator *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParamFileGenerator >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParamFileGenerator", ::HParamFileGenerator::Class_Version(), "./runtimedb/hparamfilegenerator.h", 12,
                  typeid(::HParamFileGenerator), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParamFileGenerator::Dictionary, isa_proxy, 0,
                  sizeof(::HParamFileGenerator) );
      instance.SetDelete(&delete_HParamFileGenerator);
      instance.SetDeleteArray(&deleteArray_HParamFileGenerator);
      instance.SetDestructor(&destruct_HParamFileGenerator);
      instance.SetStreamerFunc(&streamer_HParamFileGenerator);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParamFileGenerator*)
   {
      return GenerateInitInstanceLocal((::HParamFileGenerator*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParamFileGenerator*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HRuntimeDb_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HRuntimeDb(void *p);
   static void deleteArray_HRuntimeDb(void *p);
   static void destruct_HRuntimeDb(void *p);
   static void streamer_HRuntimeDb(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HRuntimeDb*)
   {
      ::HRuntimeDb *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HRuntimeDb >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HRuntimeDb", ::HRuntimeDb::Class_Version(), "./runtimedb/hruntimedb.h", 14,
                  typeid(::HRuntimeDb), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HRuntimeDb::Dictionary, isa_proxy, 1,
                  sizeof(::HRuntimeDb) );
      instance.SetDelete(&delete_HRuntimeDb);
      instance.SetDeleteArray(&deleteArray_HRuntimeDb);
      instance.SetDestructor(&destruct_HRuntimeDb);
      instance.SetStreamerFunc(&streamer_HRuntimeDb);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HRuntimeDb*)
   {
      return GenerateInitInstanceLocal((::HRuntimeDb*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HRuntimeDb*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParamList_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParamList(void *p = 0);
   static void *newArray_HParamList(Long_t size, void *p);
   static void delete_HParamList(void *p);
   static void deleteArray_HParamList(void *p);
   static void destruct_HParamList(void *p);
   static void streamer_HParamList(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParamList*)
   {
      ::HParamList *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParamList >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParamList", ::HParamList::Class_Version(), "./runtimedb/hparamlist.h", 63,
                  typeid(::HParamList), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParamList::Dictionary, isa_proxy, 0,
                  sizeof(::HParamList) );
      instance.SetNew(&new_HParamList);
      instance.SetNewArray(&newArray_HParamList);
      instance.SetDelete(&delete_HParamList);
      instance.SetDeleteArray(&deleteArray_HParamList);
      instance.SetDestructor(&destruct_HParamList);
      instance.SetStreamerFunc(&streamer_HParamList);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParamList*)
   {
      return GenerateInitInstanceLocal((::HParamList*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParamList*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParCond_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParCond(void *p);
   static void deleteArray_HParCond(void *p);
   static void destruct_HParCond(void *p);
   static void streamer_HParCond(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParCond*)
   {
      ::HParCond *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParCond >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParCond", ::HParCond::Class_Version(), "./runtimedb/hparcond.h", 8,
                  typeid(::HParCond), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParCond::Dictionary, isa_proxy, 0,
                  sizeof(::HParCond) );
      instance.SetDelete(&delete_HParCond);
      instance.SetDeleteArray(&deleteArray_HParCond);
      instance.SetDestructor(&destruct_HParCond);
      instance.SetStreamerFunc(&streamer_HParCond);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParCond*)
   {
      return GenerateInitInstanceLocal((::HParCond*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParCond*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParamObj_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParamObj(void *p = 0);
   static void *newArray_HParamObj(Long_t size, void *p);
   static void delete_HParamObj(void *p);
   static void deleteArray_HParamObj(void *p);
   static void destruct_HParamObj(void *p);
   static void streamer_HParamObj(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParamObj*)
   {
      ::HParamObj *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParamObj >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParamObj", ::HParamObj::Class_Version(), "./runtimedb/hparamlist.h", 14,
                  typeid(::HParamObj), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParamObj::Dictionary, isa_proxy, 0,
                  sizeof(::HParamObj) );
      instance.SetNew(&new_HParamObj);
      instance.SetNewArray(&newArray_HParamObj);
      instance.SetDelete(&delete_HParamObj);
      instance.SetDeleteArray(&deleteArray_HParamObj);
      instance.SetDestructor(&destruct_HParamObj);
      instance.SetStreamerFunc(&streamer_HParamObj);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParamObj*)
   {
      return GenerateInitInstanceLocal((::HParamObj*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParamObj*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParVersion_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParVersion(void *p = 0);
   static void *newArray_HParVersion(Long_t size, void *p);
   static void delete_HParVersion(void *p);
   static void deleteArray_HParVersion(void *p);
   static void destruct_HParVersion(void *p);
   static void streamer_HParVersion(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParVersion*)
   {
      ::HParVersion *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParVersion >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParVersion", ::HParVersion::Class_Version(), "./runtimedb/hrun.h", 11,
                  typeid(::HParVersion), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParVersion::Dictionary, isa_proxy, 0,
                  sizeof(::HParVersion) );
      instance.SetNew(&new_HParVersion);
      instance.SetNewArray(&newArray_HParVersion);
      instance.SetDelete(&delete_HParVersion);
      instance.SetDeleteArray(&deleteArray_HParVersion);
      instance.SetDestructor(&destruct_HParVersion);
      instance.SetStreamerFunc(&streamer_HParVersion);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParVersion*)
   {
      return GenerateInitInstanceLocal((::HParVersion*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParVersion*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HDetParIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HDetParIo(void *p = 0);
   static void *newArray_HDetParIo(Long_t size, void *p);
   static void delete_HDetParIo(void *p);
   static void deleteArray_HDetParIo(void *p);
   static void destruct_HDetParIo(void *p);
   static void streamer_HDetParIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HDetParIo*)
   {
      ::HDetParIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HDetParIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HDetParIo", ::HDetParIo::Class_Version(), "./runtimedb/hdetpario.h", 13,
                  typeid(::HDetParIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HDetParIo::Dictionary, isa_proxy, 0,
                  sizeof(::HDetParIo) );
      instance.SetNew(&new_HDetParIo);
      instance.SetNewArray(&newArray_HDetParIo);
      instance.SetDelete(&delete_HDetParIo);
      instance.SetDeleteArray(&deleteArray_HDetParIo);
      instance.SetDestructor(&destruct_HDetParIo);
      instance.SetStreamerFunc(&streamer_HDetParIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HDetParIo*)
   {
      return GenerateInitInstanceLocal((::HDetParIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HDetParIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParRootFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParRootFile(void *p);
   static void deleteArray_HParRootFile(void *p);
   static void destruct_HParRootFile(void *p);
   static void streamer_HParRootFile(TBuffer &buf, void *obj);
   static void reset_HParRootFile(void *obj, TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParRootFile*)
   {
      ::HParRootFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParRootFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParRootFile", ::HParRootFile::Class_Version(), "./runtimedb/hparrootfileio.h", 19,
                  typeid(::HParRootFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParRootFile::Dictionary, isa_proxy, 0,
                  sizeof(::HParRootFile) );
      instance.SetDelete(&delete_HParRootFile);
      instance.SetDeleteArray(&deleteArray_HParRootFile);
      instance.SetDestructor(&destruct_HParRootFile);
      instance.SetStreamerFunc(&streamer_HParRootFile);
      instance.SetResetAfterMerge(&reset_HParRootFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParRootFile*)
   {
      return GenerateInitInstanceLocal((::HParRootFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParRootFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParRootFileIo(void *p = 0);
   static void *newArray_HParRootFileIo(Long_t size, void *p);
   static void delete_HParRootFileIo(void *p);
   static void deleteArray_HParRootFileIo(void *p);
   static void destruct_HParRootFileIo(void *p);
   static void streamer_HParRootFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParRootFileIo*)
   {
      ::HParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParRootFileIo", ::HParRootFileIo::Class_Version(), "./runtimedb/hparrootfileio.h", 31,
                  typeid(::HParRootFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParRootFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HParRootFileIo) );
      instance.SetNew(&new_HParRootFileIo);
      instance.SetNewArray(&newArray_HParRootFileIo);
      instance.SetDelete(&delete_HParRootFileIo);
      instance.SetDeleteArray(&deleteArray_HParRootFileIo);
      instance.SetDestructor(&destruct_HParRootFileIo);
      instance.SetStreamerFunc(&streamer_HParRootFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::HParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HDetParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HDetParRootFileIo(void *p);
   static void deleteArray_HDetParRootFileIo(void *p);
   static void destruct_HDetParRootFileIo(void *p);
   static void streamer_HDetParRootFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HDetParRootFileIo*)
   {
      ::HDetParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HDetParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HDetParRootFileIo", ::HDetParRootFileIo::Class_Version(), "./runtimedb/hdetparrootfileio.h", 13,
                  typeid(::HDetParRootFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HDetParRootFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HDetParRootFileIo) );
      instance.SetDelete(&delete_HDetParRootFileIo);
      instance.SetDeleteArray(&deleteArray_HDetParRootFileIo);
      instance.SetDestructor(&destruct_HDetParRootFileIo);
      instance.SetStreamerFunc(&streamer_HDetParRootFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HDetParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::HDetParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HDetParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HCondParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HCondParRootFileIo(void *p = 0);
   static void *newArray_HCondParRootFileIo(Long_t size, void *p);
   static void delete_HCondParRootFileIo(void *p);
   static void deleteArray_HCondParRootFileIo(void *p);
   static void destruct_HCondParRootFileIo(void *p);
   static void streamer_HCondParRootFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HCondParRootFileIo*)
   {
      ::HCondParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HCondParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HCondParRootFileIo", ::HCondParRootFileIo::Class_Version(), "./runtimedb/hcondparrootfileio.h", 9,
                  typeid(::HCondParRootFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HCondParRootFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HCondParRootFileIo) );
      instance.SetNew(&new_HCondParRootFileIo);
      instance.SetNewArray(&newArray_HCondParRootFileIo);
      instance.SetDelete(&delete_HCondParRootFileIo);
      instance.SetDeleteArray(&deleteArray_HCondParRootFileIo);
      instance.SetDestructor(&destruct_HCondParRootFileIo);
      instance.SetStreamerFunc(&streamer_HCondParRootFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HCondParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::HCondParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HCondParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HSpecParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HSpecParRootFileIo(void *p);
   static void deleteArray_HSpecParRootFileIo(void *p);
   static void destruct_HSpecParRootFileIo(void *p);
   static void streamer_HSpecParRootFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HSpecParRootFileIo*)
   {
      ::HSpecParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HSpecParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HSpecParRootFileIo", ::HSpecParRootFileIo::Class_Version(), "./runtimedb/hspecparrootfileio.h", 10,
                  typeid(::HSpecParRootFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HSpecParRootFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HSpecParRootFileIo) );
      instance.SetDelete(&delete_HSpecParRootFileIo);
      instance.SetDeleteArray(&deleteArray_HSpecParRootFileIo);
      instance.SetDestructor(&destruct_HSpecParRootFileIo);
      instance.SetStreamerFunc(&streamer_HSpecParRootFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HSpecParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::HSpecParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HSpecParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParAsciiFileIo(void *p = 0);
   static void *newArray_HParAsciiFileIo(Long_t size, void *p);
   static void delete_HParAsciiFileIo(void *p);
   static void deleteArray_HParAsciiFileIo(void *p);
   static void destruct_HParAsciiFileIo(void *p);
   static void streamer_HParAsciiFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParAsciiFileIo*)
   {
      ::HParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParAsciiFileIo", ::HParAsciiFileIo::Class_Version(), "./runtimedb/hparasciifileio.h", 21,
                  typeid(::HParAsciiFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParAsciiFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HParAsciiFileIo) );
      instance.SetNew(&new_HParAsciiFileIo);
      instance.SetNewArray(&newArray_HParAsciiFileIo);
      instance.SetDelete(&delete_HParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_HParAsciiFileIo);
      instance.SetDestructor(&destruct_HParAsciiFileIo);
      instance.SetStreamerFunc(&streamer_HParAsciiFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::HParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HDetParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HDetParAsciiFileIo(void *p);
   static void deleteArray_HDetParAsciiFileIo(void *p);
   static void destruct_HDetParAsciiFileIo(void *p);
   static void streamer_HDetParAsciiFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HDetParAsciiFileIo*)
   {
      ::HDetParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HDetParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HDetParAsciiFileIo", ::HDetParAsciiFileIo::Class_Version(), "./runtimedb/hdetparasciifileio.h", 16,
                  typeid(::HDetParAsciiFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HDetParAsciiFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HDetParAsciiFileIo) );
      instance.SetDelete(&delete_HDetParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_HDetParAsciiFileIo);
      instance.SetDestructor(&destruct_HDetParAsciiFileIo);
      instance.SetStreamerFunc(&streamer_HDetParAsciiFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HDetParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::HDetParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HDetParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HCondParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HCondParAsciiFileIo(void *p = 0);
   static void *newArray_HCondParAsciiFileIo(Long_t size, void *p);
   static void delete_HCondParAsciiFileIo(void *p);
   static void deleteArray_HCondParAsciiFileIo(void *p);
   static void destruct_HCondParAsciiFileIo(void *p);
   static void streamer_HCondParAsciiFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HCondParAsciiFileIo*)
   {
      ::HCondParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HCondParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HCondParAsciiFileIo", ::HCondParAsciiFileIo::Class_Version(), "./runtimedb/hcondparasciifileio.h", 11,
                  typeid(::HCondParAsciiFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HCondParAsciiFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HCondParAsciiFileIo) );
      instance.SetNew(&new_HCondParAsciiFileIo);
      instance.SetNewArray(&newArray_HCondParAsciiFileIo);
      instance.SetDelete(&delete_HCondParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_HCondParAsciiFileIo);
      instance.SetDestructor(&destruct_HCondParAsciiFileIo);
      instance.SetStreamerFunc(&streamer_HCondParAsciiFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HCondParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::HCondParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HCondParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HSpecParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HSpecParAsciiFileIo(void *p);
   static void deleteArray_HSpecParAsciiFileIo(void *p);
   static void destruct_HSpecParAsciiFileIo(void *p);
   static void streamer_HSpecParAsciiFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HSpecParAsciiFileIo*)
   {
      ::HSpecParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HSpecParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HSpecParAsciiFileIo", ::HSpecParAsciiFileIo::Class_Version(), "./runtimedb/hspecparasciifileio.h", 9,
                  typeid(::HSpecParAsciiFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HSpecParAsciiFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HSpecParAsciiFileIo) );
      instance.SetDelete(&delete_HSpecParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_HSpecParAsciiFileIo);
      instance.SetDestructor(&destruct_HSpecParAsciiFileIo);
      instance.SetStreamerFunc(&streamer_HSpecParAsciiFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HSpecParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::HSpecParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HSpecParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HRunInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HRunInfo(void *p = 0);
   static void *newArray_HRunInfo(Long_t size, void *p);
   static void delete_HRunInfo(void *p);
   static void deleteArray_HRunInfo(void *p);
   static void destruct_HRunInfo(void *p);
   static void streamer_HRunInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HRunInfo*)
   {
      ::HRunInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HRunInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HRunInfo", ::HRunInfo::Class_Version(), "./runtimedb/hruninfo.h", 10,
                  typeid(::HRunInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HRunInfo::Dictionary, isa_proxy, 0,
                  sizeof(::HRunInfo) );
      instance.SetNew(&new_HRunInfo);
      instance.SetNewArray(&newArray_HRunInfo);
      instance.SetDelete(&delete_HRunInfo);
      instance.SetDeleteArray(&deleteArray_HRunInfo);
      instance.SetDestructor(&destruct_HRunInfo);
      instance.SetStreamerFunc(&streamer_HRunInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HRunInfo*)
   {
      return GenerateInitInstanceLocal((::HRunInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HRunInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFileInfo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFileInfo(void *p = 0);
   static void *newArray_HFileInfo(Long_t size, void *p);
   static void delete_HFileInfo(void *p);
   static void deleteArray_HFileInfo(void *p);
   static void destruct_HFileInfo(void *p);
   static void streamer_HFileInfo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFileInfo*)
   {
      ::HFileInfo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFileInfo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFileInfo", ::HFileInfo::Class_Version(), "./runtimedb/hfileinfo.h", 6,
                  typeid(::HFileInfo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFileInfo::Dictionary, isa_proxy, 0,
                  sizeof(::HFileInfo) );
      instance.SetNew(&new_HFileInfo);
      instance.SetNewArray(&newArray_HFileInfo);
      instance.SetDelete(&delete_HFileInfo);
      instance.SetDeleteArray(&deleteArray_HFileInfo);
      instance.SetDestructor(&destruct_HFileInfo);
      instance.SetStreamerFunc(&streamer_HFileInfo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFileInfo*)
   {
      return GenerateInitInstanceLocal((::HFileInfo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFileInfo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HMagnetPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HMagnetPar(void *p = 0);
   static void *newArray_HMagnetPar(Long_t size, void *p);
   static void delete_HMagnetPar(void *p);
   static void deleteArray_HMagnetPar(void *p);
   static void destruct_HMagnetPar(void *p);
   static void streamer_HMagnetPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HMagnetPar*)
   {
      ::HMagnetPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HMagnetPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HMagnetPar", ::HMagnetPar::Class_Version(), "./runtimedb/hmagnetpar.h", 7,
                  typeid(::HMagnetPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HMagnetPar::Dictionary, isa_proxy, 0,
                  sizeof(::HMagnetPar) );
      instance.SetNew(&new_HMagnetPar);
      instance.SetNewArray(&newArray_HMagnetPar);
      instance.SetDelete(&delete_HMagnetPar);
      instance.SetDeleteArray(&deleteArray_HMagnetPar);
      instance.SetDestructor(&destruct_HMagnetPar);
      instance.SetStreamerFunc(&streamer_HMagnetPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HMagnetPar*)
   {
      return GenerateInitInstanceLocal((::HMagnetPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HMagnetPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HSlowChan_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HSlowChan(void *p = 0);
   static void *newArray_HSlowChan(Long_t size, void *p);
   static void delete_HSlowChan(void *p);
   static void deleteArray_HSlowChan(void *p);
   static void destruct_HSlowChan(void *p);
   static void streamer_HSlowChan(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HSlowChan*)
   {
      ::HSlowChan *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HSlowChan >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HSlowChan", ::HSlowChan::Class_Version(), "./runtimedb/hslowpar.h", 21,
                  typeid(::HSlowChan), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HSlowChan::Dictionary, isa_proxy, 0,
                  sizeof(::HSlowChan) );
      instance.SetNew(&new_HSlowChan);
      instance.SetNewArray(&newArray_HSlowChan);
      instance.SetDelete(&delete_HSlowChan);
      instance.SetDeleteArray(&deleteArray_HSlowChan);
      instance.SetDestructor(&destruct_HSlowChan);
      instance.SetStreamerFunc(&streamer_HSlowChan);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HSlowChan*)
   {
      return GenerateInitInstanceLocal((::HSlowChan*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HSlowChan*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HSlowPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HSlowPar(void *p = 0);
   static void *newArray_HSlowPar(Long_t size, void *p);
   static void delete_HSlowPar(void *p);
   static void deleteArray_HSlowPar(void *p);
   static void destruct_HSlowPar(void *p);
   static void streamer_HSlowPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HSlowPar*)
   {
      ::HSlowPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HSlowPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HSlowPar", ::HSlowPar::Class_Version(), "./runtimedb/hslowpar.h", 97,
                  typeid(::HSlowPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HSlowPar::Dictionary, isa_proxy, 0,
                  sizeof(::HSlowPar) );
      instance.SetNew(&new_HSlowPar);
      instance.SetNewArray(&newArray_HSlowPar);
      instance.SetDelete(&delete_HSlowPar);
      instance.SetDeleteArray(&deleteArray_HSlowPar);
      instance.SetDestructor(&destruct_HSlowPar);
      instance.SetStreamerFunc(&streamer_HSlowPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HSlowPar*)
   {
      return GenerateInitInstanceLocal((::HSlowPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HSlowPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEmcSimulPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEmcSimulPar(void *p = 0);
   static void *newArray_HEmcSimulPar(Long_t size, void *p);
   static void delete_HEmcSimulPar(void *p);
   static void deleteArray_HEmcSimulPar(void *p);
   static void destruct_HEmcSimulPar(void *p);
   static void streamer_HEmcSimulPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEmcSimulPar*)
   {
      ::HEmcSimulPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEmcSimulPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEmcSimulPar", ::HEmcSimulPar::Class_Version(), "./runtimedb/hemcsimulpar.h", 7,
                  typeid(::HEmcSimulPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEmcSimulPar::Dictionary, isa_proxy, 0,
                  sizeof(::HEmcSimulPar) );
      instance.SetNew(&new_HEmcSimulPar);
      instance.SetNewArray(&newArray_HEmcSimulPar);
      instance.SetDelete(&delete_HEmcSimulPar);
      instance.SetDeleteArray(&deleteArray_HEmcSimulPar);
      instance.SetDestructor(&destruct_HEmcSimulPar);
      instance.SetStreamerFunc(&streamer_HEmcSimulPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEmcSimulPar*)
   {
      return GenerateInitInstanceLocal((::HEmcSimulPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEmcSimulPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HParSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParSet::Class_Name()
{
   return "HParSet";
}

//______________________________________________________________________________
const char *HParSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HContainer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HContainer::Class_Name()
{
   return "HContainer";
}

//______________________________________________________________________________
const char *HContainer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HContainer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HContainer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HContainer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HContainer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HContainer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HContainer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HContainer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HContFact::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HContFact::Class_Name()
{
   return "HContFact";
}

//______________________________________________________________________________
const char *HContFact::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HContFact::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HContFact::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HContFact::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HContFact*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HBaseContFact::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HBaseContFact::Class_Name()
{
   return "HBaseContFact";
}

//______________________________________________________________________________
const char *HBaseContFact::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HBaseContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HBaseContFact::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HBaseContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HBaseContFact::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HBaseContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HBaseContFact::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HBaseContFact*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParIo::Class_Name()
{
   return "HParIo";
}

//______________________________________________________________________________
const char *HParIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HRun::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HRun::Class_Name()
{
   return "HRun";
}

//______________________________________________________________________________
const char *HRun::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRun*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HRun::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRun*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HRun::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRun*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HRun::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRun*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParamFileGenerator::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParamFileGenerator::Class_Name()
{
   return "HParamFileGenerator";
}

//______________________________________________________________________________
const char *HParamFileGenerator::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParamFileGenerator*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParamFileGenerator::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParamFileGenerator*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParamFileGenerator::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParamFileGenerator*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParamFileGenerator::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParamFileGenerator*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HRuntimeDb::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HRuntimeDb::Class_Name()
{
   return "HRuntimeDb";
}

//______________________________________________________________________________
const char *HRuntimeDb::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRuntimeDb*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HRuntimeDb::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRuntimeDb*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HRuntimeDb::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRuntimeDb*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HRuntimeDb::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRuntimeDb*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParamList::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParamList::Class_Name()
{
   return "HParamList";
}

//______________________________________________________________________________
const char *HParamList::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParamList*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParamList::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParamList*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParamList::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParamList*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParamList::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParamList*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParCond::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParCond::Class_Name()
{
   return "HParCond";
}

//______________________________________________________________________________
const char *HParCond::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParCond*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParCond::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParCond*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParCond::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParCond*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParCond::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParCond*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParamObj::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParamObj::Class_Name()
{
   return "HParamObj";
}

//______________________________________________________________________________
const char *HParamObj::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParamObj*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParamObj::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParamObj*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParamObj::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParamObj*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParamObj::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParamObj*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParVersion::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParVersion::Class_Name()
{
   return "HParVersion";
}

//______________________________________________________________________________
const char *HParVersion::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParVersion*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParVersion::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParVersion*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParVersion::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParVersion*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParVersion::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParVersion*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HDetParIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HDetParIo::Class_Name()
{
   return "HDetParIo";
}

//______________________________________________________________________________
const char *HDetParIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HDetParIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HDetParIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HDetParIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParRootFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParRootFile::Class_Name()
{
   return "HParRootFile";
}

//______________________________________________________________________________
const char *HParRootFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParRootFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParRootFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParRootFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParRootFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParRootFileIo::Class_Name()
{
   return "HParRootFileIo";
}

//______________________________________________________________________________
const char *HParRootFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParRootFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParRootFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParRootFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParRootFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HDetParRootFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HDetParRootFileIo::Class_Name()
{
   return "HDetParRootFileIo";
}

//______________________________________________________________________________
const char *HDetParRootFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HDetParRootFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HDetParRootFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HDetParRootFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParRootFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HCondParRootFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HCondParRootFileIo::Class_Name()
{
   return "HCondParRootFileIo";
}

//______________________________________________________________________________
const char *HCondParRootFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HCondParRootFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HCondParRootFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HCondParRootFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParRootFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HSpecParRootFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HSpecParRootFileIo::Class_Name()
{
   return "HSpecParRootFileIo";
}

//______________________________________________________________________________
const char *HSpecParRootFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HSpecParRootFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HSpecParRootFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HSpecParRootFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParRootFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParAsciiFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParAsciiFileIo::Class_Name()
{
   return "HParAsciiFileIo";
}

//______________________________________________________________________________
const char *HParAsciiFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParAsciiFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParAsciiFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParAsciiFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HDetParAsciiFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HDetParAsciiFileIo::Class_Name()
{
   return "HDetParAsciiFileIo";
}

//______________________________________________________________________________
const char *HDetParAsciiFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HDetParAsciiFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HDetParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HDetParAsciiFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetParAsciiFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HCondParAsciiFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HCondParAsciiFileIo::Class_Name()
{
   return "HCondParAsciiFileIo";
}

//______________________________________________________________________________
const char *HCondParAsciiFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HCondParAsciiFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HCondParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HCondParAsciiFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HCondParAsciiFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HSpecParAsciiFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HSpecParAsciiFileIo::Class_Name()
{
   return "HSpecParAsciiFileIo";
}

//______________________________________________________________________________
const char *HSpecParAsciiFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HSpecParAsciiFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HSpecParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HSpecParAsciiFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSpecParAsciiFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HRunInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HRunInfo::Class_Name()
{
   return "HRunInfo";
}

//______________________________________________________________________________
const char *HRunInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRunInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HRunInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRunInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HRunInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRunInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HRunInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRunInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFileInfo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFileInfo::Class_Name()
{
   return "HFileInfo";
}

//______________________________________________________________________________
const char *HFileInfo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFileInfo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFileInfo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFileInfo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFileInfo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFileInfo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFileInfo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFileInfo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HMagnetPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HMagnetPar::Class_Name()
{
   return "HMagnetPar";
}

//______________________________________________________________________________
const char *HMagnetPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMagnetPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HMagnetPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HMagnetPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HMagnetPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMagnetPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HMagnetPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HMagnetPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HSlowChan::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HSlowChan::Class_Name()
{
   return "HSlowChan";
}

//______________________________________________________________________________
const char *HSlowChan::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowChan*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HSlowChan::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowChan*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HSlowChan::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowChan*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HSlowChan::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowChan*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HSlowPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HSlowPar::Class_Name()
{
   return "HSlowPar";
}

//______________________________________________________________________________
const char *HSlowPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HSlowPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HSlowPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HSlowPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSlowPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEmcSimulPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEmcSimulPar::Class_Name()
{
   return "HEmcSimulPar";
}

//______________________________________________________________________________
const char *HEmcSimulPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEmcSimulPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEmcSimulPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEmcSimulPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEmcSimulPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEmcSimulPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEmcSimulPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEmcSimulPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HRuntimeDb::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HRuntimeDb.
      TClass *R__cl = ::HRuntimeDb::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "contFactories", &contFactories);
      R__insp.InspectMember(contFactories, "contFactories.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*containerList", &containerList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runs", &runs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*firstInput", &firstInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*secondInput", &secondInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*output", &output);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*currentRun", &currentRun);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currentFileName", &currentFileName);
      R__insp.InspectMember(currentFileName, "currentFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "versionsChanged", &versionsChanged);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isRootFileOutput", &isRootFileOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pParamFileGenerator", &pParamFileGenerator);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HRuntimeDb(void *p) {
      delete ((::HRuntimeDb*)p);
   }
   static void deleteArray_HRuntimeDb(void *p) {
      delete [] ((::HRuntimeDb*)p);
   }
   static void destruct_HRuntimeDb(void *p) {
      typedef ::HRuntimeDb current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HRuntimeDb(TBuffer &buf, void *obj) {
      ((::HRuntimeDb*)obj)->::HRuntimeDb::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HRuntimeDb

//______________________________________________________________________________
void HContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class HContFact.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void HContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HContFact.
      TClass *R__cl = ::HContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*containers", &containers);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HContFact(void *p) {
      return  p ? new(p) ::HContFact : new ::HContFact;
   }
   static void *newArray_HContFact(Long_t nElements, void *p) {
      return p ? new(p) ::HContFact[nElements] : new ::HContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_HContFact(void *p) {
      delete ((::HContFact*)p);
   }
   static void deleteArray_HContFact(void *p) {
      delete [] ((::HContFact*)p);
   }
   static void destruct_HContFact(void *p) {
      typedef ::HContFact current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HContFact(TBuffer &buf, void *obj) {
      ((::HContFact*)obj)->::HContFact::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HContFact

//______________________________________________________________________________
void HBaseContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class HBaseContFact.

   HContFact::Streamer(R__b);
}

//______________________________________________________________________________
void HBaseContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HBaseContFact.
      TClass *R__cl = ::HBaseContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      HContFact::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HBaseContFact(void *p) {
      return  p ? new(p) ::HBaseContFact : new ::HBaseContFact;
   }
   static void *newArray_HBaseContFact(Long_t nElements, void *p) {
      return p ? new(p) ::HBaseContFact[nElements] : new ::HBaseContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_HBaseContFact(void *p) {
      delete ((::HBaseContFact*)p);
   }
   static void deleteArray_HBaseContFact(void *p) {
      delete [] ((::HBaseContFact*)p);
   }
   static void destruct_HBaseContFact(void *p) {
      typedef ::HBaseContFact current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HBaseContFact(TBuffer &buf, void *obj) {
      ((::HBaseContFact*)obj)->::HBaseContFact::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HBaseContFact

//______________________________________________________________________________
void HContainer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HContainer.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void HContainer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HContainer.
      TClass *R__cl = ::HContainer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*contexts", &contexts);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "actualContext", &actualContext);
      R__insp.InspectMember(actualContext, "actualContext.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HContainer(void *p) {
      delete ((::HContainer*)p);
   }
   static void deleteArray_HContainer(void *p) {
      delete [] ((::HContainer*)p);
   }
   static void destruct_HContainer(void *p) {
      typedef ::HContainer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HContainer(TBuffer &buf, void *obj) {
      ((::HContainer*)obj)->::HContainer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HContainer

//______________________________________________________________________________
void HParSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParSet.
      TClass *R__cl = ::HParSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detName[20]", detName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "versions[3]", versions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "status", &status);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "changed", &changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "paramContext", &paramContext);
      R__insp.InspectMember(paramContext, "paramContext.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "author", &author);
      R__insp.InspectMember(author, "author.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "description", &description);
      R__insp.InspectMember(description, "description.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParSet(void *p) {
      return  p ? new(p) ::HParSet : new ::HParSet;
   }
   static void *newArray_HParSet(Long_t nElements, void *p) {
      return p ? new(p) ::HParSet[nElements] : new ::HParSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParSet(void *p) {
      delete ((::HParSet*)p);
   }
   static void deleteArray_HParSet(void *p) {
      delete [] ((::HParSet*)p);
   }
   static void destruct_HParSet(void *p) {
      typedef ::HParSet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParSet(TBuffer &buf, void *obj) {
      ((::HParSet*)obj)->::HParSet::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParSet

//______________________________________________________________________________
void HParCond::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParCond.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParSet::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HParCond::IsA());
   } else {
      R__c = R__b.WriteVersion(HParCond::IsA(), kTRUE);
      HParSet::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HParCond::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParCond.
      TClass *R__cl = ::HParCond::IsA();
      if (R__cl || R__insp.IsA()) { }
      HParSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParCond(void *p) {
      delete ((::HParCond*)p);
   }
   static void deleteArray_HParCond(void *p) {
      delete [] ((::HParCond*)p);
   }
   static void destruct_HParCond(void *p) {
      typedef ::HParCond current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParCond(TBuffer &buf, void *obj) {
      ((::HParCond*)obj)->::HParCond::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParCond

//______________________________________________________________________________
void HParamObj::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParamObj.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void HParamObj::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParamObj.
      TClass *R__cl = ::HParamObj::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*paramValue", &paramValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "arraySize", &arraySize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "paramType", &paramType);
      R__insp.InspectMember(paramType, "paramType.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "basicType", &basicType);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "bytesPerValue", &bytesPerValue);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "classVersion", &classVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*streamerInfo", &streamerInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "streamerInfoSize", &streamerInfoSize);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParamObj(void *p) {
      return  p ? new(p) ::HParamObj : new ::HParamObj;
   }
   static void *newArray_HParamObj(Long_t nElements, void *p) {
      return p ? new(p) ::HParamObj[nElements] : new ::HParamObj[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParamObj(void *p) {
      delete ((::HParamObj*)p);
   }
   static void deleteArray_HParamObj(void *p) {
      delete [] ((::HParamObj*)p);
   }
   static void destruct_HParamObj(void *p) {
      typedef ::HParamObj current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParamObj(TBuffer &buf, void *obj) {
      ((::HParamObj*)obj)->::HParamObj::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParamObj

//______________________________________________________________________________
void HParamList::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParamList.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HParamList::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParamList.
      TClass *R__cl = ::HParamList::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*paramList", &paramList);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParamList(void *p) {
      return  p ? new(p) ::HParamList : new ::HParamList;
   }
   static void *newArray_HParamList(Long_t nElements, void *p) {
      return p ? new(p) ::HParamList[nElements] : new ::HParamList[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParamList(void *p) {
      delete ((::HParamList*)p);
   }
   static void deleteArray_HParamList(void *p) {
      delete [] ((::HParamList*)p);
   }
   static void destruct_HParamList(void *p) {
      typedef ::HParamList current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParamList(TBuffer &buf, void *obj) {
      ((::HParamList*)obj)->::HParamList::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParamList

//______________________________________________________________________________
void HParIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParIo.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HParIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParIo.
      TClass *R__cl = ::HParIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inputName", &inputName);
      R__insp.InspectMember(inputName, "inputName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*detParIoList", &detParIoList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "autoWritable", &autoWritable);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParIo(void *p) {
      return  p ? new(p) ::HParIo : new ::HParIo;
   }
   static void *newArray_HParIo(Long_t nElements, void *p) {
      return p ? new(p) ::HParIo[nElements] : new ::HParIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParIo(void *p) {
      delete ((::HParIo*)p);
   }
   static void deleteArray_HParIo(void *p) {
      delete [] ((::HParIo*)p);
   }
   static void destruct_HParIo(void *p) {
      typedef ::HParIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParIo(TBuffer &buf, void *obj) {
      ((::HParIo*)obj)->::HParIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParIo

//______________________________________________________________________________
void HDetParIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HDetParIo.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void HDetParIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HDetParIo.
      TClass *R__cl = ::HDetParIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inputNumber", &inputNumber);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HDetParIo(void *p) {
      return  p ? new(p) ::HDetParIo : new ::HDetParIo;
   }
   static void *newArray_HDetParIo(Long_t nElements, void *p) {
      return p ? new(p) ::HDetParIo[nElements] : new ::HDetParIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HDetParIo(void *p) {
      delete ((::HDetParIo*)p);
   }
   static void deleteArray_HDetParIo(void *p) {
      delete [] ((::HDetParIo*)p);
   }
   static void destruct_HDetParIo(void *p) {
      typedef ::HDetParIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HDetParIo(TBuffer &buf, void *obj) {
      ((::HDetParIo*)obj)->::HDetParIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HDetParIo

//______________________________________________________________________________
void HParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParRootFileIo.

   HParIo::Streamer(R__b);
}

//______________________________________________________________________________
void HParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParRootFileIo.
      TClass *R__cl = ::HParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      HParIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParRootFileIo(void *p) {
      return  p ? new(p) ::HParRootFileIo : new ::HParRootFileIo;
   }
   static void *newArray_HParRootFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::HParRootFileIo[nElements] : new ::HParRootFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParRootFileIo(void *p) {
      delete ((::HParRootFileIo*)p);
   }
   static void deleteArray_HParRootFileIo(void *p) {
      delete [] ((::HParRootFileIo*)p);
   }
   static void destruct_HParRootFileIo(void *p) {
      typedef ::HParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParRootFileIo(TBuffer &buf, void *obj) {
      ((::HParRootFileIo*)obj)->::HParRootFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParRootFileIo

//______________________________________________________________________________
void HDetParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HDetParRootFileIo.

   HDetParIo::Streamer(R__b);
}

//______________________________________________________________________________
void HDetParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HDetParRootFileIo.
      TClass *R__cl = ::HDetParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFile", &pFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*modulesFound", &modulesFound);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*initModules", &initModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isActiv", &isActiv);
      HDetParIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HDetParRootFileIo(void *p) {
      delete ((::HDetParRootFileIo*)p);
   }
   static void deleteArray_HDetParRootFileIo(void *p) {
      delete [] ((::HDetParRootFileIo*)p);
   }
   static void destruct_HDetParRootFileIo(void *p) {
      typedef ::HDetParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HDetParRootFileIo(TBuffer &buf, void *obj) {
      ((::HDetParRootFileIo*)obj)->::HDetParRootFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HDetParRootFileIo

//______________________________________________________________________________
void HCondParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HCondParRootFileIo.

   HDetParRootFileIo::Streamer(R__b);
}

//______________________________________________________________________________
void HCondParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HCondParRootFileIo.
      TClass *R__cl = ::HCondParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParRootFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HCondParRootFileIo(void *p) {
      return  p ? new(p) ::HCondParRootFileIo : new ::HCondParRootFileIo;
   }
   static void *newArray_HCondParRootFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::HCondParRootFileIo[nElements] : new ::HCondParRootFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HCondParRootFileIo(void *p) {
      delete ((::HCondParRootFileIo*)p);
   }
   static void deleteArray_HCondParRootFileIo(void *p) {
      delete [] ((::HCondParRootFileIo*)p);
   }
   static void destruct_HCondParRootFileIo(void *p) {
      typedef ::HCondParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HCondParRootFileIo(TBuffer &buf, void *obj) {
      ((::HCondParRootFileIo*)obj)->::HCondParRootFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HCondParRootFileIo

//______________________________________________________________________________
void HSpecParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HSpecParRootFileIo.

   HDetParRootFileIo::Streamer(R__b);
}

//______________________________________________________________________________
void HSpecParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HSpecParRootFileIo.
      TClass *R__cl = ::HSpecParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParRootFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HSpecParRootFileIo(void *p) {
      delete ((::HSpecParRootFileIo*)p);
   }
   static void deleteArray_HSpecParRootFileIo(void *p) {
      delete [] ((::HSpecParRootFileIo*)p);
   }
   static void destruct_HSpecParRootFileIo(void *p) {
      typedef ::HSpecParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HSpecParRootFileIo(TBuffer &buf, void *obj) {
      ((::HSpecParRootFileIo*)obj)->::HSpecParRootFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HSpecParRootFileIo

//______________________________________________________________________________
void HParRootFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParRootFile.

   TFile::Streamer(R__b);
}

//______________________________________________________________________________
void HParRootFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParRootFile.
      TClass *R__cl = ::HParRootFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*run", &run);
      TFile::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParRootFile(void *p) {
      delete ((::HParRootFile*)p);
   }
   static void deleteArray_HParRootFile(void *p) {
      delete [] ((::HParRootFile*)p);
   }
   static void destruct_HParRootFile(void *p) {
      typedef ::HParRootFile current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParRootFile(TBuffer &buf, void *obj) {
      ((::HParRootFile*)obj)->::HParRootFile::Streamer(buf);
   }
   // Wrapper around the Reset function.
   static void reset_HParRootFile(void *obj,TFileMergeInfo *info) {
      ((::HParRootFile*)obj)->ResetAfterMerge(info);
   }
} // end of namespace ROOTDict for class ::HParRootFile

//______________________________________________________________________________
void HParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParAsciiFileIo.

   HParIo::Streamer(R__b);
}

//______________________________________________________________________________
void HParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParAsciiFileIo.
      TClass *R__cl = ::HParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*file", &file);
      HParIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParAsciiFileIo(void *p) {
      return  p ? new(p) ::HParAsciiFileIo : new ::HParAsciiFileIo;
   }
   static void *newArray_HParAsciiFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::HParAsciiFileIo[nElements] : new ::HParAsciiFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParAsciiFileIo(void *p) {
      delete ((::HParAsciiFileIo*)p);
   }
   static void deleteArray_HParAsciiFileIo(void *p) {
      delete [] ((::HParAsciiFileIo*)p);
   }
   static void destruct_HParAsciiFileIo(void *p) {
      typedef ::HParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParAsciiFileIo(TBuffer &buf, void *obj) {
      ((::HParAsciiFileIo*)obj)->::HParAsciiFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParAsciiFileIo

//______________________________________________________________________________
void HDetParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HDetParAsciiFileIo.

   HDetParIo::Streamer(R__b);
}

//______________________________________________________________________________
void HDetParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HDetParAsciiFileIo.
      TClass *R__cl = ::HDetParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHeader", &fHeader);
      R__insp.InspectMember(fHeader, "fHeader.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sepLine", &sepLine);
      R__insp.InspectMember(sepLine, "sepLine.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFile", &pFile);
      HDetParIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HDetParAsciiFileIo(void *p) {
      delete ((::HDetParAsciiFileIo*)p);
   }
   static void deleteArray_HDetParAsciiFileIo(void *p) {
      delete [] ((::HDetParAsciiFileIo*)p);
   }
   static void destruct_HDetParAsciiFileIo(void *p) {
      typedef ::HDetParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HDetParAsciiFileIo(TBuffer &buf, void *obj) {
      ((::HDetParAsciiFileIo*)obj)->::HDetParAsciiFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HDetParAsciiFileIo

//______________________________________________________________________________
void HCondParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HCondParAsciiFileIo.

   HDetParAsciiFileIo::Streamer(R__b);
}

//______________________________________________________________________________
void HCondParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HCondParAsciiFileIo.
      TClass *R__cl = ::HCondParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParAsciiFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HCondParAsciiFileIo(void *p) {
      return  p ? new(p) ::HCondParAsciiFileIo : new ::HCondParAsciiFileIo;
   }
   static void *newArray_HCondParAsciiFileIo(Long_t nElements, void *p) {
      return p ? new(p) ::HCondParAsciiFileIo[nElements] : new ::HCondParAsciiFileIo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HCondParAsciiFileIo(void *p) {
      delete ((::HCondParAsciiFileIo*)p);
   }
   static void deleteArray_HCondParAsciiFileIo(void *p) {
      delete [] ((::HCondParAsciiFileIo*)p);
   }
   static void destruct_HCondParAsciiFileIo(void *p) {
      typedef ::HCondParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HCondParAsciiFileIo(TBuffer &buf, void *obj) {
      ((::HCondParAsciiFileIo*)obj)->::HCondParAsciiFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HCondParAsciiFileIo

//______________________________________________________________________________
void HSpecParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HSpecParAsciiFileIo.

   HDetParAsciiFileIo::Streamer(R__b);
}

//______________________________________________________________________________
void HSpecParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HSpecParAsciiFileIo.
      TClass *R__cl = ::HSpecParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParAsciiFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HSpecParAsciiFileIo(void *p) {
      delete ((::HSpecParAsciiFileIo*)p);
   }
   static void deleteArray_HSpecParAsciiFileIo(void *p) {
      delete [] ((::HSpecParAsciiFileIo*)p);
   }
   static void destruct_HSpecParAsciiFileIo(void *p) {
      typedef ::HSpecParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HSpecParAsciiFileIo(TBuffer &buf, void *obj) {
      ((::HSpecParAsciiFileIo*)obj)->::HSpecParAsciiFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HSpecParAsciiFileIo

//______________________________________________________________________________
void HParamFileGenerator::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParamFileGenerator.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HParamFileGenerator::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParamFileGenerator.
      TClass *R__cl = ::HParamFileGenerator::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "paramFilename", &paramFilename);
      R__insp.InspectMember(paramFilename, "paramFilename.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "logFilename", &logFilename);
      R__insp.InspectMember(logFilename, "logFilename.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "experiment", &experiment);
      R__insp.InspectMember(experiment, "experiment.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rangeStart", &rangeStart);
      R__insp.InspectMember(rangeStart, "rangeStart.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rangeEnd", &rangeEnd);
      R__insp.InspectMember(rangeEnd, "rangeEnd.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*runs", &runs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*logFile", &logFile);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParamFileGenerator(void *p) {
      delete ((::HParamFileGenerator*)p);
   }
   static void deleteArray_HParamFileGenerator(void *p) {
      delete [] ((::HParamFileGenerator*)p);
   }
   static void destruct_HParamFileGenerator(void *p) {
      typedef ::HParamFileGenerator current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParamFileGenerator(TBuffer &buf, void *obj) {
      ((::HParamFileGenerator*)obj)->::HParamFileGenerator::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParamFileGenerator

//______________________________________________________________________________
void HRunInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HRunInfo.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void HRunInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HRunInfo.
      TClass *R__cl = ::HRunInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "runId", &runId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startTime", &startTime);
      R__insp.InspectMember(startTime, "startTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "endTime", &endTime);
      R__insp.InspectMember(endTime, "endTime.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numEvents", &numEvents);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HRunInfo(void *p) {
      return  p ? new(p) ::HRunInfo : new ::HRunInfo;
   }
   static void *newArray_HRunInfo(Long_t nElements, void *p) {
      return p ? new(p) ::HRunInfo[nElements] : new ::HRunInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HRunInfo(void *p) {
      delete ((::HRunInfo*)p);
   }
   static void deleteArray_HRunInfo(void *p) {
      delete [] ((::HRunInfo*)p);
   }
   static void destruct_HRunInfo(void *p) {
      typedef ::HRunInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HRunInfo(TBuffer &buf, void *obj) {
      ((::HRunInfo*)obj)->::HRunInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HRunInfo

//______________________________________________________________________________
void HFileInfo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFileInfo.

   HRunInfo::Streamer(R__b);
}

//______________________________________________________________________________
void HFileInfo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFileInfo.
      TClass *R__cl = ::HFileInfo::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "magnetCurrent", &magnetCurrent);
      HRunInfo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFileInfo(void *p) {
      return  p ? new(p) ::HFileInfo : new ::HFileInfo;
   }
   static void *newArray_HFileInfo(Long_t nElements, void *p) {
      return p ? new(p) ::HFileInfo[nElements] : new ::HFileInfo[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFileInfo(void *p) {
      delete ((::HFileInfo*)p);
   }
   static void deleteArray_HFileInfo(void *p) {
      delete [] ((::HFileInfo*)p);
   }
   static void destruct_HFileInfo(void *p) {
      typedef ::HFileInfo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFileInfo(TBuffer &buf, void *obj) {
      ((::HFileInfo*)obj)->::HFileInfo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFileInfo

//______________________________________________________________________________
void HRun::Streamer(TBuffer &R__b)
{
   // Stream an object of class HRun.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> parVersions;
      R__b.CheckByteCount(R__s, R__c, HRun::IsA());
   } else {
      R__c = R__b.WriteVersion(HRun::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << parVersions;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HRun::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HRun.
      TClass *R__cl = ::HRun::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*parVersions", &parVersions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refRun", &refRun);
      R__insp.InspectMember(refRun, "refRun.");
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HRun(void *p) {
      return  p ? new(p) ::HRun : new ::HRun;
   }
   static void *newArray_HRun(Long_t nElements, void *p) {
      return p ? new(p) ::HRun[nElements] : new ::HRun[nElements];
   }
   // Wrapper around operator delete
   static void delete_HRun(void *p) {
      delete ((::HRun*)p);
   }
   static void deleteArray_HRun(void *p) {
      delete [] ((::HRun*)p);
   }
   static void destruct_HRun(void *p) {
      typedef ::HRun current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HRun(TBuffer &buf, void *obj) {
      ((::HRun*)obj)->::HRun::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HRun

//______________________________________________________________________________
void HParVersion::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParVersion.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> rootVersion;
      R__b.CheckByteCount(R__s, R__c, HParVersion::IsA());
   } else {
      R__c = R__b.WriteVersion(HParVersion::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << rootVersion;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HParVersion::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParVersion.
      TClass *R__cl = ::HParVersion::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "inputVersions[3]", inputVersions);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rootVersion", &rootVersion);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParVersion(void *p) {
      return  p ? new(p) ::HParVersion : new ::HParVersion;
   }
   static void *newArray_HParVersion(Long_t nElements, void *p) {
      return p ? new(p) ::HParVersion[nElements] : new ::HParVersion[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParVersion(void *p) {
      delete ((::HParVersion*)p);
   }
   static void deleteArray_HParVersion(void *p) {
      delete [] ((::HParVersion*)p);
   }
   static void destruct_HParVersion(void *p) {
      typedef ::HParVersion current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParVersion(TBuffer &buf, void *obj) {
      ((::HParVersion*)obj)->::HParVersion::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParVersion

//______________________________________________________________________________
void HMagnetPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HMagnetPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> current;
      R__b >> maxCurrent;
      R__b.CheckByteCount(R__s, R__c, HMagnetPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HMagnetPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << current;
      R__b << maxCurrent;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HMagnetPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HMagnetPar.
      TClass *R__cl = ::HMagnetPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "current", &current);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxCurrent", &maxCurrent);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HMagnetPar(void *p) {
      return  p ? new(p) ::HMagnetPar : new ::HMagnetPar;
   }
   static void *newArray_HMagnetPar(Long_t nElements, void *p) {
      return p ? new(p) ::HMagnetPar[nElements] : new ::HMagnetPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HMagnetPar(void *p) {
      delete ((::HMagnetPar*)p);
   }
   static void deleteArray_HMagnetPar(void *p) {
      delete [] ((::HMagnetPar*)p);
   }
   static void destruct_HMagnetPar(void *p) {
      typedef ::HMagnetPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HMagnetPar(TBuffer &buf, void *obj) {
      ((::HMagnetPar*)obj)->::HMagnetPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HMagnetPar

//______________________________________________________________________________
void HSlowPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HSlowPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParSet::Streamer(R__b);
      {
         map<Int_t,map<TString,HSlowChan*>*> &R__stl =  fMRunID;
         R__stl.clear();
         TClass *R__tcl2 = TBuffer::GetClass(typeid(map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >));
         if (R__tcl2==0) {
            Error("fMRunID streamer","Missing the TClass object for map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >!");
            return;
         }
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >* R__t2;
            R__t2 = (map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*)R__b.ReadObjectAny(R__tcl2);
            typedef int Value_t;
            std::pair<Value_t const, map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >* > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      {
         vector<Int_t> &R__stl =  fVRunID;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         R__stl.reserve(R__n);
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            R__stl.push_back(R__t);
         }
      }
      fListChannels.Streamer(R__b);
      fPartition.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HSlowPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HSlowPar::IsA(), kTRUE);
      HParSet::Streamer(R__b);
      {
         map<Int_t,map<TString,HSlowChan*>*> &R__stl =  fMRunID;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
         TClass *R__tcl2 = TBuffer::GetClass(typeid(map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >));
         if (R__tcl2==0) {
            Error("fMRunIDstreamer","Missing the TClass object for map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >!");
            return;
         }
            map<Int_t,map<TString,HSlowChan*>*>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << ((*R__k).first );
            R__b.WriteObjectAny(((*R__k).second),R__tcl2);
            }
         }
      }
      {
         vector<Int_t> &R__stl =  fVRunID;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            vector<Int_t>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << (*R__k);
            }
         }
      }
      fListChannels.Streamer(R__b);
      fPartition.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HSlowPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HSlowPar.
      TClass *R__cl = ::HSlowPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMRunID", (void*)&fMRunID);
      R__insp.InspectMember("map<Int_t,map<TString,HSlowChan*>*>", (void*)&fMRunID, "fMRunID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVRunID", (void*)&fVRunID);
      R__insp.InspectMember("vector<Int_t>", (void*)&fVRunID, "fVRunID.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fListChannels", &fListChannels);
      R__insp.InspectMember(fListChannels, "fListChannels.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPartition", &fPartition);
      R__insp.InspectMember(fPartition, "fPartition.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCurrentRunID", &fCurrentRunID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMIter", (void*)&fMIter);
      R__insp.InspectMember("map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*,less<int>,allocator<pair<const int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*> > >::iterator", (void*)&fMIter, "fMIter.", true);
      HParSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HSlowPar(void *p) {
      return  p ? new(p) ::HSlowPar : new ::HSlowPar;
   }
   static void *newArray_HSlowPar(Long_t nElements, void *p) {
      return p ? new(p) ::HSlowPar[nElements] : new ::HSlowPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HSlowPar(void *p) {
      delete ((::HSlowPar*)p);
   }
   static void deleteArray_HSlowPar(void *p) {
      delete [] ((::HSlowPar*)p);
   }
   static void destruct_HSlowPar(void *p) {
      typedef ::HSlowPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HSlowPar(TBuffer &buf, void *obj) {
      ((::HSlowPar*)obj)->::HSlowPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HSlowPar

//______________________________________________________________________________
void HSlowChan::Streamer(TBuffer &R__b)
{
   // Stream an object of class HSlowChan.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> mean;
      R__b >> rms;
      R__b >> min;
      R__b >> max;
      R__b.CheckByteCount(R__s, R__c, HSlowChan::IsA());
   } else {
      R__c = R__b.WriteVersion(HSlowChan::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << mean;
      R__b << rms;
      R__b << min;
      R__b << max;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HSlowChan::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HSlowChan.
      TClass *R__cl = ::HSlowChan::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mean", &mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rms", &rms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "min", &min);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "max", &max);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HSlowChan(void *p) {
      return  p ? new(p) ::HSlowChan : new ::HSlowChan;
   }
   static void *newArray_HSlowChan(Long_t nElements, void *p) {
      return p ? new(p) ::HSlowChan[nElements] : new ::HSlowChan[nElements];
   }
   // Wrapper around operator delete
   static void delete_HSlowChan(void *p) {
      delete ((::HSlowChan*)p);
   }
   static void deleteArray_HSlowChan(void *p) {
      delete [] ((::HSlowChan*)p);
   }
   static void destruct_HSlowChan(void *p) {
      typedef ::HSlowChan current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HSlowChan(TBuffer &buf, void *obj) {
      ((::HSlowChan*)obj)->::HSlowChan::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HSlowChan

//______________________________________________________________________________
void HEmcSimulPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HEmcSimulPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> numPmtTypes;
      lookupPmtType.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HEmcSimulPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HEmcSimulPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << numPmtTypes;
      lookupPmtType.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HEmcSimulPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEmcSimulPar.
      TClass *R__cl = ::HEmcSimulPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numRows", &numRows);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numCols", &numCols);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPmtTypes", &numPmtTypes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lookupPmtType", &lookupPmtType);
      R__insp.InspectMember(lookupPmtType, "lookupPmtType.");
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEmcSimulPar(void *p) {
      return  p ? new(p) ::HEmcSimulPar : new ::HEmcSimulPar;
   }
   static void *newArray_HEmcSimulPar(Long_t nElements, void *p) {
      return p ? new(p) ::HEmcSimulPar[nElements] : new ::HEmcSimulPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEmcSimulPar(void *p) {
      delete ((::HEmcSimulPar*)p);
   }
   static void deleteArray_HEmcSimulPar(void *p) {
      delete [] ((::HEmcSimulPar*)p);
   }
   static void destruct_HEmcSimulPar(void *p) {
      typedef ::HEmcSimulPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEmcSimulPar(TBuffer &buf, void *obj) {
      ((::HEmcSimulPar*)obj)->::HEmcSimulPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEmcSimulPar

namespace ROOTDict {
   void maplETStringcOHSlowChanmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplETStringcOHSlowChanmUgR_Dictionary();
   static void *new_maplETStringcOHSlowChanmUgR(void *p = 0);
   static void *newArray_maplETStringcOHSlowChanmUgR(Long_t size, void *p);
   static void delete_maplETStringcOHSlowChanmUgR(void *p);
   static void deleteArray_maplETStringcOHSlowChanmUgR(void *p);
   static void destruct_maplETStringcOHSlowChanmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<TString,HSlowChan*>*)
   {
      map<TString,HSlowChan*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<TString,HSlowChan*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<TString,HSlowChan*>", -2, "/cvmfs/hades.gsi.de/install/root-5.34.34/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<TString,HSlowChan*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplETStringcOHSlowChanmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<TString,HSlowChan*>) );
      instance.SetNew(&new_maplETStringcOHSlowChanmUgR);
      instance.SetNewArray(&newArray_maplETStringcOHSlowChanmUgR);
      instance.SetDelete(&delete_maplETStringcOHSlowChanmUgR);
      instance.SetDeleteArray(&deleteArray_maplETStringcOHSlowChanmUgR);
      instance.SetDestructor(&destruct_maplETStringcOHSlowChanmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<TString,HSlowChan*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<TString,HSlowChan*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplETStringcOHSlowChanmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<TString,HSlowChan*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplETStringcOHSlowChanmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,HSlowChan*> : new map<TString,HSlowChan*>;
   }
   static void *newArray_maplETStringcOHSlowChanmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<TString,HSlowChan*>[nElements] : new map<TString,HSlowChan*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplETStringcOHSlowChanmUgR(void *p) {
      delete ((map<TString,HSlowChan*>*)p);
   }
   static void deleteArray_maplETStringcOHSlowChanmUgR(void *p) {
      delete [] ((map<TString,HSlowChan*>*)p);
   }
   static void destruct_maplETStringcOHSlowChanmUgR(void *p) {
      typedef map<TString,HSlowChan*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<TString,HSlowChan*>

namespace ROOTDict {
   void maplEintcOmaplETStringcOHSlowChanmUgRmUgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOmaplETStringcOHSlowChanmUgRmUgR_Dictionary();
   static void *new_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p = 0);
   static void *newArray_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(Long_t size, void *p);
   static void delete_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p);
   static void deleteArray_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p);
   static void destruct_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,map<TString,HSlowChan*>*>*)
   {
      map<int,map<TString,HSlowChan*>*> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,map<TString,HSlowChan*>*>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,map<TString,HSlowChan*>*>", -2, "/cvmfs/hades.gsi.de/install/root-5.34.34/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,map<TString,HSlowChan*>*>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOmaplETStringcOHSlowChanmUgRmUgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,map<TString,HSlowChan*>*>) );
      instance.SetNew(&new_maplEintcOmaplETStringcOHSlowChanmUgRmUgR);
      instance.SetNewArray(&newArray_maplEintcOmaplETStringcOHSlowChanmUgRmUgR);
      instance.SetDelete(&delete_maplEintcOmaplETStringcOHSlowChanmUgRmUgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOmaplETStringcOHSlowChanmUgRmUgR);
      instance.SetDestructor(&destruct_maplEintcOmaplETStringcOHSlowChanmUgRmUgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,map<TString,HSlowChan*>*> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,map<TString,HSlowChan*>*>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOmaplETStringcOHSlowChanmUgRmUgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,map<TString,HSlowChan*>*>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<TString,HSlowChan*>*> : new map<int,map<TString,HSlowChan*>*>;
   }
   static void *newArray_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,map<TString,HSlowChan*>*>[nElements] : new map<int,map<TString,HSlowChan*>*>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p) {
      delete ((map<int,map<TString,HSlowChan*>*>*)p);
   }
   static void deleteArray_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p) {
      delete [] ((map<int,map<TString,HSlowChan*>*>*)p);
   }
   static void destruct_maplEintcOmaplETStringcOHSlowChanmUgRmUgR(void *p) {
      typedef map<int,map<TString,HSlowChan*>*> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,map<TString,HSlowChan*>*>

namespace ROOTDict {
   void vectorlEintgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void vectorlEintgR_Dictionary();
   static void *new_vectorlEintgR(void *p = 0);
   static void *newArray_vectorlEintgR(Long_t size, void *p);
   static void delete_vectorlEintgR(void *p);
   static void deleteArray_vectorlEintgR(void *p);
   static void destruct_vectorlEintgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const vector<int>*)
   {
      vector<int> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(vector<int>),0);
      static ::ROOT::TGenericClassInfo 
         instance("vector<int>", -2, "/cvmfs/hades.gsi.de/install/root-5.34.34/cint/cint/lib/prec_stl/vector", 49,
                  typeid(vector<int>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &vectorlEintgR_Dictionary, isa_proxy, 0,
                  sizeof(vector<int>) );
      instance.SetNew(&new_vectorlEintgR);
      instance.SetNewArray(&newArray_vectorlEintgR);
      instance.SetDelete(&delete_vectorlEintgR);
      instance.SetDeleteArray(&deleteArray_vectorlEintgR);
      instance.SetDestructor(&destruct_vectorlEintgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::Pushback< vector<int> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const vector<int>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void vectorlEintgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const vector<int>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_vectorlEintgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int> : new vector<int>;
   }
   static void *newArray_vectorlEintgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) vector<int>[nElements] : new vector<int>[nElements];
   }
   // Wrapper around operator delete
   static void delete_vectorlEintgR(void *p) {
      delete ((vector<int>*)p);
   }
   static void deleteArray_vectorlEintgR(void *p) {
      delete [] ((vector<int>*)p);
   }
   static void destruct_vectorlEintgR(void *p) {
      typedef vector<int> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class vector<int>

/********************************************************
* ../build/pc/RuntimeDbDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRuntimeDbDict();

extern "C" void G__set_cpp_environmentRuntimeDbDict() {
  G__cpp_reset_tagtableRuntimeDbDict();
}
#include <new>
extern "C" int G__cpp_dllrevRuntimeDbDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HParSet */
static int G__RuntimeDbDict_193_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParSet(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HParSet(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParSet((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HParSet((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParSet((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HParSet((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HParSet[n];
       } else {
         p = new((void*) gvp) HParSet[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HParSet;
       } else {
         p = new((void*) gvp) HParSet;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParSet*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParSet*) G__getstructoffset())->init((HParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParSet*) G__getstructoffset())->init((HParIo*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParSet*) G__getstructoffset())->write());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParSet*) G__getstructoffset())->write((HParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParSet*) G__getstructoffset())->getDetectorName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HParSet*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HParSet*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HParSet*) G__getstructoffset())->setInputVersion();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParSet*) G__getstructoffset())->getInputVersion((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HParSet*) G__getstructoffset())->setStatic((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HParSet*) G__getstructoffset())->setStatic();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParSet*) G__getstructoffset())->isStatic());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HParSet*) G__getstructoffset())->setChanged((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HParSet*) G__getstructoffset())->setChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParSet*) G__getstructoffset())->hasChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->setParamContext((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HParSet*) G__getstructoffset())->getParamContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->setAuthor((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HParSet*) G__getstructoffset())->getAuthor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->setDescription((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HParSet*) G__getstructoffset())->getDescription());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->copyComment(*(HParSet*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_193_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_193_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParSet* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParSet(*(HParSet*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParSet G__THParSet;
static int G__RuntimeDbDict_193_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParSet*) (soff+(sizeof(HParSet)*i)))->~G__THParSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParSet*) (soff))->~G__THParSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_193_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParSet* dest = (HParSet*) G__getstructoffset();
   *dest = *(HParSet*) libp->para[0].ref;
   const HParSet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HContainer */
static int G__RuntimeDbDict_194_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HContainer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HContainer(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HContainer(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HContainer*) G__getstructoffset())->addContext((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HContainer*) G__getstructoffset())->setActualContext((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HContainer*) G__getstructoffset())->getDefaultContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HContainer*) G__getstructoffset())->getActualContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HContainer*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HContainer*) G__getstructoffset())->getConcatName();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HContainer*) G__getstructoffset())->getContext());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HContainer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HContainer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HContainer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HContainer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HContainer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HContainer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HContainer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HContainer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_194_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HContainer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_194_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HContainer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HContainer(*(HContainer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HContainer G__THContainer;
static int G__RuntimeDbDict_194_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HContainer*) (soff+(sizeof(HContainer)*i)))->~G__THContainer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HContainer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HContainer*) (soff))->~G__THContainer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_194_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HContainer* dest = (HContainer*) G__getstructoffset();
   *dest = *(HContainer*) libp->para[0].ref;
   const HContainer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HContFact */
static int G__RuntimeDbDict_195_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HContFact[n];
     } else {
       p = new((void*) gvp) HContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HContFact;
     } else {
       p = new((void*) gvp) HContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HContFact*) G__getstructoffset())->addContext((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HContFact*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HContFact*) G__getstructoffset())->getContainer((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HContFact*) G__getstructoffset())->createContainer((HContainer*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_195_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_195_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HContFact* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HContFact(*(HContFact*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HContFact G__THContFact;
static int G__RuntimeDbDict_195_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HContFact*) (soff+(sizeof(HContFact)*i)))->~G__THContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HContFact*) (soff))->~G__THContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_195_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HContFact* dest = (HContFact*) G__getstructoffset();
   *dest = *(HContFact*) libp->para[0].ref;
   const HContFact& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HBaseContFact */
static int G__RuntimeDbDict_196_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HBaseContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HBaseContFact[n];
     } else {
       p = new((void*) gvp) HBaseContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HBaseContFact;
     } else {
       p = new((void*) gvp) HBaseContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HBaseContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HBaseContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HBaseContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HBaseContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HBaseContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HBaseContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HBaseContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HBaseContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_196_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HBaseContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_196_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HBaseContFact* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HBaseContFact(*(HBaseContFact*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HBaseContFact G__THBaseContFact;
static int G__RuntimeDbDict_196_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HBaseContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HBaseContFact*) (soff+(sizeof(HBaseContFact)*i)))->~G__THBaseContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HBaseContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HBaseContFact*) (soff))->~G__THBaseContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_196_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HBaseContFact* dest = (HBaseContFact*) G__getstructoffset();
   *dest = *(HBaseContFact*) libp->para[0].ref;
   const HBaseContFact& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParIo */
static int G__RuntimeDbDict_197_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParIo[n];
     } else {
       p = new((void*) gvp) HParIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParIo;
     } else {
       p = new((void*) gvp) HParIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParIo*) G__getstructoffset())->getDetParIo((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->setDetParIo((HDetParIo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->removeDetParIo((const Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->setInputNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->close();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParIo*) G__getstructoffset())->reconnect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->disconnect();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->setDetParIo((const Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParIo*) G__getstructoffset())->check());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->readVersions((HRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->cd();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParIo*) G__getstructoffset())->getInputName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HParIo*) G__getstructoffset())->setAutoWritable((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HParIo*) G__getstructoffset())->setAutoWritable();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParIo*) G__getstructoffset())->isAutoWritable());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) ((HParIo*) G__getstructoffset())->getListOfRuns((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) ((HParIo*) G__getstructoffset())->getListOfRuns((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HParIo*) G__getstructoffset())->getListOfRuns((const Char_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_197_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_197_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParIo(*(HParIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParIo G__THParIo;
static int G__RuntimeDbDict_197_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParIo*) (soff+(sizeof(HParIo)*i)))->~G__THParIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParIo*) (soff))->~G__THParIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_197_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParIo* dest = (HParIo*) G__getstructoffset();
   *dest = *(HParIo*) libp->para[0].ref;
   const HParIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HRun */
static int G__RuntimeDbDict_198_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRun[n];
     } else {
       p = new((void*) gvp) HRun[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRun;
     } else {
       p = new((void*) gvp) HRun;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRun((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HRun((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRun((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HRun((const Text_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRun((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HRun((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRun((Int_t) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HRun((Int_t) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRun* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HRun(*(HRun*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HRun(*(HRun*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HRun*) G__getstructoffset())->getRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->addParVersion((HParVersion*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRun*) G__getstructoffset())->getParVersion((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRun*) G__getstructoffset())->getParVersions());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HRun*) G__getstructoffset())->getRefRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->setRefRun((const Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->setRefRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->resetOutputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->write(*(fstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HRun::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRun::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HRun::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HRun::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRun*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRun::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRun::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRun::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_198_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRun::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HRun G__THRun;
static int G__RuntimeDbDict_198_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HRun*) (soff+(sizeof(HRun)*i)))->~G__THRun();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HRun*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HRun*) (soff))->~G__THRun();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_198_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRun* dest = (HRun*) G__getstructoffset();
   *dest = *(HRun*) libp->para[0].ref;
   const HRun& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParamFileGenerator */
static int G__RuntimeDbDict_199_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamFileGenerator* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParamFileGenerator(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HParamFileGenerator(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParamFileGenerator((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HParamFileGenerator((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParamFileGenerator((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HParamFileGenerator((const Char_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParamFileGenerator*) G__getstructoffset())->openParameterFile((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParamFileGenerator*) G__getstructoffset())->getParamFilename());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParamFileGenerator*) G__getstructoffset())->getLogFilename());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParamFileGenerator*) G__getstructoffset())->getExperiment());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParamFileGenerator*) G__getstructoffset())->getRangeStart());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParamFileGenerator*) G__getstructoffset())->getRangeEnd());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamFileGenerator*) G__getstructoffset())->setListOfRuns((TList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamFileGenerator*) G__getstructoffset())->writeRuns();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamFileGenerator*) G__getstructoffset())->closeLogFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParamFileGenerator*) G__getstructoffset())->getLogFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParamFileGenerator::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamFileGenerator::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParamFileGenerator::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParamFileGenerator::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamFileGenerator*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamFileGenerator::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParamFileGenerator::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamFileGenerator::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_199_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParamFileGenerator::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_199_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParamFileGenerator* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParamFileGenerator(*(HParamFileGenerator*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParamFileGenerator G__THParamFileGenerator;
static int G__RuntimeDbDict_199_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParamFileGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParamFileGenerator*) (soff+(sizeof(HParamFileGenerator)*i)))->~G__THParamFileGenerator();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParamFileGenerator*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParamFileGenerator*) (soff))->~G__THParamFileGenerator();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_199_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamFileGenerator* dest = (HParamFileGenerator*) G__getstructoffset();
   *dest = *(HParamFileGenerator*) libp->para[0].ref;
   const HParamFileGenerator& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HRuntimeDb */
static int G__RuntimeDbDict_200_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HRuntimeDb::instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->addParamContext((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->printParamContexts();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->addContFactory((HContFact*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->addContainer((HParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->getContainer((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->findContainer((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->removeContainer((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->removeAllContainers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->initContainers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->initContainers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->initContainers((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->printContainers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HRuntimeDb*) G__getstructoffset())->setContainersStatic((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HRuntimeDb*) G__getstructoffset())->setContainersStatic();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->writeContainers());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->writeContainer((HParSet*) G__int(libp->para[0]), (HRun*) G__int(libp->para[1])
, (HRun*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->writeContainer((HParSet*) G__int(libp->para[0]), (HRun*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->addRun((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->addRun((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->getRun((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->getRun((Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->getCurrentRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HRuntimeDb*) G__getstructoffset())->getCurrentFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->clearRunList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->removeRun((Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]), (Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->setRootOutputVersion((Int_t) G__int(libp->para[0]), (Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HRuntimeDb*) G__getstructoffset())->setVersionsChanged((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HRuntimeDb*) G__getstructoffset())->setVersionsChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->resetOutputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->resetAllVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->readAll());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->writeSetup();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->writeVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->saveOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->setFirstInput((HParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->setSecondInput((HParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->setOutput((HParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->getFirstInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->getSecondInput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRuntimeDb*) G__getstructoffset())->getOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->closeFirstInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->closeSecondInput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->closeOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->reconnectInputs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->disconnectInputs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->makeParamFile((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]), (const Char_t*) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->makeParamFile((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HRuntimeDb*) G__getstructoffset())->makeParamFile((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HRuntimeDb*) G__getstructoffset())->findOutputVersion((HParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HRuntimeDb::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRuntimeDb::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HRuntimeDb::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HRuntimeDb::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRuntimeDb*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRuntimeDb::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRuntimeDb::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRuntimeDb::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_200_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRuntimeDb::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HRuntimeDb G__THRuntimeDb;
static int G__RuntimeDbDict_200_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HRuntimeDb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HRuntimeDb*) (soff+(sizeof(HRuntimeDb)*i)))->~G__THRuntimeDb();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HRuntimeDb*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HRuntimeDb*) (soff))->~G__THRuntimeDb();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParamList */
static int G__RuntimeDbDict_203_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamList* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParamList[n];
     } else {
       p = new((void*) gvp) HParamList[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParamList;
     } else {
       p = new((void*) gvp) HParamList;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add(*(HParamObj*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayI*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayC*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayF*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), *(TArrayD*) libp->para[1].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (const UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (const UInt_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->add((const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->addObject((const Text_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Text_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (UChar_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayI*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayC*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayF*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fill((const Text_t*) G__int(libp->para[0]), (TArrayD*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParamList*) G__getstructoffset())->fillObject((const Text_t*) G__int(libp->para[0]), (TObject*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamList*) G__getstructoffset())->replace((const Text_t*) G__int(libp->para[0]), (UChar_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamList*) G__getstructoffset())->replace((const Text_t*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamList*) G__getstructoffset())->replace((const Text_t*) G__int(libp->para[0]), (UInt_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamList*) G__getstructoffset())->replace((const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamList*) G__getstructoffset())->replace((const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParamList*) G__getstructoffset())->find((const Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParamList*) G__getstructoffset())->getList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParamList::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamList::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParamList::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParamList::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamList*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamList::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParamList::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamList::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_203_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParamList::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_203_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParamList* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParamList(*(HParamList*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParamList G__THParamList;
static int G__RuntimeDbDict_203_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParamList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParamList*) (soff+(sizeof(HParamList)*i)))->~G__THParamList();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParamList*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParamList*) (soff))->~G__THParamList();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_203_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamList* dest = (HParamList*) G__getstructoffset();
   *dest = *(HParamList*) libp->para[0].ref;
   const HParamList& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParCond */
static int G__RuntimeDbDict_204_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParCond*) G__getstructoffset())->putParams((HParamList*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParCond*) G__getstructoffset())->getParams((HParamList*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParCond*) G__getstructoffset())->printParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParCond::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParCond::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParCond::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParCond::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParCond*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParCond::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParCond::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParCond::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_204_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParCond::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParCond G__THParCond;
static int G__RuntimeDbDict_204_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParCond*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParCond*) (soff+(sizeof(HParCond)*i)))->~G__THParCond();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParCond*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParCond*) (soff))->~G__THParCond();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_204_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParCond* dest = (HParCond*) G__getstructoffset();
   *dest = *(HParCond*) libp->para[0].ref;
   const HParCond& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParamObj */
static int G__RuntimeDbDict_257_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParamObj((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HParamObj((const Text_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HParamObj[n];
       } else {
         p = new((void*) gvp) HParamObj[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HParamObj;
       } else {
         p = new((void*) gvp) HParamObj;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj(*(HParamObj*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HParamObj(*(HParamObj*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HParamObj((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj((const Text_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HParamObj((const Text_t*) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj((const Text_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) HParamObj((const Text_t*) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj((const Text_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   } else {
     p = new((void*) gvp) HParamObj((const Text_t*) G__int(libp->para[0]), (Double_t) G__double(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj(
(const Text_t*) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HParamObj(
(const Text_t*) G__int(libp->para[0]), (const Int_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj(
(const Text_t*) G__int(libp->para[0]), (const UInt_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HParamObj(
(const Text_t*) G__int(libp->para[0]), (const UInt_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj(
(const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HParamObj(
(const Text_t*) G__int(libp->para[0]), (Float_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj(
(const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HParamObj(
(const Text_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HParamObj((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj(
(const Text_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HParamObj(
(const Text_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParamObj(
(const Text_t*) G__int(libp->para[0]), (const UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HParamObj(
(const Text_t*) G__int(libp->para[0]), (const UChar_t*) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamObj*) G__getstructoffset())->setParamType((const Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((HParamObj*) G__getstructoffset())->setLength((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamObj*) G__getstructoffset())->setParamValue((UChar_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamObj*) G__getstructoffset())->setClassVersion((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((HParamObj*) G__getstructoffset())->setStreamerInfoSize((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamObj*) G__getstructoffset())->setStreamerInfo((UChar_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((HParamObj*) G__getstructoffset())->getParamValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParamObj*) G__getstructoffset())->isBasicType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HParamObj*) G__getstructoffset())->getParamType());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamObj*) G__getstructoffset())->getBytesPerValue());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamObj*) G__getstructoffset())->getClassVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamObj*) G__getstructoffset())->getLength());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamObj*) G__getstructoffset())->getNumParams());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 66, (long) ((HParamObj*) G__getstructoffset())->getStreamerInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParamObj*) G__getstructoffset())->getStreamerInfoSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamObj*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParamObj::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamObj::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParamObj::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParamObj::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParamObj*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamObj::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParamObj::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParamObj::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_257_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParamObj::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParamObj G__THParamObj;
static int G__RuntimeDbDict_257_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParamObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParamObj*) (soff+(sizeof(HParamObj)*i)))->~G__THParamObj();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParamObj*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParamObj*) (soff))->~G__THParamObj();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_257_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParamObj* dest = (HParamObj*) G__getstructoffset();
   *dest = *(HParamObj*) libp->para[0].ref;
   const HParamObj& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParVersion */
static int G__RuntimeDbDict_259_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParVersion* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParVersion[n];
     } else {
       p = new((void*) gvp) HParVersion[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParVersion;
     } else {
       p = new((void*) gvp) HParVersion;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParVersion* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParVersion((const Text_t*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HParVersion((const Text_t*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HParVersion*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HParVersion*) G__getstructoffset())->setInputVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HParVersion*) G__getstructoffset())->setInputVersion();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParVersion*) G__getstructoffset())->getInputVersion((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParVersion*) G__getstructoffset())->resetInputVersions();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParVersion*) G__getstructoffset())->setRootVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParVersion*) G__getstructoffset())->getRootVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParVersion::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParVersion::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParVersion::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParVersion::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParVersion*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParVersion::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParVersion::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParVersion::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_259_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParVersion::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_259_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParVersion* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParVersion(*(HParVersion*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParVersion G__THParVersion;
static int G__RuntimeDbDict_259_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParVersion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParVersion*) (soff+(sizeof(HParVersion)*i)))->~G__THParVersion();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParVersion*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParVersion*) (soff))->~G__THParVersion();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_259_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParVersion* dest = (HParVersion*) G__getstructoffset();
   *dest = *(HParVersion*) libp->para[0].ref;
   const HParVersion& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HDetParIo */
static int G__RuntimeDbDict_260_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetParIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HDetParIo[n];
     } else {
       p = new((void*) gvp) HDetParIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HDetParIo;
     } else {
       p = new((void*) gvp) HDetParIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetParIo*) G__getstructoffset())->setInputNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HDetParIo*) G__getstructoffset())->getInputNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetParIo*) G__getstructoffset())->init((HParSet*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HDetParIo*) G__getstructoffset())->write((HParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetParIo*) G__getstructoffset())->write((HDetector*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HDetParIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HDetParIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HDetParIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetParIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetParIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_260_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetParIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_260_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HDetParIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HDetParIo(*(HDetParIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HDetParIo G__THDetParIo;
static int G__RuntimeDbDict_260_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HDetParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HDetParIo*) (soff+(sizeof(HDetParIo)*i)))->~G__THDetParIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HDetParIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HDetParIo*) (soff))->~G__THDetParIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_260_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetParIo* dest = (HDetParIo*) G__getstructoffset();
   *dest = *(HDetParIo*) libp->para[0].ref;
   const HDetParIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParRootFile */
static int G__RuntimeDbDict_263_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParRootFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HParRootFile(
(const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParRootFile((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HParRootFile((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParRootFile((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HParRootFile((const Text_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParRootFile*) G__getstructoffset())->getRun());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParRootFile*) G__getstructoffset())->readVersions((HRun*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParRootFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParRootFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParRootFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParRootFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParRootFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParRootFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParRootFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParRootFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_263_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParRootFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParRootFile G__THParRootFile;
static int G__RuntimeDbDict_263_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParRootFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParRootFile*) (soff+(sizeof(HParRootFile)*i)))->~G__THParRootFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParRootFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParRootFile*) (soff))->~G__THParRootFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParRootFileIo */
static int G__RuntimeDbDict_264_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParRootFileIo[n];
     } else {
       p = new((void*) gvp) HParRootFileIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParRootFileIo;
     } else {
       p = new((void*) gvp) HParRootFileIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((HParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((HParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HParRootFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParRootFileIo*) G__getstructoffset())->getParRootFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParRootFileIo*) G__getstructoffset())->getList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_264_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_264_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParRootFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParRootFileIo(*(HParRootFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParRootFileIo G__THParRootFileIo;
static int G__RuntimeDbDict_264_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParRootFileIo*) (soff+(sizeof(HParRootFileIo)*i)))->~G__THParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParRootFileIo*) (soff))->~G__THParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_264_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParRootFileIo* dest = (HParRootFileIo*) G__getstructoffset();
   *dest = *(HParRootFileIo*) libp->para[0].ref;
   const HParRootFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HDetParRootFileIo */
static int G__RuntimeDbDict_266_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HDetParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HDetParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetParRootFileIo*) G__getstructoffset())->read((HParSet*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetParRootFileIo*) G__getstructoffset())->printInfo((const Text_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HDetParRootFileIo*) G__getstructoffset())->resetActivFlag((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HDetParRootFileIo*) G__getstructoffset())->resetActivFlag();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetParRootFileIo*) G__getstructoffset())->read((HDetGeomPar*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HDetParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HDetParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HDetParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_266_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_266_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HDetParRootFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HDetParRootFileIo(*(HDetParRootFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HDetParRootFileIo G__THDetParRootFileIo;
static int G__RuntimeDbDict_266_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HDetParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HDetParRootFileIo*) (soff+(sizeof(HDetParRootFileIo)*i)))->~G__THDetParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HDetParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HDetParRootFileIo*) (soff))->~G__THDetParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_266_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetParRootFileIo* dest = (HDetParRootFileIo*) G__getstructoffset();
   *dest = *(HDetParRootFileIo*) libp->para[0].ref;
   const HDetParRootFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HCondParRootFileIo */
static int G__RuntimeDbDict_267_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HCondParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HCondParRootFileIo((HParRootFile*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HCondParRootFileIo((HParRootFile*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HCondParRootFileIo[n];
       } else {
         p = new((void*) gvp) HCondParRootFileIo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HCondParRootFileIo;
       } else {
         p = new((void*) gvp) HCondParRootFileIo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HCondParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCondParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HCondParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HCondParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCondParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCondParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCondParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCondParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_267_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCondParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_267_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HCondParRootFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HCondParRootFileIo(*(HCondParRootFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HCondParRootFileIo G__THCondParRootFileIo;
static int G__RuntimeDbDict_267_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HCondParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HCondParRootFileIo*) (soff+(sizeof(HCondParRootFileIo)*i)))->~G__THCondParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HCondParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HCondParRootFileIo*) (soff))->~G__THCondParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_267_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HCondParRootFileIo* dest = (HCondParRootFileIo*) G__getstructoffset();
   *dest = *(HCondParRootFileIo*) libp->para[0].ref;
   const HCondParRootFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HSpecParRootFileIo */
static int G__RuntimeDbDict_269_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSpecParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HSpecParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HSpecParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSpecParRootFileIo*) G__getstructoffset())->read((HSpecGeomPar*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HSpecParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpecParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HSpecParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HSpecParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSpecParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpecParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSpecParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpecParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_269_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSpecParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_269_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HSpecParRootFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HSpecParRootFileIo(*(HSpecParRootFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HSpecParRootFileIo G__THSpecParRootFileIo;
static int G__RuntimeDbDict_269_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HSpecParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HSpecParRootFileIo*) (soff+(sizeof(HSpecParRootFileIo)*i)))->~G__THSpecParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HSpecParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HSpecParRootFileIo*) (soff))->~G__THSpecParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_269_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSpecParRootFileIo* dest = (HSpecParRootFileIo*) G__getstructoffset();
   *dest = *(HSpecParRootFileIo*) libp->para[0].ref;
   const HSpecParRootFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParAsciiFileIo */
static int G__RuntimeDbDict_270_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParAsciiFileIo[n];
     } else {
       p = new((void*) gvp) HParAsciiFileIo[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParAsciiFileIo;
     } else {
       p = new((void*) gvp) HParAsciiFileIo;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HParAsciiFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HParAsciiFileIo*) G__getstructoffset())->open((const Text_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParAsciiFileIo*) G__getstructoffset())->getFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_270_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_270_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParAsciiFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParAsciiFileIo(*(HParAsciiFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParAsciiFileIo G__THParAsciiFileIo;
static int G__RuntimeDbDict_270_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParAsciiFileIo*) (soff+(sizeof(HParAsciiFileIo)*i)))->~G__THParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParAsciiFileIo*) (soff))->~G__THParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_270_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParAsciiFileIo* dest = (HParAsciiFileIo*) G__getstructoffset();
   *dest = *(HParAsciiFileIo*) libp->para[0].ref;
   const HParAsciiFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HDetParAsciiFileIo */
static int G__RuntimeDbDict_279_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HDetParAsciiFileIo((fstream*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HDetParAsciiFileIo((fstream*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetParAsciiFileIo*) G__getstructoffset())->read((HDetGeomPar*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetParAsciiFileIo*) G__getstructoffset())->read((HTrb3Calpar*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HDetParAsciiFileIo*) G__getstructoffset())->writeFile((HDetGeomPar*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HDetParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HDetParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HDetParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_279_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_279_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HDetParAsciiFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HDetParAsciiFileIo(*(HDetParAsciiFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HDetParAsciiFileIo G__THDetParAsciiFileIo;
static int G__RuntimeDbDict_279_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HDetParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HDetParAsciiFileIo*) (soff+(sizeof(HDetParAsciiFileIo)*i)))->~G__THDetParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HDetParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HDetParAsciiFileIo*) (soff))->~G__THDetParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_279_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetParAsciiFileIo* dest = (HDetParAsciiFileIo*) G__getstructoffset();
   *dest = *(HDetParAsciiFileIo*) libp->para[0].ref;
   const HDetParAsciiFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HCondParAsciiFileIo */
static int G__RuntimeDbDict_280_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HCondParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HCondParAsciiFileIo((fstream*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HCondParAsciiFileIo((fstream*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HCondParAsciiFileIo[n];
       } else {
         p = new((void*) gvp) HCondParAsciiFileIo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HCondParAsciiFileIo;
       } else {
         p = new((void*) gvp) HCondParAsciiFileIo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HCondParAsciiFileIo*) G__getstructoffset())->readCond((HParCond*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HCondParAsciiFileIo*) G__getstructoffset())->writeCond((HParCond*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HCondParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCondParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HCondParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HCondParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCondParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCondParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCondParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCondParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_280_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCondParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_280_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HCondParAsciiFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HCondParAsciiFileIo(*(HCondParAsciiFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HCondParAsciiFileIo G__THCondParAsciiFileIo;
static int G__RuntimeDbDict_280_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HCondParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HCondParAsciiFileIo*) (soff+(sizeof(HCondParAsciiFileIo)*i)))->~G__THCondParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HCondParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HCondParAsciiFileIo*) (soff))->~G__THCondParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_280_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HCondParAsciiFileIo* dest = (HCondParAsciiFileIo*) G__getstructoffset();
   *dest = *(HCondParAsciiFileIo*) libp->para[0].ref;
   const HCondParAsciiFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HSpecParAsciiFileIo */
static int G__RuntimeDbDict_282_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSpecParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HSpecParAsciiFileIo((fstream*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HSpecParAsciiFileIo((fstream*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSpecParAsciiFileIo*) G__getstructoffset())->read((HSpecGeomPar*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HSpecParAsciiFileIo*) G__getstructoffset())->writeGeom((HSpecGeomPar*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSpecParAsciiFileIo*) G__getstructoffset())->read((HTrbnetAddressMapping*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HSpecParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpecParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HSpecParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HSpecParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSpecParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpecParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSpecParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpecParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_282_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSpecParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_282_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HSpecParAsciiFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HSpecParAsciiFileIo(*(HSpecParAsciiFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HSpecParAsciiFileIo G__THSpecParAsciiFileIo;
static int G__RuntimeDbDict_282_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HSpecParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HSpecParAsciiFileIo*) (soff+(sizeof(HSpecParAsciiFileIo)*i)))->~G__THSpecParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HSpecParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HSpecParAsciiFileIo*) (soff))->~G__THSpecParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_282_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSpecParAsciiFileIo* dest = (HSpecParAsciiFileIo*) G__getstructoffset();
   *dest = *(HSpecParAsciiFileIo*) libp->para[0].ref;
   const HSpecParAsciiFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HRunInfo */
static int G__RuntimeDbDict_283_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRunInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRunInfo((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HRunInfo((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HRunInfo[n];
       } else {
         p = new((void*) gvp) HRunInfo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HRunInfo;
       } else {
         p = new((void*) gvp) HRunInfo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRunInfo*) G__getstructoffset())->setRunId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRunInfo*) G__getstructoffset())->setStartTime((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRunInfo*) G__getstructoffset())->setEndTime((const Char_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRunInfo*) G__getstructoffset())->setNumEvents((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HRunInfo*) G__getstructoffset())->getRunId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HRunInfo*) G__getstructoffset())->getStartTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HRunInfo*) G__getstructoffset())->getEndTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HRunInfo*) G__getstructoffset())->getNumEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRunInfo*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRunInfo*) G__getstructoffset())->write(*(fstream*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HRunInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRunInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HRunInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HRunInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRunInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRunInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRunInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRunInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_283_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRunInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_283_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HRunInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HRunInfo(*(HRunInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HRunInfo G__THRunInfo;
static int G__RuntimeDbDict_283_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HRunInfo*) (soff+(sizeof(HRunInfo)*i)))->~G__THRunInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HRunInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HRunInfo*) (soff))->~G__THRunInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_283_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRunInfo* dest = (HRunInfo*) G__getstructoffset();
   *dest = *(HRunInfo*) libp->para[0].ref;
   const HRunInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFileInfo */
static int G__RuntimeDbDict_284_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFileInfo* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFileInfo((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFileInfo((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFileInfo[n];
       } else {
         p = new((void*) gvp) HFileInfo[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFileInfo;
       } else {
         p = new((void*) gvp) HFileInfo;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFileInfo*) G__getstructoffset())->setMagnetCurrent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HFileInfo*) G__getstructoffset())->getMagnetCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFileInfo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFileInfo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFileInfo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFileInfo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFileInfo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFileInfo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFileInfo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFileInfo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_284_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFileInfo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_284_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFileInfo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFileInfo(*(HFileInfo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFileInfo G__THFileInfo;
static int G__RuntimeDbDict_284_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFileInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFileInfo*) (soff+(sizeof(HFileInfo)*i)))->~G__THFileInfo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFileInfo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFileInfo*) (soff))->~G__THFileInfo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_284_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFileInfo* dest = (HFileInfo*) G__getstructoffset();
   *dest = *(HFileInfo*) libp->para[0].ref;
   const HFileInfo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HMagnetPar */
static int G__RuntimeDbDict_285_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMagnetPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMagnetPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HMagnetPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMagnetPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HMagnetPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HMagnetPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HMagnetPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMagnetPar[n];
       } else {
         p = new((void*) gvp) HMagnetPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HMagnetPar;
       } else {
         p = new((void*) gvp) HMagnetPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMagnetPar*) G__getstructoffset())->getCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMagnetPar*) G__getstructoffset())->getPolarity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HMagnetPar*) G__getstructoffset())->getMaximumCurrent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HMagnetPar*) G__getstructoffset())->getScalingFactor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMagnetPar*) G__getstructoffset())->setCurrent((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HMagnetPar*) G__getstructoffset())->init((HParIo*) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HMagnetPar*) G__getstructoffset())->init((HParIo*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HMagnetPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMagnetPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HMagnetPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HMagnetPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HMagnetPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMagnetPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMagnetPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HMagnetPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_285_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HMagnetPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_285_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HMagnetPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HMagnetPar(*(HMagnetPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HMagnetPar G__THMagnetPar;
static int G__RuntimeDbDict_285_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HMagnetPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HMagnetPar*) (soff+(sizeof(HMagnetPar)*i)))->~G__THMagnetPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HMagnetPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HMagnetPar*) (soff))->~G__THMagnetPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_285_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HMagnetPar* dest = (HMagnetPar*) G__getstructoffset();
   *dest = *(HMagnetPar*) libp->para[0].ref;
   const HMagnetPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HSlowChan */
static int G__RuntimeDbDict_521_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSlowChan* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HSlowChan[n];
     } else {
       p = new((void*) gvp) HSlowChan[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HSlowChan;
     } else {
       p = new((void*) gvp) HSlowChan;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowChan*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowChan*) G__getstructoffset())->copyValues((HSlowChan*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowChan*) G__getstructoffset())->set((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowChan*) G__getstructoffset())->get((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowChan*) G__getstructoffset())->set((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1])
, (Double_t) G__double(libp->para[2]), (Double_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HSlowChan*) G__getstructoffset())->getNValues());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HSlowChan*) G__getstructoffset())->print((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HSlowChan*) G__getstructoffset())->print();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HSlowChan::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSlowChan::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HSlowChan::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HSlowChan::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowChan*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSlowChan::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSlowChan::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSlowChan::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_521_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSlowChan::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_521_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HSlowChan* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HSlowChan(*(HSlowChan*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HSlowChan G__THSlowChan;
static int G__RuntimeDbDict_521_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HSlowChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HSlowChan*) (soff+(sizeof(HSlowChan)*i)))->~G__THSlowChan();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HSlowChan*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HSlowChan*) (soff))->~G__THSlowChan();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_521_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSlowChan* dest = (HSlowChan*) G__getstructoffset();
   *dest = *(HSlowChan*) libp->para[0].ref;
   const HSlowChan& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HSlowPar */
static int G__RuntimeDbDict_522_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSlowPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HSlowPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HSlowPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HSlowPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HSlowPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HSlowPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HSlowPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HSlowPar[n];
       } else {
         p = new((void*) gvp) HSlowPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HSlowPar;
       } else {
         p = new((void*) gvp) HSlowPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->setChannel((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Double_t*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->setChannel((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Double_t*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->getChannel((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (Double_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->setChannel((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (HSlowChan*) G__int(libp->para[2]), (Bool_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->setChannel((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (HSlowChan*) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->setChannelMap((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->getChannel((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1]))
, (HSlowChan*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->setPartition(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HSlowPar*) G__getstructoffset())->getPartition();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->findRunID((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->removeRun((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->getRangeRunID(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HSlowPar*) G__getstructoffset())->getNRunIDs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HSlowPar*) G__getstructoffset())->reset((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HSlowPar*) G__getstructoffset())->reset();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->printParam();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->printChannel((Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HSlowPar*) G__getstructoffset())->addToChannelList(*((TString*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HSlowPar*) G__getstructoffset())->addToChannelList(*((TString*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HSlowPar*) G__getstructoffset())->getChannelList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HSlowPar*) G__getstructoffset())->makeChannelList((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HSlowPar*) G__getstructoffset())->makeChannelList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->printChannelList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HSlowPar*) G__getstructoffset())->getRunIDList((TArrayI*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HSlowPar*) G__getstructoffset())->getRunIDList();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->printRunIDList();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->readline((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->putAsciiHeader(*(TString*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSlowPar*) G__getstructoffset())->write(*(fstream*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HSlowPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSlowPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HSlowPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HSlowPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSlowPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSlowPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSlowPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSlowPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_522_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSlowPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HSlowPar G__THSlowPar;
static int G__RuntimeDbDict_522_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HSlowPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HSlowPar*) (soff+(sizeof(HSlowPar)*i)))->~G__THSlowPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HSlowPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HSlowPar*) (soff))->~G__THSlowPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEmcSimulPar */
static int G__RuntimeDbDict_543_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEmcSimulPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEmcSimulPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HEmcSimulPar(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEmcSimulPar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HEmcSimulPar((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEmcSimulPar((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HEmcSimulPar((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEmcSimulPar[n];
       } else {
         p = new((void*) gvp) HEmcSimulPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HEmcSimulPar;
       } else {
         p = new((void*) gvp) HEmcSimulPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEmcSimulPar*) G__getstructoffset())->pmIndex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEmcSimulPar*) G__getstructoffset())->pmIndex((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEmcSimulPar*) G__getstructoffset())->setNumPmtTypes((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEmcSimulPar*) G__getstructoffset())->setPmtType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HEmcSimulPar*) G__getstructoffset())->getNumPmtTypes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEmcSimulPar*) G__getstructoffset())->getPmtType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEmcSimulPar*) G__getstructoffset())->getPmtType((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HEmcSimulPar*) G__getstructoffset())->getLookupArray((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEmcSimulPar*) G__getstructoffset())->printLookupPmtType();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEmcSimulPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEmcSimulPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEmcSimulPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEmcSimulPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEmcSimulPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEmcSimulPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEmcSimulPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEmcSimulPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RuntimeDbDict_543_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEmcSimulPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RuntimeDbDict_543_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HEmcSimulPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HEmcSimulPar(*(HEmcSimulPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEmcSimulPar G__THEmcSimulPar;
static int G__RuntimeDbDict_543_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEmcSimulPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEmcSimulPar*) (soff+(sizeof(HEmcSimulPar)*i)))->~G__THEmcSimulPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEmcSimulPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEmcSimulPar*) (soff))->~G__THEmcSimulPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RuntimeDbDict_543_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEmcSimulPar* dest = (HEmcSimulPar*) G__getstructoffset();
   *dest = *(HEmcSimulPar*) libp->para[0].ref;
   const HEmcSimulPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HParSet */

/* HContainer */

/* HContFact */

/* HBaseContFact */

/* HParIo */

/* HRun */

/* HParamFileGenerator */

/* HRuntimeDb */

/* HParamList */

/* HParCond */

/* HParamObj */

/* HParVersion */

/* HDetParIo */

/* HParRootFile */

/* HParRootFileIo */

/* HDetParRootFileIo */

/* HCondParRootFileIo */

/* HSpecParRootFileIo */

/* HParAsciiFileIo */

/* HDetParAsciiFileIo */

/* HCondParAsciiFileIo */

/* HSpecParAsciiFileIo */

/* HRunInfo */

/* HFileInfo */

/* HMagnetPar */

/* HSlowChan */

/* HSlowPar */

/* HEmcSimulPar */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRuntimeDbDict {
 public:
  G__Sizep2memfuncRuntimeDbDict(): p(&G__Sizep2memfuncRuntimeDbDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRuntimeDbDict::*p)();
};

size_t G__get_sizep2memfuncRuntimeDbDict()
{
  G__Sizep2memfuncRuntimeDbDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRuntimeDbDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet))) {
     HParSet *G__Lderived;
     G__Lderived=(HParSet*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer))) {
     HContainer *G__Lderived;
     G__Lderived=(HContainer*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact))) {
     HContFact *G__Lderived;
     G__Lderived=(HContFact*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact))) {
     HBaseContFact *G__Lderived;
     G__Lderived=(HBaseContFact*)0x1000;
     {
       HContFact *G__Lpbase=(HContFact*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact),G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo))) {
     HParIo *G__Lderived;
     G__Lderived=(HParIo*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun))) {
     HRun *G__Lderived;
     G__Lderived=(HRun*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator))) {
     HParamFileGenerator *G__Lderived;
     G__Lderived=(HParamFileGenerator*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRuntimeDb))) {
     HRuntimeDb *G__Lderived;
     G__Lderived=(HRuntimeDb*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRuntimeDb),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList))) {
     HParamList *G__Lderived;
     G__Lderived=(HParamList*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond))) {
     HParCond *G__Lderived;
     G__Lderived=(HParCond*)0x1000;
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj))) {
     HParamObj *G__Lderived;
     G__Lderived=(HParamObj*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion))) {
     HParVersion *G__Lderived;
     G__Lderived=(HParVersion*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo))) {
     HDetParIo *G__Lderived;
     G__Lderived=(HDetParIo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile))) {
     HParRootFile *G__Lderived;
     G__Lderived=(HParRootFile*)0x1000;
     {
       TFile *G__Lpbase=(TFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile),G__get_linked_tagnum(&G__RuntimeDbDictLN_TFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TDirectoryFile *G__Lpbase=(TDirectoryFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile),G__get_linked_tagnum(&G__RuntimeDbDictLN_TDirectoryFile),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TDirectory *G__Lpbase=(TDirectory*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile),G__get_linked_tagnum(&G__RuntimeDbDictLN_TDirectory),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo))) {
     HParRootFileIo *G__Lderived;
     G__Lderived=(HParRootFileIo*)0x1000;
     {
       HParIo *G__Lpbase=(HParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo))) {
     HDetParRootFileIo *G__Lderived;
     G__Lderived=(HDetParRootFileIo*)0x1000;
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo))) {
     HCondParRootFileIo *G__Lderived;
     G__Lderived=(HCondParRootFileIo*)0x1000;
     {
       HDetParRootFileIo *G__Lpbase=(HDetParRootFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo))) {
     HSpecParRootFileIo *G__Lderived;
     G__Lderived=(HSpecParRootFileIo*)0x1000;
     {
       HDetParRootFileIo *G__Lpbase=(HDetParRootFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo))) {
     HParAsciiFileIo *G__Lderived;
     G__Lderived=(HParAsciiFileIo*)0x1000;
     {
       HParIo *G__Lpbase=(HParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo))) {
     HDetParAsciiFileIo *G__Lderived;
     G__Lderived=(HDetParAsciiFileIo*)0x1000;
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo))) {
     HCondParAsciiFileIo *G__Lderived;
     G__Lderived=(HCondParAsciiFileIo*)0x1000;
     {
       HDetParAsciiFileIo *G__Lpbase=(HDetParAsciiFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo))) {
     HSpecParAsciiFileIo *G__Lderived;
     G__Lderived=(HSpecParAsciiFileIo*)0x1000;
     {
       HDetParAsciiFileIo *G__Lpbase=(HDetParAsciiFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo))) {
     HRunInfo *G__Lderived;
     G__Lderived=(HRunInfo*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo))) {
     HFileInfo *G__Lderived;
     G__Lderived=(HFileInfo*)0x1000;
     {
       HRunInfo *G__Lpbase=(HRunInfo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo),G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar))) {
     HMagnetPar *G__Lderived;
     G__Lderived=(HMagnetPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan))) {
     HSlowChan *G__Lderived;
     G__Lderived=(HSlowChan*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar))) {
     HSlowPar *G__Lderived;
     G__Lderived=(HSlowPar*)0x1000;
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar))) {
     HEmcSimulPar *G__Lderived;
     G__Lderived=(HEmcSimulPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar),G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRuntimeDbDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,HSlowChan*>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,HSlowChan*,less<TString> >",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,map<TString,HSlowChan*>*>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*,less<int> >",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<Int_t>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HParSet */
static void G__setup_memvarHParSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet));
   { HParSet *p; p=(HParSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Text_t"),-1,2,"detName[20]=",0,"! name of the detector the container belongs to");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"versions[3]=",0,"! versions of container in the 2 possible inputs");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"status=",0,"! static flag ");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"changed=",0,"! flag is kTRUE if parameters have changed");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"paramContext=",0,"Context/purpose for parameters and conditions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"author=",0,"Author of parameters");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"description=",0,"Description of parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HContainer */
static void G__setup_memvarHContainer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer));
   { HContainer *p; p=(HContainer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"contexts=",0,"available contexts for this parameter container");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"actualContext=",0,"actual context set by the user");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HContFact */
static void G__setup_memvarHContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact));
   { HContFact *p; p=(HContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"containers=",0,"all parameter containers managed by this factory");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HBaseContFact */
static void G__setup_memvarHBaseContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact));
   { HBaseContFact *p; p=(HBaseContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParIo */
static void G__setup_memvarHParIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo));
   { HParIo *p; p=(HParIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"inputName=",0,"file name or \"Oracle\"");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"detParIoList=",0,"list of detector I/Os");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"autoWritable=",0,"flag indicating if automatic write is possible");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HRun */
static void G__setup_memvarHRun(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun));
   { HRun *p; p=(HRun*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"parVersions=",0,"List of container names with the versions");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"refRun=",0,"! name of the reference run for initialization");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParamFileGenerator */
static void G__setup_memvarHParamFileGenerator(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator));
   { HParamFileGenerator *p; p=(HParamFileGenerator*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,4,"paramFilename=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,4,"logFilename=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,4,"experiment=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,4,"rangeStart=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,4,"rangeEnd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,4,"runs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,4,"logFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HRuntimeDb */
static void G__setup_memvarHRuntimeDb(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRuntimeDb));
   { HRuntimeDb *p; p=(HRuntimeDb*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRuntimeDb),-1,-2,4,"gRtdb=",0,"!");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"contFactories=",0,"list of container factories ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"containerList=",0,"list of parameter containers");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"runs=",0,"list of runs");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo),-1,-1,2,"firstInput=",0,"first (prefered) input for parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo),-1,-1,2,"secondInput=",0,"second input (used if not found in first input)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo),-1,-1,2,"output=",0,"output for parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun),-1,-1,2,"currentRun=",0,"Current run");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"currentFileName=",0,"Name of current event file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"versionsChanged=",0,"flag for write of list of runs (set kTRUE by each write)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isRootFileOutput=",0,"flag indicating that the output is a ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator),-1,-1,2,"pParamFileGenerator=",0,"! generator for a parameter file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParamList */
static void G__setup_memvarHParamList(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList));
   { HParamList *p; p=(HParamList*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"paramList=",0,"List for parameters stored as string");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParCond */
static void G__setup_memvarHParCond(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond));
   { HParCond *p; p=(HParCond*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParamObj */
static void G__setup_memvarHParamObj(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   { HParamObj *p; p=(HParamObj*)0x1000; if (p) { }
   G__memvar_setup((void*)0,66,0,0,-1,G__defined_typename("UChar_t"),-1,2,"paramValue=",0,"Pointer to binary array");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"arraySize=",0,"Size of binary array");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"paramType=",0,"Type of parameter value or class name");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"basicType=",0,"kTRUE for C-types and C-type parameter arrays, kFALSE for classes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"bytesPerValue=",0,"number of bytes per value");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"classVersion=",0,"Code version of classes stored as binary");
   G__memvar_setup((void*)0,66,0,0,-1,G__defined_typename("UChar_t"),-1,2,"streamerInfo=",0,"Pointer to binary array container the streamer info");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"streamerInfoSize=",0,"Size of streamer info array");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParVersion */
static void G__setup_memvarHParVersion(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion));
   { HParVersion *p; p=(HParVersion*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"inputVersions[3]=",0,"! version of the container in the 2 possible inputs");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"rootVersion=",0,"version of the container in ROOT output file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HDetParIo */
static void G__setup_memvarHDetParIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo));
   { HDetParIo *p; p=(HDetParIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"inputNumber=",0,"input number (first or second input in runtime database)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParRootFile */
static void G__setup_memvarHParRootFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile));
   { HParRootFile *p; p=(HParRootFile*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->run)-(long)(p)),85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun),-1,-1,1,"run=",0,"! pointer to current run in ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParRootFileIo */
static void G__setup_memvarHParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo));
   { HParRootFileIo *p; p=(HParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile),-1,-1,2,"file=",0,"pointer to ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HDetParRootFileIo */
static void G__setup_memvarHDetParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo));
   { HDetParRootFileIo *p; p=(HDetParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile),-1,-1,2,"pFile=",0,"pointer to parameter ROOT file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TArrayI),-1,-1,2,"modulesFound=",0,"array of modules found in the Root file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TArrayI),-1,-1,2,"initModules=",0,"array of modules initialized from Root file");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isActiv=",0,"flag is set kTRUE by function readModules()");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HCondParRootFileIo */
static void G__setup_memvarHCondParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo));
   { HCondParRootFileIo *p; p=(HCondParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HSpecParRootFileIo */
static void G__setup_memvarHSpecParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo));
   { HSpecParRootFileIo *p; p=(HSpecParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParAsciiFileIo */
static void G__setup_memvarHParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo));
   { HParAsciiFileIo *p; p=(HParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,2,"file=",0,"pointer to a file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HDetParAsciiFileIo */
static void G__setup_memvarHDetParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo));
   { HDetParAsciiFileIo *p; p=(HDetParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"fHeader=",0,"! header of container output in file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"sepLine=",0,"! comment line");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR),G__defined_typename("fstream"),-1,2,"pFile=",0,"! pointer to ascii file");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HCondParAsciiFileIo */
static void G__setup_memvarHCondParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo));
   { HCondParAsciiFileIo *p; p=(HCondParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HSpecParAsciiFileIo */
static void G__setup_memvarHSpecParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo));
   { HSpecParAsciiFileIo *p; p=(HSpecParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HRunInfo */
static void G__setup_memvarHRunInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo));
   { HRunInfo *p; p=(HRunInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"runId=",0,"run identifier");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"startTime=",0,"start time");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"endTime=",0,"stop time");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"numEvents=",0,"num of events");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFileInfo */
static void G__setup_memvarHFileInfo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo));
   { HFileInfo *p; p=(HFileInfo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"magnetCurrent=",0,"magnet current");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HMagnetPar */
static void G__setup_memvarHMagnetPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar));
   { HMagnetPar *p; p=(HMagnetPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"current=",0,"mean current[A]");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"maxCurrent=",0,"maximum current (full field)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HSlowChan */
static void G__setup_memvarHSlowChan(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan));
   { HSlowChan *p; p=(HSlowChan*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->mean)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"mean=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->rms)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"rms=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->min)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"min=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->max)-(long)(p)),100,0,0,-1,G__defined_typename("Double_t"),-1,1,"max=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HSlowPar */
static void G__setup_memvarHSlowPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar));
   { HSlowPar *p; p=(HSlowPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR),G__defined_typename("map<Int_t,map<TString,HSlowChan*>*>"),-1,2,"fMRunID=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR),G__defined_typename("vector<Int_t>"),-1,2,"fVRunID=",0,"list of runIDs");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TList),-1,-1,2,"fListChannels=",0,"list of channels");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TString),-1,-1,2,"fPartition=",0,"Name ORACLE SLOW CONTROL PARTION, to be set by user!!!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCurrentRunID=",0,"! remember the current runID");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgRcLcLiterator),-1,-1,2,"fMIter=",0,"! remember the current ChannelMap");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEmcSimulPar */
static void G__setup_memvarHEmcSimulPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar));
   { HEmcSimulPar *p; p=(HEmcSimulPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"numRows=",0,"! number of rows per module");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"numCols=",0,"! number of columns per module");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"numPmtTypes=",0,"number of photomultiplier types in lookup table");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TArrayI),-1,-1,2,"lookupPmtType=",0,"lookup table for PMT types (0: no PMT, 1: 1.5inch, 2: 3inch)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRuntimeDbDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHParSet(void) {
   /* HParSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet));
   G__memfunc_setup("HParSet",663,G__RuntimeDbDict_193_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' name C - 'Char_t' 10 '\"\"' title "
"C - 'Char_t' 10 '\"\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__RuntimeDbDict_193_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__RuntimeDbDict_193_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__RuntimeDbDict_193_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__RuntimeDbDict_193_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__RuntimeDbDict_193_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,G__RuntimeDbDict_193_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__RuntimeDbDict_193_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getDetectorName",1531,G__RuntimeDbDict_193_0_9, 67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__RuntimeDbDict_193_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputVersion",1602,G__RuntimeDbDict_193_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' v i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputVersion",1590,G__RuntimeDbDict_193_0_12, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStatic",948,G__RuntimeDbDict_193_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isStatic",836,G__RuntimeDbDict_193_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChanged",1014,G__RuntimeDbDict_193_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__RuntimeDbDict_193_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParamContext",1570,G__RuntimeDbDict_193_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamContext",1558,G__RuntimeDbDict_193_0_18, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAuthor",959,G__RuntimeDbDict_193_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAuthor",947,G__RuntimeDbDict_193_0_20, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDescription",1488,G__RuntimeDbDict_193_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDescription",1476,G__RuntimeDbDict_193_0_22, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyComment",1166,G__RuntimeDbDict_193_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HParSet' - 1 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_193_0_24, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_193_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_193_0_26, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_193_0_27, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_193_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_193_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_193_0_33, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_193_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_193_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParSet::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParSet", 663, G__RuntimeDbDict_193_0_36, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 0, 1, 1, 1, 0, "u 'HParSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParSet", 789, G__RuntimeDbDict_193_0_37, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_193_0_38, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 1, 1, 1, 1, 0, "u 'HParSet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHContainer(void) {
   /* HContainer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer));
   G__memfunc_setup("HContainer",1003,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer), -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HContainer",1003,G__RuntimeDbDict_194_0_2, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - - "
"C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContext",1038,G__RuntimeDbDict_194_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setActualContext",1675,G__RuntimeDbDict_194_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDefaultContext",1770,G__RuntimeDbDict_194_0_5, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getActualContext",1663,G__RuntimeDbDict_194_0_6, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_194_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getConcatName",1305,G__RuntimeDbDict_194_0_8, 117, G__get_linked_tagnum(&G__RuntimeDbDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getContext",1061,G__RuntimeDbDict_194_0_9, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_194_0_10, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HContainer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_194_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HContainer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_194_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HContainer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_194_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HContainer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_194_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_194_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HContainer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_194_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HContainer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_194_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HContainer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_194_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HContainer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HContainer", 1003, G__RuntimeDbDict_194_0_22, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer), -1, 0, 1, 1, 1, 0, "u 'HContainer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HContainer", 1129, G__RuntimeDbDict_194_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_194_0_24, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HContainer), -1, 1, 1, 1, 1, 0, "u 'HContainer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHContFact(void) {
   /* HContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact));
   G__memfunc_setup("HContFact",858,G__RuntimeDbDict_195_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContext",1038,G__RuntimeDbDict_195_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_195_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getContainer",1251,G__RuntimeDbDict_195_0_4, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,G__RuntimeDbDict_195_0_5, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 0, 1, 1, 1, 0, "U 'HContainer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getActualContext",1663,(G__InterfaceMethod) NULL, 67, -1, G__defined_typename("Char_t"), 0, 1, 1, 2, 1, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_195_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_195_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_195_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_195_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_195_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_195_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_195_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_195_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_195_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HContFact::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HContFact", 858, G__RuntimeDbDict_195_0_19, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact), -1, 0, 1, 1, 1, 0, "u 'HContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HContFact", 984, G__RuntimeDbDict_195_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_195_0_21, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HContFact), -1, 1, 1, 1, 1, 0, "u 'HContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHBaseContFact(void) {
   /* HBaseContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact));
   G__memfunc_setup("setAllContainers",1659,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HBaseContFact",1237,G__RuntimeDbDict_196_0_2, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 0, 1, 1, 1, 0, "U 'HContainer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_196_0_4, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HBaseContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_196_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HBaseContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_196_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HBaseContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_196_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HBaseContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_196_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_196_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HBaseContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_196_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HBaseContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_196_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HBaseContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_196_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HBaseContFact::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HBaseContFact", 1237, G__RuntimeDbDict_196_0_16, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact), -1, 0, 1, 1, 1, 0, "u 'HBaseContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HBaseContFact", 1363, G__RuntimeDbDict_196_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_196_0_18, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HBaseContFact), -1, 1, 1, 1, 1, 0, "u 'HBaseContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParIo(void) {
   /* HParIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo));
   G__memfunc_setup("HParIo",547,G__RuntimeDbDict_197_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetParIo",1080,G__RuntimeDbDict_197_0_2, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setDetParIo",1092,G__RuntimeDbDict_197_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HDetParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("removeDetParIo",1414,G__RuntimeDbDict_197_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setInputNumber",1477,G__RuntimeDbDict_197_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__RuntimeDbDict_197_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reconnect",961,G__RuntimeDbDict_197_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("disconnect",1066,G__RuntimeDbDict_197_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setDetParIo",1092,G__RuntimeDbDict_197_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__RuntimeDbDict_197_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("check",510,G__RuntimeDbDict_197_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readVersions",1269,G__RuntimeDbDict_197_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,G__RuntimeDbDict_197_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getInputName",1233,G__RuntimeDbDict_197_0_14, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAutoWritable",1567,G__RuntimeDbDict_197_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAutoWritable",1455,G__RuntimeDbDict_197_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getListOfRuns",1337,G__RuntimeDbDict_197_0_17, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TList), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 '\"\"' startAt "
"C - 'Char_t' 10 '\"\"' endAt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_197_0_18, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_197_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_197_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_197_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_197_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_197_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_197_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_197_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_197_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParIo", 547, G__RuntimeDbDict_197_0_30, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo), -1, 0, 1, 1, 1, 0, "u 'HParIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParIo", 673, G__RuntimeDbDict_197_0_31, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_197_0_32, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo), -1, 1, 1, 1, 1, 0, "u 'HParIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHRun(void) {
   /* HRun */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun));
   G__memfunc_setup("HRun",381,G__RuntimeDbDict_198_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HRun",381,G__RuntimeDbDict_198_0_2, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 '\"\"' refName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HRun",381,G__RuntimeDbDict_198_0_3, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - r i - 'Int_t' 0 '-1' rr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HRun",381,G__RuntimeDbDict_198_0_4, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 1, 1, 1, 0, "u 'HRun' - 1 - run", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunId",802,G__RuntimeDbDict_198_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addParVersion",1330,G__RuntimeDbDict_198_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HParVersion' - 0 - pv", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParVersion",1353,G__RuntimeDbDict_198_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParVersions",1468,G__RuntimeDbDict_198_0_8, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRefRun",914,G__RuntimeDbDict_198_0_9, 67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRefRun",926,G__RuntimeDbDict_198_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRefRun",926,G__RuntimeDbDict_198_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__RuntimeDbDict_198_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetOutputVersions",2061,G__RuntimeDbDict_198_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_198_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__RuntimeDbDict_198_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_198_0_16, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HRun::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_198_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRun::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_198_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HRun::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_198_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HRun::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_198_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_198_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRun::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_198_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRun::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_198_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRun::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_198_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRun::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HRun", 507, G__RuntimeDbDict_198_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_198_0_29, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 1, 1, 1, 1, 0, "u 'HRun' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParamFileGenerator(void) {
   /* HParamFileGenerator */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator));
   G__memfunc_setup("HParamFileGenerator",1888,G__RuntimeDbDict_199_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - beamtime C - 'Char_t' 10 '\"\"' startAt "
"C - 'Char_t' 10 '\"\"' endAt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("openParameterFile",1747,G__RuntimeDbDict_199_0_2, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamFilename",1618,G__RuntimeDbDict_199_0_3, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLogFilename",1411,G__RuntimeDbDict_199_0_4, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getExperiment",1377,G__RuntimeDbDict_199_0_5, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRangeStart",1339,G__RuntimeDbDict_199_0_6, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRangeEnd",1092,G__RuntimeDbDict_199_0_7, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setListOfRuns",1349,G__RuntimeDbDict_199_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TList' - 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeRuns",979,G__RuntimeDbDict_199_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeLogFile",1208,G__RuntimeDbDict_199_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLogFile",994,G__RuntimeDbDict_199_0_11, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("fstream"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_199_0_12, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParamFileGenerator::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_199_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamFileGenerator::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_199_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParamFileGenerator::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_199_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParamFileGenerator::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_199_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_199_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamFileGenerator::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_199_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParamFileGenerator::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_199_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamFileGenerator::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_199_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParamFileGenerator::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParamFileGenerator", 1888, G__RuntimeDbDict_199_0_24, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator), -1, 0, 1, 1, 1, 0, "u 'HParamFileGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParamFileGenerator", 2014, G__RuntimeDbDict_199_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_199_0_26, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamFileGenerator), -1, 1, 1, 1, 1, 0, "u 'HParamFileGenerator' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHRuntimeDb(void) {
   /* HRuntimeDb */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRuntimeDb));
   G__memfunc_setup("HRuntimeDb",978,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRuntimeDb), -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("instance",853,G__RuntimeDbDict_200_0_2, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRuntimeDb), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (HRuntimeDb* (*)())(&HRuntimeDb::instance) ), 0);
   G__memfunc_setup("addParamContext",1535,G__RuntimeDbDict_200_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printParamContexts",1910,G__RuntimeDbDict_200_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContFactory",1429,G__RuntimeDbDict_200_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HContFact' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addContainer",1228,G__RuntimeDbDict_200_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getContainer",1251,G__RuntimeDbDict_200_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findContainer",1348,G__RuntimeDbDict_200_0_8, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParSet), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeContainer",1585,G__RuntimeDbDict_200_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeAllContainers",1981,G__RuntimeDbDict_200_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initContainers",1482,G__RuntimeDbDict_200_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runId i - 'Int_t' 0 '-1' refId "
"C - 'Text_t' 10 '\"\"' fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printContainers",1603,G__RuntimeDbDict_200_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setContainersStatic",1994,G__RuntimeDbDict_200_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeContainers",1601,G__RuntimeDbDict_200_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeContainer",1486,G__RuntimeDbDict_200_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'HParSet' - 0 - - U 'HRun' - 0 - - "
"U 'HRun' - 0 '0' refRun", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addRun",606,G__RuntimeDbDict_200_0_16, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runId i - 'Int_t' 0 '-1' refId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRun",629,G__RuntimeDbDict_200_0_17, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRun",629,G__RuntimeDbDict_200_0_18, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentRun",1368,G__RuntimeDbDict_200_0_19, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentFileName",1828,G__RuntimeDbDict_200_0_20, 67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearRunList",1240,G__RuntimeDbDict_200_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeRun",963,G__RuntimeDbDict_200_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputVersion",1602,G__RuntimeDbDict_200_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Text_t' 0 - container "
"i - 'Int_t' 0 - version i - 'Int_t' 0 - inputNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRootOutputVersion",2151,G__RuntimeDbDict_200_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - run C - 'Text_t' 0 - container "
"i - 'Int_t' 0 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVersionsChanged",1871,G__RuntimeDbDict_200_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__RuntimeDbDict_200_0_26, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetOutputVersions",2061,G__RuntimeDbDict_200_0_27, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetAllVersions",1685,G__RuntimeDbDict_200_0_28, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readAll",693,G__RuntimeDbDict_200_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeSetup",1084,G__RuntimeDbDict_200_0_30, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeVersions",1412,G__RuntimeDbDict_200_0_31, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("saveOutput",1088,G__RuntimeDbDict_200_0_32, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstInput",1380,G__RuntimeDbDict_200_0_33, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSecondInput",1464,G__RuntimeDbDict_200_0_34, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutput",989,G__RuntimeDbDict_200_0_35, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstInput",1368,G__RuntimeDbDict_200_0_36, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSecondInput",1452,G__RuntimeDbDict_200_0_37, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutput",977,G__RuntimeDbDict_200_0_38, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeFirstInput",1582,G__RuntimeDbDict_200_0_39, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeSecondInput",1666,G__RuntimeDbDict_200_0_40, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeOutput",1191,G__RuntimeDbDict_200_0_41, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reconnectInputs",1604,G__RuntimeDbDict_200_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("disconnectInputs",1709,G__RuntimeDbDict_200_0_43, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_200_0_44, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeParamFile",1295,G__RuntimeDbDict_200_0_45, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - 'Char_t' 10 - - C - 'Char_t' 10 - - "
"C - 'Char_t' 10 '\"\"' startAt C - 'Char_t' 10 '\"\"' endAt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findOutputVersion",1816,G__RuntimeDbDict_200_0_46, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initContainers",1482,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillParamFile",1304,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_200_0_49, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HRuntimeDb::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_200_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRuntimeDb::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_200_0_51, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HRuntimeDb::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_200_0_52, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HRuntimeDb::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_200_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_200_0_57, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRuntimeDb::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_200_0_58, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRuntimeDb::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_200_0_59, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRuntimeDb::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_200_0_60, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRuntimeDb::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HRuntimeDb", 1104, G__RuntimeDbDict_200_0_61, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParamList(void) {
   /* HParamList */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList));
   G__memfunc_setup("HParamList",981,G__RuntimeDbDict_203_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HParamObj' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayI' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayC' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayF' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - u 'TArrayD' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - B - 'UChar_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - I - 'Int_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - H - 'UInt_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - F - 'Float_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__RuntimeDbDict_203_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - D - 'Double_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addObject",896,G__RuntimeDbDict_203_0_17, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 0 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - I - 'Int_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - H - 'UInt_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - F - 'Float_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_22, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - D - 'Double_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_23, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - B - 'UChar_t' 0 - - "
"i - 'Int_t' 10 '1' nValues", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_24, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayI' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayC' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayF' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__RuntimeDbDict_203_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TArrayD' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillObject",1022,G__RuntimeDbDict_203_0_28, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - U 'TObject' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RuntimeDbDict_203_0_29, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - B - 'UChar_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RuntimeDbDict_203_0_30, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RuntimeDbDict_203_0_31, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - H - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RuntimeDbDict_203_0_32, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - F - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("replace",732,G__RuntimeDbDict_203_0_33, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - D - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_203_0_34, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("find",417,G__RuntimeDbDict_203_0_35, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getList",732,G__RuntimeDbDict_203_0_36, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_203_0_37, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParamList::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_203_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamList::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_203_0_39, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParamList::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_203_0_40, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParamList::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_203_0_44, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_203_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamList::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_203_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParamList::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_203_0_47, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamList::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_203_0_48, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParamList::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParamList", 981, G__RuntimeDbDict_203_0_49, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList), -1, 0, 1, 1, 1, 0, "u 'HParamList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParamList", 1107, G__RuntimeDbDict_203_0_50, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_203_0_51, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamList), -1, 1, 1, 1, 1, 0, "u 'HParamList' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParCond(void) {
   /* HParCond */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond));
   G__memfunc_setup("putParams",957,G__RuntimeDbDict_204_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getParams",932,G__RuntimeDbDict_204_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printParams",1169,G__RuntimeDbDict_204_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_204_0_8, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParCond::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_204_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParCond::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_204_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParCond::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_204_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParCond::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_204_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_204_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParCond::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_204_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParCond::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_204_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParCond::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_204_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParCond::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HParCond", 877, G__RuntimeDbDict_204_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_204_0_21, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParCond), -1, 1, 1, 1, 1, 0, "u 'HParCond' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParamObj(void) {
   /* HParamObj */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj));
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 '\"\"' name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_2, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 1, 1, 1, 0, "u 'HParamObj' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_3, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_4, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - h - 'UInt_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_5, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - f - 'Float_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_6, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - d - 'Double_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_7, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - I - 'Int_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_8, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - H - 'UInt_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_9, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - F - 'Float_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_10, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - D - 'Double_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_11, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_12, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Char_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParamObj",852,G__RuntimeDbDict_257_0_13, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - - B - 'UChar_t' 10 - - "
"i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParamType",1247,G__RuntimeDbDict_257_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLength",942,G__RuntimeDbDict_257_0_15, 66, -1, G__defined_typename("UChar_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParamValue",1338,G__RuntimeDbDict_257_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - 'UChar_t' 0 - - i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setClassVersion",1576,G__RuntimeDbDict_257_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStreamerInfoSize",1974,G__RuntimeDbDict_257_0_18, 66, -1, G__defined_typename("UChar_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStreamerInfo",1563,G__RuntimeDbDict_257_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"B - 'UChar_t' 0 - - i - 'Int_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamValue",1326,G__RuntimeDbDict_257_0_20, 66, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBasicType",1120,G__RuntimeDbDict_257_0_21, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParamType",1235,G__RuntimeDbDict_257_0_22, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBytesPerValue",1643,G__RuntimeDbDict_257_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getClassVersion",1564,G__RuntimeDbDict_257_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLength",930,G__RuntimeDbDict_257_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumParams",1236,G__RuntimeDbDict_257_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStreamerInfo",1551,G__RuntimeDbDict_257_0_27, 66, -1, G__defined_typename("UChar_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStreamerInfoSize",1962,G__RuntimeDbDict_257_0_28, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_257_0_29, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printHexData",1228,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"H - 'UInt_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_257_0_31, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParamObj::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_257_0_32, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamObj::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_257_0_33, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParamObj::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_257_0_34, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParamObj::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_257_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_257_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamObj::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_257_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParamObj::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_257_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParamObj::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_257_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParamObj::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HParamObj", 978, G__RuntimeDbDict_257_0_43, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_257_0_44, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParamObj), -1, 1, 1, 1, 1, 0, "u 'HParamObj' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParVersion(void) {
   /* HParVersion */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion));
   G__memfunc_setup("HParVersion",1105,G__RuntimeDbDict_259_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParVersion",1105,G__RuntimeDbDict_259_0_2, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion), -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputVersion",1602,G__RuntimeDbDict_259_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 '-1' v i - 'Int_t' 0 '0' i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputVersion",1590,G__RuntimeDbDict_259_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetInputVersions",1932,G__RuntimeDbDict_259_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRootVersion",1494,G__RuntimeDbDict_259_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRootVersion",1482,G__RuntimeDbDict_259_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_259_0_8, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParVersion::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_259_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParVersion::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_259_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParVersion::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_259_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParVersion::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_259_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_259_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParVersion::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_259_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParVersion::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_259_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParVersion::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_259_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParVersion::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParVersion", 1105, G__RuntimeDbDict_259_0_20, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion), -1, 0, 1, 1, 1, 0, "u 'HParVersion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParVersion", 1231, G__RuntimeDbDict_259_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_259_0_22, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParVersion), -1, 1, 1, 1, 1, 0, "u 'HParVersion' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHDetParIo(void) {
   /* HDetParIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo));
   G__memfunc_setup("HDetParIo",832,G__RuntimeDbDict_260_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputNumber",1477,G__RuntimeDbDict_260_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getInputNumber",1465,G__RuntimeDbDict_260_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__RuntimeDbDict_260_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__RuntimeDbDict_260_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__RuntimeDbDict_260_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HDetector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_260_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HDetParIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_260_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_260_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HDetParIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_260_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HDetParIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_260_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_260_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_260_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetParIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_260_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_260_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetParIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HDetParIo", 832, G__RuntimeDbDict_260_0_19, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo), -1, 0, 1, 1, 1, 0, "u 'HDetParIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HDetParIo", 958, G__RuntimeDbDict_260_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_260_0_21, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParIo), -1, 1, 1, 1, 1, 0, "u 'HDetParIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParRootFile(void) {
   /* HParRootFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile));
   G__memfunc_setup("HParRootFile",1167,G__RuntimeDbDict_263_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile), -1, 0, 4, 1, 1, 0, 
"C - 'Text_t' 10 - fname C - 'Option_t' 10 '\"READ\"' option "
"C - 'Text_t' 10 '\"\"' ftitle i - 'Int_t' 0 '1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRun",629,G__RuntimeDbDict_263_0_2, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRun), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readVersions",1269,G__RuntimeDbDict_263_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HRun' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_263_0_4, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParRootFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_263_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParRootFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_263_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParRootFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_263_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParRootFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_263_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_263_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParRootFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_263_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParRootFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_263_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParRootFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_263_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParRootFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HParRootFile", 1293, G__RuntimeDbDict_263_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParRootFileIo(void) {
   /* HParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo));
   G__memfunc_setup("HParRootFileIo",1351,G__RuntimeDbDict_264_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__RuntimeDbDict_264_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - 'Text_t' 10 - fname C - 'Option_t' 10 '\"READ\"' option "
"C - 'Text_t' 10 '\"\"' ftitle i - 'Int_t' 0 '1' compress", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParRootFile",1415,G__RuntimeDbDict_264_0_5, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readVersions",1269,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HRun' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getList",732,G__RuntimeDbDict_264_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("cd",199,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_264_0_10, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_264_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_264_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_264_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_264_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_264_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_264_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_264_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_264_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParRootFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParRootFileIo", 1351, G__RuntimeDbDict_264_0_22, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo), -1, 0, 1, 1, 1, 0, "u 'HParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParRootFileIo", 1477, G__RuntimeDbDict_264_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_264_0_24, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParRootFileIo), -1, 1, 1, 1, 1, 0, "u 'HParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHDetParRootFileIo(void) {
   /* HDetParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo));
   G__memfunc_setup("HDetParRootFileIo",1636,G__RuntimeDbDict_266_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo), -1, 0, 1, 1, 1, 0, "U 'HParRootFile' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__RuntimeDbDict_266_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HDetector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printInfo",953,G__RuntimeDbDict_266_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Text_t' 10 - msg", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetActivFlag",1428,G__RuntimeDbDict_266_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__RuntimeDbDict_266_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HDetGeomPar' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readModules",1141,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - 'Text_t' 10 - detName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findInputVersion",1687,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - 'Text_t' 10 - contName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxVersion",1356,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "C - 'Text_t' 10 - contName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findContainer",1348,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TObject), -1, 0, 2, 1, 2, 0, 
"C - 'Text_t' 10 - contName i - 'Int_t' 0 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_266_0_12, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HDetParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_266_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_266_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HDetParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_266_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HDetParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_266_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_266_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_266_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_266_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_266_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetParRootFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HDetParRootFileIo", 1636, G__RuntimeDbDict_266_0_24, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo), -1, 0, 1, 1, 1, 0, "u 'HDetParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HDetParRootFileIo", 1762, G__RuntimeDbDict_266_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_266_0_26, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParRootFileIo), -1, 1, 1, 1, 1, 0, "u 'HDetParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHCondParRootFileIo(void) {
   /* HCondParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo));
   G__memfunc_setup("HCondParRootFileIo",1739,G__RuntimeDbDict_267_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo), -1, 0, 1, 1, 1, 0, "U 'HParRootFile' - 0 '0' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_267_0_3, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HCondParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_267_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCondParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_267_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HCondParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_267_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HCondParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_267_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_267_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCondParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_267_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HCondParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_267_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCondParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_267_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HCondParRootFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HCondParRootFileIo", 1739, G__RuntimeDbDict_267_0_15, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo), -1, 0, 1, 1, 1, 0, "u 'HCondParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HCondParRootFileIo", 1865, G__RuntimeDbDict_267_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_267_0_17, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParRootFileIo), -1, 1, 1, 1, 1, 0, "u 'HCondParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHSpecParRootFileIo(void) {
   /* HSpecParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo));
   G__memfunc_setup("HSpecParRootFileIo",1746,G__RuntimeDbDict_269_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo), -1, 0, 1, 1, 1, 0, "U 'HParRootFile' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("read",412,G__RuntimeDbDict_269_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HSpecGeomPar' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_269_0_4, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HSpecParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_269_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpecParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_269_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HSpecParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_269_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HSpecParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_269_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_269_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpecParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_269_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSpecParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_269_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpecParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_269_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSpecParRootFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HSpecParRootFileIo", 1746, G__RuntimeDbDict_269_0_16, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo), -1, 0, 1, 1, 1, 0, "u 'HSpecParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HSpecParRootFileIo", 1872, G__RuntimeDbDict_269_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_269_0_18, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParRootFileIo), -1, 1, 1, 1, 1, 0, "u 'HSpecParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParAsciiFileIo(void) {
   /* HParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo));
   G__memfunc_setup("HParAsciiFileIo",1420,G__RuntimeDbDict_270_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__RuntimeDbDict_270_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - fname C - 'Text_t' 10 '\"in\"' status", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("check",510,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getFile",704,G__RuntimeDbDict_270_0_6, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR), G__defined_typename("fstream"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_270_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_270_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_270_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_270_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_270_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_270_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_270_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_270_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_270_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParAsciiFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParAsciiFileIo", 1420, G__RuntimeDbDict_270_0_19, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo), -1, 0, 1, 1, 1, 0, "u 'HParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParAsciiFileIo", 1546, G__RuntimeDbDict_270_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_270_0_21, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HParAsciiFileIo), -1, 1, 1, 1, 1, 0, "u 'HParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHDetParAsciiFileIo(void) {
   /* HDetParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo));
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "U 'HDetector' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("findContainer",1348,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 2, 0, "C - 'Text_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkAllFound",1299,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"I - 'Int_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeHeader",1140,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 2, 0, 
"C - 'Text_t' 10 - - C - 'Text_t' 10 '\"\"' context "
"C - 'Text_t' 10 '\"\"' author C - 'Text_t' 10 '\"\"' description", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeComment",1278,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readComment",1135,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - 'Char_t' 10 - - U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readLabPositions",1651,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 2, 0, 
"C - 'Text_t' 10 - - U 'HDetGeomPar' - 0 - - "
"I - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readVolumes",1159,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - 'Text_t' 10 - - U 'HDetGeomPar' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readTransform",1368,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'HGeomTransform' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("readVolume",1044,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 2, 0, 
"U 'HGeomVolume' - 0 - - U 'HGeomShapes' - 0 - - "
"C - 'Text_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeTransform",1511,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'HGeomTransform' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeVolume",1187,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"U 'HGeomVolume' - 0 - - U 'HGeomShapes' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HDetParAsciiFileIo",1705,G__RuntimeDbDict_279_0_13, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo), -1, 0, 1, 1, 1, 0, "U 'basic_fstream<char,char_traits<char> >' 'fstream' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__RuntimeDbDict_279_0_14, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HDetGeomPar' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__RuntimeDbDict_279_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HTrb3Calpar' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeFile",939,G__RuntimeDbDict_279_0_16, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HDetGeomPar' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_279_0_17, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HDetParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_279_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_279_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HDetParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_279_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HDetParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_279_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_279_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_279_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_279_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_279_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetParAsciiFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HDetParAsciiFileIo", 1705, G__RuntimeDbDict_279_0_29, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo), -1, 0, 1, 1, 1, 0, "u 'HDetParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HDetParAsciiFileIo", 1831, G__RuntimeDbDict_279_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_279_0_31, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HDetParAsciiFileIo), -1, 1, 1, 1, 1, 0, "u 'HDetParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHCondParAsciiFileIo(void) {
   /* HCondParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo));
   G__memfunc_setup("writeHexData",1226,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"H - 'UInt_t' 0 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HCondParAsciiFileIo",1808,G__RuntimeDbDict_280_0_2, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo), -1, 0, 1, 1, 1, 0, "U 'basic_fstream<char,char_traits<char> >' 'fstream' 0 '0' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readCond",800,G__RuntimeDbDict_280_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParCond' - 0 - pPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeCond",943,G__RuntimeDbDict_280_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParCond' - 0 - pPar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_280_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HCondParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_280_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCondParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_280_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HCondParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_280_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HCondParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_280_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_280_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCondParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_280_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HCondParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_280_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCondParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_280_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HCondParAsciiFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HCondParAsciiFileIo", 1808, G__RuntimeDbDict_280_0_19, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo), -1, 0, 1, 1, 1, 0, "u 'HCondParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HCondParAsciiFileIo", 1934, G__RuntimeDbDict_280_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_280_0_21, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HCondParAsciiFileIo), -1, 1, 1, 1, 1, 0, "u 'HCondParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHSpecParAsciiFileIo(void) {
   /* HSpecParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo));
   G__memfunc_setup("HSpecParAsciiFileIo",1815,G__RuntimeDbDict_282_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo), -1, 0, 1, 1, 1, 0, "U 'basic_fstream<char,char_traits<char> >' 'fstream' 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("read",412,G__RuntimeDbDict_282_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HSpecGeomPar' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("writeGeom",947,G__RuntimeDbDict_282_0_5, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HSpecGeomPar' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read",412,G__RuntimeDbDict_282_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HTrbnetAddressMapping' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_282_0_7, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HSpecParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_282_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpecParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_282_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HSpecParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_282_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HSpecParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_282_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_282_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpecParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_282_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSpecParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_282_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpecParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_282_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSpecParAsciiFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HSpecParAsciiFileIo", 1815, G__RuntimeDbDict_282_0_19, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo), -1, 0, 1, 1, 1, 0, "u 'HSpecParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HSpecParAsciiFileIo", 1941, G__RuntimeDbDict_282_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_282_0_21, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HSpecParAsciiFileIo), -1, 1, 1, 1, 1, 0, "u 'HSpecParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHRunInfo(void) {
   /* HRunInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo));
   G__memfunc_setup("HRunInfo",777,G__RuntimeDbDict_283_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRunId",814,G__RuntimeDbDict_283_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStartTime",1257,G__RuntimeDbDict_283_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEndTime",1010,G__RuntimeDbDict_283_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumEvents",1265,G__RuntimeDbDict_283_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunId",802,G__RuntimeDbDict_283_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStartTime",1245,G__RuntimeDbDict_283_0_7, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEndTime",998,G__RuntimeDbDict_283_0_8, 67, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumEvents",1253,G__RuntimeDbDict_283_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_283_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__RuntimeDbDict_283_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_283_0_12, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HRunInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_283_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRunInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_283_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HRunInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_283_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HRunInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_283_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_283_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRunInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_283_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRunInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_283_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRunInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_283_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRunInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HRunInfo", 777, G__RuntimeDbDict_283_0_24, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo), -1, 0, 1, 1, 1, 0, "u 'HRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HRunInfo", 903, G__RuntimeDbDict_283_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_283_0_26, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HRunInfo), -1, 1, 1, 1, 1, 0, "u 'HRunInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFileInfo(void) {
   /* HFileInfo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo));
   G__memfunc_setup("HFileInfo",852,G__RuntimeDbDict_284_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 '\"\"' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMagnetCurrent",1675,G__RuntimeDbDict_284_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMagnetCurrent",1663,G__RuntimeDbDict_284_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_284_0_6, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFileInfo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_284_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFileInfo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_284_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFileInfo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_284_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFileInfo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_284_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_284_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFileInfo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_284_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFileInfo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_284_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFileInfo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_284_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFileInfo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFileInfo", 852, G__RuntimeDbDict_284_0_18, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo), -1, 0, 1, 1, 1, 0, "u 'HFileInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFileInfo", 978, G__RuntimeDbDict_284_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_284_0_20, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HFileInfo), -1, 1, 1, 1, 1, 0, "u 'HFileInfo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHMagnetPar(void) {
   /* HMagnetPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar));
   G__memfunc_setup("HMagnetPar",967,G__RuntimeDbDict_285_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"MagnetPar\"' name C - 'Char_t' 10 '\"Magnet field and polarity\"' title "
"C - 'Char_t' 10 '\"MagnetCurrentSetValues\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrent",1059,G__RuntimeDbDict_285_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPolarity",1172,G__RuntimeDbDict_285_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaximumCurrent",1793,G__RuntimeDbDict_285_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScalingFactor",1632,G__RuntimeDbDict_285_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCurrent",1071,G__RuntimeDbDict_285_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__RuntimeDbDict_285_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - - I - 'Int_t' 0 '0' set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_285_0_12, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HMagnetPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_285_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMagnetPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_285_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HMagnetPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_285_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HMagnetPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_285_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_285_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMagnetPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_285_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMagnetPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_285_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HMagnetPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_285_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HMagnetPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HMagnetPar", 967, G__RuntimeDbDict_285_0_24, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar), -1, 0, 1, 1, 1, 0, "u 'HMagnetPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HMagnetPar", 1093, G__RuntimeDbDict_285_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_285_0_26, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HMagnetPar), -1, 1, 1, 1, 1, 0, "u 'HMagnetPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHSlowChan(void) {
   /* HSlowChan */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan));
   G__memfunc_setup("HSlowChan",871,G__RuntimeDbDict_521_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,G__RuntimeDbDict_521_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("copyValues",1067,G__RuntimeDbDict_521_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HSlowChan' - 0 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__RuntimeDbDict_521_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - vals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__RuntimeDbDict_521_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - vals", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__RuntimeDbDict_521_0_6, 121, -1, -1, 0, 4, 1, 1, 0, 
"d - 'Double_t' 0 - Mean d - 'Double_t' 0 - Rms "
"d - 'Double_t' 0 - Min d - 'Double_t' 0 - Max", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNValues",1022,G__RuntimeDbDict_521_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__RuntimeDbDict_521_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '-1' runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_521_0_9, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HSlowChan::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_521_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSlowChan::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_521_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HSlowChan::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_521_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HSlowChan::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_521_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_521_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSlowChan::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_521_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSlowChan::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_521_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSlowChan::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_521_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSlowChan::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HSlowChan", 871, G__RuntimeDbDict_521_0_21, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan), -1, 0, 1, 1, 1, 0, "u 'HSlowChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HSlowChan", 997, G__RuntimeDbDict_521_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_521_0_23, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan), -1, 1, 1, 1, 1, 0, "u 'HSlowChan' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHSlowPar(void) {
   /* HSlowPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar));
   G__memfunc_setup("findRunIDMap",1153,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR), G__defined_typename("map<TString,HSlowChan*>"), 0, 1, 1, 2, 0, "i - 'Int_t' 0 - runId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findChannel",1114,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowChan), -1, 0, 2, 1, 2, 0, 
"U 'map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >' 'map<TString,HSlowChan*>' 0 - m u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HSlowPar",784,G__RuntimeDbDict_522_0_3, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HSlowPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"SlowPar\"' name C - 'Char_t' 10 '\"Slow Control Summary container\"' title "
"C - 'Char_t' 10 '\"SlowParProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChannel",1029,G__RuntimeDbDict_522_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - runID u 'TString' - 0 - name "
"D - 'Double_t' 0 - ar g - 'Bool_t' 0 'kFALSE' overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,G__RuntimeDbDict_522_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runID u 'TString' - 0 - name "
"D - 'Double_t' 0 - ar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChannel",1029,G__RuntimeDbDict_522_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - runID u 'TString' - 0 - name "
"U 'HSlowChan' - 0 - chan g - 'Bool_t' 0 'kFALSE' overwrite", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChannelMap",1315,G__RuntimeDbDict_522_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannel",1017,G__RuntimeDbDict_522_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - runID u 'TString' - 0 - name "
"U 'HSlowChan' - 0 - chan", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPartition",1286,G__RuntimeDbDict_522_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPartition",1274,G__RuntimeDbDict_522_0_10, 117, G__get_linked_tagnum(&G__RuntimeDbDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findRunID",867,G__RuntimeDbDict_522_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeRun",963,G__RuntimeDbDict_522_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - runID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRangeRunID",1263,G__RuntimeDbDict_522_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - first i - 'Int_t' 1 - last", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRunIDs",963,G__RuntimeDbDict_522_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reset",547,G__RuntimeDbDict_522_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '0' level", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printParam",1054,G__RuntimeDbDict_522_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printChannel",1254,G__RuntimeDbDict_522_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - runID u 'TString' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addToChannelList",1601,G__RuntimeDbDict_522_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name g - 'Bool_t' 0 'kFALSE' sort", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChannelList",1429,G__RuntimeDbDict_522_0_20, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TList), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeChannelList",1523,G__RuntimeDbDict_522_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' sort", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printChannelList",1666,G__RuntimeDbDict_522_0_22, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRunIDList",1182,G__RuntimeDbDict_522_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TArrayI' - 0 '0' ar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printRunIDList",1419,G__RuntimeDbDict_522_0_24, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - input I - 'Int_t' 0 - set", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - output", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("readline",836,G__RuntimeDbDict_522_0_27, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 - buf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putAsciiHeader",1419,G__RuntimeDbDict_522_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TString' - 1 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__RuntimeDbDict_522_0_29, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'basic_fstream<char,char_traits<char> >' 'fstream' 1 - out", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_522_0_30, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HSlowPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_522_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSlowPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_522_0_32, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HSlowPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_522_0_33, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HSlowPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_522_0_37, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_522_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSlowPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_522_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSlowPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_522_0_40, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSlowPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_522_0_41, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSlowPar::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HSlowPar", 910, G__RuntimeDbDict_522_0_42, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEmcSimulPar(void) {
   /* HEmcSimulPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar));
   G__memfunc_setup("HEmcSimulPar",1162,G__RuntimeDbDict_543_0_1, 105, G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar), -1, 0, 3, 1, 1, 0, 
"C - - 10 '\"EmcSimulPar\"' name C - - 10 '\"Emc simulation parameters\"' title "
"C - - 10 '\"EmcSimulProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pmIndex",725,G__RuntimeDbDict_543_0_2, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("pmIndex",725,G__RuntimeDbDict_543_0_3, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumPmtTypes",1474,G__RuntimeDbDict_543_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPmtType",1055,G__RuntimeDbDict_543_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 - cell "
"i - 'Int_t' 0 - pmtype", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumPmtTypes",1462,G__RuntimeDbDict_543_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmtType",1043,G__RuntimeDbDict_543_0_7, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 - cell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmtType",1043,G__RuntimeDbDict_543_0_8, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 - row "
"i - 'Int_t' 0 - col", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLookupArray",1465,G__RuntimeDbDict_543_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printLookupPmtType",1914,G__RuntimeDbDict_543_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RuntimeDbDict_543_0_14, 85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEmcSimulPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RuntimeDbDict_543_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEmcSimulPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RuntimeDbDict_543_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEmcSimulPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RuntimeDbDict_543_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEmcSimulPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RuntimeDbDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RuntimeDbDict_543_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RuntimeDbDict_543_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEmcSimulPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RuntimeDbDict_543_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEmcSimulPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RuntimeDbDict_543_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEmcSimulPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RuntimeDbDict_543_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEmcSimulPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HEmcSimulPar", 1162, G__RuntimeDbDict_543_0_26, (int) ('i'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar), -1, 0, 1, 1, 1, 0, "u 'HEmcSimulPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HEmcSimulPar", 1288, G__RuntimeDbDict_543_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RuntimeDbDict_543_0_28, (int) ('u'), G__get_linked_tagnum(&G__RuntimeDbDictLN_HEmcSimulPar), -1, 1, 1, 1, 1, 0, "u 'HEmcSimulPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRuntimeDbDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRuntimeDbDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRuntimeDbDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RuntimeDbDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR = { "basic_fstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParSet = { "HParSet" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HContainer = { "HContainer" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HContFact = { "HContFact" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HBaseContFact = { "HBaseContFact" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParIo = { "HParIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HRun = { "HRun" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParamFileGenerator = { "HParamFileGenerator" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HRuntimeDb = { "HRuntimeDb" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParamList = { "HParamList" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParCond = { "HParCond" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TArrayC = { "TArrayC" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TArrayD = { "TArrayD" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_TDirectoryFile = { "TDirectoryFile" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParamObj = { "HParamObj" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParVersion = { "HParVersion" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HDetParIo = { "HDetParIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HDetector = { "HDetector" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParRootFile = { "HParRootFile" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParRootFileIo = { "HParRootFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HDetGeomPar = { "HDetGeomPar" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HDetParRootFileIo = { "HDetParRootFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HCondParRootFileIo = { "HCondParRootFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HSpecGeomPar = { "HSpecGeomPar" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HSpecParRootFileIo = { "HSpecParRootFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HParAsciiFileIo = { "HParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HGeomTransform = { "HGeomTransform" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HGeomVolume = { "HGeomVolume" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HGeomShapes = { "HGeomShapes" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HTrb3Calpar = { "HTrb3Calpar" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HDetParAsciiFileIo = { "HDetParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HCondParAsciiFileIo = { "HCondParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HTrbnetAddressMapping = { "HTrbnetAddressMapping" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HSpecParAsciiFileIo = { "HSpecParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HRunInfo = { "HRunInfo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HFileInfo = { "HFileInfo" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HMagnetPar = { "HMagnetPar" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HSlowChan = { "HSlowChan" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HSlowPar = { "HSlowPar" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR = { "map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR = { "map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*,less<int>,allocator<pair<const int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*> > >" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgRcLcLiterator = { "map<int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*,less<int>,allocator<pair<const int,map<TString,HSlowChan*,less<TString>,allocator<pair<const TString,HSlowChan*> > >*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RuntimeDbDictLN_HEmcSimulPar = { "HEmcSimulPar" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRuntimeDbDict() {
  G__RuntimeDbDictLN_TClass.tagnum = -1 ;
  G__RuntimeDbDictLN_TBuffer.tagnum = -1 ;
  G__RuntimeDbDictLN_TDirectory.tagnum = -1 ;
  G__RuntimeDbDictLN_TMemberInspector.tagnum = -1 ;
  G__RuntimeDbDictLN_TObject.tagnum = -1 ;
  G__RuntimeDbDictLN_TNamed.tagnum = -1 ;
  G__RuntimeDbDictLN_TString.tagnum = -1 ;
  G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__RuntimeDbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RuntimeDbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RuntimeDbDictLN_TList.tagnum = -1 ;
  G__RuntimeDbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RuntimeDbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RuntimeDbDictLN_HParSet.tagnum = -1 ;
  G__RuntimeDbDictLN_HContainer.tagnum = -1 ;
  G__RuntimeDbDictLN_HContFact.tagnum = -1 ;
  G__RuntimeDbDictLN_HBaseContFact.tagnum = -1 ;
  G__RuntimeDbDictLN_HParIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HRun.tagnum = -1 ;
  G__RuntimeDbDictLN_HParamFileGenerator.tagnum = -1 ;
  G__RuntimeDbDictLN_HRuntimeDb.tagnum = -1 ;
  G__RuntimeDbDictLN_TArrayI.tagnum = -1 ;
  G__RuntimeDbDictLN_HParamList.tagnum = -1 ;
  G__RuntimeDbDictLN_HParCond.tagnum = -1 ;
  G__RuntimeDbDictLN_TArrayC.tagnum = -1 ;
  G__RuntimeDbDictLN_TArrayF.tagnum = -1 ;
  G__RuntimeDbDictLN_TArrayD.tagnum = -1 ;
  G__RuntimeDbDictLN_TFile.tagnum = -1 ;
  G__RuntimeDbDictLN_TDirectoryFile.tagnum = -1 ;
  G__RuntimeDbDictLN_HParamObj.tagnum = -1 ;
  G__RuntimeDbDictLN_HParVersion.tagnum = -1 ;
  G__RuntimeDbDictLN_HDetParIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HDetector.tagnum = -1 ;
  G__RuntimeDbDictLN_HParRootFile.tagnum = -1 ;
  G__RuntimeDbDictLN_HParRootFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HDetGeomPar.tagnum = -1 ;
  G__RuntimeDbDictLN_HDetParRootFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HCondParRootFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HSpecGeomPar.tagnum = -1 ;
  G__RuntimeDbDictLN_HSpecParRootFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HParAsciiFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HGeomTransform.tagnum = -1 ;
  G__RuntimeDbDictLN_HGeomVolume.tagnum = -1 ;
  G__RuntimeDbDictLN_HGeomShapes.tagnum = -1 ;
  G__RuntimeDbDictLN_HTrb3Calpar.tagnum = -1 ;
  G__RuntimeDbDictLN_HDetParAsciiFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HCondParAsciiFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HTrbnetAddressMapping.tagnum = -1 ;
  G__RuntimeDbDictLN_HSpecParAsciiFileIo.tagnum = -1 ;
  G__RuntimeDbDictLN_HRunInfo.tagnum = -1 ;
  G__RuntimeDbDictLN_HFileInfo.tagnum = -1 ;
  G__RuntimeDbDictLN_HMagnetPar.tagnum = -1 ;
  G__RuntimeDbDictLN_HSlowChan.tagnum = -1 ;
  G__RuntimeDbDictLN_HSlowPar.tagnum = -1 ;
  G__RuntimeDbDictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR.tagnum = -1 ;
  G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR.tagnum = -1 ;
  G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__RuntimeDbDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RuntimeDbDictLN_HEmcSimulPar.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRuntimeDbDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TString);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TList);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParSet),sizeof(HParSet),-1,128256,"Base class for all parameter containers",G__setup_memvarHParSet,G__setup_memfuncHParSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HContainer),sizeof(HContainer),-1,62720,"class for list elements in class HContFact",G__setup_memvarHContainer,G__setup_memfuncHContainer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HContFact),sizeof(HContFact),-1,62720,"base class of all factories for parameter containers",G__setup_memvarHContFact,G__setup_memfuncHContFact);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HBaseContFact),sizeof(HBaseContFact),-1,62720,"Factory for parameter containers in lib Hydra",G__setup_memvarHBaseContFact,G__setup_memfuncHBaseContFact);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParIo),sizeof(HParIo),-1,29952,"Base class for all parameter I/Os",G__setup_memvarHParIo,G__setup_memfuncHParIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HRun),sizeof(HRun),-1,63232,"Class for parameter version management of a run",G__setup_memvarHRun,G__setup_memfuncHRun);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParamFileGenerator),sizeof(HParamFileGenerator),-1,62464,"Class to create a parameter file",G__setup_memvarHParamFileGenerator,G__setup_memfuncHParamFileGenerator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HRuntimeDb),sizeof(HRuntimeDb),-1,95488,"Class for runtime database",G__setup_memvarHRuntimeDb,G__setup_memfuncHRuntimeDb);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TArrayI);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParamList),sizeof(HParamList),-1,29952,"Class for lists of parameters (of type HParamObj)",G__setup_memvarHParamList,G__setup_memfuncHParamList);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParCond),sizeof(HParCond),-1,62722,"Base class for condition containers",G__setup_memvarHParCond,G__setup_memfuncHParCond);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TArrayC);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TArrayD);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_TDirectoryFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParamObj),sizeof(HParamObj),-1,63232,"Class for binary parameter object (name + binary array)",G__setup_memvarHParamObj,G__setup_memfuncHParamObj);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParVersion),sizeof(HParVersion),-1,62720,"Class for parameter versions",G__setup_memvarHParVersion,G__setup_memfuncHParVersion);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HDetParIo),sizeof(HDetParIo),-1,62720,"Base class for detector parameter IO",G__setup_memvarHDetParIo,G__setup_memfuncHDetParIo);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParRootFile),sizeof(HParRootFile),-1,62464,"ROOT file for Parameter I/O ",G__setup_memvarHParRootFile,G__setup_memfuncHParRootFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParRootFileIo),sizeof(HParRootFileIo),-1,29952,"Parameter I/O from ROOT files",G__setup_memvarHParRootFileIo,G__setup_memfuncHParRootFileIo);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HDetGeomPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HDetParRootFileIo),sizeof(HDetParRootFileIo),-1,62464,"detector base class for parameter I/O from ROOT file",G__setup_memvarHDetParRootFileIo,G__setup_memfuncHDetParRootFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HCondParRootFileIo),sizeof(HCondParRootFileIo),-1,62720,"I/O from ROOT file for parameter containers derived from HParCond",G__setup_memvarHCondParRootFileIo,G__setup_memfuncHCondParRootFileIo);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HSpecGeomPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HSpecParRootFileIo),sizeof(HSpecParRootFileIo),-1,62464,"Class for spectrometer parameter I/O from ROOT file ",G__setup_memvarHSpecParRootFileIo,G__setup_memfuncHSpecParRootFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HParAsciiFileIo),sizeof(HParAsciiFileIo),-1,29952,"Parameter I/O from Ascii files",G__setup_memvarHParAsciiFileIo,G__setup_memfuncHParAsciiFileIo);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HGeomTransform);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HGeomVolume);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HGeomShapes);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HTrb3Calpar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HDetParAsciiFileIo),sizeof(HDetParAsciiFileIo),-1,62464,"Class for detector parameter I/O from ascii file",G__setup_memvarHDetParAsciiFileIo,G__setup_memfuncHDetParAsciiFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HCondParAsciiFileIo),sizeof(HCondParAsciiFileIo),-1,62720,"I/O from Ascii file for parameter containers derived from HParCond",G__setup_memvarHCondParAsciiFileIo,G__setup_memfuncHCondParAsciiFileIo);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HTrbnetAddressMapping);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HSpecParAsciiFileIo),sizeof(HSpecParAsciiFileIo),-1,62464,"Class for spectrometer parameter I/O from ascii file",G__setup_memvarHSpecParAsciiFileIo,G__setup_memfuncHSpecParAsciiFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HRunInfo),sizeof(HRunInfo),-1,62720,"Class for run information",G__setup_memvarHRunInfo,G__setup_memfuncHRunInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HFileInfo),sizeof(HFileInfo),-1,62720,"Class for HLD file and run information",G__setup_memvarHFileInfo,G__setup_memfuncHFileInfo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HMagnetPar),sizeof(HMagnetPar),-1,62720,"parameter container for magnet current",G__setup_memvarHMagnetPar,G__setup_memfuncHMagnetPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HSlowChan),sizeof(HSlowChan),-1,62720,(char*)NULL,G__setup_memvarHSlowChan,G__setup_memfuncHSlowChan);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HSlowPar),sizeof(HSlowPar),-1,62720,(char*)NULL,G__setup_memvarHSlowPar,G__setup_memfuncHSlowPar);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_maplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_maplEintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOmaplETStringcOHSlowChanmUcOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOHSlowChanmUgRsPgRsPgRmUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RuntimeDbDictLN_HEmcSimulPar),sizeof(HEmcSimulPar),-1,62720,"Container for the EMC parameters in HGeant simulation",G__setup_memvarHEmcSimulPar,G__setup_memfuncHEmcSimulPar);
}
extern "C" void G__cpp_setupRuntimeDbDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRuntimeDbDict()");
  G__set_cpp_environmentRuntimeDbDict();
  G__cpp_setup_tagtableRuntimeDbDict();

  G__cpp_setup_inheritanceRuntimeDbDict();

  G__cpp_setup_typetableRuntimeDbDict();

  G__cpp_setup_memvarRuntimeDbDict();

  G__cpp_setup_memfuncRuntimeDbDict();
  G__cpp_setup_globalRuntimeDbDict();
  G__cpp_setup_funcRuntimeDbDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRuntimeDbDict();
  return;
}
class G__cpp_setup_initRuntimeDbDict {
  public:
    G__cpp_setup_initRuntimeDbDict() { G__add_setup_func("RuntimeDbDict",(G__incsetup)(&G__cpp_setupRuntimeDbDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRuntimeDbDict() { G__remove_setup_func("RuntimeDbDict"); }
};
G__cpp_setup_initRuntimeDbDict G__cpp_setup_initializerRuntimeDbDict;

