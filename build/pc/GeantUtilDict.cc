//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:44:45 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIGeantUtilDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GeantUtilDict.h"

#include "TCollectionProxyInfo.h"
#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HGeantHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantHeader(void *p = 0);
   static void *newArray_HGeantHeader(Long_t size, void *p);
   static void delete_HGeantHeader(void *p);
   static void deleteArray_HGeantHeader(void *p);
   static void destruct_HGeantHeader(void *p);
   static void streamer_HGeantHeader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantHeader*)
   {
      ::HGeantHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantHeader", ::HGeantHeader::Class_Version(), "./geantutil/hgeantheader.h", 14,
                  typeid(::HGeantHeader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantHeader::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantHeader) );
      instance.SetNew(&new_HGeantHeader);
      instance.SetNewArray(&newArray_HGeantHeader);
      instance.SetDelete(&delete_HGeantHeader);
      instance.SetDeleteArray(&deleteArray_HGeantHeader);
      instance.SetDestructor(&destruct_HGeantHeader);
      instance.SetStreamerFunc(&streamer_HGeantHeader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantHeader*)
   {
      return GenerateInitInstanceLocal((::HGeantHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantMedia_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantMedia(void *p = 0);
   static void *newArray_HGeantMedia(Long_t size, void *p);
   static void delete_HGeantMedia(void *p);
   static void deleteArray_HGeantMedia(void *p);
   static void destruct_HGeantMedia(void *p);
   static void streamer_HGeantMedia(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantMedia*)
   {
      ::HGeantMedia *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantMedia >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantMedia", ::HGeantMedia::Class_Version(), "./geantutil/hgeantmedia.h", 9,
                  typeid(::HGeantMedia), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantMedia::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantMedia) );
      instance.SetNew(&new_HGeantMedia);
      instance.SetNewArray(&newArray_HGeantMedia);
      instance.SetDelete(&delete_HGeantMedia);
      instance.SetDeleteArray(&deleteArray_HGeantMedia);
      instance.SetDestructor(&destruct_HGeantMedia);
      instance.SetStreamerFunc(&streamer_HGeantMedia);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantMedia*)
   {
      return GenerateInitInstanceLocal((::HGeantMedia*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantMedia*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantKine_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantKine(void *p = 0);
   static void *newArray_HGeantKine(Long_t size, void *p);
   static void delete_HGeantKine(void *p);
   static void deleteArray_HGeantKine(void *p);
   static void destruct_HGeantKine(void *p);
   static void streamer_HGeantKine(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantKine*)
   {
      ::HGeantKine *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantKine >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantKine", ::HGeantKine::Class_Version(), "./geantutil/hgeantkine.h", 36,
                  typeid(::HGeantKine), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantKine::Dictionary, isa_proxy, 1,
                  sizeof(::HGeantKine) );
      instance.SetNew(&new_HGeantKine);
      instance.SetNewArray(&newArray_HGeantKine);
      instance.SetDelete(&delete_HGeantKine);
      instance.SetDeleteArray(&deleteArray_HGeantKine);
      instance.SetDestructor(&destruct_HGeantKine);
      instance.SetStreamerFunc(&streamer_HGeantKine);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantKine*)
   {
      return GenerateInitInstanceLocal((::HGeantKine*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantKine*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantRichPhoton_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantRichPhoton(void *p = 0);
   static void *newArray_HGeantRichPhoton(Long_t size, void *p);
   static void delete_HGeantRichPhoton(void *p);
   static void deleteArray_HGeantRichPhoton(void *p);
   static void destruct_HGeantRichPhoton(void *p);
   static void streamer_HGeantRichPhoton(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantRichPhoton*)
   {
      ::HGeantRichPhoton *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantRichPhoton >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantRichPhoton", ::HGeantRichPhoton::Class_Version(), "./geantutil/hgeantrich.h", 22,
                  typeid(::HGeantRichPhoton), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantRichPhoton::Dictionary, isa_proxy, 1,
                  sizeof(::HGeantRichPhoton) );
      instance.SetNew(&new_HGeantRichPhoton);
      instance.SetNewArray(&newArray_HGeantRichPhoton);
      instance.SetDelete(&delete_HGeantRichPhoton);
      instance.SetDeleteArray(&deleteArray_HGeantRichPhoton);
      instance.SetDestructor(&destruct_HGeantRichPhoton);
      instance.SetStreamerFunc(&streamer_HGeantRichPhoton);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantRichPhoton*)
   {
      return GenerateInitInstanceLocal((::HGeantRichPhoton*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantRichPhoton*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantRichDirect_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantRichDirect(void *p = 0);
   static void *newArray_HGeantRichDirect(Long_t size, void *p);
   static void delete_HGeantRichDirect(void *p);
   static void deleteArray_HGeantRichDirect(void *p);
   static void destruct_HGeantRichDirect(void *p);
   static void streamer_HGeantRichDirect(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantRichDirect*)
   {
      ::HGeantRichDirect *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantRichDirect >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantRichDirect", ::HGeantRichDirect::Class_Version(), "./geantutil/hgeantrich.h", 64,
                  typeid(::HGeantRichDirect), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantRichDirect::Dictionary, isa_proxy, 1,
                  sizeof(::HGeantRichDirect) );
      instance.SetNew(&new_HGeantRichDirect);
      instance.SetNewArray(&newArray_HGeantRichDirect);
      instance.SetDelete(&delete_HGeantRichDirect);
      instance.SetDeleteArray(&deleteArray_HGeantRichDirect);
      instance.SetDestructor(&destruct_HGeantRichDirect);
      instance.SetStreamerFunc(&streamer_HGeantRichDirect);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantRichDirect*)
   {
      return GenerateInitInstanceLocal((::HGeantRichDirect*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantRichDirect*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantRichMirror_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantRichMirror(void *p = 0);
   static void *newArray_HGeantRichMirror(Long_t size, void *p);
   static void delete_HGeantRichMirror(void *p);
   static void deleteArray_HGeantRichMirror(void *p);
   static void destruct_HGeantRichMirror(void *p);
   static void streamer_HGeantRichMirror(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantRichMirror*)
   {
      ::HGeantRichMirror *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantRichMirror >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantRichMirror", ::HGeantRichMirror::Class_Version(), "./geantutil/hgeantrich.h", 134,
                  typeid(::HGeantRichMirror), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantRichMirror::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantRichMirror) );
      instance.SetNew(&new_HGeantRichMirror);
      instance.SetNewArray(&newArray_HGeantRichMirror);
      instance.SetDelete(&delete_HGeantRichMirror);
      instance.SetDeleteArray(&deleteArray_HGeantRichMirror);
      instance.SetDestructor(&destruct_HGeantRichMirror);
      instance.SetStreamerFunc(&streamer_HGeantRichMirror);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantRichMirror*)
   {
      return GenerateInitInstanceLocal((::HGeantRichMirror*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantRichMirror*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantMdc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantMdc(void *p = 0);
   static void *newArray_HGeantMdc(Long_t size, void *p);
   static void delete_HGeantMdc(void *p);
   static void deleteArray_HGeantMdc(void *p);
   static void destruct_HGeantMdc(void *p);
   static void streamer_HGeantMdc(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantMdc*)
   {
      ::HGeantMdc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantMdc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantMdc", ::HGeantMdc::Class_Version(), "./geantutil/hgeantmdc.h", 14,
                  typeid(::HGeantMdc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantMdc::Dictionary, isa_proxy, 1,
                  sizeof(::HGeantMdc) );
      instance.SetNew(&new_HGeantMdc);
      instance.SetNewArray(&newArray_HGeantMdc);
      instance.SetDelete(&delete_HGeantMdc);
      instance.SetDeleteArray(&deleteArray_HGeantMdc);
      instance.SetDestructor(&destruct_HGeantMdc);
      instance.SetStreamerFunc(&streamer_HGeantMdc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantMdc*)
   {
      return GenerateInitInstanceLocal((::HGeantMdc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantMdc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantTof_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantTof(void *p = 0);
   static void *newArray_HGeantTof(Long_t size, void *p);
   static void delete_HGeantTof(void *p);
   static void deleteArray_HGeantTof(void *p);
   static void destruct_HGeantTof(void *p);
   static void streamer_HGeantTof(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantTof*)
   {
      ::HGeantTof *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantTof >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantTof", ::HGeantTof::Class_Version(), "./geantutil/hgeanttof.h", 15,
                  typeid(::HGeantTof), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantTof::Dictionary, isa_proxy, 1,
                  sizeof(::HGeantTof) );
      instance.SetNew(&new_HGeantTof);
      instance.SetNewArray(&newArray_HGeantTof);
      instance.SetDelete(&delete_HGeantTof);
      instance.SetDeleteArray(&deleteArray_HGeantTof);
      instance.SetDestructor(&destruct_HGeantTof);
      instance.SetStreamerFunc(&streamer_HGeantTof);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantTof*)
   {
      return GenerateInitInstanceLocal((::HGeantTof*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantTof*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantRpc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantRpc(void *p = 0);
   static void *newArray_HGeantRpc(Long_t size, void *p);
   static void delete_HGeantRpc(void *p);
   static void deleteArray_HGeantRpc(void *p);
   static void destruct_HGeantRpc(void *p);
   static void streamer_HGeantRpc(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantRpc*)
   {
      ::HGeantRpc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantRpc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantRpc", ::HGeantRpc::Class_Version(), "./geantutil/hgeantrpc.h", 12,
                  typeid(::HGeantRpc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantRpc::Dictionary, isa_proxy, 1,
                  sizeof(::HGeantRpc) );
      instance.SetNew(&new_HGeantRpc);
      instance.SetNewArray(&newArray_HGeantRpc);
      instance.SetDelete(&delete_HGeantRpc);
      instance.SetDeleteArray(&deleteArray_HGeantRpc);
      instance.SetDestructor(&destruct_HGeantRpc);
      instance.SetStreamerFunc(&streamer_HGeantRpc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantRpc*)
   {
      return GenerateInitInstanceLocal((::HGeantRpc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantRpc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantEmc_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantEmc(void *p = 0);
   static void *newArray_HGeantEmc(Long_t size, void *p);
   static void delete_HGeantEmc(void *p);
   static void deleteArray_HGeantEmc(void *p);
   static void destruct_HGeantEmc(void *p);
   static void streamer_HGeantEmc(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantEmc*)
   {
      ::HGeantEmc *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantEmc >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantEmc", ::HGeantEmc::Class_Version(), "./geantutil/hgeantemc.h", 14,
                  typeid(::HGeantEmc), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantEmc::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantEmc) );
      instance.SetNew(&new_HGeantEmc);
      instance.SetNewArray(&newArray_HGeantEmc);
      instance.SetDelete(&delete_HGeantEmc);
      instance.SetDeleteArray(&deleteArray_HGeantEmc);
      instance.SetDestructor(&destruct_HGeantEmc);
      instance.SetStreamerFunc(&streamer_HGeantEmc);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantEmc*)
   {
      return GenerateInitInstanceLocal((::HGeantEmc*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantEmc*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantWall_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantWall(void *p = 0);
   static void *newArray_HGeantWall(Long_t size, void *p);
   static void delete_HGeantWall(void *p);
   static void deleteArray_HGeantWall(void *p);
   static void destruct_HGeantWall(void *p);
   static void streamer_HGeantWall(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantWall*)
   {
      ::HGeantWall *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantWall >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantWall", ::HGeantWall::Class_Version(), "./geantutil/hgeantwall.h", 15,
                  typeid(::HGeantWall), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantWall::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantWall) );
      instance.SetNew(&new_HGeantWall);
      instance.SetNewArray(&newArray_HGeantWall);
      instance.SetDelete(&delete_HGeantWall);
      instance.SetDeleteArray(&deleteArray_HGeantWall);
      instance.SetDestructor(&destruct_HGeantWall);
      instance.SetStreamerFunc(&streamer_HGeantWall);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantWall*)
   {
      return GenerateInitInstanceLocal((::HGeantWall*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantWall*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantStart_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantStart(void *p = 0);
   static void *newArray_HGeantStart(Long_t size, void *p);
   static void delete_HGeantStart(void *p);
   static void deleteArray_HGeantStart(void *p);
   static void destruct_HGeantStart(void *p);
   static void streamer_HGeantStart(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantStart*)
   {
      ::HGeantStart *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantStart >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantStart", ::HGeantStart::Class_Version(), "./geantutil/hgeantstart.h", 14,
                  typeid(::HGeantStart), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantStart::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantStart) );
      instance.SetNew(&new_HGeantStart);
      instance.SetNewArray(&newArray_HGeantStart);
      instance.SetDelete(&delete_HGeantStart);
      instance.SetDeleteArray(&deleteArray_HGeantStart);
      instance.SetDestructor(&destruct_HGeantStart);
      instance.SetStreamerFunc(&streamer_HGeantStart);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantStart*)
   {
      return GenerateInitInstanceLocal((::HGeantStart*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantStart*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantFwDet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantFwDet(void *p = 0);
   static void *newArray_HGeantFwDet(Long_t size, void *p);
   static void delete_HGeantFwDet(void *p);
   static void deleteArray_HGeantFwDet(void *p);
   static void destruct_HGeantFwDet(void *p);
   static void streamer_HGeantFwDet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantFwDet*)
   {
      ::HGeantFwDet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantFwDet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantFwDet", ::HGeantFwDet::Class_Version(), "./geantutil/hgeantfwdet.h", 14,
                  typeid(::HGeantFwDet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantFwDet::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantFwDet) );
      instance.SetNew(&new_HGeantFwDet);
      instance.SetNewArray(&newArray_HGeantFwDet);
      instance.SetDelete(&delete_HGeantFwDet);
      instance.SetDeleteArray(&deleteArray_HGeantFwDet);
      instance.SetDestructor(&destruct_HGeantFwDet);
      instance.SetStreamerFunc(&streamer_HGeantFwDet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantFwDet*)
   {
      return GenerateInitInstanceLocal((::HGeantFwDet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantFwDet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGeantShower_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HGeantShower(void *p = 0);
   static void *newArray_HGeantShower(Long_t size, void *p);
   static void delete_HGeantShower(void *p);
   static void deleteArray_HGeantShower(void *p);
   static void destruct_HGeantShower(void *p);
   static void streamer_HGeantShower(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGeantShower*)
   {
      ::HGeantShower *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGeantShower >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGeantShower", ::HGeantShower::Class_Version(), "./geantutil/hgeantshower.h", 15,
                  typeid(::HGeantShower), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGeantShower::Dictionary, isa_proxy, 0,
                  sizeof(::HGeantShower) );
      instance.SetNew(&new_HGeantShower);
      instance.SetNewArray(&newArray_HGeantShower);
      instance.SetDelete(&delete_HGeantShower);
      instance.SetDeleteArray(&deleteArray_HGeantShower);
      instance.SetDestructor(&destruct_HGeantShower);
      instance.SetStreamerFunc(&streamer_HGeantShower);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGeantShower*)
   {
      return GenerateInitInstanceLocal((::HGeantShower*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGeantShower*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HKineSim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HKineSim(void *p = 0);
   static void *newArray_HKineSim(Long_t size, void *p);
   static void delete_HKineSim(void *p);
   static void deleteArray_HKineSim(void *p);
   static void destruct_HKineSim(void *p);
   static void streamer_HKineSim(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HKineSim*)
   {
      ::HKineSim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HKineSim >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HKineSim", ::HKineSim::Class_Version(), "./geantutil/hkinesim.h", 15,
                  typeid(::HKineSim), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HKineSim::Dictionary, isa_proxy, 0,
                  sizeof(::HKineSim) );
      instance.SetNew(&new_HKineSim);
      instance.SetNewArray(&newArray_HKineSim);
      instance.SetDelete(&delete_HKineSim);
      instance.SetDeleteArray(&deleteArray_HKineSim);
      instance.SetDestructor(&destruct_HKineSim);
      instance.SetStreamerFunc(&streamer_HKineSim);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HKineSim*)
   {
      return GenerateInitInstanceLocal((::HKineSim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HKineSim*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HGeantHeader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantHeader::Class_Name()
{
   return "HGeantHeader";
}

//______________________________________________________________________________
const char *HGeantHeader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantHeader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantHeader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantHeader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantHeader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantMedia::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantMedia::Class_Name()
{
   return "HGeantMedia";
}

//______________________________________________________________________________
const char *HGeantMedia::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMedia*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantMedia::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMedia*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantMedia::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMedia*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantMedia::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMedia*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantKine::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantKine::Class_Name()
{
   return "HGeantKine";
}

//______________________________________________________________________________
const char *HGeantKine::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantKine*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantKine::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantKine*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantKine::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantKine*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantKine::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantKine*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantRichPhoton::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantRichPhoton::Class_Name()
{
   return "HGeantRichPhoton";
}

//______________________________________________________________________________
const char *HGeantRichPhoton::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichPhoton*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantRichPhoton::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichPhoton*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantRichPhoton::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichPhoton*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantRichPhoton::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichPhoton*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantRichDirect::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantRichDirect::Class_Name()
{
   return "HGeantRichDirect";
}

//______________________________________________________________________________
const char *HGeantRichDirect::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichDirect*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantRichDirect::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichDirect*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantRichDirect::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichDirect*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantRichDirect::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichDirect*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantRichMirror::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantRichMirror::Class_Name()
{
   return "HGeantRichMirror";
}

//______________________________________________________________________________
const char *HGeantRichMirror::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichMirror*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantRichMirror::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichMirror*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantRichMirror::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichMirror*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantRichMirror::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRichMirror*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantMdc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantMdc::Class_Name()
{
   return "HGeantMdc";
}

//______________________________________________________________________________
const char *HGeantMdc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMdc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantMdc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMdc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantMdc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMdc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantMdc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantMdc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantTof::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantTof::Class_Name()
{
   return "HGeantTof";
}

//______________________________________________________________________________
const char *HGeantTof::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantTof*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantTof::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantTof*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantTof::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantTof*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantTof::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantTof*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantRpc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantRpc::Class_Name()
{
   return "HGeantRpc";
}

//______________________________________________________________________________
const char *HGeantRpc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRpc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantRpc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRpc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantRpc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRpc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantRpc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantRpc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantEmc::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantEmc::Class_Name()
{
   return "HGeantEmc";
}

//______________________________________________________________________________
const char *HGeantEmc::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantEmc*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantEmc::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantEmc*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantEmc::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantEmc*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantEmc::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantEmc*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantWall::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantWall::Class_Name()
{
   return "HGeantWall";
}

//______________________________________________________________________________
const char *HGeantWall::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantWall*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantWall::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantWall*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantWall::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantWall*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantWall::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantWall*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantStart::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantStart::Class_Name()
{
   return "HGeantStart";
}

//______________________________________________________________________________
const char *HGeantStart::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantStart*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantStart::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantStart*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantStart::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantStart*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantStart::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantStart*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantFwDet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantFwDet::Class_Name()
{
   return "HGeantFwDet";
}

//______________________________________________________________________________
const char *HGeantFwDet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantFwDet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantFwDet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantFwDet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantFwDet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantFwDet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantFwDet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantFwDet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGeantShower::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGeantShower::Class_Name()
{
   return "HGeantShower";
}

//______________________________________________________________________________
const char *HGeantShower::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantShower*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGeantShower::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantShower*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGeantShower::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantShower*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGeantShower::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGeantShower*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HKineSim::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HKineSim::Class_Name()
{
   return "HKineSim";
}

//______________________________________________________________________________
const char *HKineSim::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HKineSim*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HKineSim::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HKineSim*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HKineSim::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HKineSim*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HKineSim::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HKineSim*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HGeantKine::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantKine.
      TClass *R__cl = ::HGeantKine::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "richIndex", &richIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mdcIndex", &mdcIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofIndex", &tofIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rpcIndex", &rpcIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "showIndex", &showIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "wallIndex", &wallIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "emcIndex", &emcIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "startIndex", &startIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fwDetIndex", &fwDetIndex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pRich", &pRich);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pMdc", &pMdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pTof", &pTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pRpc", &pRpc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pShow", &pShow);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pWall", &pWall);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pEmc", &pEmc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStart", &pStart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDet", &pFwDet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentTrack", &parentTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleID", &particleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mediumNumber", &mediumNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "creationMechanism", &creationMechanism);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xVertex", &xVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yVertex", &yVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zVertex", &zVertex);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xMom", &xMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yMom", &yMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zMom", &zMom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "generatorInfo", &generatorInfo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "generatorInfo1", &generatorInfo1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "generatorInfo2", &generatorInfo2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "generatorWeight", &generatorWeight);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstRichHit", &firstRichHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstMdcHit", &firstMdcHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstTofHit", &firstTofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstRpcHit", &firstRpcHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstShowerHit", &firstShowerHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstWallHit", &firstWallHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstEmcHit", &firstEmcHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstStartHit", &firstStartHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "firstFwDetHit", &firstFwDetHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "active", &active);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "suppressed", &suppressed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "userVal", &userVal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "acceptance", &acceptance);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantKine(void *p) {
      return  p ? new(p) ::HGeantKine : new ::HGeantKine;
   }
   static void *newArray_HGeantKine(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantKine[nElements] : new ::HGeantKine[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantKine(void *p) {
      delete ((::HGeantKine*)p);
   }
   static void deleteArray_HGeantKine(void *p) {
      delete [] ((::HGeantKine*)p);
   }
   static void destruct_HGeantKine(void *p) {
      typedef ::HGeantKine current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantKine(TBuffer &buf, void *obj) {
      ((::HGeantKine*)obj)->::HGeantKine::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantKine

//______________________________________________________________________________
void HGeantMdc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantMdc.
      TClass *R__cl = ::HGeantMdc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaHit", &thetaHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiHit", &phiHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofHit", &tofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit", &momHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantMdc(void *p) {
      return  p ? new(p) ::HGeantMdc : new ::HGeantMdc;
   }
   static void *newArray_HGeantMdc(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantMdc[nElements] : new ::HGeantMdc[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantMdc(void *p) {
      delete ((::HGeantMdc*)p);
   }
   static void deleteArray_HGeantMdc(void *p) {
      delete [] ((::HGeantMdc*)p);
   }
   static void destruct_HGeantMdc(void *p) {
      typedef ::HGeantMdc current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantMdc(TBuffer &buf, void *obj) {
      ((::HGeantMdc*)obj)->::HGeantMdc::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantMdc

//______________________________________________________________________________
void HGeantRichDirect::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantRichDirect.
      TClass *R__cl = ::HGeantRichDirect::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zHit", &zHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "particleID", &particleID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momentum", &momentum);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaHit", &thetaHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiHit", &phiHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eLoss", &eLoss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLength", &trackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPhot", &numPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmtId", &fPmtId);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantRichDirect(void *p) {
      return  p ? new(p) ::HGeantRichDirect : new ::HGeantRichDirect;
   }
   static void *newArray_HGeantRichDirect(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantRichDirect[nElements] : new ::HGeantRichDirect[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantRichDirect(void *p) {
      delete ((::HGeantRichDirect*)p);
   }
   static void deleteArray_HGeantRichDirect(void *p) {
      delete [] ((::HGeantRichDirect*)p);
   }
   static void destruct_HGeantRichDirect(void *p) {
      typedef ::HGeantRichDirect current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantRichDirect(TBuffer &buf, void *obj) {
      ((::HGeantRichDirect*)obj)->::HGeantRichDirect::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantRichDirect

//______________________________________________________________________________
void HGeantRichPhoton::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantRichPhoton.
      TClass *R__cl = ::HGeantRichPhoton::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "parentTrack", &parentTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit", &eHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPmtId", &fPmtId);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantRichPhoton(void *p) {
      return  p ? new(p) ::HGeantRichPhoton : new ::HGeantRichPhoton;
   }
   static void *newArray_HGeantRichPhoton(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantRichPhoton[nElements] : new ::HGeantRichPhoton[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantRichPhoton(void *p) {
      delete ((::HGeantRichPhoton*)p);
   }
   static void deleteArray_HGeantRichPhoton(void *p) {
      delete [] ((::HGeantRichPhoton*)p);
   }
   static void destruct_HGeantRichPhoton(void *p) {
      typedef ::HGeantRichPhoton current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantRichPhoton(TBuffer &buf, void *obj) {
      ((::HGeantRichPhoton*)obj)->::HGeantRichPhoton::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantRichPhoton

//______________________________________________________________________________
void HGeantRichMirror::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantRichMirror.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HLinkedDataObject::Streamer(R__b);
      R__b >> numPhot;
      R__b >> trackNumber;
      R__b >> xRing;
      R__b >> yRing;
      R__b >> xLep;
      R__b >> yLep;
      R__b >> zLep;
      R__b >> lepID;
      R__b >> sector;
      R__b.CheckByteCount(R__s, R__c, HGeantRichMirror::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantRichMirror::IsA(), kTRUE);
      HLinkedDataObject::Streamer(R__b);
      R__b << numPhot;
      R__b << trackNumber;
      R__b << xRing;
      R__b << yRing;
      R__b << xLep;
      R__b << yLep;
      R__b << zLep;
      R__b << lepID;
      R__b << sector;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantRichMirror::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantRichMirror.
      TClass *R__cl = ::HGeantRichMirror::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numPhot", &numPhot);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xRing", &xRing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yRing", &yRing);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xLep", &xLep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yLep", &yLep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zLep", &zLep);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "lepID", &lepID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantRichMirror(void *p) {
      return  p ? new(p) ::HGeantRichMirror : new ::HGeantRichMirror;
   }
   static void *newArray_HGeantRichMirror(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantRichMirror[nElements] : new ::HGeantRichMirror[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantRichMirror(void *p) {
      delete ((::HGeantRichMirror*)p);
   }
   static void deleteArray_HGeantRichMirror(void *p) {
      delete [] ((::HGeantRichMirror*)p);
   }
   static void destruct_HGeantRichMirror(void *p) {
      typedef ::HGeantRichMirror current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantRichMirror(TBuffer &buf, void *obj) {
      ((::HGeantRichMirror*)obj)->::HGeantRichMirror::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantRichMirror

//______________________________________________________________________________
void HGeantTof::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantTof.
      TClass *R__cl = ::HGeantTof::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLength", &trackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit", &eHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofHit", &tofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit", &momHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell", &cell);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantTof(void *p) {
      return  p ? new(p) ::HGeantTof : new ::HGeantTof;
   }
   static void *newArray_HGeantTof(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantTof[nElements] : new ::HGeantTof[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantTof(void *p) {
      delete ((::HGeantTof*)p);
   }
   static void deleteArray_HGeantTof(void *p) {
      delete [] ((::HGeantTof*)p);
   }
   static void destruct_HGeantTof(void *p) {
      typedef ::HGeantTof current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantTof(TBuffer &buf, void *obj) {
      ((::HGeantTof*)obj)->::HGeantTof::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantTof

//______________________________________________________________________________
void HGeantRpc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantRpc.
      TClass *R__cl = ::HGeantRpc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLength", &trackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loctrackLength", &loctrackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit", &eHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zHit", &zHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofHit", &tofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit", &momHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaHit", &thetaHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiHit", &phiHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "detectorID", &detectorID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loctrackLength1", &loctrackLength1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit1", &eHit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit1", &xHit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit1", &yHit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit1", &momHit1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loctrackLength2", &loctrackLength2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit2", &eHit2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit2", &xHit2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit2", &yHit2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit2", &momHit2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "loctrackLength3", &loctrackLength3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit3", &eHit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit3", &xHit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit3", &yHit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit3", &momHit3);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "HGeantRpc_version", &HGeantRpc_version);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantRpc(void *p) {
      return  p ? new(p) ::HGeantRpc : new ::HGeantRpc;
   }
   static void *newArray_HGeantRpc(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantRpc[nElements] : new ::HGeantRpc[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantRpc(void *p) {
      delete ((::HGeantRpc*)p);
   }
   static void deleteArray_HGeantRpc(void *p) {
      delete [] ((::HGeantRpc*)p);
   }
   static void destruct_HGeantRpc(void *p) {
      typedef ::HGeantRpc current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantRpc(TBuffer &buf, void *obj) {
      ((::HGeantRpc*)obj)->::HGeantRpc::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantRpc

//______________________________________________________________________________
void HGeantShower::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantShower.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HLinkedDataObject::Streamer(R__b);
      R__b >> trackNumber;
      R__b >> eHit;
      R__b >> xHit;
      R__b >> yHit;
      R__b >> thetaHit;
      R__b >> phiHit;
      R__b >> betaHit;
      R__b >> sector;
      R__b >> module;
      R__b.CheckByteCount(R__s, R__c, HGeantShower::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantShower::IsA(), kTRUE);
      HLinkedDataObject::Streamer(R__b);
      R__b << trackNumber;
      R__b << eHit;
      R__b << xHit;
      R__b << yHit;
      R__b << thetaHit;
      R__b << phiHit;
      R__b << betaHit;
      R__b << sector;
      R__b << module;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantShower::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantShower.
      TClass *R__cl = ::HGeantShower::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit", &eHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "thetaHit", &thetaHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phiHit", &phiHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "betaHit", &betaHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantShower(void *p) {
      return  p ? new(p) ::HGeantShower : new ::HGeantShower;
   }
   static void *newArray_HGeantShower(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantShower[nElements] : new ::HGeantShower[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantShower(void *p) {
      delete ((::HGeantShower*)p);
   }
   static void deleteArray_HGeantShower(void *p) {
      delete [] ((::HGeantShower*)p);
   }
   static void destruct_HGeantShower(void *p) {
      typedef ::HGeantShower current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantShower(TBuffer &buf, void *obj) {
      ((::HGeantShower*)obj)->::HGeantShower::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantShower

//______________________________________________________________________________
void HGeantWall::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantWall.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HLinkedDataObject::Streamer(R__b);
      R__b >> trackNumber;
      R__b >> trackLength;
      R__b >> eHit;
      R__b >> xHit;
      R__b >> yHit;
      R__b >> tofHit;
      R__b >> momHit;
      R__b >> module;
      R__b >> cell;
      R__b.CheckByteCount(R__s, R__c, HGeantWall::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantWall::IsA(), kTRUE);
      HLinkedDataObject::Streamer(R__b);
      R__b << trackNumber;
      R__b << trackLength;
      R__b << eHit;
      R__b << xHit;
      R__b << yHit;
      R__b << tofHit;
      R__b << momHit;
      R__b << module;
      R__b << cell;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantWall::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantWall.
      TClass *R__cl = ::HGeantWall::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLength", &trackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit", &eHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofHit", &tofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit", &momHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell", &cell);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantWall(void *p) {
      return  p ? new(p) ::HGeantWall : new ::HGeantWall;
   }
   static void *newArray_HGeantWall(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantWall[nElements] : new ::HGeantWall[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantWall(void *p) {
      delete ((::HGeantWall*)p);
   }
   static void deleteArray_HGeantWall(void *p) {
      delete [] ((::HGeantWall*)p);
   }
   static void destruct_HGeantWall(void *p) {
      typedef ::HGeantWall current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantWall(TBuffer &buf, void *obj) {
      ((::HGeantWall*)obj)->::HGeantWall::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantWall

//______________________________________________________________________________
void HGeantEmc::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantEmc.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HLinkedDataObject::Streamer(R__b);
      R__b >> trackNumber;
      R__b >> trackLength;
      R__b >> peHit;
      R__b >> xHit;
      R__b >> yHit;
      R__b >> zHit;
      R__b >> tofHit;
      R__b >> momHit;
      R__b >> sector;
      R__b >> cell;
      R__b.CheckByteCount(R__s, R__c, HGeantEmc::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantEmc::IsA(), kTRUE);
      HLinkedDataObject::Streamer(R__b);
      R__b << trackNumber;
      R__b << trackLength;
      R__b << peHit;
      R__b << xHit;
      R__b << yHit;
      R__b << zHit;
      R__b << tofHit;
      R__b << momHit;
      R__b << sector;
      R__b << cell;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantEmc::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantEmc.
      TClass *R__cl = ::HGeantEmc::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLength", &trackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "peHit", &peHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zHit", &zHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofHit", &tofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit", &momHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sector", &sector);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell", &cell);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantEmc(void *p) {
      return  p ? new(p) ::HGeantEmc : new ::HGeantEmc;
   }
   static void *newArray_HGeantEmc(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantEmc[nElements] : new ::HGeantEmc[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantEmc(void *p) {
      delete ((::HGeantEmc*)p);
   }
   static void deleteArray_HGeantEmc(void *p) {
      delete [] ((::HGeantEmc*)p);
   }
   static void destruct_HGeantEmc(void *p) {
      typedef ::HGeantEmc current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantEmc(TBuffer &buf, void *obj) {
      ((::HGeantEmc*)obj)->::HGeantEmc::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantEmc

//______________________________________________________________________________
void HGeantStart::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantStart.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HLinkedDataObject::Streamer(R__b);
      R__b >> trackNumber;
      R__b >> eHit;
      R__b >> xHit;
      R__b >> yHit;
      R__b >> tofHit;
      R__b >> momHit;
      R__b >> trackLength;
      R__b >> cell;
      R__b.CheckByteCount(R__s, R__c, HGeantStart::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantStart::IsA(), kTRUE);
      HLinkedDataObject::Streamer(R__b);
      R__b << trackNumber;
      R__b << eHit;
      R__b << xHit;
      R__b << yHit;
      R__b << tofHit;
      R__b << momHit;
      R__b << trackLength;
      R__b << cell;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantStart::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantStart.
      TClass *R__cl = ::HGeantStart::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit", &eHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofHit", &tofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "momHit", &momHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLength", &trackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell", &cell);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantStart(void *p) {
      return  p ? new(p) ::HGeantStart : new ::HGeantStart;
   }
   static void *newArray_HGeantStart(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantStart[nElements] : new ::HGeantStart[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantStart(void *p) {
      delete ((::HGeantStart*)p);
   }
   static void deleteArray_HGeantStart(void *p) {
      delete [] ((::HGeantStart*)p);
   }
   static void destruct_HGeantStart(void *p) {
      typedef ::HGeantStart current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantStart(TBuffer &buf, void *obj) {
      ((::HGeantStart*)obj)->::HGeantStart::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantStart

//______________________________________________________________________________
void HGeantFwDet::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantFwDet.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HLinkedDataObject::Streamer(R__b);
      R__b >> trackNumber;
      R__b >> module;
      R__b >> layer;
      R__b >> cell;
      R__b >> subcell;
      R__b >> xHit;
      R__b >> yHit;
      R__b >> zHit;
      R__b >> pxHit;
      R__b >> pyHit;
      R__b >> pzHit;
      R__b >> tofHit;
      R__b >> trackLength;
      R__b >> eHit;
      R__b.CheckByteCount(R__s, R__c, HGeantFwDet::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantFwDet::IsA(), kTRUE);
      HLinkedDataObject::Streamer(R__b);
      R__b << trackNumber;
      R__b << module;
      R__b << layer;
      R__b << cell;
      R__b << subcell;
      R__b << xHit;
      R__b << yHit;
      R__b << zHit;
      R__b << pxHit;
      R__b << pyHit;
      R__b << pzHit;
      R__b << tofHit;
      R__b << trackLength;
      R__b << eHit;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantFwDet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantFwDet.
      TClass *R__cl = ::HGeantFwDet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackNumber", &trackNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cell", &cell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "subcell", &subcell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "xHit", &xHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "yHit", &yHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "zHit", &zHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pxHit", &pxHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pyHit", &pyHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pzHit", &pzHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tofHit", &tofHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "trackLength", &trackLength);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eHit", &eHit);
      HLinkedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantFwDet(void *p) {
      return  p ? new(p) ::HGeantFwDet : new ::HGeantFwDet;
   }
   static void *newArray_HGeantFwDet(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantFwDet[nElements] : new ::HGeantFwDet[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantFwDet(void *p) {
      delete ((::HGeantFwDet*)p);
   }
   static void deleteArray_HGeantFwDet(void *p) {
      delete [] ((::HGeantFwDet*)p);
   }
   static void destruct_HGeantFwDet(void *p) {
      typedef ::HGeantFwDet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantFwDet(TBuffer &buf, void *obj) {
      ((::HGeantFwDet*)obj)->::HGeantFwDet::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantFwDet

//______________________________________________________________________________
void HKineSim::Streamer(TBuffer &R__b)
{
   // Stream an object of class HKineSim.

   ::Error("HKineSim::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HKineSim::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HKineSim.
      TClass *R__cl = ::HKineSim::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iter", &iter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeantKineCat", &fGeantKineCat);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HKineSim(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HKineSim : new ::HKineSim;
   }
   static void *newArray_HKineSim(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HKineSim[nElements] : new ::HKineSim[nElements];
   }
   // Wrapper around operator delete
   static void delete_HKineSim(void *p) {
      delete ((::HKineSim*)p);
   }
   static void deleteArray_HKineSim(void *p) {
      delete [] ((::HKineSim*)p);
   }
   static void destruct_HKineSim(void *p) {
      typedef ::HKineSim current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HKineSim(TBuffer &buf, void *obj) {
      ((::HKineSim*)obj)->::HKineSim::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HKineSim

//______________________________________________________________________________
void HGeantHeader::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantHeader.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HLocatedDataObject::Streamer(R__b);
      R__b >> eventID;
      R__b >> beamEnergy;
      R__b >> impactParameter;
      R__b >> eventPlane;
      R__b.CheckByteCount(R__s, R__c, HGeantHeader::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantHeader::IsA(), kTRUE);
      HLocatedDataObject::Streamer(R__b);
      R__b << eventID;
      R__b << beamEnergy;
      R__b << impactParameter;
      R__b << eventPlane;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantHeader.
      TClass *R__cl = ::HGeantHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventID", &eventID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beamEnergy", &beamEnergy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "impactParameter", &impactParameter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventPlane", &eventPlane);
      HLocatedDataObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantHeader(void *p) {
      return  p ? new(p) ::HGeantHeader : new ::HGeantHeader;
   }
   static void *newArray_HGeantHeader(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantHeader[nElements] : new ::HGeantHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantHeader(void *p) {
      delete ((::HGeantHeader*)p);
   }
   static void deleteArray_HGeantHeader(void *p) {
      delete [] ((::HGeantHeader*)p);
   }
   static void destruct_HGeantHeader(void *p) {
      typedef ::HGeantHeader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantHeader(TBuffer &buf, void *obj) {
      ((::HGeantHeader*)obj)->::HGeantHeader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantHeader

//______________________________________________________________________________
void HGeantMedia::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGeantMedia.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      {
         map<Int_t,TString> &R__stl =  media;
         R__stl.clear();
         int R__i, R__n;
         R__b >> R__n;
         for (R__i = 0; R__i < R__n; R__i++) {
            int R__t;
            R__b >> R__t;
            TString R__t2;
            R__t2.Streamer(R__b);
            typedef int Value_t;
            std::pair<Value_t const, TString > R__t3(R__t,R__t2);
            R__stl.insert(R__t3);
         }
      }
      R__b.CheckByteCount(R__s, R__c, HGeantMedia::IsA());
   } else {
      R__c = R__b.WriteVersion(HGeantMedia::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      {
         map<Int_t,TString> &R__stl =  media;
         int R__n=(true) ? int(R__stl.size()) : 0;
         R__b << R__n;
         if(R__n) {
            map<Int_t,TString>::iterator R__k;
            for (R__k = R__stl.begin(); R__k != R__stl.end(); ++R__k) {
            R__b << ((*R__k).first );
            ((TString&)((*R__k).second)).Streamer(R__b);
            }
         }
      }
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HGeantMedia::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGeantMedia.
      TClass *R__cl = ::HGeantMedia::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "media", (void*)&media);
      R__insp.InspectMember("map<Int_t,TString>", (void*)&media, "media.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iter", (void*)&iter);
      R__insp.InspectMember("map<int,TString,less<int>,allocator<pair<const int,TString> > >::iterator", (void*)&iter, "iter.", true);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HGeantMedia(void *p) {
      return  p ? new(p) ::HGeantMedia : new ::HGeantMedia;
   }
   static void *newArray_HGeantMedia(Long_t nElements, void *p) {
      return p ? new(p) ::HGeantMedia[nElements] : new ::HGeantMedia[nElements];
   }
   // Wrapper around operator delete
   static void delete_HGeantMedia(void *p) {
      delete ((::HGeantMedia*)p);
   }
   static void deleteArray_HGeantMedia(void *p) {
      delete [] ((::HGeantMedia*)p);
   }
   static void destruct_HGeantMedia(void *p) {
      typedef ::HGeantMedia current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGeantMedia(TBuffer &buf, void *obj) {
      ((::HGeantMedia*)obj)->::HGeantMedia::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGeantMedia

namespace ROOTDict {
   void maplEintcOTStringgR_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void maplEintcOTStringgR_Dictionary();
   static void *new_maplEintcOTStringgR(void *p = 0);
   static void *newArray_maplEintcOTStringgR(Long_t size, void *p);
   static void delete_maplEintcOTStringgR(void *p);
   static void deleteArray_maplEintcOTStringgR(void *p);
   static void destruct_maplEintcOTStringgR(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const map<int,TString>*)
   {
      map<int,TString> *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(map<int,TString>),0);
      static ::ROOT::TGenericClassInfo 
         instance("map<int,TString>", -2, "/cvmfs/hades.gsi.de/install/root-5.34.34/cint/cint/lib/prec_stl/map", 63,
                  typeid(map<int,TString>), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &maplEintcOTStringgR_Dictionary, isa_proxy, 0,
                  sizeof(map<int,TString>) );
      instance.SetNew(&new_maplEintcOTStringgR);
      instance.SetNewArray(&newArray_maplEintcOTStringgR);
      instance.SetDelete(&delete_maplEintcOTStringgR);
      instance.SetDeleteArray(&deleteArray_maplEintcOTStringgR);
      instance.SetDestructor(&destruct_maplEintcOTStringgR);
      instance.AdoptCollectionProxyInfo( ::ROOT::TCollectionProxyInfo::Generate( ::ROOT::TCollectionProxyInfo::MapInsert< map<int,TString> >()));
      return &instance;
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const map<int,TString>*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void maplEintcOTStringgR_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const map<int,TString>*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_maplEintcOTStringgR(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TString> : new map<int,TString>;
   }
   static void *newArray_maplEintcOTStringgR(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) map<int,TString>[nElements] : new map<int,TString>[nElements];
   }
   // Wrapper around operator delete
   static void delete_maplEintcOTStringgR(void *p) {
      delete ((map<int,TString>*)p);
   }
   static void deleteArray_maplEintcOTStringgR(void *p) {
      delete [] ((map<int,TString>*)p);
   }
   static void destruct_maplEintcOTStringgR(void *p) {
      typedef map<int,TString> current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class map<int,TString>

/********************************************************
* ../build/pc/GeantUtilDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGeantUtilDict();

extern "C" void G__set_cpp_environmentGeantUtilDict() {
  G__cpp_reset_tagtableGeantUtilDict();
}
#include <new>
extern "C" int G__cpp_dllrevGeantUtilDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HGeantHeader */
static int G__GeantUtilDict_172_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantHeader[n];
     } else {
       p = new((void*) gvp) HGeantHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantHeader;
     } else {
       p = new((void*) gvp) HGeantHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGeantHeader(*(HGeantHeader*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HGeantHeader(*(HGeantHeader*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantHeader*) G__getstructoffset())->setEventId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantHeader*) G__getstructoffset())->setBeamEnergy((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantHeader*) G__getstructoffset())->setImpactParameter((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantHeader*) G__getstructoffset())->setEventPlane((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantHeader*) G__getstructoffset())->getEventId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantHeader*) G__getstructoffset())->getBeamEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantHeader*) G__getstructoffset())->getImpactParameter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantHeader*) G__getstructoffset())->getEventPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_172_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantHeader G__THGeantHeader;
static int G__GeantUtilDict_172_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantHeader*) (soff+(sizeof(HGeantHeader)*i)))->~G__THGeantHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantHeader*) (soff))->~G__THGeantHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_172_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantHeader* dest = (HGeantHeader*) G__getstructoffset();
   *dest = *(HGeantHeader*) libp->para[0].ref;
   const HGeantHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantMedia */
static int G__GeantUtilDict_554_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantMedia* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantMedia((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HGeantMedia((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantMedia((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HGeantMedia((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HGeantMedia[n];
       } else {
         p = new((void*) gvp) HGeantMedia[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HGeantMedia;
       } else {
         p = new((void*) gvp) HGeantMedia;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMedia*) G__getstructoffset())->addMedium((Int_t) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((HGeantMedia*) G__getstructoffset())->getMediumName((Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantMedia*) G__getstructoffset())->getMediumId(*(TString*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMedia*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantMedia::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantMedia::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantMedia::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantMedia::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMedia*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantMedia::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantMedia::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantMedia::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_554_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantMedia::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_554_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantMedia* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantMedia(*(HGeantMedia*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantMedia G__THGeantMedia;
static int G__GeantUtilDict_554_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantMedia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantMedia*) (soff+(sizeof(HGeantMedia)*i)))->~G__THGeantMedia();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantMedia*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantMedia*) (soff))->~G__THGeantMedia();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_554_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantMedia* dest = (HGeantMedia*) G__getstructoffset();
   *dest = *(HGeantMedia*) libp->para[0].ref;
   const HGeantMedia& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantKine */
static int G__GeantUtilDict_564_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantKine* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantKine[n];
     } else {
       p = new((void*) gvp) HGeantKine[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantKine;
     } else {
       p = new((void*) gvp) HGeantKine;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantKine* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGeantKine(*(HGeantKine*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HGeantKine(*(HGeantKine*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setParticle((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setCreator((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setVertex((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setMomentum((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setGenerator((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setGenerator((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setWeight((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getParticle(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getCreator(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setMedium((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setMechanism((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getVertex(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getVertex(*(HGeomVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantKine*) G__getstructoffset())->getDistFromVertex());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getMomentum(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getMedium());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getMechanism());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getParentTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setParentTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setNewTrackNumber((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getTotalMomentum2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getTotalMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getTransverseMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letdouble(result7, 102, (double) ((HGeantKine*) G__getstructoffset())->getPhiDeg((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letdouble(result7, 102, (double) ((HGeantKine*) G__getstructoffset())->getPhiDeg());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantKine*) G__getstructoffset())->getThetaDeg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getPhiThetaDeg(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, (Bool_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getPhiThetaDeg(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getM());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getE());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getEkin());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getRapidity());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getMomentum(*(HGeomVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getGenerator(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getGenerator(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getGeneratorInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getGeneratorInfo1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantKine*) G__getstructoffset())->getGeneratorInfo2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getGeneratorWeight());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantKine::getGeneration((HGeantKine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantKine::getMothers((HGeantKine*) G__int(libp->para[0]), *(vector<HGeantKine*>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantKine::getAllDaughters((HGeantKine*) G__int(libp->para[0]), *(vector<HGeantKine*>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantKine::getDaughters((HGeantKine*) G__int(libp->para[0]), *(vector<HGeantKine*>*) libp->para[1].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantKine::getChargedDecayDaughter((HGeantKine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HGeantKine*) G__getstructoffset())->setActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HGeantKine*) G__getstructoffset())->setActive();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HGeantKine*) G__getstructoffset())->setSuppressed((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HGeantKine*) G__getstructoffset())->setSuppressed();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setUserVal((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGeantKine*) G__getstructoffset())->isActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGeantKine*) G__getstructoffset())->isPrimary());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HGeantKine*) G__getstructoffset())->isSuppressed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HGeantKine*) G__getstructoffset())->getUserVal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->hasAncestor((Int_t) G__int(libp->para[0]), (HLinearCategory*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->hasAncestor((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->printHistory();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isBugInfo());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isExternalSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isThermalSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) HGeantKine::isSameExternalSource((HGeantKine*) G__int(libp->para[0]), (HGeantKine*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isSameExternalSource((HGeantKine*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) HGeantKine::setChainActive((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (HLinearCategory*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) HGeantKine::setChainActive((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) HGeantKine::setChainActive((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) HGeantKine::setAllDescendentsActive((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (HLinearCategory*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) HGeantKine::setAllDescendentsActive((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) HGeantKine::setAllDescendentsActive((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) HGeantKine::setAllDescendentsSuppressed((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])
, (HLinearCategory*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) HGeantKine::setAllDescendentsSuppressed((Int_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) HGeantKine::setAllDescendentsSuppressed((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) HGeantKine::getParent((Int_t) G__int(libp->para[0]), (HLinearCategory*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HGeantKine::getParent((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) HGeantKine::getGrandParent((Int_t) G__int(libp->para[0]), (HLinearCategory*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HGeantKine::getGrandParent((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) HGeantKine::getPrimary((Int_t) G__int(libp->para[0]), (HLinearCategory*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) HGeantKine::getPrimary((Int_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 85, (long) HGeantKine::getCommonAncestor((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (HLinearCategory*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 85, (long) HGeantKine::getCommonAncestor((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) HGeantKine::suppressTracks((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (HLinearCategory*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) HGeantKine::suppressTracks((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setRichHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setMdcHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setTofHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setRpcHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setShowerHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setWallHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setEmcHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setStartHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->setFwDetHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNRichHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstRichHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNMdcHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstMdcHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNMdcHits((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNTofHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstTofHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNRpcHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstRpcHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNShowerHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstShowerHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNWallHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstWallHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNEmcHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstEmcHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNStartHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstStartHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNFwDetHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFirstFwDetHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getRichHits(*(vector<HGeantRichPhoton*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getMdcHits(*(vector<HGeantMdc*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getTofHits(*(vector<HGeantTof*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getRpcHits(*(vector<HGeantRpc*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getWallHits(*(vector<HGeantWall*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getEmcHits(*(vector<HGeantEmc*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getStartHits(*(vector<HGeantStart*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getFwDetHits(*(vector<HGeantFwDet*>*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstRichHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstMdcHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstTofHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstRpcHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstShowerHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstWallHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstEmcHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFirstStartHit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->sortRichHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->sortMdcHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->sortTofHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->sortRpcHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->sortShowerHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->sortWallHits();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptance((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptance((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptance());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceDecay((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceBit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceBit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   case 4:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceBit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceBit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceBit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceBit((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceBit());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isInAcceptanceDecayBit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getNHits(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getNHitsDecay(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getNHitsBit(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->getNHitsDecayBit(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Int_t*) G__Intref(&libp->para[4]), *(Int_t*) G__Intref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getSystem());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getSectorFromBitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getMdcSectorBitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getMdcSectorDecimalArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getShowerSectorBitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getShowerSectorDecimalArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getTofSectorBitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getTofSectorDecimalArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getRpcSectorBitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getRpcSectorDecimalArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getRichSectorBitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getRichSectorDecimalArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getSectorBitArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HGeantKine*) G__getstructoffset())->getSectorDecimalArray());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextRichHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextMdcHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextTofHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextRpcHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextShowerHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextWallHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextEmcHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextStartHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HGeantKine*) G__getstructoffset())->nextFwDetHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setRichCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setMdcCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_156(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setTofCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_157(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setRpcCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_158(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setShowerCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_159(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setWallCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_160(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setEmcCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_161(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setStartCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_162(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setFwDetCategory((HCategory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_163(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetRichIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_164(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetMdcIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_165(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetTofIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_166(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetRpcIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_167(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetShowerIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_168(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetWallIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_169(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetEmcIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_170(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetStartIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_171(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->resetFwDetIter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_172(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setLayers((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_173(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setLayer((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_174(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->unsetAllLayers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_175(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantKine::setLayer((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])
, *(UInt_t*) G__UIntref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_176(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->getLayer((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_177(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->hasLayers((UInt_t) G__int(libp->para[0]), (UInt_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_178(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNLayer((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_179(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantKine*) G__getstructoffset())->getNLayerMod((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_180(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->printLayers();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_181(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setSys((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_182(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->unsetSys((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_183(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->getSys((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_184(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setAtMdcEdge((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_185(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->unsetAtMdcEdge((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_186(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isAtMdcEdge((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_187(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isAtAnyMdcEdge((UInt_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isAtAnyMdcEdge());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_188(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setCropedFilled();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_189(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->unsetCropedFilled();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_190(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isCropedFilled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_191(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->setAcceptanceFilled();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_192(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->unsetAcceptanceFilled();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_193(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantKine*) G__getstructoffset())->isAcceptanceFilled());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_194(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->fillAcceptanceBit();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_197(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantKine::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_198(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantKine::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_199(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantKine::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_200(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantKine::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_204(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantKine*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_205(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantKine::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_206(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantKine::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_207(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantKine::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_564_0_208(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantKine::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantKine G__THGeantKine;
static int G__GeantUtilDict_564_0_209(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantKine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantKine*) (soff+(sizeof(HGeantKine)*i)))->~G__THGeantKine();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantKine*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantKine*) (soff))->~G__THGeantKine();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_564_0_210(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantKine* dest = (HGeantKine*) G__getstructoffset();
   *dest = *(HGeantKine*) libp->para[0].ref;
   const HGeantKine& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantRichPhoton */
static int G__GeantUtilDict_591_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRichPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRichPhoton[n];
     } else {
       p = new((void*) gvp) HGeantRichPhoton[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRichPhoton;
     } else {
       p = new((void*) gvp) HGeantRichPhoton;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRichPhoton* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGeantRichPhoton(*(HGeantRichPhoton*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HGeantRichPhoton(*(HGeantRichPhoton*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichPhoton*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichPhoton*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichPhoton*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichPhoton*) G__getstructoffset())->setPmtId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichPhoton*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichPhoton*) G__getstructoffset())->getEnergy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichPhoton*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichPhoton*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRichPhoton*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRichPhoton*) G__getstructoffset())->getPmtId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantRichPhoton*) G__getstructoffset())->isNewRich());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantRichPhoton::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichPhoton::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantRichPhoton::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantRichPhoton::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichPhoton*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichPhoton::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRichPhoton::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichPhoton::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_591_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRichPhoton::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantRichPhoton G__THGeantRichPhoton;
static int G__GeantUtilDict_591_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantRichPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantRichPhoton*) (soff+(sizeof(HGeantRichPhoton)*i)))->~G__THGeantRichPhoton();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantRichPhoton*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantRichPhoton*) (soff))->~G__THGeantRichPhoton();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_591_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRichPhoton* dest = (HGeantRichPhoton*) G__getstructoffset();
   *dest = *(HGeantRichPhoton*) libp->para[0].ref;
   const HGeantRichPhoton& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantRichDirect */
static int G__GeantUtilDict_592_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRichDirect* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRichDirect[n];
     } else {
       p = new((void*) gvp) HGeantRichDirect[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRichDirect;
     } else {
       p = new((void*) gvp) HGeantRichDirect;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setMomentum((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setELoss((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setNumPhot((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->setPmtId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->getTrack(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->getMomentum(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->getELoss(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichDirect*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichDirect*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichDirect*) G__getstructoffset())->getTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichDirect*) G__getstructoffset())->getPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichDirect*) G__getstructoffset())->getEnergyLoss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichDirect*) G__getstructoffset())->getTrackLengthInPhotDet());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRichDirect*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRichDirect*) G__getstructoffset())->getNumPhot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRichDirect*) G__getstructoffset())->getPmtId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HGeantRichDirect*) G__getstructoffset())->isNewRich());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantRichDirect::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichDirect::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantRichDirect::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantRichDirect::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichDirect*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichDirect::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRichDirect::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichDirect::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_592_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRichDirect::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_592_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantRichDirect* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantRichDirect(*(HGeantRichDirect*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantRichDirect G__THGeantRichDirect;
static int G__GeantUtilDict_592_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantRichDirect*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantRichDirect*) (soff+(sizeof(HGeantRichDirect)*i)))->~G__THGeantRichDirect();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantRichDirect*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantRichDirect*) (soff))->~G__THGeantRichDirect();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_592_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRichDirect* dest = (HGeantRichDirect*) G__getstructoffset();
   *dest = *(HGeantRichDirect*) libp->para[0].ref;
   const HGeantRichDirect& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantRichMirror */
static int G__GeantUtilDict_593_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRichMirror* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRichMirror[n];
     } else {
       p = new((void*) gvp) HGeantRichMirror[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRichMirror;
     } else {
       p = new((void*) gvp) HGeantRichMirror;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setNumPhot((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setXRing((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setYRing((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->setXYring((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->getTrack(*(Int_t*) G__Intref(&libp->para[0]), *(Int_t*) G__Intref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichMirror*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichMirror*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichMirror*) G__getstructoffset())->getXRing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRichMirror*) G__getstructoffset())->getYRing());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRichMirror*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRichMirror*) G__getstructoffset())->getNumPhot());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantRichMirror::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichMirror::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantRichMirror::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantRichMirror::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRichMirror*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichMirror::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRichMirror::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRichMirror::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_593_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRichMirror::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_593_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantRichMirror* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantRichMirror(*(HGeantRichMirror*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantRichMirror G__THGeantRichMirror;
static int G__GeantUtilDict_593_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantRichMirror*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantRichMirror*) (soff+(sizeof(HGeantRichMirror)*i)))->~G__THGeantRichMirror();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantRichMirror*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantRichMirror*) (soff))->~G__THGeantRichMirror();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_593_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRichMirror* dest = (HGeantRichMirror*) G__getstructoffset();
   *dest = *(HGeantRichMirror*) libp->para[0].ref;
   const HGeantRichMirror& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantMdc */
static int G__GeantUtilDict_594_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantMdc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantMdc[n];
     } else {
       p = new((void*) gvp) HGeantMdc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantMdc;
     } else {
       p = new((void*) gvp) HGeantMdc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMdc*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMdc*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMdc*) G__getstructoffset())->setIncidence((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMdc*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantMdc*) G__getstructoffset())->getTof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantMdc*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantMdc*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantMdc*) G__getstructoffset())->getTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantMdc*) G__getstructoffset())->getPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantMdc*) G__getstructoffset())->getMomentum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMdc*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMdc*) G__getstructoffset())->getIncidence(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantMdc*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantMdc*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantMdc*) G__getstructoffset())->getLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantMdc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantMdc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantMdc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantMdc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantMdc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantMdc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantMdc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantMdc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_594_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantMdc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_594_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantMdc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantMdc(*(HGeantMdc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantMdc G__THGeantMdc;
static int G__GeantUtilDict_594_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantMdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantMdc*) (soff+(sizeof(HGeantMdc)*i)))->~G__THGeantMdc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantMdc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantMdc*) (soff))->~G__THGeantMdc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_594_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantMdc* dest = (HGeantMdc*) G__getstructoffset();
   *dest = *(HGeantMdc*) libp->para[0].ref;
   const HGeantMdc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantTof */
static int G__GeantUtilDict_595_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantTof* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantTof[n];
     } else {
       p = new((void*) gvp) HGeantTof[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantTof;
     } else {
       p = new((void*) gvp) HGeantTof;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantTof*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantTof*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantTof*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantTof*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantTof*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantTof*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantTof*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantTof::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantTof::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantTof::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantTof::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantTof*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantTof::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantTof::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantTof::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_595_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantTof::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_595_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantTof* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantTof(*(HGeantTof*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantTof G__THGeantTof;
static int G__GeantUtilDict_595_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantTof*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantTof*) (soff+(sizeof(HGeantTof)*i)))->~G__THGeantTof();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantTof*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantTof*) (soff))->~G__THGeantTof();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_595_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantTof* dest = (HGeantTof*) G__getstructoffset();
   *dest = *(HGeantTof*) libp->para[0].ref;
   const HGeantTof& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantRpc */
static int G__GeantUtilDict_596_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRpc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRpc[n];
     } else {
       p = new((void*) gvp) HGeantRpc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantRpc;
     } else {
       p = new((void*) gvp) HGeantRpc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setDetectorID((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setAddress((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setIncidence((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setTLength((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setHit(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setGap((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setTLengthHit((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setZHit((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->setTofHit((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantRpc*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantRpc*) G__getstructoffset())->getColumn());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantRpc*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HGeantRpc*) G__getstructoffset())->getGap());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRpc*) G__getstructoffset())->getDetectorID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantRpc*) G__getstructoffset())->getVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getIncidence(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getTLength(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRpc*) G__getstructoffset())->getlocTLengthGap((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getGap((Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getGap((Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getGap((Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRpc*) G__getstructoffset())->getTLengthHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRpc*) G__getstructoffset())->getZHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HGeantRpc*) G__getstructoffset())->getTofHit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getHit(
*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5])
, *(Float_t*) G__Floatref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getHitDigi(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getCellAverage(
(Float_t) G__double(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5])
, *(Float_t*) G__Floatref(&libp->para[6]), *(Float_t*) G__Floatref(&libp->para[7]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getCellAverage(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getCellAverage(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getCellAverage(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->getCellAverageDigi((Float_t) G__double(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantRpc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRpc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantRpc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantRpc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantRpc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRpc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRpc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantRpc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_596_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantRpc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_596_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantRpc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantRpc(*(HGeantRpc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantRpc G__THGeantRpc;
static int G__GeantUtilDict_596_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantRpc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantRpc*) (soff+(sizeof(HGeantRpc)*i)))->~G__THGeantRpc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantRpc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantRpc*) (soff))->~G__THGeantRpc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_596_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantRpc* dest = (HGeantRpc*) G__getstructoffset();
   *dest = *(HGeantRpc*) libp->para[0].ref;
   const HGeantRpc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantEmc */
static int G__GeantUtilDict_597_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantEmc* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantEmc[n];
     } else {
       p = new((void*) gvp) HGeantEmc[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantEmc;
     } else {
       p = new((void*) gvp) HGeantEmc;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantEmc*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantEmc*) G__getstructoffset())->setHit(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantEmc*) G__getstructoffset())->setAddress((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantEmc*) G__getstructoffset())->getHit(
*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5])
, *(Float_t*) G__Floatref(&libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantEmc*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantEmc*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantEmc::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantEmc::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantEmc::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantEmc::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantEmc*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantEmc::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantEmc::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantEmc::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_597_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantEmc::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_597_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantEmc* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantEmc(*(HGeantEmc*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantEmc G__THGeantEmc;
static int G__GeantUtilDict_597_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantEmc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantEmc*) (soff+(sizeof(HGeantEmc)*i)))->~G__THGeantEmc();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantEmc*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantEmc*) (soff))->~G__THGeantEmc();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_597_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantEmc* dest = (HGeantEmc*) G__getstructoffset();
   *dest = *(HGeantEmc*) libp->para[0].ref;
   const HGeantEmc& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantWall */
static int G__GeantUtilDict_598_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantWall* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantWall[n];
     } else {
       p = new((void*) gvp) HGeantWall[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantWall;
     } else {
       p = new((void*) gvp) HGeantWall;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantWall*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantWall*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantWall*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantWall*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantWall*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantWall*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantWall::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantWall::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantWall::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantWall::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantWall*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantWall::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantWall::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantWall::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_598_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantWall::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_598_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantWall* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantWall(*(HGeantWall*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantWall G__THGeantWall;
static int G__GeantUtilDict_598_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantWall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantWall*) (soff+(sizeof(HGeantWall)*i)))->~G__THGeantWall();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantWall*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantWall*) (soff))->~G__THGeantWall();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_598_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantWall* dest = (HGeantWall*) G__getstructoffset();
   *dest = *(HGeantWall*) libp->para[0].ref;
   const HGeantWall& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantStart */
static int G__GeantUtilDict_599_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantStart* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantStart[n];
     } else {
       p = new((void*) gvp) HGeantStart[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantStart;
     } else {
       p = new((void*) gvp) HGeantStart;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantStart*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantStart*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantStart*) G__getstructoffset())->setCell((Char_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantStart*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantStart*) G__getstructoffset())->getCell());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantStart::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantStart::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantStart::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantStart::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantStart*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantStart::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantStart::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantStart::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_599_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantStart::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_599_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantStart* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantStart(*(HGeantStart*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantStart G__THGeantStart;
static int G__GeantUtilDict_599_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantStart*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantStart*) (soff+(sizeof(HGeantStart)*i)))->~G__THGeantStart();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantStart*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantStart*) (soff))->~G__THGeantStart();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_599_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantStart* dest = (HGeantStart*) G__getstructoffset();
   *dest = *(HGeantStart*) libp->para[0].ref;
   const HGeantStart& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantFwDet */
static int G__GeantUtilDict_600_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantFwDet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantFwDet[n];
     } else {
       p = new((void*) gvp) HGeantFwDet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantFwDet;
     } else {
       p = new((void*) gvp) HGeantFwDet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantFwDet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HGeantFwDet(*(HGeantFwDet*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HGeantFwDet(*(HGeantFwDet*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantFwDet*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantFwDet*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Char_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantFwDet*) G__getstructoffset())->setHit(
(Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Float_t) G__double(libp->para[5])
, (Float_t) G__double(libp->para[6]), (Float_t) G__double(libp->para[7])
, (Float_t) G__double(libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HGeantFwDet*) G__getstructoffset())->getTrackNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantFwDet*) G__getstructoffset())->getAddress(*(Char_t*) G__Charref(&libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(Int_t*) G__Intref(&libp->para[2]), *(Char_t*) G__Charref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantFwDet*) G__getstructoffset())->getHit(
*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4]), *(Float_t*) G__Floatref(&libp->para[5])
, *(Float_t*) G__Floatref(&libp->para[6]), *(Float_t*) G__Floatref(&libp->para[7])
, *(Float_t*) G__Floatref(&libp->para[8]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantFwDet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantFwDet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantFwDet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantFwDet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantFwDet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantFwDet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantFwDet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantFwDet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_600_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantFwDet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantFwDet G__THGeantFwDet;
static int G__GeantUtilDict_600_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantFwDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantFwDet*) (soff+(sizeof(HGeantFwDet)*i)))->~G__THGeantFwDet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantFwDet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantFwDet*) (soff))->~G__THGeantFwDet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_600_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantFwDet* dest = (HGeantFwDet*) G__getstructoffset();
   *dest = *(HGeantFwDet*) libp->para[0].ref;
   const HGeantFwDet& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGeantShower */
static int G__GeantUtilDict_638_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantShower* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantShower[n];
     } else {
       p = new((void*) gvp) HGeantShower[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGeantShower;
     } else {
       p = new((void*) gvp) HGeantShower;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantShower*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantShower*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantShower*) G__getstructoffset())->setIncidence((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantShower*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]), (Char_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantShower*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantShower*) G__getstructoffset())->getIncidence(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantShower*) G__getstructoffset())->getSector());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 99, (long) ((HGeantShower*) G__getstructoffset())->getModule());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGeantShower::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantShower::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGeantShower::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGeantShower::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGeantShower*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantShower::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantShower::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGeantShower::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_638_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGeantShower::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_638_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGeantShower* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGeantShower(*(HGeantShower*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGeantShower G__THGeantShower;
static int G__GeantUtilDict_638_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGeantShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGeantShower*) (soff+(sizeof(HGeantShower)*i)))->~G__THGeantShower();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGeantShower*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGeantShower*) (soff))->~G__THGeantShower();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_638_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGeantShower* dest = (HGeantShower*) G__getstructoffset();
   *dest = *(HGeantShower*) libp->para[0].ref;
   const HGeantShower& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HKineSim */
static int G__GeantUtilDict_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HKineSim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HKineSim[n];
     } else {
       p = new((void*) gvp) HKineSim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HKineSim;
     } else {
       p = new((void*) gvp) HKineSim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HKineSim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HKineSim*) G__getstructoffset())->checkChargedPart((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HKineSim*) G__getstructoffset())->getObj((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HKineSim::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HKineSim::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HKineSim::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HKineSim::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HKineSim*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HKineSim*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HKineSim*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HKineSim*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HKineSim::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HKineSim::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HKineSim::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GeantUtilDict_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HKineSim::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__GeantUtilDict_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HKineSim* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HKineSim(*(HKineSim*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GeantUtilDictLN_HKineSim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HKineSim G__THKineSim;
static int G__GeantUtilDict_641_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HKineSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HKineSim*) (soff+(sizeof(HKineSim)*i)))->~G__THKineSim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HKineSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HKineSim*) (soff))->~G__THKineSim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GeantUtilDict_641_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HKineSim* dest = (HKineSim*) G__getstructoffset();
   *dest = *(HKineSim*) libp->para[0].ref;
   const HKineSim& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HGeantHeader */

/* HGeantMedia */

/* HGeantKine */

/* HGeantRichPhoton */

/* HGeantRichDirect */

/* HGeantRichMirror */

/* HGeantMdc */

/* HGeantTof */

/* HGeantRpc */

/* HGeantEmc */

/* HGeantWall */

/* HGeantStart */

/* HGeantFwDet */

/* HGeantShower */

/* HKineSim */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGeantUtilDict {
 public:
  G__Sizep2memfuncGeantUtilDict(): p(&G__Sizep2memfuncGeantUtilDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGeantUtilDict::*p)();
};

size_t G__get_sizep2memfuncGeantUtilDict()
{
  G__Sizep2memfuncGeantUtilDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGeantUtilDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader))) {
     HGeantHeader *G__Lderived;
     G__Lderived=(HGeantHeader*)0x1000;
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia))) {
     HGeantMedia *G__Lderived;
     G__Lderived=(HGeantMedia*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia),G__get_linked_tagnum(&G__GeantUtilDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine))) {
     HGeantKine *G__Lderived;
     G__Lderived=(HGeantKine*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton))) {
     HGeantRichPhoton *G__Lderived;
     G__Lderived=(HGeantRichPhoton*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect))) {
     HGeantRichDirect *G__Lderived;
     G__Lderived=(HGeantRichDirect*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror))) {
     HGeantRichMirror *G__Lderived;
     G__Lderived=(HGeantRichMirror*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc))) {
     HGeantMdc *G__Lderived;
     G__Lderived=(HGeantMdc*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof))) {
     HGeantTof *G__Lderived;
     G__Lderived=(HGeantTof*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc))) {
     HGeantRpc *G__Lderived;
     G__Lderived=(HGeantRpc*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc))) {
     HGeantEmc *G__Lderived;
     G__Lderived=(HGeantEmc*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall))) {
     HGeantWall *G__Lderived;
     G__Lderived=(HGeantWall*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart))) {
     HGeantStart *G__Lderived;
     G__Lderived=(HGeantStart*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet))) {
     HGeantFwDet *G__Lderived;
     G__Lderived=(HGeantFwDet*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower))) {
     HGeantShower *G__Lderived;
     G__Lderived=(HGeantShower*)0x1000;
     {
       HLinkedDataObject *G__Lpbase=(HLinkedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower),G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HLocatedDataObject *G__Lpbase=(HLocatedDataObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower),G__get_linked_tagnum(&G__GeantUtilDictLN_HLocatedDataObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower),G__get_linked_tagnum(&G__GeantUtilDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGeantUtilDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,particleproperties>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOparticlepropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOparticlepropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,particleproperties>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOparticlepropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOparticlepropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,particleproperties,less<int> >",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOparticlepropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOparticlepropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,particleproperties>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplETStringcOparticlepropertiescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOparticlepropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<TString,particleproperties,less<TString> >",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplETStringcOparticlepropertiescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOparticlepropertiesgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TString>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TString>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TString,less<int> >",117,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantKine*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantRichPhoton*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantMdc*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantTof*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantRpc*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantWall*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantEmc*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantStart*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HGeantFwDet*>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__GeantUtilDictLN_vectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HGeantHeader */
static void G__setup_memvarHGeantHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader));
   { HGeantHeader *p; p=(HGeantHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"eventID=",0,"GEANT event ID");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"beamEnergy=",0,"beam energy  (in AMeV)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"impactParameter=",0,"impact parameter  (in fm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eventPlane=",0,"event plane phi angle  (in deg)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantMedia */
static void G__setup_memvarHGeantMedia(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia));
   { HGeantMedia *p; p=(HGeantMedia*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR),G__defined_typename("map<Int_t,TString>"),-1,4,"media=",0,"List of GEANT media ");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgRcLcLiterator),-1,-1,4,"iter=",0,"! Iterator");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantKine */
static void G__setup_memvarHGeantKine(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine));
   { HGeantKine *p; p=(HGeantKine*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"richIndex=",0,"! internal index variables");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"mdcIndex=",0,"! used to set up linked chains");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"tofIndex=",0,"! of hit objects");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"rpcIndex=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"showIndex=",0,"! ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"wallIndex=",0,"! ");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"emcIndex=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"startIndex=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fwDetIndex=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pRich=",0,"! internal pointers to category");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pMdc=",0,"! used to set up linked chains");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pTof=",0,"! of hit objects");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pRpc=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pShow=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pWall=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pEmc=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pStart=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HCategory),-1,-1,4,"pFwDet=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"parentTrack=",0,"GEANT track number of parent particle");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"particleID=",0,"GEANT particle ID number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"mediumNumber=",0,"GEANT medium of creation number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"creationMechanism=",0,"GEANT creation mechanism number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"xVertex=",0,"x of track vertex  (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"yVertex=",0,"y");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"zVertex=",0,"z");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"xMom=",0,"x component of particle momentum (in MeV/c)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"yMom=",0,"y");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"zMom=",0,"z");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"generatorInfo=",0,"event generator info            PLUTO: SourceID : thermal (parentid + 500) or  decay code (example : pp->pppi0 ==> 141407)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"generatorInfo1=",0,"additional event generator info PLUTO: parentID");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"generatorInfo2=",0,"additional event generator info PLUTO: parentIndex");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"generatorWeight=",0,"associated weight");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstRichHit=",0,"index of first hit in RICH category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstMdcHit=",0,"index of first hit in MDC category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstTofHit=",0,"index of first hit in TOF category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstRpcHit=",0,"index of first hit in RPC category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstShowerHit=",0,"index of first hit in SHOWER category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstWallHit=",0,"index of first hit in WALL category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstEmcHit=",0,"index of first hit in EMC category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstStartHit=",0,"index of first hit in START category");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"firstFwDetHit=",0,"index of first hit in Forward Detector category");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"active=",0,"active flag (set if track participates in a hit)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"suppressed=",0,"flag used to filter out particle hits before digitization ");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"userVal=",0,"stores user specific values (for expample evtSeqnumber of PLUTO particles for embedding)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"acceptance=",0,"bit wise : 1-25 MDCLAYER 26-27 sys0/sys1 28-31 layer crop  highest bit : filled/not filled");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantRichPhoton */
static void G__setup_memvarHGeantRichPhoton(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton));
   { HGeantRichPhoton *p; p=(HGeantRichPhoton*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"parentTrack=",0,"GEANT track number of parent particle");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit (in mm) in pad plane");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit (in mm) in pad plane");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit=",0,"energy of Cherenkov photon (in eV)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"sector=",0,"sector number (0...5)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPmtId=",0,"Id of the PMT which is used for RICH700");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantRichDirect */
static void G__setup_memvarHGeantRichDirect(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect));
   { HGeantRichDirect *p; p=(HGeantRichDirect*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number of particle");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit (in mm) in pad plane");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit (in mm) in pad plane");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"zHit=",0,"z of hit (in mm) in pad plane");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"particleID=",0,"GEANT particle ID");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momentum=",0,"total momentum of particle (in MeV/c)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"thetaHit=",0,"theta of incidence (0-180 deg)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiHit=",0,"azimuthal angle (0-360 deg)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eLoss=",0,"energy loss (in MeV)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"trackLength=",0,"track length in gas detector (in mm)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"sector=",0,"sector number (0...5)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numPhot=",0,"dummy (not used)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fPmtId=",0,"Id of the PMT which is used for RICH700");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantRichMirror */
static void G__setup_memvarHGeantRichMirror(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror));
   { HGeantRichMirror *p; p=(HGeantRichMirror*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"numPhot=",0,"nb of photons reflected by mirror for lepton hit on mirror");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number of particle");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xRing=",0,"x position of ring (in mm) in pad plane");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yRing=",0,"y position of ring (in mm) in pad plane");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xLep=",0,"x of hit (in mm) on mirror");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yLep=",0,"y of hit (in mm) on mirror");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"zLep=",0,"z of hit (in mm) on mirror");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"lepID=",0,"GEANT particle ID");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"sector=",0,"sector number (0...5)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantMdc */
static void G__setup_memvarHGeantMdc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc));
   { HGeantMdc *p; p=(HGeantMdc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number (1...N)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit (in mm) in module coord. system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit (in mm) in module coord. system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"thetaHit=",0,"theta of hit (0-180 deg) in module coord. sys.");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiHit=",0,"phi of hit (0-360 deg) in module coord. sys.");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tofHit=",0,"time of flight of hit (in ns)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit=",0,"total momentum of hitting particle (in MeV/c)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"sector=",0,"sector number  (0...5)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"module=",0,"module number  (0...3)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"layer=",0,"layer number  (0...6, layer 6 = central cathode) ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantTof */
static void G__setup_memvarHGeantTof(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof));
   { HGeantTof *p; p=(HGeantTof*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"trackLength=",0,"track length  (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit=",0,"energy deposited  (in MeV)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit along scintillator rod (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit along scintillator rod (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tofHit=",0,"time of flight of hit  (in ns)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit=",0,"momentum of particle at hit  (in MeV/c)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"sector=",0,"sector number (0...5)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"module=",0,"module number (0...21, numbered in->out) + (22...25 for Tofino)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"cell=",0,"cell number (0...7, numbered in->out)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantRpc */
static void G__setup_memvarHGeantRpc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc));
   { HGeantRpc *p; p=(HGeantRpc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"trackLength=",0,"track length at the RPC gap/cell.                                   [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"loctrackLength=",0,"local track length (inside the gap/cell).                           [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit=",0,"energy deposited in the RPC gap/cell.                               [MeV]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x at the RPC gap/cell, in module ref. system (EBOX).                [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y at the RPC gap/cell, in module ref. system (EBOX).                [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"zHit=",0,"z at the RPC gap/cell, in module ref. system (EBOX).                [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tofHit=",0,"time of flight at the RPC gap/cell.                                 [ns]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit=",0,"momentum at the RPC gap/cell.                                       [MeV/c]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"thetaHit=",0,"polar angle at the RPC gap/cell, in module ref. system (EBOX).      [deg]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiHit=",0,"azimuthal angle at the RPC gap/cell, in module ref. system (EBOX).  [deg]");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"detectorID=",0,"detector ID (codified sector/column/cell/gap info)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"loctrackLength1=",0,"local track length (inside the gap).                                [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit1=",0,"energy deposited in the RPC gap.                                    [MeV]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit1=",0,"x at the RPC gap, in module ref. system (EBOX).                     [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit1=",0,"y at the RPC gap, in module ref. system (EBOX).                     [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit1=",0,"momentum at the RPC gap.                                            [MeV/c]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"loctrackLength2=",0,"local track length (inside the gap).                                [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit2=",0,"energy deposited in the RPC gap.                                    [MeV]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit2=",0,"x at the RPC gap, in module ref. system (EBOX).                     [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit2=",0,"y at the RPC gap, in module ref. system (EBOX).                     [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit2=",0,"momentum at the RPC gap.                                            [MeV/c]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"loctrackLength3=",0,"local track length (inside the gap).                                [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit3=",0,"energy deposited in the RPC gap.                                    [MeV]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit3=",0,"x at the RPC gap, in module ref. system (EBOX).                     [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit3=",0,"y at the RPC gap, in module ref. system (EBOX).                     [mm]");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit3=",0,"momentum at the RPC gap.                                            [MeV/c]");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,4,"HGeantRpc_version=",0,"! HGeantRpc class version when reading from file.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantEmc */
static void G__setup_memvarHGeantEmc(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc));
   { HGeantEmc *p; p=(HGeantEmc*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"trackLength=",0,"track length  (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"peHit=",0,"number of photo electrons");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit along crystal (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit along crystal (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"zHit=",0,"z of hit along crystal (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tofHit=",0,"time of flight of hit  (in ns)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit=",0,"total momentum of hitting particle (in MeV/c)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"sector=",0,"sector number (0...5)");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,4,"cell=",0,"crystal index (0...248 for standard geometry)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantWall */
static void G__setup_memvarHGeantWall(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall));
   { HGeantWall *p; p=(HGeantWall*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"trackLength=",0,"track length  (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit=",0,"energy deposited  (in MeV)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit in scintillator  (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit in scintillator  (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tofHit=",0,"time of flight of hit  (in ns)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit=",0,"momentum of particle at hit  (in MeV/c)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"module=",0,"module number (1...3) identifies size: 1=small,2=medium,3=big");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"cell=",0,"cell number (1...384)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantStart */
static void G__setup_memvarHGeantStart(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart));
   { HGeantStart *p; p=(HGeantStart*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit=",0,"energy deposited  (in MeV)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit in diamond (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit in diamond (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tofHit=",0,"time of flight of hit  (in ns)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"momHit=",0,"total momentum of hitting particle (in MeV/c)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"trackLength=",0,"track length  (in mm)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"cell=",0,"diamond index");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantFwDet */
static void G__setup_memvarHGeantFwDet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet));
   { HGeantFwDet *p; p=(HGeantFwDet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"module=",0,"module number (0...8)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"layer=",0,"layer number (0...8)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"cell=",0,"cell number inside module (0...999)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"subcell=",0,"subcell (0..8)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit  (in mm) in cell coord. system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit  (in mm) in cell coord. system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"zHit=",0,"z of hit  (in mm) in cell coord. system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pxHit=",0,"x component of hit momentum (in MeV/c)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pyHit=",0,"y component of hit momentum (in MeV/c)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"pzHit=",0,"z component of hit momentum (in MeV/c)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"tofHit=",0,"time of flight of hit (in ns)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"trackLength=",0,"track length (in mm)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit=",0,"energy deposited (in MeV)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGeantShower */
static void G__setup_memvarHGeantShower(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower));
   { HGeantShower *p; p=(HGeantShower*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"trackNumber=",0,"GEANT track number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"eHit=",0,"energy deposited  (in MeV)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"xHit=",0,"x of hit  (in mm) in module coord. system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"yHit=",0,"y of hit  (in mm) in module coord. system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"thetaHit=",0,"angle of incidence  (0-180 deg)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"phiHit=",0,"azimuthal angle  (0-360 deg)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"betaHit=",0,"beta of particle (=momentum/energy) ");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"sector=",0,"sector number  (0...5)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"module=",0,"module number  (0...2)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HKineSim */
static void G__setup_memvarHKineSim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HKineSim));
   { HKineSim *p; p=(HKineSim*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HIterator),-1,-1,4,"iter=",0,"Iterator over HGeant kine category");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_HLinearCategory),-1,-1,4,"fGeantKineCat=",0,"! HGeant kine date");
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GeantUtilDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGeantUtilDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHGeantHeader(void) {
   /* HGeantHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader));
   G__memfunc_setup("HGeantHeader",1152,G__GeantUtilDict_172_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGeantHeader",1152,G__GeantUtilDict_172_0_2, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader), -1, 0, 1, 1, 1, 0, "u 'HGeantHeader' - 1 - aHeader", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventId",1019,G__GeantUtilDict_172_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamEnergy",1323,G__GeantUtilDict_172_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - aEnergy", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setImpactParameter",1867,G__GeantUtilDict_172_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - aImpact", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventPlane",1342,G__GeantUtilDict_172_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - aPlane", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventId",1007,G__GeantUtilDict_172_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBeamEnergy",1311,G__GeantUtilDict_172_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getImpactParameter",1855,G__GeantUtilDict_172_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventPlane",1330,G__GeantUtilDict_172_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_172_0_13, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_172_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_172_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_172_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_172_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_172_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_172_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_172_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_172_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantHeader::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HGeantHeader", 1278, G__GeantUtilDict_172_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_172_0_26, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantHeader), -1, 1, 1, 1, 1, 0, "u 'HGeantHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantMedia(void) {
   /* HGeantMedia */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia));
   G__memfunc_setup("HGeantMedia",1047,G__GeantUtilDict_554_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"GeantMedia\"' name C - 'Char_t' 10 '\"List of Geant media\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addMedium",906,G__GeantUtilDict_554_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - - C - 'Char_t' 10 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMediumName",1314,G__GeantUtilDict_554_0_3, 117, G__get_linked_tagnum(&G__GeantUtilDictLN_TString), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMediumId",1102,G__GeantUtilDict_554_0_4, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__GeantUtilDict_554_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GeantUtilDict_554_0_6, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantMedia::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_554_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantMedia::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_554_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantMedia::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_554_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantMedia::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_554_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_554_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantMedia::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_554_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantMedia::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_554_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantMedia::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_554_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantMedia::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantMedia", 1047, G__GeantUtilDict_554_0_18, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia), -1, 0, 1, 1, 1, 0, "u 'HGeantMedia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantMedia", 1173, G__GeantUtilDict_554_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_554_0_20, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMedia), -1, 1, 1, 1, 1, 0, "u 'HGeantMedia' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantKine(void) {
   /* HGeantKine */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine));
   G__memfunc_setup("HGeantKine",958,G__GeantUtilDict_564_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGeantKine",958,G__GeantUtilDict_564_0_2, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 1, 1, 1, 0, "u 'HGeantKine' - 1 - aKine", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_564_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParticle",1152,G__GeantUtilDict_564_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - aTrack i - 'Int_t' 0 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCreator",1052,G__GeantUtilDict_564_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - aPar i - 'Int_t' 0 - aMed "
"i - 'Int_t' 0 - aMech", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVertex",970,G__GeantUtilDict_564_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - ax f - 'Float_t' 0 - ay "
"f - 'Float_t' 0 - az", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMomentum",1182,G__GeantUtilDict_564_0_7, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - apx f - 'Float_t' 0 - apy "
"f - 'Float_t' 0 - apz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGenerator",1267,G__GeantUtilDict_564_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - aInfo f - 'Float_t' 0 - aWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGenerator",1267,G__GeantUtilDict_564_0_9, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - aInfo f - 'Float_t' 0 - aInfo1 "
"f - 'Float_t' 0 - aInfo2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWeight",948,G__GeantUtilDict_564_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - aWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParticle",1140,G__GeantUtilDict_564_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - aTrack i - 'Int_t' 1 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCreator",1040,G__GeantUtilDict_564_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 1 - aPar i - 'Int_t' 1 - aMed "
"i - 'Int_t' 1 - aMech", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setID",473,G__GeantUtilDict_564_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMedium",941,G__GeantUtilDict_564_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aMed", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMechanism",1249,G__GeantUtilDict_564_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aMech", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertex",958,G__GeantUtilDict_564_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - ax f - 'Float_t' 1 - ay "
"f - 'Float_t' 1 - az", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertex",958,G__GeantUtilDict_564_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGeomVector' - 1 - ver", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDistFromVertex",1766,G__GeantUtilDict_564_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentum",1170,G__GeantUtilDict_564_0_19, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - apx f - 'Float_t' 1 - apy "
"f - 'Float_t' 1 - apz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__GeantUtilDict_564_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMedium",929,G__GeantUtilDict_564_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMechanism",1237,G__GeantUtilDict_564_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getID",461,G__GeantUtilDict_564_0_23, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParentTrack",1439,G__GeantUtilDict_564_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParentTrack",1451,G__GeantUtilDict_564_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNewTrackNumber",1748,G__GeantUtilDict_564_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTotalMomentum2",1736,G__GeantUtilDict_564_0_27, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTotalMomentum",1686,G__GeantUtilDict_564_0_28, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTransverseMomentum",2239,G__GeantUtilDict_564_0_29, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_564_0_30, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhiDeg",881,G__GeantUtilDict_564_0_31, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' labSys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getThetaDeg",1094,G__GeantUtilDict_564_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhiThetaDeg",1383,G__GeantUtilDict_564_0_33, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - theta f - 'Float_t' 1 - phi "
"g - 'Bool_t' 0 'kTRUE' labSys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getM",397,G__GeantUtilDict_564_0_34, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getE",389,G__GeantUtilDict_564_0_35, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEkin",711,G__GeantUtilDict_564_0_36, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRapidity",1158,G__GeantUtilDict_564_0_37, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentum",1170,G__GeantUtilDict_564_0_38, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGeomVector' - 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGenerator",1255,G__GeantUtilDict_564_0_39, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 1 - aInfo f - 'Float_t' 1 - aWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGenerator",1255,G__GeantUtilDict_564_0_40, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - aInfo f - 'Float_t' 1 - aInfo1 "
"f - 'Float_t' 1 - aInfo2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneratorInfo",1651,G__GeantUtilDict_564_0_41, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneratorInfo1",1700,G__GeantUtilDict_564_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneratorInfo2",1701,G__GeantUtilDict_564_0_43, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneratorWeight",1871,G__GeantUtilDict_564_0_44, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeneration",1356,G__GeantUtilDict_564_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 3, 1, 0, "U 'HGeantKine' - 0 - -", (char*)NULL, (void*) G__func2void( (Int_t (*)(HGeantKine*))(&HGeantKine::getGeneration) ), 0);
   G__memfunc_setup("getMothers",1058,G__GeantUtilDict_564_0_46, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"U 'HGeantKine' - 0 - - u 'vector<HGeantKine*,allocator<HGeantKine*> >' 'vector<HGeantKine*>' 1 - mothers", (char*)NULL, (void*) G__func2void( (Int_t (*)(HGeantKine*, vector<HGeantKine*>&))(&HGeantKine::getMothers) ), 0);
   G__memfunc_setup("getAllDaughters",1536,G__GeantUtilDict_564_0_47, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"U 'HGeantKine' - 0 - mother u 'vector<HGeantKine*,allocator<HGeantKine*> >' 'vector<HGeantKine*>' 1 - daughters", (char*)NULL, (void*) G__func2void( (Int_t (*)(HGeantKine*, vector<HGeantKine*>&))(&HGeantKine::getAllDaughters) ), 0);
   G__memfunc_setup("getDaughters",1255,G__GeantUtilDict_564_0_48, 105, -1, G__defined_typename("Int_t"), 0, 2, 3, 1, 0, 
"U 'HGeantKine' - 0 - mother u 'vector<HGeantKine*,allocator<HGeantKine*> >' 'vector<HGeantKine*>' 1 - daughters", (char*)NULL, (void*) G__func2void( (Int_t (*)(HGeantKine*, vector<HGeantKine*>&))(&HGeantKine::getDaughters) ), 0);
   G__memfunc_setup("getChargedDecayDaughter",2312,G__GeantUtilDict_564_0_49, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 1, 3, 1, 0, "U 'HGeantKine' - 0 - mother", (char*)NULL, (void*) G__func2void( (HGeantKine* (*)(HGeantKine*))(&HGeantKine::getChargedDecayDaughter) ), 0);
   G__memfunc_setup("setActive",936,G__GeantUtilDict_564_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSuppressed",1402,G__GeantUtilDict_564_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setUserVal",1038,G__GeantUtilDict_564_0_52, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActive",824,G__GeantUtilDict_564_0_53, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPrimary",960,G__GeantUtilDict_564_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSuppressed",1290,G__GeantUtilDict_564_0_55, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUserVal",1026,G__GeantUtilDict_564_0_56, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasAncestor",1147,G__GeantUtilDict_564_0_57, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - track U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printHistory",1311,G__GeantUtilDict_564_0_58, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__GeantUtilDict_564_0_59, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isBugInfo",902,G__GeantUtilDict_564_0_60, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isExternalSource",1680,G__GeantUtilDict_564_0_61, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isThermalSource",1562,G__GeantUtilDict_564_0_62, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSameExternalSource",2070,G__GeantUtilDict_564_0_63, 103, -1, G__defined_typename("Bool_t"), 0, 2, 3, 1, 0, 
"U 'HGeantKine' - 0 - kine1 U 'HGeantKine' - 0 - kine2", (char*)NULL, (void*) G__func2void( (Bool_t (*)(HGeantKine*, HGeantKine*))(&HGeantKine::isSameExternalSource) ), 0);
   G__memfunc_setup("isSameExternalSource",2070,G__GeantUtilDict_564_0_64, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HGeantKine' - 0 - kine1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChainActive",1419,G__GeantUtilDict_564_0_65, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - track g - 'Bool_t' 0 'kTRUE' flag "
"U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Bool_t, HLinearCategory*))(&HGeantKine::setChainActive) ), 0);
   G__memfunc_setup("setAllDescendentsActive",2353,G__GeantUtilDict_564_0_66, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - track g - 'Bool_t' 0 'kTRUE' flag "
"U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Bool_t, HLinearCategory*))(&HGeantKine::setAllDescendentsActive) ), 0);
   G__memfunc_setup("setAllDescendentsSuppressed",2819,G__GeantUtilDict_564_0_67, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - track g - 'Bool_t' 0 'kTRUE' flag "
"U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Bool_t, HLinearCategory*))(&HGeantKine::setAllDescendentsSuppressed) ), 0);
   G__memfunc_setup("getParent",938,G__GeantUtilDict_564_0_68, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - track U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (HGeantKine* (*)(Int_t, HLinearCategory*))(&HGeantKine::getParent) ), 0);
   G__memfunc_setup("getGrandParent",1430,G__GeantUtilDict_564_0_69, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - track U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (HGeantKine* (*)(Int_t, HLinearCategory*))(&HGeantKine::getGrandParent) ), 0);
   G__memfunc_setup("getPrimary",1060,G__GeantUtilDict_564_0_70, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 2, 3, 1, 0, 
"i - 'Int_t' 0 - track U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (HGeantKine* (*)(Int_t, HLinearCategory*))(&HGeantKine::getPrimary) ), 0);
   G__memfunc_setup("getCommonAncestor",1768,G__GeantUtilDict_564_0_71, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - track1 i - 'Int_t' 0 - track2 "
"U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (HGeantKine* (*)(Int_t, Int_t, HLinearCategory*))(&HGeantKine::getCommonAncestor) ), 0);
   G__memfunc_setup("suppressTracks",1517,G__GeantUtilDict_564_0_72, 103, -1, G__defined_typename("Bool_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - id f - 'Float_t' 0 - acceptedFraction "
"U 'HLinearCategory' - 0 '0' cat", (char*)NULL, (void*) G__func2void( (Bool_t (*)(Int_t, Float_t, HLinearCategory*))(&HGeantKine::suppressTracks) ), 0);
   G__memfunc_setup("setRichHitIndex",1519,G__GeantUtilDict_564_0_73, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMdcHitIndex",1405,G__GeantUtilDict_564_0_74, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTofHitIndex",1426,G__GeantUtilDict_564_0_75, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRpcHitIndex",1422,G__GeantUtilDict_564_0_76, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setShowerHitIndex",1761,G__GeantUtilDict_564_0_77, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWallHitIndex",1529,G__GeantUtilDict_564_0_78, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmcHitIndex",1406,G__GeantUtilDict_564_0_79, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStartHitIndex",1655,G__GeantUtilDict_564_0_80, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFwDetHitIndex",1603,G__GeantUtilDict_564_0_81, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRichHits",1196,G__GeantUtilDict_564_0_82, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "return number of hits in list", (void*) NULL, 0);
   G__memfunc_setup("getFirstRichHit",1523,G__GeantUtilDict_564_0_83, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNMdcHits",1082,G__GeantUtilDict_564_0_84, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstMdcHit",1409,G__GeantUtilDict_564_0_85, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNMdcHits",1082,G__GeantUtilDict_564_0_86, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - module", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNTofHits",1103,G__GeantUtilDict_564_0_87, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstTofHit",1430,G__GeantUtilDict_564_0_88, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRpcHits",1099,G__GeantUtilDict_564_0_89, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstRpcHit",1426,G__GeantUtilDict_564_0_90, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNShowerHits",1438,G__GeantUtilDict_564_0_91, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstShowerHit",1765,G__GeantUtilDict_564_0_92, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNWallHits",1206,G__GeantUtilDict_564_0_93, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstWallHit",1533,G__GeantUtilDict_564_0_94, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNEmcHits",1083,G__GeantUtilDict_564_0_95, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstEmcHit",1410,G__GeantUtilDict_564_0_96, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNStartHits",1332,G__GeantUtilDict_564_0_97, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstStartHit",1659,G__GeantUtilDict_564_0_98, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNFwDetHits",1280,G__GeantUtilDict_564_0_99, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFirstFwDetHit",1607,G__GeantUtilDict_564_0_100, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRichHits",1118,G__GeantUtilDict_564_0_101, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantRichPhoton*,allocator<HGeantRichPhoton*> >' 'vector<HGeantRichPhoton*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMdcHits",1004,G__GeantUtilDict_564_0_102, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantMdc*,allocator<HGeantMdc*> >' 'vector<HGeantMdc*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTofHits",1025,G__GeantUtilDict_564_0_103, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantTof*,allocator<HGeantTof*> >' 'vector<HGeantTof*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRpcHits",1021,G__GeantUtilDict_564_0_104, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantRpc*,allocator<HGeantRpc*> >' 'vector<HGeantRpc*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getWallHits",1128,G__GeantUtilDict_564_0_105, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantWall*,allocator<HGeantWall*> >' 'vector<HGeantWall*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEmcHits",1005,G__GeantUtilDict_564_0_106, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantEmc*,allocator<HGeantEmc*> >' 'vector<HGeantEmc*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStartHits",1254,G__GeantUtilDict_564_0_107, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantStart*,allocator<HGeantStart*> >' 'vector<HGeantStart*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFwDetHits",1202,G__GeantUtilDict_564_0_108, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'vector<HGeantFwDet*,allocator<HGeantFwDet*> >' 'vector<HGeantFwDet*>' 1 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstRichHit",1535,G__GeantUtilDict_564_0_109, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstMdcHit",1421,G__GeantUtilDict_564_0_110, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstTofHit",1442,G__GeantUtilDict_564_0_111, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstRpcHit",1438,G__GeantUtilDict_564_0_112, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstShowerHit",1777,G__GeantUtilDict_564_0_113, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstWallHit",1545,G__GeantUtilDict_564_0_114, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstEmcHit",1422,G__GeantUtilDict_564_0_115, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFirstStartHit",1671,G__GeantUtilDict_564_0_116, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sortRichHits",1254,G__GeantUtilDict_564_0_117, 121, -1, -1, 0, 0, 1, 1, 0, "", "sort hits in list", (void*) NULL, 0);
   G__memfunc_setup("sortMdcHits",1140,G__GeantUtilDict_564_0_118, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sortTofHits",1161,G__GeantUtilDict_564_0_119, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sortRpcHits",1157,G__GeantUtilDict_564_0_120, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sortShowerHits",1496,G__GeantUtilDict_564_0_121, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("sortWallHits",1264,G__GeantUtilDict_564_0_122, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInAcceptance",1402,G__GeantUtilDict_564_0_123, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 '4' m0 i - 'Int_t' 0 '4' m1 "
"i - 'Int_t' 0 '4' m2 i - 'Int_t' 0 '4' m3 "
"i - 'Int_t' 0 '1' sys0 i - 'Int_t' 0 '1' sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInAcceptanceDecay",1888,G__GeantUtilDict_564_0_124, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - m0 i - 'Int_t' 0 - m1 "
"i - 'Int_t' 0 - m2 i - 'Int_t' 0 - m3 "
"i - 'Int_t' 0 - sys0 i - 'Int_t' 0 - sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInAcceptanceBit",1689,G__GeantUtilDict_564_0_125, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 '4' m0 i - 'Int_t' 0 '4' m1 "
"i - 'Int_t' 0 '4' m2 i - 'Int_t' 0 '4' m3 "
"i - 'Int_t' 0 '1' sys0 i - 'Int_t' 0 '1' sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInAcceptanceDecayBit",2175,G__GeantUtilDict_564_0_126, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - m0 i - 'Int_t' 0 - m1 "
"i - 'Int_t' 0 - m2 i - 'Int_t' 0 - m3 "
"i - 'Int_t' 0 - sys0 i - 'Int_t' 0 - sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHits",806,G__GeantUtilDict_564_0_127, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 1 - m0 i - 'Int_t' 1 - m1 "
"i - 'Int_t' 1 - m2 i - 'Int_t' 1 - m3 "
"i - 'Int_t' 1 - sys0 i - 'Int_t' 1 - sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsDecay",1292,G__GeantUtilDict_564_0_128, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 1 - m0 i - 'Int_t' 1 - m1 "
"i - 'Int_t' 1 - m2 i - 'Int_t' 1 - m3 "
"i - 'Int_t' 1 - sys0 i - 'Int_t' 1 - sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsBit",1093,G__GeantUtilDict_564_0_129, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 1 - m0 i - 'Int_t' 1 - m1 "
"i - 'Int_t' 1 - m2 i - 'Int_t' 1 - m3 "
"i - 'Int_t' 1 - sys0 i - 'Int_t' 1 - sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNHitsDecayBit",1579,G__GeantUtilDict_564_0_130, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 1 - m0 i - 'Int_t' 1 - m1 "
"i - 'Int_t' 1 - m2 i - 'Int_t' 1 - m3 "
"i - 'Int_t' 1 - sys0 i - 'Int_t' 1 - sys1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSystem",965,G__GeantUtilDict_564_0_131, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSectorFromBitArray",2146,G__GeantUtilDict_564_0_132, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMdcSectorBitArray",2018,G__GeantUtilDict_564_0_133, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMdcSectorDecimalArray",2418,G__GeantUtilDict_564_0_134, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getShowerSectorBitArray",2374,G__GeantUtilDict_564_0_135, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getShowerSectorDecimalArray",2774,G__GeantUtilDict_564_0_136, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTofSectorBitArray",2039,G__GeantUtilDict_564_0_137, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTofSectorDecimalArray",2439,G__GeantUtilDict_564_0_138, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRpcSectorBitArray",2035,G__GeantUtilDict_564_0_139, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRpcSectorDecimalArray",2435,G__GeantUtilDict_564_0_140, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRichSectorBitArray",2132,G__GeantUtilDict_564_0_141, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRichSectorDecimalArray",2532,G__GeantUtilDict_564_0_142, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSectorBitArray",1742,G__GeantUtilDict_564_0_143, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSectorDecimalArray",2142,G__GeantUtilDict_564_0_144, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextRichHit",1130,G__GeantUtilDict_564_0_145, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextMdcHit",1016,G__GeantUtilDict_564_0_146, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextTofHit",1037,G__GeantUtilDict_564_0_147, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextRpcHit",1033,G__GeantUtilDict_564_0_148, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextShowerHit",1372,G__GeantUtilDict_564_0_149, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextWallHit",1140,G__GeantUtilDict_564_0_150, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextEmcHit",1017,G__GeantUtilDict_564_0_151, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextStartHit",1266,G__GeantUtilDict_564_0_152, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextFwDetHit",1214,G__GeantUtilDict_564_0_153, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRichCategory",1552,G__GeantUtilDict_564_0_154, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMdcCategory",1438,G__GeantUtilDict_564_0_155, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTofCategory",1459,G__GeantUtilDict_564_0_156, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRpcCategory",1455,G__GeantUtilDict_564_0_157, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setShowerCategory",1794,G__GeantUtilDict_564_0_158, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWallCategory",1562,G__GeantUtilDict_564_0_159, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmcCategory",1439,G__GeantUtilDict_564_0_160, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStartCategory",1688,G__GeantUtilDict_564_0_161, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFwDetCategory",1636,G__GeantUtilDict_564_0_162, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HCategory' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetRichIter",1341,G__GeantUtilDict_564_0_163, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetMdcIter",1227,G__GeantUtilDict_564_0_164, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetTofIter",1248,G__GeantUtilDict_564_0_165, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetRpcIter",1244,G__GeantUtilDict_564_0_166, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetShowerIter",1583,G__GeantUtilDict_564_0_167, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetWallIter",1351,G__GeantUtilDict_564_0_168, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetEmcIter",1228,G__GeantUtilDict_564_0_169, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetStartIter",1477,G__GeantUtilDict_564_0_170, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetFwDetIter",1425,G__GeantUtilDict_564_0_171, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayers",956,G__GeantUtilDict_564_0_172, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - io h - 'UInt_t' 0 - layers", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayer",841,G__GeantUtilDict_564_0_173, 121, -1, -1, 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - io h - 'UInt_t' 0 - lay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unsetAllLayers",1464,G__GeantUtilDict_564_0_174, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayer",841,G__GeantUtilDict_564_0_175, 121, -1, -1, 0, 3, 3, 1, 0, 
"h - 'UInt_t' 0 - io h - 'UInt_t' 0 - lay "
"h - 'UInt_t' 1 - layers", (char*)NULL, (void*) G__func2void( (void (*)(UInt_t, UInt_t, UInt_t&))(&HGeantKine::setLayer) ), 0);
   G__memfunc_setup("getLayer",829,G__GeantUtilDict_564_0_176, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - io h - 'UInt_t' 0 - lay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasLayers",940,G__GeantUtilDict_564_0_177, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"h - 'UInt_t' 0 - io h - 'UInt_t' 0 - layerstest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLayer",907,G__GeantUtilDict_564_0_178, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - io", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLayerMod",1195,G__GeantUtilDict_564_0_179, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - mod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printLayers",1181,G__GeantUtilDict_564_0_180, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSys",651,G__GeantUtilDict_564_0_181, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unsetSys",878,G__GeantUtilDict_564_0_182, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSys",639,G__GeantUtilDict_564_0_183, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - sys", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAtMdcEdge",1162,G__GeantUtilDict_564_0_184, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unsetAtMdcEdge",1389,G__GeantUtilDict_564_0_185, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAtMdcEdge",1050,G__GeantUtilDict_564_0_186, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAtAnyMdcEdge",1346,G__GeantUtilDict_564_0_187, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "h - 'UInt_t' 0 '2' io", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCropedFilled",1529,G__GeantUtilDict_564_0_188, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unsetCropedFilled",1756,G__GeantUtilDict_564_0_189, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isCropedFilled",1417,G__GeantUtilDict_564_0_190, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAcceptanceFilled",1923,G__GeantUtilDict_564_0_191, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("unsetAcceptanceFilled",2150,G__GeantUtilDict_564_0_192, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isAcceptanceFilled",1811,G__GeantUtilDict_564_0_193, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillAcceptanceBit",1709,G__GeantUtilDict_564_0_194, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHitIndex",1129,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 4, 0, 
"U 'HCategory' - 0 - p s - 'Short_t' 1 - first "
"i - 'Int_t' 0 - index", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("nextHit",740,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HLinkedDataObject), -1, 0, 2, 1, 4, 0, 
"U 'HCategory' - 0 - p i - 'Int_t' 1 - next", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GeantUtilDict_564_0_197, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantKine::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_564_0_198, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantKine::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_564_0_199, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantKine::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_564_0_200, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantKine::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_564_0_204, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_564_0_205, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantKine::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_564_0_206, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantKine::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_564_0_207, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantKine::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_564_0_208, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantKine::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HGeantKine", 1084, G__GeantUtilDict_564_0_209, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_564_0_210, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 1, 1, 1, 1, 0, "u 'HGeantKine' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantRichPhoton(void) {
   /* HGeantRichPhoton */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton));
   G__memfunc_setup("HGeantRichPhoton",1589,G__GeantUtilDict_591_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGeantRichPhoton",1589,G__GeantUtilDict_591_0_2, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton), -1, 0, 1, 1, 1, 0, "u 'HGeantRichPhoton' - 11 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_591_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_591_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - ax f - 'Float_t' 0 - ay "
"f - 'Float_t' 0 - ae", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_591_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPmtId",810,G__GeantUtilDict_591_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_591_0_8, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - ax f - 'Float_t' 1 - ay "
"f - 'Float_t' 1 - ae", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergy",938,G__GeantUtilDict_591_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__GeantUtilDict_591_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__GeantUtilDict_591_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_591_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getPmtId",798,G__GeantUtilDict_591_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNewRich",908,G__GeantUtilDict_591_0_16, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GeantUtilDict_591_0_17, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantRichPhoton::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_591_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichPhoton::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_591_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantRichPhoton::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_591_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantRichPhoton::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_591_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_591_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichPhoton::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_591_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRichPhoton::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_591_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichPhoton::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_591_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRichPhoton::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HGeantRichPhoton", 1715, G__GeantUtilDict_591_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_591_0_30, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichPhoton), -1, 1, 1, 1, 1, 0, "u 'HGeantRichPhoton' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantRichDirect(void) {
   /* HGeantRichDirect */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect));
   G__memfunc_setup("HGeantRichDirect",1560,G__GeantUtilDict_592_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_592_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_592_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - aTrack i - 'Int_t' 0 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_592_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - ax f - 'Float_t' 0 - ay "
"f - 'Float_t' 0 - az", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMomentum",1182,G__GeantUtilDict_592_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - aMom f - 'Float_t' 0 - aTheta "
"f - 'Float_t' 0 - aPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setELoss",818,G__GeantUtilDict_592_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - ae f - 'Float_t' 0 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_592_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumPhot",1047,G__GeantUtilDict_592_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPmtId",810,G__GeantUtilDict_592_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - pmtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__GeantUtilDict_592_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - aTrack i - 'Int_t' 1 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_592_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - ax f - 'Float_t' 1 - ay "
"f - 'Float_t' 1 - az", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentum",1170,G__GeantUtilDict_592_0_13, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - aMom f - 'Float_t' 1 - aTheta "
"f - 'Float_t' 1 - aPhi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getELoss",806,G__GeantUtilDict_592_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 1 - ade f - 'Float_t' 1 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__GeantUtilDict_592_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__GeantUtilDict_592_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTheta",822,G__GeantUtilDict_592_0_17, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhi",609,G__GeantUtilDict_592_0_18, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEnergyLoss",1355,G__GeantUtilDict_592_0_19, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackLengthInPhotDet",2310,G__GeantUtilDict_592_0_20, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_592_0_21, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getNumPhot",1035,G__GeantUtilDict_592_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPmtId",798,G__GeantUtilDict_592_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNewRich",908,G__GeantUtilDict_592_0_26, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GeantUtilDict_592_0_27, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantRichDirect::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_592_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichDirect::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_592_0_29, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantRichDirect::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_592_0_30, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantRichDirect::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_592_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_592_0_35, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichDirect::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_592_0_36, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRichDirect::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_592_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichDirect::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_592_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRichDirect::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantRichDirect", 1560, G__GeantUtilDict_592_0_39, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect), -1, 0, 1, 1, 1, 0, "u 'HGeantRichDirect' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantRichDirect", 1686, G__GeantUtilDict_592_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_592_0_41, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichDirect), -1, 1, 1, 1, 1, 0, "u 'HGeantRichDirect' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantRichMirror(void) {
   /* HGeantRichMirror */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror));
   G__memfunc_setup("HGeantRichMirror",1592,G__GeantUtilDict_593_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_593_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_593_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - aTrack i - 'Int_t' 0 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_593_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - ax f - 'Float_t' 0 - ay "
"f - 'Float_t' 0 - az", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_593_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNumPhot",1047,G__GeantUtilDict_593_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXRing",820,G__GeantUtilDict_593_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - xCoor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setYRing",821,G__GeantUtilDict_593_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - yCoor", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setXYring",941,G__GeantUtilDict_593_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 10 - ax f - 'Float_t' 10 - ay", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__GeantUtilDict_593_0_10, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - aTrack i - 'Int_t' 1 - aID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_593_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 1 - ax f - 'Float_t' 1 - ay "
"f - 'Float_t' 1 - az", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__GeantUtilDict_593_0_13, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__GeantUtilDict_593_0_14, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXRing",808,G__GeantUtilDict_593_0_15, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYRing",809,G__GeantUtilDict_593_0_16, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_593_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getNumPhot",1035,G__GeantUtilDict_593_0_20, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GeantUtilDict_593_0_21, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantRichMirror::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_593_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichMirror::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_593_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantRichMirror::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_593_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantRichMirror::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_593_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_593_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichMirror::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_593_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRichMirror::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_593_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRichMirror::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_593_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRichMirror::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantRichMirror", 1592, G__GeantUtilDict_593_0_33, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror), -1, 0, 1, 1, 1, 0, "u 'HGeantRichMirror' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantRichMirror", 1718, G__GeantUtilDict_593_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_593_0_35, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRichMirror), -1, 1, 1, 1, 1, 0, "u 'HGeantRichMirror' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantMdc(void) {
   /* HGeantMdc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc));
   G__memfunc_setup("HGeantMdc",843,G__GeantUtilDict_594_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_594_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_594_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - ax f - 'Float_t' 0 - ay "
"f - 'Float_t' 0 - atof f - 'Float_t' 0 - ptof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIncidence",1230,G__GeantUtilDict_594_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - ath f - 'Float_t' 0 - aph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_594_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"c - 'Char_t' 0 - s c - 'Char_t' 0 - m "
"c - 'Char_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getTof",617,G__GeantUtilDict_594_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__GeantUtilDict_594_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__GeantUtilDict_594_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTheta",822,G__GeantUtilDict_594_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPhi",609,G__GeantUtilDict_594_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMomentum",1170,G__GeantUtilDict_594_0_12, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_594_0_13, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 1 - ax f - 'Float_t' 1 - ay "
"f - 'Float_t' 1 - atof f - 'Float_t' 1 - ptof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIncidence",1218,G__GeantUtilDict_594_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 1 - ath f - 'Float_t' 1 - aph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_594_0_15, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__GeantUtilDict_594_0_16, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayer",829,G__GeantUtilDict_594_0_17, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_594_0_20, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantMdc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_594_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantMdc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_594_0_22, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantMdc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_594_0_23, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantMdc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_594_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_594_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantMdc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_594_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantMdc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_594_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantMdc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_594_0_31, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantMdc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantMdc", 843, G__GeantUtilDict_594_0_32, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc), -1, 0, 1, 1, 1, 0, "u 'HGeantMdc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantMdc", 969, G__GeantUtilDict_594_0_33, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_594_0_34, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantMdc), -1, 1, 1, 1, 1, 0, "u 'HGeantMdc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantTof(void) {
   /* HGeantTof */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof));
   G__memfunc_setup("HGeantTof",864,G__GeantUtilDict_595_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_595_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_595_0_3, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 - ae f - 'Float_t' 0 - ax "
"f - 'Float_t' 0 - ay f - 'Float_t' 0 - atof "
"f - 'Float_t' 0 - amom f - 'Float_t' 0 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_595_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"c - 'Char_t' 0 - s c - 'Char_t' 0 - m "
"c - 'Char_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_595_0_6, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 1 - ae f - 'Float_t' 1 - ax "
"f - 'Float_t' 1 - ay f - 'Float_t' 1 - atof "
"f - 'Float_t' 1 - amom f - 'Float_t' 1 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_595_0_7, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__GeantUtilDict_595_0_8, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__GeantUtilDict_595_0_9, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_595_0_12, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantTof::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_595_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantTof::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_595_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantTof::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_595_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantTof::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_595_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_595_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantTof::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_595_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantTof::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_595_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantTof::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_595_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantTof::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantTof", 864, G__GeantUtilDict_595_0_24, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof), -1, 0, 1, 1, 1, 0, "u 'HGeantTof' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantTof", 990, G__GeantUtilDict_595_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_595_0_26, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantTof), -1, 1, 1, 1, 1, 0, "u 'HGeantTof' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantRpc(void) {
   /* HGeantRpc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc));
   G__memfunc_setup("HGeantRpc",860,G__GeantUtilDict_596_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_596_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - atrackNumber", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDetectorID",1299,G__GeantUtilDict_596_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - adetectorID", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_596_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - sec i - 'Int_t' 0 - col "
"i - 'Int_t' 0 - cel i - 'Int_t' 0 - gap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVersion",1074,G__GeantUtilDict_596_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aHGeantRpc_version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIncidence",1230,G__GeantUtilDict_596_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - athetaHit f - 'Float_t' 0 - aphiHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_596_0_7, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 - axHit f - 'Float_t' 0 - ayHit "
"f - 'Float_t' 0 - azHit f - 'Float_t' 0 - atofHit "
"f - 'Float_t' 0 - amomHit f - 'Float_t' 0 - eHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTLength",1026,G__GeantUtilDict_596_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - atracklength f - 'Float_t' 0 - aloctracklength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_596_0_9, 121, -1, -1, 0, 7, 1, 1, 0, 
"f - 'Float_t' 0 - axHit f - 'Float_t' 0 - ayHit "
"f - 'Float_t' 0 - azHit f - 'Float_t' 0 - atofHit "
"f - 'Float_t' 0 - amomHit f - 'Float_t' 0 - eHit "
"f - 'Float_t' 0 - aloctracklength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setGap",612,G__GeantUtilDict_596_0_10, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - nGap f - 'Float_t' 0 - axHit "
"f - 'Float_t' 0 - ayHit f - 'Float_t' 0 - amomHit "
"f - 'Float_t' 0 - eHit f - 'Float_t' 0 - aloctrackLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTLengthHit",1319,G__GeantUtilDict_596_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - atrackLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZHit",715,G__GeantUtilDict_596_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - azHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTofHit",922,G__GeantUtilDict_596_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - atofHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_596_0_14, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getColumn",942,G__GeantUtilDict_596_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__GeantUtilDict_596_0_16, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGap",600,G__GeantUtilDict_596_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getDetectorID",1287,G__GeantUtilDict_596_0_19, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getVersion",1062,G__GeantUtilDict_596_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIncidence",1218,G__GeantUtilDict_596_0_23, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 1 - athetaHit f - 'Float_t' 1 - aphiHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTLength",1014,G__GeantUtilDict_596_0_24, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 1 - atracklength f - 'Float_t' 1 - aloctracklength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_596_0_25, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - ayHit "
"f - 'Float_t' 1 - azHit f - 'Float_t' 1 - atofHit "
"f - 'Float_t' 1 - amomHit f - 'Float_t' 1 - aeHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getlocTLengthGap",1612,G__GeantUtilDict_596_0_26, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nGap", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGap",600,G__GeantUtilDict_596_0_27, 121, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - nGap f - 'Float_t' 1 - axHit "
"f - 'Float_t' 1 - ayHit f - 'Float_t' 1 - amomHit "
"f - 'Float_t' 1 - aeHit f - 'Float_t' 1 - aloctrackLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGap",600,G__GeantUtilDict_596_0_28, 121, -1, -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - nGap f - 'Float_t' 1 - axHit "
"f - 'Float_t' 1 - ayHit f - 'Float_t' 1 - amomHit "
"f - 'Float_t' 1 - aeHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGap",600,G__GeantUtilDict_596_0_29, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - nGap f - 'Float_t' 1 - axHit "
"f - 'Float_t' 1 - ayHit f - 'Float_t' 1 - amomHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTLengthHit",1307,G__GeantUtilDict_596_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZHit",703,G__GeantUtilDict_596_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTofHit",910,G__GeantUtilDict_596_0_32, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_596_0_33, 121, -1, -1, 0, 7, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - ayHit "
"f - 'Float_t' 1 - azHit f - 'Float_t' 1 - atofHit "
"f - 'Float_t' 1 - amomHit f - 'Float_t' 1 - aeHit "
"f - 'Float_t' 1 - aloctrackLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_596_0_34, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - ayHit "
"f - 'Float_t' 1 - azHit f - 'Float_t' 1 - atofHit "
"f - 'Float_t' 1 - amomHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_596_0_35, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - ayHit "
"f - 'Float_t' 1 - azHit f - 'Float_t' 1 - atofHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitDigi",994,G__GeantUtilDict_596_0_36, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - atofHit "
"f - 'Float_t' 1 - amomHit f - 'Float_t' 1 - aloctrackLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellAverage",1403,G__GeantUtilDict_596_0_37, 121, -1, -1, 0, 8, 1, 1, 0, 
"f - 'Float_t' 0 - gap f - 'Float_t' 1 - axHit "
"f - 'Float_t' 1 - ayHit f - 'Float_t' 1 - azHit "
"f - 'Float_t' 1 - atofHit f - 'Float_t' 1 - amomHit "
"f - 'Float_t' 1 - aeHit f - 'Float_t' 1 - aloctrackLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellAverage",1403,G__GeantUtilDict_596_0_38, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - ayHit "
"f - 'Float_t' 1 - azHit f - 'Float_t' 1 - atofHit "
"f - 'Float_t' 1 - amomHit f - 'Float_t' 1 - aeHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellAverage",1403,G__GeantUtilDict_596_0_39, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - ayHit "
"f - 'Float_t' 1 - azHit f - 'Float_t' 1 - atofHit "
"f - 'Float_t' 1 - amomHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellAverage",1403,G__GeantUtilDict_596_0_40, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 1 - axHit f - 'Float_t' 1 - ayHit "
"f - 'Float_t' 1 - azHit f - 'Float_t' 1 - atofHit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCellAverageDigi",1784,G__GeantUtilDict_596_0_41, 121, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - gap f - 'Float_t' 1 - axHit "
"f - 'Float_t' 1 - atofHit f - 'Float_t' 1 - amomHit "
"f - 'Float_t' 1 - aloctrackLength", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GeantUtilDict_596_0_42, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantRpc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_596_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRpc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_596_0_44, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantRpc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_596_0_45, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantRpc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_596_0_49, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_596_0_50, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRpc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_596_0_51, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRpc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_596_0_52, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantRpc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_596_0_53, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantRpc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantRpc", 860, G__GeantUtilDict_596_0_54, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc), -1, 0, 1, 1, 1, 0, "u 'HGeantRpc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantRpc", 986, G__GeantUtilDict_596_0_55, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_596_0_56, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantRpc), -1, 1, 1, 1, 1, 0, "u 'HGeantRpc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantEmc(void) {
   /* HGeantEmc */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc));
   G__memfunc_setup("HGeantEmc",844,G__GeantUtilDict_597_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_597_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_597_0_3, 121, -1, -1, 0, 7, 1, 1, 0, 
"f - 'Float_t' 0 - ae f - 'Float_t' 0 - ax "
"f - 'Float_t' 0 - ay f - 'Float_t' 0 - az "
"f - 'Float_t' 0 - atof f - 'Float_t' 0 - amom "
"f - 'Float_t' 0 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_597_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - s i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_597_0_6, 121, -1, -1, 0, 7, 1, 1, 0, 
"f - 'Float_t' 1 - ae f - 'Float_t' 1 - ax "
"f - 'Float_t' 1 - ay f - 'Float_t' 1 - az "
"f - 'Float_t' 1 - atof f - 'Float_t' 1 - amom "
"f - 'Float_t' 1 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_597_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__GeantUtilDict_597_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_597_0_11, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantEmc::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_597_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantEmc::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_597_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantEmc::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_597_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantEmc::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_597_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_597_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantEmc::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_597_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantEmc::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_597_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantEmc::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_597_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantEmc::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantEmc", 844, G__GeantUtilDict_597_0_23, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc), -1, 0, 1, 1, 1, 0, "u 'HGeantEmc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantEmc", 970, G__GeantUtilDict_597_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_597_0_25, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantEmc), -1, 1, 1, 1, 1, 0, "u 'HGeantEmc' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantWall(void) {
   /* HGeantWall */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall));
   G__memfunc_setup("HGeantWall",967,G__GeantUtilDict_598_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_598_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_598_0_3, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 - ae f - 'Float_t' 0 - ax "
"f - 'Float_t' 0 - ay f - 'Float_t' 0 - atof "
"f - 'Float_t' 0 - amom f - 'Float_t' 0 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_598_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"c - 'Char_t' 0 - m i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_598_0_6, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 1 - ae f - 'Float_t' 1 - ax "
"f - 'Float_t' 1 - ay f - 'Float_t' 1 - atof "
"f - 'Float_t' 1 - amom f - 'Float_t' 1 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__GeantUtilDict_598_0_7, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__GeantUtilDict_598_0_8, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_598_0_11, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantWall::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_598_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantWall::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_598_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantWall::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_598_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantWall::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_598_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_598_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantWall::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_598_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantWall::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_598_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantWall::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_598_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantWall::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantWall", 967, G__GeantUtilDict_598_0_23, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall), -1, 0, 1, 1, 1, 0, "u 'HGeantWall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantWall", 1093, G__GeantUtilDict_598_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_598_0_25, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantWall), -1, 1, 1, 1, 1, 0, "u 'HGeantWall' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantStart(void) {
   /* HGeantStart */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart));
   G__memfunc_setup("HGeantStart",1093,G__GeantUtilDict_599_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_599_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_599_0_3, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 0 - ae f - 'Float_t' 0 - ax "
"f - 'Float_t' 0 - ay f - 'Float_t' 0 - atof "
"f - 'Float_t' 0 - amom f - 'Float_t' 0 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCell",716,G__GeantUtilDict_599_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "c - 'Char_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_599_0_6, 121, -1, -1, 0, 6, 1, 1, 0, 
"f - 'Float_t' 1 - ae f - 'Float_t' 1 - ax "
"f - 'Float_t' 1 - ay f - 'Float_t' 1 - atof "
"f - 'Float_t' 1 - amom f - 'Float_t' 1 - alen", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCell",704,G__GeantUtilDict_599_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_599_0_10, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantStart::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_599_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantStart::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_599_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantStart::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_599_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantStart::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_599_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_599_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantStart::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_599_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantStart::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_599_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantStart::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_599_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantStart::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantStart", 1093, G__GeantUtilDict_599_0_22, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart), -1, 0, 1, 1, 1, 0, "u 'HGeantStart' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantStart", 1219, G__GeantUtilDict_599_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_599_0_24, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantStart), -1, 1, 1, 1, 1, 0, "u 'HGeantStart' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantFwDet(void) {
   /* HGeantFwDet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet));
   G__memfunc_setup("HGeantFwDet",1041,G__GeantUtilDict_600_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HGeantFwDet",1041,G__GeantUtilDict_600_0_2, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet), -1, 0, 1, 1, 1, 0, "u 'HGeantFwDet' - 1 - aFwDet", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_600_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_600_0_4, 121, -1, -1, 0, 4, 1, 1, 0, 
"c - 'Char_t' 0 - aMod c - 'Char_t' 0 - aLayer "
"i - 'Int_t' 0 - aCell c - 'Char_t' 0 - aSubCell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_600_0_5, 121, -1, -1, 0, 9, 1, 1, 0, 
"f - 'Float_t' 0 - aX f - 'Float_t' 0 - aY "
"f - 'Float_t' 0 - aZ f - 'Float_t' 0 - aPx "
"f - 'Float_t' 0 - aPy f - 'Float_t' 0 - aPz "
"f - 'Float_t' 0 - aTof f - 'Float_t' 0 - aLen "
"f - 'Float_t' 0 - aE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrackNumber",1438,G__GeantUtilDict_600_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__GeantUtilDict_600_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"c - 'Char_t' 1 - aMod c - 'Char_t' 1 - aLayer "
"i - 'Int_t' 1 - aCell c - 'Char_t' 1 - aSubCell", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_600_0_8, 121, -1, -1, 0, 9, 1, 1, 0, 
"f - 'Float_t' 1 - aX f - 'Float_t' 1 - aY "
"f - 'Float_t' 1 - aZ f - 'Float_t' 1 - aPx "
"f - 'Float_t' 1 - aPy f - 'Float_t' 1 - aPz "
"f - 'Float_t' 1 - aTof f - 'Float_t' 1 - aLen "
"f - 'Float_t' 1 - aE", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_600_0_11, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantFwDet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_600_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantFwDet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_600_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantFwDet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_600_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantFwDet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_600_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_600_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantFwDet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_600_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantFwDet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_600_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantFwDet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_600_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantFwDet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HGeantFwDet", 1167, G__GeantUtilDict_600_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_600_0_24, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantFwDet), -1, 1, 1, 1, 1, 0, "u 'HGeantFwDet' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGeantShower(void) {
   /* HGeantShower */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower));
   G__memfunc_setup("HGeantShower",1199,G__GeantUtilDict_638_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__GeantUtilDict_638_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__GeantUtilDict_638_0_3, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - ae f - 'Float_t' 0 - ax "
"f - 'Float_t' 0 - ay f - 'Float_t' 0 - abeta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIncidence",1230,G__GeantUtilDict_638_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - ath f - 'Float_t' 0 - aph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__GeantUtilDict_638_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"c - 'Char_t' 0 - s c - 'Char_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getHit",613,G__GeantUtilDict_638_0_7, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 1 - ae f - 'Float_t' 1 - ax "
"f - 'Float_t' 1 - ay f - 'Float_t' 1 - abeta", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIncidence",1218,G__GeantUtilDict_638_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 1 - ath f - 'Float_t' 1 - aph", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSector",944,G__GeantUtilDict_638_0_9, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModule",934,G__GeantUtilDict_638_0_10, 99, -1, G__defined_typename("Char_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNLocationIndex",1727,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getLocationIndex",1649,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__GeantUtilDict_638_0_13, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGeantShower::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_638_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantShower::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_638_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGeantShower::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_638_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGeantShower::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_638_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_638_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantShower::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_638_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantShower::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_638_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGeantShower::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_638_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGeantShower::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGeantShower", 1199, G__GeantUtilDict_638_0_25, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower), -1, 0, 1, 1, 1, 0, "u 'HGeantShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGeantShower", 1325, G__GeantUtilDict_638_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_638_0_27, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantShower), -1, 1, 1, 1, 1, 0, "u 'HGeantShower' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHKineSim(void) {
   /* HKineSim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GeantUtilDictLN_HKineSim));
   G__memfunc_setup("HKineSim",760,G__GeantUtilDict_641_0_1, 105, G__get_linked_tagnum(&G__GeantUtilDictLN_HKineSim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkChargedPart",1603,G__GeantUtilDict_641_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getObj",603,G__GeantUtilDict_641_0_3, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_HGeantKine), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GeantUtilDict_641_0_4, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HKineSim::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GeantUtilDict_641_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HKineSim::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GeantUtilDict_641_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HKineSim::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GeantUtilDict_641_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HKineSim::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__GeantUtilDict_641_0_8, 85, G__get_linked_tagnum(&G__GeantUtilDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__GeantUtilDict_641_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__GeantUtilDict_641_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GeantUtilDict_641_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GeantUtilDict_641_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HKineSim::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GeantUtilDict_641_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HKineSim::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GeantUtilDict_641_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HKineSim::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GeantUtilDict_641_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HKineSim::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HKineSim", 760, G__GeantUtilDict_641_0_16, (int) ('i'), G__get_linked_tagnum(&G__GeantUtilDictLN_HKineSim), -1, 0, 1, 1, 1, 0, "u 'HKineSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HKineSim", 886, G__GeantUtilDict_641_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GeantUtilDict_641_0_18, (int) ('u'), G__get_linked_tagnum(&G__GeantUtilDictLN_HKineSim), -1, 1, 1, 1, 1, 0, "u 'HKineSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGeantUtilDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGeantUtilDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGeantUtilDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GeantUtilDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HLocatedDataObject = { "HLocatedDataObject" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantHeader = { "HGeantHeader" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__GeantUtilDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantMedia = { "HGeantMedia" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HCategory = { "HCategory" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeomVector = { "HGeomVector" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantKine = { "HGeantKine" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_maplEintcOparticlepropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOparticlepropertiesgRsPgRsPgR = { "map<int,particleproperties,less<int>,allocator<pair<const int,particleproperties> > >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_maplETStringcOparticlepropertiescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOparticlepropertiesgRsPgRsPgR = { "map<TString,particleproperties,less<TString>,allocator<pair<const TString,particleproperties> > >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR = { "map<int,TString,less<int>,allocator<pair<const int,TString> > >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgRcLcLiterator = { "map<int,TString,less<int>,allocator<pair<const int,TString> > >::iterator" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HLinkedDataObject = { "HLinkedDataObject" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantRichPhoton = { "HGeantRichPhoton" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantRichDirect = { "HGeantRichDirect" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantRichMirror = { "HGeantRichMirror" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantMdc = { "HGeantMdc" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantTof = { "HGeantTof" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantRpc = { "HGeantRpc" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantEmc = { "HGeantEmc" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantWall = { "HGeantWall" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantStart = { "HGeantStart" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantFwDet = { "HGeantFwDet" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HLinearCategory = { "HLinearCategory" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgR = { "vector<HGeantKine*,allocator<HGeantKine*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantKine*,allocator<HGeantKine*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgR = { "vector<HGeantRichPhoton*,allocator<HGeantRichPhoton*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantRichPhoton*,allocator<HGeantRichPhoton*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgR = { "vector<HGeantMdc*,allocator<HGeantMdc*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantMdc*,allocator<HGeantMdc*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgR = { "vector<HGeantTof*,allocator<HGeantTof*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantTof*,allocator<HGeantTof*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgR = { "vector<HGeantRpc*,allocator<HGeantRpc*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantRpc*,allocator<HGeantRpc*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgR = { "vector<HGeantWall*,allocator<HGeantWall*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantWall*,allocator<HGeantWall*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgR = { "vector<HGeantEmc*,allocator<HGeantEmc*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantEmc*,allocator<HGeantEmc*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgR = { "vector<HGeantStart*,allocator<HGeantStart*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantStart*,allocator<HGeantStart*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_vectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgR = { "vector<HGeantFwDet*,allocator<HGeantFwDet*> >" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HGeantFwDet*,allocator<HGeantFwDet*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HGeantShower = { "HGeantShower" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HIterator = { "HIterator" , 99 , -1 };
G__linked_taginfo G__GeantUtilDictLN_HKineSim = { "HKineSim" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGeantUtilDict() {
  G__GeantUtilDictLN_TClass.tagnum = -1 ;
  G__GeantUtilDictLN_TBuffer.tagnum = -1 ;
  G__GeantUtilDictLN_TMemberInspector.tagnum = -1 ;
  G__GeantUtilDictLN_TObject.tagnum = -1 ;
  G__GeantUtilDictLN_TNamed.tagnum = -1 ;
  G__GeantUtilDictLN_TString.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_HLocatedDataObject.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantHeader.tagnum = -1 ;
  G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__GeantUtilDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantMedia.tagnum = -1 ;
  G__GeantUtilDictLN_HCategory.tagnum = -1 ;
  G__GeantUtilDictLN_HGeomVector.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantKine.tagnum = -1 ;
  G__GeantUtilDictLN_maplEintcOparticlepropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOparticlepropertiesgRsPgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_maplETStringcOparticlepropertiescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOparticlepropertiesgRsPgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__GeantUtilDictLN_HLinkedDataObject.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantRichPhoton.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantRichDirect.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantRichMirror.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantMdc.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantTof.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantRpc.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantEmc.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantWall.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantStart.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantFwDet.tagnum = -1 ;
  G__GeantUtilDictLN_HLinearCategory.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_vectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgR.tagnum = -1 ;
  G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__GeantUtilDictLN_HGeantShower.tagnum = -1 ;
  G__GeantUtilDictLN_HIterator.tagnum = -1 ;
  G__GeantUtilDictLN_HKineSim.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGeantUtilDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_TString);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HLocatedDataObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantHeader),sizeof(HGeantHeader),-1,30464,"GEANT partial event header class",G__setup_memvarHGeantHeader,G__setup_memfuncHGeantHeader);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantMedia),sizeof(HGeantMedia),-1,62720,"Map of GEANT media",G__setup_memvarHGeantMedia,G__setup_memfuncHGeantMedia);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HCategory);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeomVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantKine),sizeof(HGeantKine),-1,96000,"GEANT KINE data class",G__setup_memvarHGeantKine,G__setup_memfuncHGeantKine);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_maplEintcOparticlepropertiescOlesslEintgRcOallocatorlEpairlEconstsPintcOparticlepropertiesgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_maplETStringcOparticlepropertiescOlesslETStringgRcOallocatorlEpairlEconstsPTStringcOparticlepropertiesgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_maplEintcOTStringcOlesslEintgRcOallocatorlEpairlEconstsPintcOTStringgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HLinkedDataObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantRichPhoton),sizeof(HGeantRichPhoton),-1,96000,"GEANT RICH data class for photon hits",G__setup_memvarHGeantRichPhoton,G__setup_memfuncHGeantRichPhoton);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantRichDirect),sizeof(HGeantRichDirect),-1,95488,"GEANT RICH hit data class for direct hits",G__setup_memvarHGeantRichDirect,G__setup_memfuncHGeantRichDirect);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantRichMirror),sizeof(HGeantRichMirror),-1,29952,"Geant RICH hit data class for mirror hits",G__setup_memvarHGeantRichMirror,G__setup_memfuncHGeantRichMirror);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantMdc),sizeof(HGeantMdc),-1,95488,"GEANT MDC hit data class",G__setup_memvarHGeantMdc,G__setup_memfuncHGeantMdc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantTof),sizeof(HGeantTof),-1,95488,"GEANT TOF hit data class",G__setup_memvarHGeantTof,G__setup_memfuncHGeantTof);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantRpc),sizeof(HGeantRpc),-1,95488,(char*)NULL,G__setup_memvarHGeantRpc,G__setup_memfuncHGeantRpc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantEmc),sizeof(HGeantEmc),-1,29952,"GEANT EMC hit data class",G__setup_memvarHGeantEmc,G__setup_memfuncHGeantEmc);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantWall),sizeof(HGeantWall),-1,29952,"Geant Forward Wall event data class",G__setup_memvarHGeantWall,G__setup_memfuncHGeantWall);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantStart),sizeof(HGeantStart),-1,29952,"GEANT START hit data class",G__setup_memvarHGeantStart,G__setup_memfuncHGeantStart);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantFwDet),sizeof(HGeantFwDet),-1,30464,"GEANT hit data class for the new forward detector",G__setup_memvarHGeantFwDet,G__setup_memfuncHGeantFwDet);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HLinearCategory);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantKinemUcOallocatorlEHGeantKinemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRichPhotonmUcOallocatorlEHGeantRichPhotonmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantMdcmUcOallocatorlEHGeantMdcmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantTofmUcOallocatorlEHGeantTofmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantRpcmUcOallocatorlEHGeantRpcmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantWallmUcOallocatorlEHGeantWallmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantEmcmUcOallocatorlEHGeantEmcmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantStartmUcOallocatorlEHGeantStartmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_vectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_reverse_iteratorlEvectorlEHGeantFwDetmUcOallocatorlEHGeantFwDetmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HGeantShower),sizeof(HGeantShower),-1,29952,"GEANT SHOWER hit data class",G__setup_memvarHGeantShower,G__setup_memfuncHGeantShower);
   G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HIterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GeantUtilDictLN_HKineSim),sizeof(HKineSim),-1,1280,"check HGeant kine info",G__setup_memvarHKineSim,G__setup_memfuncHKineSim);
}
extern "C" void G__cpp_setupGeantUtilDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGeantUtilDict()");
  G__set_cpp_environmentGeantUtilDict();
  G__cpp_setup_tagtableGeantUtilDict();

  G__cpp_setup_inheritanceGeantUtilDict();

  G__cpp_setup_typetableGeantUtilDict();

  G__cpp_setup_memvarGeantUtilDict();

  G__cpp_setup_memfuncGeantUtilDict();
  G__cpp_setup_globalGeantUtilDict();
  G__cpp_setup_funcGeantUtilDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGeantUtilDict();
  return;
}
class G__cpp_setup_initGeantUtilDict {
  public:
    G__cpp_setup_initGeantUtilDict() { G__add_setup_func("GeantUtilDict",(G__incsetup)(&G__cpp_setupGeantUtilDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGeantUtilDict() { G__remove_setup_func("GeantUtilDict"); }
};
G__cpp_setup_initGeantUtilDict G__cpp_setup_initializerGeantUtilDict;

