//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Wed Mar 29 15:51:28 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIFwDetDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "FwDetDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HFwDetDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetDetector(void *p = 0);
   static void *newArray_HFwDetDetector(Long_t size, void *p);
   static void delete_HFwDetDetector(void *p);
   static void deleteArray_HFwDetDetector(void *p);
   static void destruct_HFwDetDetector(void *p);
   static void streamer_HFwDetDetector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetDetector*)
   {
      ::HFwDetDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetDetector", ::HFwDetDetector::Class_Version(), "././hfwdetdetector.h", 7,
                  typeid(::HFwDetDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetDetector::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetDetector) );
      instance.SetNew(&new_HFwDetDetector);
      instance.SetNewArray(&newArray_HFwDetDetector);
      instance.SetDelete(&delete_HFwDetDetector);
      instance.SetDeleteArray(&deleteArray_HFwDetDetector);
      instance.SetDestructor(&destruct_HFwDetDetector);
      instance.SetStreamerFunc(&streamer_HFwDetDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetDetector*)
   {
      return GenerateInitInstanceLocal((::HFwDetDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetContFact_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetContFact(void *p = 0);
   static void *newArray_HFwDetContFact(Long_t size, void *p);
   static void delete_HFwDetContFact(void *p);
   static void deleteArray_HFwDetContFact(void *p);
   static void destruct_HFwDetContFact(void *p);
   static void streamer_HFwDetContFact(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetContFact*)
   {
      ::HFwDetContFact *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetContFact >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetContFact", ::HFwDetContFact::Class_Version(), "././hfwdetcontfact.h", 10,
                  typeid(::HFwDetContFact), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetContFact::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetContFact) );
      instance.SetNew(&new_HFwDetContFact);
      instance.SetNewArray(&newArray_HFwDetContFact);
      instance.SetDelete(&delete_HFwDetContFact);
      instance.SetDeleteArray(&deleteArray_HFwDetContFact);
      instance.SetDestructor(&destruct_HFwDetContFact);
      instance.SetStreamerFunc(&streamer_HFwDetContFact);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetContFact*)
   {
      return GenerateInitInstanceLocal((::HFwDetContFact*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetContFact*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetParRootFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HFwDetParRootFileIo(void *p);
   static void deleteArray_HFwDetParRootFileIo(void *p);
   static void destruct_HFwDetParRootFileIo(void *p);
   static void streamer_HFwDetParRootFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetParRootFileIo*)
   {
      ::HFwDetParRootFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetParRootFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetParRootFileIo", ::HFwDetParRootFileIo::Class_Version(), "././hfwdetparrootfileio.h", 11,
                  typeid(::HFwDetParRootFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetParRootFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetParRootFileIo) );
      instance.SetDelete(&delete_HFwDetParRootFileIo);
      instance.SetDeleteArray(&deleteArray_HFwDetParRootFileIo);
      instance.SetDestructor(&destruct_HFwDetParRootFileIo);
      instance.SetStreamerFunc(&streamer_HFwDetParRootFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetParRootFileIo*)
   {
      return GenerateInitInstanceLocal((::HFwDetParRootFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetParRootFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetParAsciiFileIo_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HFwDetParAsciiFileIo(void *p);
   static void deleteArray_HFwDetParAsciiFileIo(void *p);
   static void destruct_HFwDetParAsciiFileIo(void *p);
   static void streamer_HFwDetParAsciiFileIo(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetParAsciiFileIo*)
   {
      ::HFwDetParAsciiFileIo *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetParAsciiFileIo >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetParAsciiFileIo", ::HFwDetParAsciiFileIo::Class_Version(), "././hfwdetparasciifileio.h", 11,
                  typeid(::HFwDetParAsciiFileIo), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetParAsciiFileIo::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetParAsciiFileIo) );
      instance.SetDelete(&delete_HFwDetParAsciiFileIo);
      instance.SetDeleteArray(&deleteArray_HFwDetParAsciiFileIo);
      instance.SetDestructor(&destruct_HFwDetParAsciiFileIo);
      instance.SetStreamerFunc(&streamer_HFwDetParAsciiFileIo);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetParAsciiFileIo*)
   {
      return GenerateInitInstanceLocal((::HFwDetParAsciiFileIo*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetParAsciiFileIo*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetGeomPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetGeomPar(void *p = 0);
   static void *newArray_HFwDetGeomPar(Long_t size, void *p);
   static void delete_HFwDetGeomPar(void *p);
   static void deleteArray_HFwDetGeomPar(void *p);
   static void destruct_HFwDetGeomPar(void *p);
   static void streamer_HFwDetGeomPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetGeomPar*)
   {
      ::HFwDetGeomPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetGeomPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetGeomPar", ::HFwDetGeomPar::Class_Version(), "././hfwdetgeompar.h", 10,
                  typeid(::HFwDetGeomPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetGeomPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetGeomPar) );
      instance.SetNew(&new_HFwDetGeomPar);
      instance.SetNewArray(&newArray_HFwDetGeomPar);
      instance.SetDelete(&delete_HFwDetGeomPar);
      instance.SetDeleteArray(&deleteArray_HFwDetGeomPar);
      instance.SetDestructor(&destruct_HFwDetGeomPar);
      instance.SetStreamerFunc(&streamer_HFwDetGeomPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetGeomPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetGeomPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetGeomPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetTaskSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetTaskSet(void *p = 0);
   static void *newArray_HFwDetTaskSet(Long_t size, void *p);
   static void delete_HFwDetTaskSet(void *p);
   static void deleteArray_HFwDetTaskSet(void *p);
   static void destruct_HFwDetTaskSet(void *p);
   static void streamer_HFwDetTaskSet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetTaskSet*)
   {
      ::HFwDetTaskSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetTaskSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetTaskSet", ::HFwDetTaskSet::Class_Version(), "././hfwdettaskset.h", 8,
                  typeid(::HFwDetTaskSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetTaskSet::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetTaskSet) );
      instance.SetNew(&new_HFwDetTaskSet);
      instance.SetNewArray(&newArray_HFwDetTaskSet);
      instance.SetDelete(&delete_HFwDetTaskSet);
      instance.SetDeleteArray(&deleteArray_HFwDetTaskSet);
      instance.SetDestructor(&destruct_HFwDetTaskSet);
      instance.SetStreamerFunc(&streamer_HFwDetTaskSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetTaskSet*)
   {
      return GenerateInitInstanceLocal((::HFwDetTaskSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetTaskSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcGeomPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcGeomPar(void *p = 0);
   static void *newArray_HFwDetRpcGeomPar(Long_t size, void *p);
   static void delete_HFwDetRpcGeomPar(void *p);
   static void deleteArray_HFwDetRpcGeomPar(void *p);
   static void destruct_HFwDetRpcGeomPar(void *p);
   static void streamer_HFwDetRpcGeomPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcGeomPar*)
   {
      ::HFwDetRpcGeomPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcGeomPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcGeomPar", ::HFwDetRpcGeomPar::Class_Version(), "././hfwdetrpcgeompar.h", 16,
                  typeid(::HFwDetRpcGeomPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcGeomPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcGeomPar) );
      instance.SetNew(&new_HFwDetRpcGeomPar);
      instance.SetNewArray(&newArray_HFwDetRpcGeomPar);
      instance.SetDelete(&delete_HFwDetRpcGeomPar);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcGeomPar);
      instance.SetDestructor(&destruct_HFwDetRpcGeomPar);
      instance.SetStreamerFunc(&streamer_HFwDetRpcGeomPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcGeomPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcGeomPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcGeomPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcCal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcCal(void *p = 0);
   static void *newArray_HFwDetRpcCal(Long_t size, void *p);
   static void delete_HFwDetRpcCal(void *p);
   static void deleteArray_HFwDetRpcCal(void *p);
   static void destruct_HFwDetRpcCal(void *p);
   static void streamer_HFwDetRpcCal(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcCal*)
   {
      ::HFwDetRpcCal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcCal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcCal", ::HFwDetRpcCal::Class_Version(), "././hfwdetrpccal.h", 10,
                  typeid(::HFwDetRpcCal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcCal::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcCal) );
      instance.SetNew(&new_HFwDetRpcCal);
      instance.SetNewArray(&newArray_HFwDetRpcCal);
      instance.SetDelete(&delete_HFwDetRpcCal);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcCal);
      instance.SetDestructor(&destruct_HFwDetRpcCal);
      instance.SetStreamerFunc(&streamer_HFwDetRpcCal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcCal*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcCal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcCal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcCalSim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcCalSim(void *p = 0);
   static void *newArray_HFwDetRpcCalSim(Long_t size, void *p);
   static void delete_HFwDetRpcCalSim(void *p);
   static void deleteArray_HFwDetRpcCalSim(void *p);
   static void destruct_HFwDetRpcCalSim(void *p);
   static void streamer_HFwDetRpcCalSim(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcCalSim*)
   {
      ::HFwDetRpcCalSim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcCalSim >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcCalSim", ::HFwDetRpcCalSim::Class_Version(), "././hfwdetrpccalsim.h", 9,
                  typeid(::HFwDetRpcCalSim), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcCalSim::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcCalSim) );
      instance.SetNew(&new_HFwDetRpcCalSim);
      instance.SetNewArray(&newArray_HFwDetRpcCalSim);
      instance.SetDelete(&delete_HFwDetRpcCalSim);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcCalSim);
      instance.SetDestructor(&destruct_HFwDetRpcCalSim);
      instance.SetStreamerFunc(&streamer_HFwDetRpcCalSim);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcCalSim*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcCalSim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcCalSim*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcDigiPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcDigiPar(void *p = 0);
   static void *newArray_HFwDetRpcDigiPar(Long_t size, void *p);
   static void delete_HFwDetRpcDigiPar(void *p);
   static void deleteArray_HFwDetRpcDigiPar(void *p);
   static void destruct_HFwDetRpcDigiPar(void *p);
   static void streamer_HFwDetRpcDigiPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcDigiPar*)
   {
      ::HFwDetRpcDigiPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcDigiPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcDigiPar", ::HFwDetRpcDigiPar::Class_Version(), "././hfwdetrpcdigipar.h", 7,
                  typeid(::HFwDetRpcDigiPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcDigiPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcDigiPar) );
      instance.SetNew(&new_HFwDetRpcDigiPar);
      instance.SetNewArray(&newArray_HFwDetRpcDigiPar);
      instance.SetDelete(&delete_HFwDetRpcDigiPar);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcDigiPar);
      instance.SetDestructor(&destruct_HFwDetRpcDigiPar);
      instance.SetStreamerFunc(&streamer_HFwDetRpcDigiPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcDigiPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcDigiPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcDigiPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcDigitizer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcDigitizer(void *p = 0);
   static void *newArray_HFwDetRpcDigitizer(Long_t size, void *p);
   static void delete_HFwDetRpcDigitizer(void *p);
   static void deleteArray_HFwDetRpcDigitizer(void *p);
   static void destruct_HFwDetRpcDigitizer(void *p);
   static void streamer_HFwDetRpcDigitizer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcDigitizer*)
   {
      ::HFwDetRpcDigitizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcDigitizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcDigitizer", ::HFwDetRpcDigitizer::Class_Version(), "././hfwdetrpcdigitizer.h", 37,
                  typeid(::HFwDetRpcDigitizer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcDigitizer::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcDigitizer) );
      instance.SetNew(&new_HFwDetRpcDigitizer);
      instance.SetNewArray(&newArray_HFwDetRpcDigitizer);
      instance.SetDelete(&delete_HFwDetRpcDigitizer);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcDigitizer);
      instance.SetDestructor(&destruct_HFwDetRpcDigitizer);
      instance.SetStreamerFunc(&streamer_HFwDetRpcDigitizer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcDigitizer*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcDigitizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcDigitizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcHit_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcHit(void *p = 0);
   static void *newArray_HFwDetRpcHit(Long_t size, void *p);
   static void delete_HFwDetRpcHit(void *p);
   static void deleteArray_HFwDetRpcHit(void *p);
   static void destruct_HFwDetRpcHit(void *p);
   static void streamer_HFwDetRpcHit(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcHit*)
   {
      ::HFwDetRpcHit *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcHit >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcHit", ::HFwDetRpcHit::Class_Version(), "././hfwdetrpchit.h", 8,
                  typeid(::HFwDetRpcHit), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcHit::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcHit) );
      instance.SetNew(&new_HFwDetRpcHit);
      instance.SetNewArray(&newArray_HFwDetRpcHit);
      instance.SetDelete(&delete_HFwDetRpcHit);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcHit);
      instance.SetDestructor(&destruct_HFwDetRpcHit);
      instance.SetStreamerFunc(&streamer_HFwDetRpcHit);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcHit*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcHit*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcHit*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcHitFinderPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcHitFinderPar(void *p = 0);
   static void *newArray_HFwDetRpcHitFinderPar(Long_t size, void *p);
   static void delete_HFwDetRpcHitFinderPar(void *p);
   static void deleteArray_HFwDetRpcHitFinderPar(void *p);
   static void destruct_HFwDetRpcHitFinderPar(void *p);
   static void streamer_HFwDetRpcHitFinderPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcHitFinderPar*)
   {
      ::HFwDetRpcHitFinderPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcHitFinderPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcHitFinderPar", ::HFwDetRpcHitFinderPar::Class_Version(), "././hfwdetrpchitfinderpar.h", 7,
                  typeid(::HFwDetRpcHitFinderPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcHitFinderPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcHitFinderPar) );
      instance.SetNew(&new_HFwDetRpcHitFinderPar);
      instance.SetNewArray(&newArray_HFwDetRpcHitFinderPar);
      instance.SetDelete(&delete_HFwDetRpcHitFinderPar);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcHitFinderPar);
      instance.SetDestructor(&destruct_HFwDetRpcHitFinderPar);
      instance.SetStreamerFunc(&streamer_HFwDetRpcHitFinderPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcHitFinderPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcHitFinderPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcHitFinderPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetRpcHitFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetRpcHitFinder(void *p = 0);
   static void *newArray_HFwDetRpcHitFinder(Long_t size, void *p);
   static void delete_HFwDetRpcHitFinder(void *p);
   static void deleteArray_HFwDetRpcHitFinder(void *p);
   static void destruct_HFwDetRpcHitFinder(void *p);
   static void streamer_HFwDetRpcHitFinder(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetRpcHitFinder*)
   {
      ::HFwDetRpcHitFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetRpcHitFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetRpcHitFinder", ::HFwDetRpcHitFinder::Class_Version(), "././hfwdetrpchitfinder.h", 13,
                  typeid(::HFwDetRpcHitFinder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetRpcHitFinder::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetRpcHitFinder) );
      instance.SetNew(&new_HFwDetRpcHitFinder);
      instance.SetNewArray(&newArray_HFwDetRpcHitFinder);
      instance.SetDelete(&delete_HFwDetRpcHitFinder);
      instance.SetDeleteArray(&deleteArray_HFwDetRpcHitFinder);
      instance.SetDestructor(&destruct_HFwDetRpcHitFinder);
      instance.SetStreamerFunc(&streamer_HFwDetRpcHitFinder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetRpcHitFinder*)
   {
      return GenerateInitInstanceLocal((::HFwDetRpcHitFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetRpcHitFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetScinCal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetScinCal(void *p = 0);
   static void *newArray_HFwDetScinCal(Long_t size, void *p);
   static void delete_HFwDetScinCal(void *p);
   static void deleteArray_HFwDetScinCal(void *p);
   static void destruct_HFwDetScinCal(void *p);
   static void streamer_HFwDetScinCal(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetScinCal*)
   {
      ::HFwDetScinCal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetScinCal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetScinCal", ::HFwDetScinCal::Class_Version(), "././hfwdetscincal.h", 7,
                  typeid(::HFwDetScinCal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetScinCal::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetScinCal) );
      instance.SetNew(&new_HFwDetScinCal);
      instance.SetNewArray(&newArray_HFwDetScinCal);
      instance.SetDelete(&delete_HFwDetScinCal);
      instance.SetDeleteArray(&deleteArray_HFwDetScinCal);
      instance.SetDestructor(&destruct_HFwDetScinCal);
      instance.SetStreamerFunc(&streamer_HFwDetScinCal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetScinCal*)
   {
      return GenerateInitInstanceLocal((::HFwDetScinCal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetScinCal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetScinCalSim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetScinCalSim(void *p = 0);
   static void *newArray_HFwDetScinCalSim(Long_t size, void *p);
   static void delete_HFwDetScinCalSim(void *p);
   static void deleteArray_HFwDetScinCalSim(void *p);
   static void destruct_HFwDetScinCalSim(void *p);
   static void streamer_HFwDetScinCalSim(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetScinCalSim*)
   {
      ::HFwDetScinCalSim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetScinCalSim >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetScinCalSim", ::HFwDetScinCalSim::Class_Version(), "././hfwdetscincalsim.h", 9,
                  typeid(::HFwDetScinCalSim), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetScinCalSim::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetScinCalSim) );
      instance.SetNew(&new_HFwDetScinCalSim);
      instance.SetNewArray(&newArray_HFwDetScinCalSim);
      instance.SetDelete(&delete_HFwDetScinCalSim);
      instance.SetDeleteArray(&deleteArray_HFwDetScinCalSim);
      instance.SetDestructor(&destruct_HFwDetScinCalSim);
      instance.SetStreamerFunc(&streamer_HFwDetScinCalSim);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetScinCalSim*)
   {
      return GenerateInitInstanceLocal((::HFwDetScinCalSim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetScinCalSim*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetScinDigiPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetScinDigiPar(void *p = 0);
   static void *newArray_HFwDetScinDigiPar(Long_t size, void *p);
   static void delete_HFwDetScinDigiPar(void *p);
   static void deleteArray_HFwDetScinDigiPar(void *p);
   static void destruct_HFwDetScinDigiPar(void *p);
   static void streamer_HFwDetScinDigiPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetScinDigiPar*)
   {
      ::HFwDetScinDigiPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetScinDigiPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetScinDigiPar", ::HFwDetScinDigiPar::Class_Version(), "././hfwdetscindigipar.h", 7,
                  typeid(::HFwDetScinDigiPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetScinDigiPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetScinDigiPar) );
      instance.SetNew(&new_HFwDetScinDigiPar);
      instance.SetNewArray(&newArray_HFwDetScinDigiPar);
      instance.SetDelete(&delete_HFwDetScinDigiPar);
      instance.SetDeleteArray(&deleteArray_HFwDetScinDigiPar);
      instance.SetDestructor(&destruct_HFwDetScinDigiPar);
      instance.SetStreamerFunc(&streamer_HFwDetScinDigiPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetScinDigiPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetScinDigiPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetScinDigiPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetScinDigitizer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetScinDigitizer(void *p = 0);
   static void *newArray_HFwDetScinDigitizer(Long_t size, void *p);
   static void delete_HFwDetScinDigitizer(void *p);
   static void deleteArray_HFwDetScinDigitizer(void *p);
   static void destruct_HFwDetScinDigitizer(void *p);
   static void streamer_HFwDetScinDigitizer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetScinDigitizer*)
   {
      ::HFwDetScinDigitizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetScinDigitizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetScinDigitizer", ::HFwDetScinDigitizer::Class_Version(), "././hfwdetscindigitizer.h", 11,
                  typeid(::HFwDetScinDigitizer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetScinDigitizer::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetScinDigitizer) );
      instance.SetNew(&new_HFwDetScinDigitizer);
      instance.SetNewArray(&newArray_HFwDetScinDigitizer);
      instance.SetDelete(&delete_HFwDetScinDigitizer);
      instance.SetDeleteArray(&deleteArray_HFwDetScinDigitizer);
      instance.SetDestructor(&destruct_HFwDetScinDigitizer);
      instance.SetStreamerFunc(&streamer_HFwDetScinDigitizer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetScinDigitizer*)
   {
      return GenerateInitInstanceLocal((::HFwDetScinDigitizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetScinDigitizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetStrawGeomPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetStrawGeomPar(void *p = 0);
   static void *newArray_HFwDetStrawGeomPar(Long_t size, void *p);
   static void delete_HFwDetStrawGeomPar(void *p);
   static void deleteArray_HFwDetStrawGeomPar(void *p);
   static void destruct_HFwDetStrawGeomPar(void *p);
   static void streamer_HFwDetStrawGeomPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetStrawGeomPar*)
   {
      ::HFwDetStrawGeomPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetStrawGeomPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetStrawGeomPar", ::HFwDetStrawGeomPar::Class_Version(), "././hfwdetstrawgeompar.h", 17,
                  typeid(::HFwDetStrawGeomPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetStrawGeomPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetStrawGeomPar) );
      instance.SetNew(&new_HFwDetStrawGeomPar);
      instance.SetNewArray(&newArray_HFwDetStrawGeomPar);
      instance.SetDelete(&delete_HFwDetStrawGeomPar);
      instance.SetDeleteArray(&deleteArray_HFwDetStrawGeomPar);
      instance.SetDestructor(&destruct_HFwDetStrawGeomPar);
      instance.SetStreamerFunc(&streamer_HFwDetStrawGeomPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetStrawGeomPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetStrawGeomPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetStrawGeomPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetStrawCal_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetStrawCal(void *p = 0);
   static void *newArray_HFwDetStrawCal(Long_t size, void *p);
   static void delete_HFwDetStrawCal(void *p);
   static void deleteArray_HFwDetStrawCal(void *p);
   static void destruct_HFwDetStrawCal(void *p);
   static void streamer_HFwDetStrawCal(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetStrawCal*)
   {
      ::HFwDetStrawCal *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetStrawCal >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetStrawCal", ::HFwDetStrawCal::Class_Version(), "././hfwdetstrawcal.h", 7,
                  typeid(::HFwDetStrawCal), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetStrawCal::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetStrawCal) );
      instance.SetNew(&new_HFwDetStrawCal);
      instance.SetNewArray(&newArray_HFwDetStrawCal);
      instance.SetDelete(&delete_HFwDetStrawCal);
      instance.SetDeleteArray(&deleteArray_HFwDetStrawCal);
      instance.SetDestructor(&destruct_HFwDetStrawCal);
      instance.SetStreamerFunc(&streamer_HFwDetStrawCal);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetStrawCal*)
   {
      return GenerateInitInstanceLocal((::HFwDetStrawCal*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetStrawCal*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetStrawCalSim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetStrawCalSim(void *p = 0);
   static void *newArray_HFwDetStrawCalSim(Long_t size, void *p);
   static void delete_HFwDetStrawCalSim(void *p);
   static void deleteArray_HFwDetStrawCalSim(void *p);
   static void destruct_HFwDetStrawCalSim(void *p);
   static void streamer_HFwDetStrawCalSim(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetStrawCalSim*)
   {
      ::HFwDetStrawCalSim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetStrawCalSim >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetStrawCalSim", ::HFwDetStrawCalSim::Class_Version(), "././hfwdetstrawcalsim.h", 9,
                  typeid(::HFwDetStrawCalSim), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetStrawCalSim::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetStrawCalSim) );
      instance.SetNew(&new_HFwDetStrawCalSim);
      instance.SetNewArray(&newArray_HFwDetStrawCalSim);
      instance.SetDelete(&delete_HFwDetStrawCalSim);
      instance.SetDeleteArray(&deleteArray_HFwDetStrawCalSim);
      instance.SetDestructor(&destruct_HFwDetStrawCalSim);
      instance.SetStreamerFunc(&streamer_HFwDetStrawCalSim);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetStrawCalSim*)
   {
      return GenerateInitInstanceLocal((::HFwDetStrawCalSim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetStrawCalSim*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetStrawDigiPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetStrawDigiPar(void *p = 0);
   static void *newArray_HFwDetStrawDigiPar(Long_t size, void *p);
   static void delete_HFwDetStrawDigiPar(void *p);
   static void deleteArray_HFwDetStrawDigiPar(void *p);
   static void destruct_HFwDetStrawDigiPar(void *p);
   static void streamer_HFwDetStrawDigiPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetStrawDigiPar*)
   {
      ::HFwDetStrawDigiPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetStrawDigiPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetStrawDigiPar", ::HFwDetStrawDigiPar::Class_Version(), "././hfwdetstrawdigipar.h", 9,
                  typeid(::HFwDetStrawDigiPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetStrawDigiPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetStrawDigiPar) );
      instance.SetNew(&new_HFwDetStrawDigiPar);
      instance.SetNewArray(&newArray_HFwDetStrawDigiPar);
      instance.SetDelete(&delete_HFwDetStrawDigiPar);
      instance.SetDeleteArray(&deleteArray_HFwDetStrawDigiPar);
      instance.SetDestructor(&destruct_HFwDetStrawDigiPar);
      instance.SetStreamerFunc(&streamer_HFwDetStrawDigiPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetStrawDigiPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetStrawDigiPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetStrawDigiPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetStrawDigitizer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetStrawDigitizer(void *p = 0);
   static void *newArray_HFwDetStrawDigitizer(Long_t size, void *p);
   static void delete_HFwDetStrawDigitizer(void *p);
   static void deleteArray_HFwDetStrawDigitizer(void *p);
   static void destruct_HFwDetStrawDigitizer(void *p);
   static void streamer_HFwDetStrawDigitizer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetStrawDigitizer*)
   {
      ::HFwDetStrawDigitizer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetStrawDigitizer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetStrawDigitizer", ::HFwDetStrawDigitizer::Class_Version(), "././hfwdetstrawdigitizer.h", 13,
                  typeid(::HFwDetStrawDigitizer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetStrawDigitizer::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetStrawDigitizer) );
      instance.SetNew(&new_HFwDetStrawDigitizer);
      instance.SetNewArray(&newArray_HFwDetStrawDigitizer);
      instance.SetDelete(&delete_HFwDetStrawDigitizer);
      instance.SetDeleteArray(&deleteArray_HFwDetStrawDigitizer);
      instance.SetDestructor(&destruct_HFwDetStrawDigitizer);
      instance.SetStreamerFunc(&streamer_HFwDetStrawDigitizer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetStrawDigitizer*)
   {
      return GenerateInitInstanceLocal((::HFwDetStrawDigitizer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetStrawDigitizer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetVectorFinderPar_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetVectorFinderPar(void *p = 0);
   static void *newArray_HFwDetVectorFinderPar(Long_t size, void *p);
   static void delete_HFwDetVectorFinderPar(void *p);
   static void deleteArray_HFwDetVectorFinderPar(void *p);
   static void destruct_HFwDetVectorFinderPar(void *p);
   static void streamer_HFwDetVectorFinderPar(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetVectorFinderPar*)
   {
      ::HFwDetVectorFinderPar *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetVectorFinderPar >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetVectorFinderPar", ::HFwDetVectorFinderPar::Class_Version(), "././hfwdetvectorfinderpar.h", 7,
                  typeid(::HFwDetVectorFinderPar), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetVectorFinderPar::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetVectorFinderPar) );
      instance.SetNew(&new_HFwDetVectorFinderPar);
      instance.SetNewArray(&newArray_HFwDetVectorFinderPar);
      instance.SetDelete(&delete_HFwDetVectorFinderPar);
      instance.SetDeleteArray(&deleteArray_HFwDetVectorFinderPar);
      instance.SetDestructor(&destruct_HFwDetVectorFinderPar);
      instance.SetStreamerFunc(&streamer_HFwDetVectorFinderPar);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetVectorFinderPar*)
   {
      return GenerateInitInstanceLocal((::HFwDetVectorFinderPar*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetVectorFinderPar*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HVectorCand_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HVectorCand(void *p = 0);
   static void *newArray_HVectorCand(Long_t size, void *p);
   static void delete_HVectorCand(void *p);
   static void deleteArray_HVectorCand(void *p);
   static void destruct_HVectorCand(void *p);
   static void streamer_HVectorCand(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HVectorCand*)
   {
      ::HVectorCand *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HVectorCand >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HVectorCand", ::HVectorCand::Class_Version(), "././hvectorcand.h", 15,
                  typeid(::HVectorCand), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HVectorCand::Dictionary, isa_proxy, 0,
                  sizeof(::HVectorCand) );
      instance.SetNew(&new_HVectorCand);
      instance.SetNewArray(&newArray_HVectorCand);
      instance.SetDelete(&delete_HVectorCand);
      instance.SetDeleteArray(&deleteArray_HVectorCand);
      instance.SetDestructor(&destruct_HVectorCand);
      instance.SetStreamerFunc(&streamer_HVectorCand);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HVectorCand*)
   {
      return GenerateInitInstanceLocal((::HVectorCand*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HVectorCand*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFwDetVectorFinder_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HFwDetVectorFinder(void *p = 0);
   static void *newArray_HFwDetVectorFinder(Long_t size, void *p);
   static void delete_HFwDetVectorFinder(void *p);
   static void deleteArray_HFwDetVectorFinder(void *p);
   static void destruct_HFwDetVectorFinder(void *p);
   static void streamer_HFwDetVectorFinder(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFwDetVectorFinder*)
   {
      ::HFwDetVectorFinder *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFwDetVectorFinder >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFwDetVectorFinder", ::HFwDetVectorFinder::Class_Version(), "././hfwdetvectorfinder.h", 35,
                  typeid(::HFwDetVectorFinder), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFwDetVectorFinder::Dictionary, isa_proxy, 0,
                  sizeof(::HFwDetVectorFinder) );
      instance.SetNew(&new_HFwDetVectorFinder);
      instance.SetNewArray(&newArray_HFwDetVectorFinder);
      instance.SetDelete(&delete_HFwDetVectorFinder);
      instance.SetDeleteArray(&deleteArray_HFwDetVectorFinder);
      instance.SetDestructor(&destruct_HFwDetVectorFinder);
      instance.SetStreamerFunc(&streamer_HFwDetVectorFinder);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFwDetVectorFinder*)
   {
      return GenerateInitInstanceLocal((::HFwDetVectorFinder*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFwDetVectorFinder*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HVectorCandSim_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HVectorCandSim(void *p = 0);
   static void *newArray_HVectorCandSim(Long_t size, void *p);
   static void delete_HVectorCandSim(void *p);
   static void deleteArray_HVectorCandSim(void *p);
   static void destruct_HVectorCandSim(void *p);
   static void streamer_HVectorCandSim(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HVectorCandSim*)
   {
      ::HVectorCandSim *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HVectorCandSim >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HVectorCandSim", ::HVectorCandSim::Class_Version(), "././hvectorcandsim.h", 16,
                  typeid(::HVectorCandSim), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HVectorCandSim::Dictionary, isa_proxy, 0,
                  sizeof(::HVectorCandSim) );
      instance.SetNew(&new_HVectorCandSim);
      instance.SetNewArray(&newArray_HVectorCandSim);
      instance.SetDelete(&delete_HVectorCandSim);
      instance.SetDeleteArray(&deleteArray_HVectorCandSim);
      instance.SetDestructor(&destruct_HVectorCandSim);
      instance.SetStreamerFunc(&streamer_HVectorCandSim);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HVectorCandSim*)
   {
      return GenerateInitInstanceLocal((::HVectorCandSim*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HVectorCandSim*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HFwDetDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetDetector::Class_Name()
{
   return "HFwDetDetector";
}

//______________________________________________________________________________
const char *HFwDetDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetContFact::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetContFact::Class_Name()
{
   return "HFwDetContFact";
}

//______________________________________________________________________________
const char *HFwDetContFact::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetContFact*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetContFact::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetContFact*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetContFact::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetContFact*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetContFact::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetContFact*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetParRootFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetParRootFileIo::Class_Name()
{
   return "HFwDetParRootFileIo";
}

//______________________________________________________________________________
const char *HFwDetParRootFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParRootFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetParRootFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParRootFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetParRootFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParRootFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetParRootFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParRootFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetParAsciiFileIo::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetParAsciiFileIo::Class_Name()
{
   return "HFwDetParAsciiFileIo";
}

//______________________________________________________________________________
const char *HFwDetParAsciiFileIo::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParAsciiFileIo*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetParAsciiFileIo::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParAsciiFileIo*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetParAsciiFileIo::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParAsciiFileIo*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetParAsciiFileIo::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetParAsciiFileIo*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetGeomPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetGeomPar::Class_Name()
{
   return "HFwDetGeomPar";
}

//______________________________________________________________________________
const char *HFwDetGeomPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetGeomPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetGeomPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetGeomPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetGeomPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetGeomPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetGeomPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetGeomPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetTaskSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetTaskSet::Class_Name()
{
   return "HFwDetTaskSet";
}

//______________________________________________________________________________
const char *HFwDetTaskSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetTaskSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetTaskSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetTaskSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetTaskSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetTaskSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetTaskSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetTaskSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcGeomPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcGeomPar::Class_Name()
{
   return "HFwDetRpcGeomPar";
}

//______________________________________________________________________________
const char *HFwDetRpcGeomPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcGeomPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcGeomPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcGeomPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcGeomPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcGeomPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcGeomPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcGeomPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcCal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcCal::Class_Name()
{
   return "HFwDetRpcCal";
}

//______________________________________________________________________________
const char *HFwDetRpcCal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcCal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcCal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcCal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcCalSim::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcCalSim::Class_Name()
{
   return "HFwDetRpcCalSim";
}

//______________________________________________________________________________
const char *HFwDetRpcCalSim::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCalSim*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcCalSim::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCalSim*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcCalSim::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCalSim*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcCalSim::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcCalSim*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcDigiPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcDigiPar::Class_Name()
{
   return "HFwDetRpcDigiPar";
}

//______________________________________________________________________________
const char *HFwDetRpcDigiPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigiPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcDigiPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigiPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcDigiPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigiPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcDigiPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigiPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcDigitizer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcDigitizer::Class_Name()
{
   return "HFwDetRpcDigitizer";
}

//______________________________________________________________________________
const char *HFwDetRpcDigitizer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigitizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcDigitizer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigitizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcDigitizer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigitizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcDigitizer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcDigitizer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcHit::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcHit::Class_Name()
{
   return "HFwDetRpcHit";
}

//______________________________________________________________________________
const char *HFwDetRpcHit::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHit*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcHit::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHit*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcHit::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHit*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcHit::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHit*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcHitFinderPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcHitFinderPar::Class_Name()
{
   return "HFwDetRpcHitFinderPar";
}

//______________________________________________________________________________
const char *HFwDetRpcHitFinderPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinderPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcHitFinderPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinderPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcHitFinderPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinderPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcHitFinderPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinderPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetRpcHitFinder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetRpcHitFinder::Class_Name()
{
   return "HFwDetRpcHitFinder";
}

//______________________________________________________________________________
const char *HFwDetRpcHitFinder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetRpcHitFinder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetRpcHitFinder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetRpcHitFinder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetRpcHitFinder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetScinCal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetScinCal::Class_Name()
{
   return "HFwDetScinCal";
}

//______________________________________________________________________________
const char *HFwDetScinCal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetScinCal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetScinCal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetScinCal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetScinCalSim::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetScinCalSim::Class_Name()
{
   return "HFwDetScinCalSim";
}

//______________________________________________________________________________
const char *HFwDetScinCalSim::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCalSim*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetScinCalSim::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCalSim*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetScinCalSim::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCalSim*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetScinCalSim::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinCalSim*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetScinDigiPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetScinDigiPar::Class_Name()
{
   return "HFwDetScinDigiPar";
}

//______________________________________________________________________________
const char *HFwDetScinDigiPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigiPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetScinDigiPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigiPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetScinDigiPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigiPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetScinDigiPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigiPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetScinDigitizer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetScinDigitizer::Class_Name()
{
   return "HFwDetScinDigitizer";
}

//______________________________________________________________________________
const char *HFwDetScinDigitizer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigitizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetScinDigitizer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigitizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetScinDigitizer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigitizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetScinDigitizer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetScinDigitizer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetStrawGeomPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetStrawGeomPar::Class_Name()
{
   return "HFwDetStrawGeomPar";
}

//______________________________________________________________________________
const char *HFwDetStrawGeomPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawGeomPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetStrawGeomPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawGeomPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetStrawGeomPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawGeomPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetStrawGeomPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawGeomPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetStrawCal::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetStrawCal::Class_Name()
{
   return "HFwDetStrawCal";
}

//______________________________________________________________________________
const char *HFwDetStrawCal::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCal*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetStrawCal::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCal*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetStrawCal::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCal*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetStrawCal::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCal*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetStrawCalSim::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetStrawCalSim::Class_Name()
{
   return "HFwDetStrawCalSim";
}

//______________________________________________________________________________
const char *HFwDetStrawCalSim::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCalSim*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetStrawCalSim::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCalSim*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetStrawCalSim::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCalSim*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetStrawCalSim::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawCalSim*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetStrawDigiPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetStrawDigiPar::Class_Name()
{
   return "HFwDetStrawDigiPar";
}

//______________________________________________________________________________
const char *HFwDetStrawDigiPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigiPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetStrawDigiPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigiPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetStrawDigiPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigiPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetStrawDigiPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigiPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetStrawDigitizer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetStrawDigitizer::Class_Name()
{
   return "HFwDetStrawDigitizer";
}

//______________________________________________________________________________
const char *HFwDetStrawDigitizer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigitizer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetStrawDigitizer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigitizer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetStrawDigitizer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigitizer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetStrawDigitizer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetStrawDigitizer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetVectorFinderPar::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetVectorFinderPar::Class_Name()
{
   return "HFwDetVectorFinderPar";
}

//______________________________________________________________________________
const char *HFwDetVectorFinderPar::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinderPar*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetVectorFinderPar::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinderPar*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetVectorFinderPar::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinderPar*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetVectorFinderPar::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinderPar*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HVectorCand::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HVectorCand::Class_Name()
{
   return "HVectorCand";
}

//______________________________________________________________________________
const char *HVectorCand::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCand*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HVectorCand::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCand*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HVectorCand::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCand*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HVectorCand::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCand*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFwDetVectorFinder::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFwDetVectorFinder::Class_Name()
{
   return "HFwDetVectorFinder";
}

//______________________________________________________________________________
const char *HFwDetVectorFinder::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinder*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFwDetVectorFinder::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinder*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFwDetVectorFinder::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinder*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFwDetVectorFinder::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFwDetVectorFinder*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HVectorCandSim::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HVectorCandSim::Class_Name()
{
   return "HVectorCandSim";
}

//______________________________________________________________________________
const char *HVectorCandSim::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCandSim*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HVectorCandSim::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCandSim*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HVectorCandSim::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCandSim*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HVectorCandSim::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HVectorCandSim*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HFwDetDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetDetector.

   HDetector::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetDetector.
      TClass *R__cl = ::HFwDetDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetDetector(void *p) {
      return  p ? new(p) ::HFwDetDetector : new ::HFwDetDetector;
   }
   static void *newArray_HFwDetDetector(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetDetector[nElements] : new ::HFwDetDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetDetector(void *p) {
      delete ((::HFwDetDetector*)p);
   }
   static void deleteArray_HFwDetDetector(void *p) {
      delete [] ((::HFwDetDetector*)p);
   }
   static void destruct_HFwDetDetector(void *p) {
      typedef ::HFwDetDetector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetDetector(TBuffer &buf, void *obj) {
      ((::HFwDetDetector*)obj)->::HFwDetDetector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetDetector

//______________________________________________________________________________
void HFwDetContFact::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetContFact.

   HContFact::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetContFact::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetContFact.
      TClass *R__cl = ::HFwDetContFact::IsA();
      if (R__cl || R__insp.IsA()) { }
      HContFact::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetContFact(void *p) {
      return  p ? new(p) ::HFwDetContFact : new ::HFwDetContFact;
   }
   static void *newArray_HFwDetContFact(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetContFact[nElements] : new ::HFwDetContFact[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetContFact(void *p) {
      delete ((::HFwDetContFact*)p);
   }
   static void deleteArray_HFwDetContFact(void *p) {
      delete [] ((::HFwDetContFact*)p);
   }
   static void destruct_HFwDetContFact(void *p) {
      typedef ::HFwDetContFact current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetContFact(TBuffer &buf, void *obj) {
      ((::HFwDetContFact*)obj)->::HFwDetContFact::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetContFact

//______________________________________________________________________________
void HFwDetParRootFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetParRootFileIo.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HDetParRootFileIo::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HFwDetParRootFileIo::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetParRootFileIo::IsA(), kTRUE);
      HDetParRootFileIo::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetParRootFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetParRootFileIo.
      TClass *R__cl = ::HFwDetParRootFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParRootFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HFwDetParRootFileIo(void *p) {
      delete ((::HFwDetParRootFileIo*)p);
   }
   static void deleteArray_HFwDetParRootFileIo(void *p) {
      delete [] ((::HFwDetParRootFileIo*)p);
   }
   static void destruct_HFwDetParRootFileIo(void *p) {
      typedef ::HFwDetParRootFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetParRootFileIo(TBuffer &buf, void *obj) {
      ((::HFwDetParRootFileIo*)obj)->::HFwDetParRootFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetParRootFileIo

//______________________________________________________________________________
void HFwDetParAsciiFileIo::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetParAsciiFileIo.

   HDetParAsciiFileIo::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetParAsciiFileIo::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetParAsciiFileIo.
      TClass *R__cl = ::HFwDetParAsciiFileIo::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetParAsciiFileIo::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HFwDetParAsciiFileIo(void *p) {
      delete ((::HFwDetParAsciiFileIo*)p);
   }
   static void deleteArray_HFwDetParAsciiFileIo(void *p) {
      delete [] ((::HFwDetParAsciiFileIo*)p);
   }
   static void destruct_HFwDetParAsciiFileIo(void *p) {
      typedef ::HFwDetParAsciiFileIo current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetParAsciiFileIo(TBuffer &buf, void *obj) {
      ((::HFwDetParAsciiFileIo*)obj)->::HFwDetParAsciiFileIo::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetParAsciiFileIo

//______________________________________________________________________________
void HFwDetGeomPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetGeomPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HDetGeomPar::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HFwDetGeomPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetGeomPar::IsA(), kTRUE);
      HDetGeomPar::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetGeomPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetGeomPar.
      TClass *R__cl = ::HFwDetGeomPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      HDetGeomPar::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetGeomPar(void *p) {
      return  p ? new(p) ::HFwDetGeomPar : new ::HFwDetGeomPar;
   }
   static void *newArray_HFwDetGeomPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetGeomPar[nElements] : new ::HFwDetGeomPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetGeomPar(void *p) {
      delete ((::HFwDetGeomPar*)p);
   }
   static void deleteArray_HFwDetGeomPar(void *p) {
      delete [] ((::HFwDetGeomPar*)p);
   }
   static void destruct_HFwDetGeomPar(void *p) {
      typedef ::HFwDetGeomPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetGeomPar(TBuffer &buf, void *obj) {
      ((::HFwDetGeomPar*)obj)->::HFwDetGeomPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetGeomPar

//______________________________________________________________________________
void HFwDetTaskSet::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetTaskSet.

   HTaskSet::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetTaskSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetTaskSet.
      TClass *R__cl = ::HFwDetTaskSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doStrawRaw", &doStrawRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doStrawCal", &doStrawCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doScinRaw", &doScinRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doScinCal", &doScinCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doRpcRaw", &doRpcRaw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doRpcCal", &doRpcCal);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doRpcHitF", &doRpcHitF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "doVectorFinder", &doVectorFinder);
      HTaskSet::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetTaskSet(void *p) {
      return  p ? new(p) ::HFwDetTaskSet : new ::HFwDetTaskSet;
   }
   static void *newArray_HFwDetTaskSet(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetTaskSet[nElements] : new ::HFwDetTaskSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetTaskSet(void *p) {
      delete ((::HFwDetTaskSet*)p);
   }
   static void deleteArray_HFwDetTaskSet(void *p) {
      delete [] ((::HFwDetTaskSet*)p);
   }
   static void destruct_HFwDetTaskSet(void *p) {
      typedef ::HFwDetTaskSet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetTaskSet(TBuffer &buf, void *obj) {
      ((::HFwDetTaskSet*)obj)->::HFwDetTaskSet::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetTaskSet

//______________________________________________________________________________
void HFwDetStrawGeomPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetStrawGeomPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> nModules;
      R__b.CheckByteCount(R__s, R__c, HFwDetStrawGeomPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetStrawGeomPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << nModules;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetStrawGeomPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetStrawGeomPar.
      TClass *R__cl = ::HFwDetStrawGeomPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nModules", &nModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sm_mods[2]", sm_mods);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetStrawGeomPar(void *p) {
      return  p ? new(p) ::HFwDetStrawGeomPar : new ::HFwDetStrawGeomPar;
   }
   static void *newArray_HFwDetStrawGeomPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetStrawGeomPar[nElements] : new ::HFwDetStrawGeomPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetStrawGeomPar(void *p) {
      delete ((::HFwDetStrawGeomPar*)p);
   }
   static void deleteArray_HFwDetStrawGeomPar(void *p) {
      delete [] ((::HFwDetStrawGeomPar*)p);
   }
   static void destruct_HFwDetStrawGeomPar(void *p) {
      typedef ::HFwDetStrawGeomPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetStrawGeomPar(TBuffer &buf, void *obj) {
      ((::HFwDetStrawGeomPar*)obj)->::HFwDetStrawGeomPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetStrawGeomPar

//______________________________________________________________________________
void HFwDetStrawCal::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetStrawCal.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fModule;
      R__b >> fLayer;
      R__b >> fPlane;
      R__b >> fStraw;
      R__b >> fUpDown;
      R__b >> fTime;
      R__b >> fADC;
      R__b >> fU;
      R__b >> fZ;
      R__b.CheckByteCount(R__s, R__c, HFwDetStrawCal::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetStrawCal::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fModule;
      R__b << fLayer;
      R__b << fPlane;
      R__b << fStraw;
      R__b << fUpDown;
      R__b << fTime;
      R__b << fADC;
      R__b << fU;
      R__b << fZ;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetStrawCal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetStrawCal.
      TClass *R__cl = ::HFwDetStrawCal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPlane", &fPlane);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStraw", &fStraw);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUpDown", &fUpDown);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fADC", &fADC);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fU", &fU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetStrawCal(void *p) {
      return  p ? new(p) ::HFwDetStrawCal : new ::HFwDetStrawCal;
   }
   static void *newArray_HFwDetStrawCal(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetStrawCal[nElements] : new ::HFwDetStrawCal[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetStrawCal(void *p) {
      delete ((::HFwDetStrawCal*)p);
   }
   static void deleteArray_HFwDetStrawCal(void *p) {
      delete [] ((::HFwDetStrawCal*)p);
   }
   static void destruct_HFwDetStrawCal(void *p) {
      typedef ::HFwDetStrawCal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetStrawCal(TBuffer &buf, void *obj) {
      ((::HFwDetStrawCal*)obj)->::HFwDetStrawCal::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetStrawCal

//______________________________________________________________________________
void HFwDetStrawCalSim::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetStrawCalSim.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HFwDetStrawCal::Streamer(R__b);
      R__b >> fTrack;
      R__b >> fToF;
      R__b >> fDriftRad;
      R__b >> fEloss;
      R__b >> fPx;
      R__b >> fPy;
      R__b >> fPz;
      R__b >> fXhit;
      R__b >> fYhit;
      R__b >> fZhit;
      R__b.CheckByteCount(R__s, R__c, HFwDetStrawCalSim::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetStrawCalSim::IsA(), kTRUE);
      HFwDetStrawCal::Streamer(R__b);
      R__b << fTrack;
      R__b << fToF;
      R__b << fDriftRad;
      R__b << fEloss;
      R__b << fPx;
      R__b << fPy;
      R__b << fPz;
      R__b << fXhit;
      R__b << fYhit;
      R__b << fZhit;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetStrawCalSim::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetStrawCalSim.
      TClass *R__cl = ::HFwDetStrawCalSim::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrack", &fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fToF", &fToF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftRad", &fDriftRad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEloss", &fEloss);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPx", &fPx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPy", &fPy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPz", &fPz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fXhit", &fXhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fYhit", &fYhit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZhit", &fZhit);
      HFwDetStrawCal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetStrawCalSim(void *p) {
      return  p ? new(p) ::HFwDetStrawCalSim : new ::HFwDetStrawCalSim;
   }
   static void *newArray_HFwDetStrawCalSim(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetStrawCalSim[nElements] : new ::HFwDetStrawCalSim[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetStrawCalSim(void *p) {
      delete ((::HFwDetStrawCalSim*)p);
   }
   static void deleteArray_HFwDetStrawCalSim(void *p) {
      delete [] ((::HFwDetStrawCalSim*)p);
   }
   static void destruct_HFwDetStrawCalSim(void *p) {
      typedef ::HFwDetStrawCalSim current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetStrawCalSim(TBuffer &buf, void *obj) {
      ((::HFwDetStrawCalSim*)obj)->::HFwDetStrawCalSim::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetStrawCalSim

//______________________________________________________________________________
void HFwDetStrawDigitizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetStrawDigitizer.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetStrawDigitizer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetStrawDigitizer.
      TClass *R__cl = ::HFwDetStrawDigitizer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pGeantFwDetCat", &pGeantFwDetCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStrawCalCat", &pStrawCalCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStrawDigiPar", &pStrawDigiPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStrawGeomPar", &pStrawGeomPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLoc", &fLoc);
      R__insp.InspectMember(fLoc, "fLoc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dt_p[5]", dt_p);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sina[2][4]", sina);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosa[2][4]", cosa);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetStrawDigitizer(void *p) {
      return  p ? new(p) ::HFwDetStrawDigitizer : new ::HFwDetStrawDigitizer;
   }
   static void *newArray_HFwDetStrawDigitizer(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetStrawDigitizer[nElements] : new ::HFwDetStrawDigitizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetStrawDigitizer(void *p) {
      delete ((::HFwDetStrawDigitizer*)p);
   }
   static void deleteArray_HFwDetStrawDigitizer(void *p) {
      delete [] ((::HFwDetStrawDigitizer*)p);
   }
   static void destruct_HFwDetStrawDigitizer(void *p) {
      typedef ::HFwDetStrawDigitizer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetStrawDigitizer(TBuffer &buf, void *obj) {
      ((::HFwDetStrawDigitizer*)obj)->::HFwDetStrawDigitizer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetStrawDigitizer

//______________________________________________________________________________
void HFwDetStrawDigiPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetStrawDigiPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> fAnalogReso;
      R__b >> fElossSlope;
      R__b >> fElossOffset;
      R__b >> fTimeReso;
      fDriftRadiusPars.Streamer(R__b);
      fDriftTimePars.Streamer(R__b);
      R__b >> fStartOffset;
      R__b >> fThreshold;
      R__b >> fEfficiency;
      R__b.CheckByteCount(R__s, R__c, HFwDetStrawDigiPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetStrawDigiPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << fAnalogReso;
      R__b << fElossSlope;
      R__b << fElossOffset;
      R__b << fTimeReso;
      fDriftRadiusPars.Streamer(R__b);
      fDriftTimePars.Streamer(R__b);
      R__b << fStartOffset;
      R__b << fThreshold;
      R__b << fEfficiency;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetStrawDigiPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetStrawDigiPar.
      TClass *R__cl = ::HFwDetStrawDigiPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fAnalogReso", &fAnalogReso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fElossSlope", &fElossSlope);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fElossOffset", &fElossOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeReso", &fTimeReso);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftRadiusPars", &fDriftRadiusPars);
      R__insp.InspectMember(fDriftRadiusPars, "fDriftRadiusPars.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDriftTimePars", &fDriftTimePars);
      R__insp.InspectMember(fDriftTimePars, "fDriftTimePars.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStartOffset", &fStartOffset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fThreshold", &fThreshold);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEfficiency", &fEfficiency);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetStrawDigiPar(void *p) {
      return  p ? new(p) ::HFwDetStrawDigiPar : new ::HFwDetStrawDigiPar;
   }
   static void *newArray_HFwDetStrawDigiPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetStrawDigiPar[nElements] : new ::HFwDetStrawDigiPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetStrawDigiPar(void *p) {
      delete ((::HFwDetStrawDigiPar*)p);
   }
   static void deleteArray_HFwDetStrawDigiPar(void *p) {
      delete [] ((::HFwDetStrawDigiPar*)p);
   }
   static void destruct_HFwDetStrawDigiPar(void *p) {
      typedef ::HFwDetStrawDigiPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetStrawDigiPar(TBuffer &buf, void *obj) {
      ((::HFwDetStrawDigiPar*)obj)->::HFwDetStrawDigiPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetStrawDigiPar

//______________________________________________________________________________
void HFwDetScinCal::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetScinCal.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fTrack;
      R__b >> fModule;
      R__b >> fGeantCell;
      R__b >> fScin;
      R__b >> fTime;
      R__b >> fElos;
      R__b.CheckByteCount(R__s, R__c, HFwDetScinCal::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetScinCal::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fTrack;
      R__b << fModule;
      R__b << fGeantCell;
      R__b << fScin;
      R__b << fTime;
      R__b << fElos;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetScinCal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetScinCal.
      TClass *R__cl = ::HFwDetScinCal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrack", &fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeantCell", &fGeantCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScin", &fScin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fElos", &fElos);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetScinCal(void *p) {
      return  p ? new(p) ::HFwDetScinCal : new ::HFwDetScinCal;
   }
   static void *newArray_HFwDetScinCal(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetScinCal[nElements] : new ::HFwDetScinCal[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetScinCal(void *p) {
      delete ((::HFwDetScinCal*)p);
   }
   static void deleteArray_HFwDetScinCal(void *p) {
      delete [] ((::HFwDetScinCal*)p);
   }
   static void destruct_HFwDetScinCal(void *p) {
      typedef ::HFwDetScinCal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetScinCal(TBuffer &buf, void *obj) {
      ((::HFwDetScinCal*)obj)->::HFwDetScinCal::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetScinCal

//______________________________________________________________________________
void HFwDetScinCalSim::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetScinCalSim.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HFwDetScinCal::Streamer(R__b);
      R__b >> fTrack;
      R__b >> fModule;
      R__b >> fGeantCell;
      R__b >> fScin;
      R__b >> fTime;
      R__b >> fElos;
      R__b.CheckByteCount(R__s, R__c, HFwDetScinCalSim::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetScinCalSim::IsA(), kTRUE);
      HFwDetScinCal::Streamer(R__b);
      R__b << fTrack;
      R__b << fModule;
      R__b << fGeantCell;
      R__b << fScin;
      R__b << fTime;
      R__b << fElos;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetScinCalSim::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetScinCalSim.
      TClass *R__cl = ::HFwDetScinCalSim::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrack", &fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fGeantCell", &fGeantCell);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScin", &fScin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fElos", &fElos);
      HFwDetScinCal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetScinCalSim(void *p) {
      return  p ? new(p) ::HFwDetScinCalSim : new ::HFwDetScinCalSim;
   }
   static void *newArray_HFwDetScinCalSim(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetScinCalSim[nElements] : new ::HFwDetScinCalSim[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetScinCalSim(void *p) {
      delete ((::HFwDetScinCalSim*)p);
   }
   static void deleteArray_HFwDetScinCalSim(void *p) {
      delete [] ((::HFwDetScinCalSim*)p);
   }
   static void destruct_HFwDetScinCalSim(void *p) {
      typedef ::HFwDetScinCalSim current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetScinCalSim(TBuffer &buf, void *obj) {
      ((::HFwDetScinCalSim*)obj)->::HFwDetScinCalSim::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetScinCalSim

//______________________________________________________________________________
void HFwDetScinDigitizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetScinDigitizer.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetScinDigitizer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetScinDigitizer.
      TClass *R__cl = ::HFwDetScinDigitizer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fGeantFwDetCat", &fGeantFwDetCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFwDetScinCalCat", &fFwDetScinCalCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fScinDigiPar", &fScinDigiPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLoc", &fLoc);
      R__insp.InspectMember(fLoc, "fLoc.");
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetScinDigitizer(void *p) {
      return  p ? new(p) ::HFwDetScinDigitizer : new ::HFwDetScinDigitizer;
   }
   static void *newArray_HFwDetScinDigitizer(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetScinDigitizer[nElements] : new ::HFwDetScinDigitizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetScinDigitizer(void *p) {
      delete ((::HFwDetScinDigitizer*)p);
   }
   static void deleteArray_HFwDetScinDigitizer(void *p) {
      delete [] ((::HFwDetScinDigitizer*)p);
   }
   static void destruct_HFwDetScinDigitizer(void *p) {
      typedef ::HFwDetScinDigitizer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetScinDigitizer(TBuffer &buf, void *obj) {
      ((::HFwDetScinDigitizer*)obj)->::HFwDetScinDigitizer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetScinDigitizer

//______________________________________________________________________________
void HFwDetScinDigiPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetScinDigiPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> nScinCells;
      fScinSize.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HFwDetScinDigiPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetScinDigiPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << nScinCells;
      fScinSize.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetScinDigiPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetScinDigiPar.
      TClass *R__cl = ::HFwDetScinDigiPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nScinCells", &nScinCells);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fScinSize", &fScinSize);
      R__insp.InspectMember(fScinSize, "fScinSize.");
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetScinDigiPar(void *p) {
      return  p ? new(p) ::HFwDetScinDigiPar : new ::HFwDetScinDigiPar;
   }
   static void *newArray_HFwDetScinDigiPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetScinDigiPar[nElements] : new ::HFwDetScinDigiPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetScinDigiPar(void *p) {
      delete ((::HFwDetScinDigiPar*)p);
   }
   static void deleteArray_HFwDetScinDigiPar(void *p) {
      delete [] ((::HFwDetScinDigiPar*)p);
   }
   static void destruct_HFwDetScinDigiPar(void *p) {
      typedef ::HFwDetScinDigiPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetScinDigiPar(TBuffer &buf, void *obj) {
      ((::HFwDetScinDigiPar*)obj)->::HFwDetScinDigiPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetScinDigiPar

//______________________________________________________________________________
void HFwDetRpcGeomPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcGeomPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> nModules;
      R__b.CheckByteCount(R__s, R__c, HFwDetRpcGeomPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetRpcGeomPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << nModules;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetRpcGeomPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcGeomPar.
      TClass *R__cl = ::HFwDetRpcGeomPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nModules", &nModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sm_mods[2]", sm_mods);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcGeomPar(void *p) {
      return  p ? new(p) ::HFwDetRpcGeomPar : new ::HFwDetRpcGeomPar;
   }
   static void *newArray_HFwDetRpcGeomPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcGeomPar[nElements] : new ::HFwDetRpcGeomPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcGeomPar(void *p) {
      delete ((::HFwDetRpcGeomPar*)p);
   }
   static void deleteArray_HFwDetRpcGeomPar(void *p) {
      delete [] ((::HFwDetRpcGeomPar*)p);
   }
   static void destruct_HFwDetRpcGeomPar(void *p) {
      typedef ::HFwDetRpcGeomPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcGeomPar(TBuffer &buf, void *obj) {
      ((::HFwDetRpcGeomPar*)obj)->::HFwDetRpcGeomPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcGeomPar

//______________________________________________________________________________
void HFwDetRpcCal::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcCal.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fModule;
      R__b >> fLayer;
      R__b >> fStrip;
      R__b.ReadStaticArray((float*)fTimeL);
      R__b.ReadStaticArray((float*)fTimeR);
      R__b.ReadStaticArray((float*)fChargeL);
      R__b.ReadStaticArray((float*)fChargeR);
      R__b >> nHitsNum;
      R__b.CheckByteCount(R__s, R__c, HFwDetRpcCal::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetRpcCal::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fModule;
      R__b << fLayer;
      R__b << fStrip;
      R__b.WriteArray(fTimeL, 2);
      R__b.WriteArray(fTimeR, 2);
      R__b.WriteArray(fChargeL, 2);
      R__b.WriteArray(fChargeR, 2);
      R__b << nHitsNum;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetRpcCal::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcCal.
      TClass *R__cl = ::HFwDetRpcCal::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fModule", &fModule);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLayer", &fLayer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fStrip", &fStrip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeL[2]", fTimeL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimeR[2]", fTimeR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChargeL[2]", fChargeL);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChargeR[2]", fChargeR);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nHitsNum", &nHitsNum);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcCal(void *p) {
      return  p ? new(p) ::HFwDetRpcCal : new ::HFwDetRpcCal;
   }
   static void *newArray_HFwDetRpcCal(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcCal[nElements] : new ::HFwDetRpcCal[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcCal(void *p) {
      delete ((::HFwDetRpcCal*)p);
   }
   static void deleteArray_HFwDetRpcCal(void *p) {
      delete [] ((::HFwDetRpcCal*)p);
   }
   static void destruct_HFwDetRpcCal(void *p) {
      typedef ::HFwDetRpcCal current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcCal(TBuffer &buf, void *obj) {
      ((::HFwDetRpcCal*)obj)->::HFwDetRpcCal::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcCal

//______________________________________________________________________________
void HFwDetRpcCalSim::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcCalSim.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HFwDetRpcCal::Streamer(R__b);
      R__b.ReadStaticArray((int*)nTrack);
      R__b.ReadStaticArray((float*)fX);
      R__b.ReadStaticArray((float*)fY);
      R__b.ReadStaticArray((float*)fTof);
      R__b.CheckByteCount(R__s, R__c, HFwDetRpcCalSim::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetRpcCalSim::IsA(), kTRUE);
      HFwDetRpcCal::Streamer(R__b);
      R__b.WriteArray(nTrack, 2);
      R__b.WriteArray(fX, 2);
      R__b.WriteArray(fY, 2);
      R__b.WriteArray(fTof, 2);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetRpcCalSim::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcCalSim.
      TClass *R__cl = ::HFwDetRpcCalSim::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nTrack[2]", nTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX[2]", fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY[2]", fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTof[2]", fTof);
      HFwDetRpcCal::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcCalSim(void *p) {
      return  p ? new(p) ::HFwDetRpcCalSim : new ::HFwDetRpcCalSim;
   }
   static void *newArray_HFwDetRpcCalSim(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcCalSim[nElements] : new ::HFwDetRpcCalSim[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcCalSim(void *p) {
      delete ((::HFwDetRpcCalSim*)p);
   }
   static void deleteArray_HFwDetRpcCalSim(void *p) {
      delete [] ((::HFwDetRpcCalSim*)p);
   }
   static void destruct_HFwDetRpcCalSim(void *p) {
      typedef ::HFwDetRpcCalSim current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcCalSim(TBuffer &buf, void *obj) {
      ((::HFwDetRpcCalSim*)obj)->::HFwDetRpcCalSim::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcCalSim

//______________________________________________________________________________
void HFwDetRpcDigitizer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcDigitizer.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetRpcDigitizer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcDigitizer.
      TClass *R__cl = ::HFwDetRpcDigitizer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pGeantFwDetCat", &pGeantFwDetCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDetRpcCalCat", &pFwDetRpcCalCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDetRpcDigiPar", &pFwDetRpcDigiPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDetRpcGeomPar", &pFwDetRpcGeomPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sina[2]", sina);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cosa[2]", cosa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "offset[2][2]", offset);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLoc", &fLoc);
      R__insp.InspectMember(fLoc, "fLoc.");
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcDigitizer(void *p) {
      return  p ? new(p) ::HFwDetRpcDigitizer : new ::HFwDetRpcDigitizer;
   }
   static void *newArray_HFwDetRpcDigitizer(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcDigitizer[nElements] : new ::HFwDetRpcDigitizer[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcDigitizer(void *p) {
      delete ((::HFwDetRpcDigitizer*)p);
   }
   static void deleteArray_HFwDetRpcDigitizer(void *p) {
      delete [] ((::HFwDetRpcDigitizer*)p);
   }
   static void destruct_HFwDetRpcDigitizer(void *p) {
      typedef ::HFwDetRpcDigitizer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcDigitizer(TBuffer &buf, void *obj) {
      ((::HFwDetRpcDigitizer*)obj)->::HFwDetRpcDigitizer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcDigitizer

//______________________________________________________________________________
void HFwDetRpcDigiPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcDigiPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> nRpcCells;
      R__b >> rpcRadius;
      R__b.CheckByteCount(R__s, R__c, HFwDetRpcDigiPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetRpcDigiPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << nRpcCells;
      R__b << rpcRadius;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetRpcDigiPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcDigiPar.
      TClass *R__cl = ::HFwDetRpcDigiPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nRpcCells", &nRpcCells);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "rpcRadius", &rpcRadius);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcDigiPar(void *p) {
      return  p ? new(p) ::HFwDetRpcDigiPar : new ::HFwDetRpcDigiPar;
   }
   static void *newArray_HFwDetRpcDigiPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcDigiPar[nElements] : new ::HFwDetRpcDigiPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcDigiPar(void *p) {
      delete ((::HFwDetRpcDigiPar*)p);
   }
   static void deleteArray_HFwDetRpcDigiPar(void *p) {
      delete [] ((::HFwDetRpcDigiPar*)p);
   }
   static void destruct_HFwDetRpcDigiPar(void *p) {
      typedef ::HFwDetRpcDigiPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcDigiPar(TBuffer &buf, void *obj) {
      ((::HFwDetRpcDigiPar*)obj)->::HFwDetRpcDigiPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcDigiPar

//______________________________________________________________________________
void HFwDetRpcHit::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcHit.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TObject::Streamer(R__b);
      R__b >> fX;
      R__b >> fY;
      R__b >> fZ;
      R__b >> fTof;
      R__b >> fP;
      R__b >> fTrack;
      R__b.CheckByteCount(R__s, R__c, HFwDetRpcHit::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetRpcHit::IsA(), kTRUE);
      TObject::Streamer(R__b);
      R__b << fX;
      R__b << fY;
      R__b << fZ;
      R__b << fTof;
      R__b << fP;
      R__b << fTrack;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetRpcHit::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcHit.
      TClass *R__cl = ::HFwDetRpcHit::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX", &fX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY", &fY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ", &fZ);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTof", &fTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fP", &fP);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrack", &fTrack);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcHit(void *p) {
      return  p ? new(p) ::HFwDetRpcHit : new ::HFwDetRpcHit;
   }
   static void *newArray_HFwDetRpcHit(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcHit[nElements] : new ::HFwDetRpcHit[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcHit(void *p) {
      delete ((::HFwDetRpcHit*)p);
   }
   static void deleteArray_HFwDetRpcHit(void *p) {
      delete [] ((::HFwDetRpcHit*)p);
   }
   static void destruct_HFwDetRpcHit(void *p) {
      typedef ::HFwDetRpcHit current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcHit(TBuffer &buf, void *obj) {
      ((::HFwDetRpcHit*)obj)->::HFwDetRpcHit::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcHit

//______________________________________________________________________________
void HFwDetRpcHitFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcHitFinder.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetRpcHitFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcHitFinder.
      TClass *R__cl = ::HFwDetRpcHitFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDetRpcCalCat", &pFwDetRpcCalCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDetRpcHitCat", &pFwDetRpcHitCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDetRpcHitFinderPar", &pFwDetRpcHitFinderPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pFwDetRpcGeomPar", &pFwDetRpcGeomPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "module", &module);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "layer", &layer);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "strip", &strip);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLoc", &fLoc);
      R__insp.InspectMember(fLoc, "fLoc.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchRadius", &fMatchRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchTime", &fMatchTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mod_z[2]", mod_z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "avg_z", &avg_z);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcHitFinder(void *p) {
      return  p ? new(p) ::HFwDetRpcHitFinder : new ::HFwDetRpcHitFinder;
   }
   static void *newArray_HFwDetRpcHitFinder(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcHitFinder[nElements] : new ::HFwDetRpcHitFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcHitFinder(void *p) {
      delete ((::HFwDetRpcHitFinder*)p);
   }
   static void deleteArray_HFwDetRpcHitFinder(void *p) {
      delete [] ((::HFwDetRpcHitFinder*)p);
   }
   static void destruct_HFwDetRpcHitFinder(void *p) {
      typedef ::HFwDetRpcHitFinder current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcHitFinder(TBuffer &buf, void *obj) {
      ((::HFwDetRpcHitFinder*)obj)->::HFwDetRpcHitFinder::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcHitFinder

//______________________________________________________________________________
void HFwDetRpcHitFinderPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetRpcHitFinderPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> fMatchRadius;
      R__b >> fMatchTime;
      R__b.CheckByteCount(R__s, R__c, HFwDetRpcHitFinderPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetRpcHitFinderPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << fMatchRadius;
      R__b << fMatchTime;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetRpcHitFinderPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetRpcHitFinderPar.
      TClass *R__cl = ::HFwDetRpcHitFinderPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchRadius", &fMatchRadius);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatchTime", &fMatchTime);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetRpcHitFinderPar(void *p) {
      return  p ? new(p) ::HFwDetRpcHitFinderPar : new ::HFwDetRpcHitFinderPar;
   }
   static void *newArray_HFwDetRpcHitFinderPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetRpcHitFinderPar[nElements] : new ::HFwDetRpcHitFinderPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetRpcHitFinderPar(void *p) {
      delete ((::HFwDetRpcHitFinderPar*)p);
   }
   static void deleteArray_HFwDetRpcHitFinderPar(void *p) {
      delete [] ((::HFwDetRpcHitFinderPar*)p);
   }
   static void destruct_HFwDetRpcHitFinderPar(void *p) {
      typedef ::HFwDetRpcHitFinderPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetRpcHitFinderPar(TBuffer &buf, void *obj) {
      ((::HFwDetRpcHitFinderPar*)obj)->::HFwDetRpcHitFinderPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetRpcHitFinderPar

//______________________________________________________________________________
void HFwDetVectorFinder::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetVectorFinder.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HFwDetVectorFinder::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetVectorFinder.
      TClass *R__cl = ::HFwDetVectorFinder::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStrawHits", &pStrawHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pRpcHits", &pRpcHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pVectorCand", &pVectorCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStrawGeomPar", &pStrawGeomPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStrawDigiPar", &pStrawDigiPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pStrawVFPar", &pStrawVFPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isSimulation", &isSimulation);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNpass", &fNpass);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIndx0[2]", fIndx0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nModules", &nModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nLayers[2]", nLayers);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitPl[2][8]", fHitPl);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVectors[3]", fVectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVectorsHigh[2]", fVectorsHigh);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUz[16]", fUz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUzHit[16]", fUzHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fUzTube[16]", fUzTube);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDz[16]", fDz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCosa[16]", fCosa);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSina[16]", fSina);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDrift[16]", fDrift);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ0[2]", fZ0);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLRErrU", &fLRErrU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHRErrU", &fHRErrU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrU", &fErrU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLRCutChi2", &fLRCutChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHRCutChi2", &fHRCutChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTubesD", &fTubesD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCutX", &fCutX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCutY", &fCutY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMinHits", &fMinHits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLus", (void*)&fLus);
      R__insp.InspectMember("map<Int_t,TDecompLU*>", (void*)&fLus, "fLus.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fMatr", (void*)&fMatr);
      R__insp.InspectMember("map<Int_t,TMatrixDSym*>", (void*)&fMatr, "fMatr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHit[2][4]", fHit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*current_track", &current_track);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMaxBest", &nMaxBest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "combos", (void*)&combos);
      R__insp.InspectMember("vector<ComboSet>", (void*)&combos, "combos.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dt_p[5]", dt_p);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetVectorFinder(void *p) {
      return  p ? new(p) ::HFwDetVectorFinder : new ::HFwDetVectorFinder;
   }
   static void *newArray_HFwDetVectorFinder(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetVectorFinder[nElements] : new ::HFwDetVectorFinder[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetVectorFinder(void *p) {
      delete ((::HFwDetVectorFinder*)p);
   }
   static void deleteArray_HFwDetVectorFinder(void *p) {
      delete [] ((::HFwDetVectorFinder*)p);
   }
   static void destruct_HFwDetVectorFinder(void *p) {
      typedef ::HFwDetVectorFinder current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetVectorFinder(TBuffer &buf, void *obj) {
      ((::HFwDetVectorFinder*)obj)->::HFwDetVectorFinder::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetVectorFinder

//______________________________________________________________________________
void HFwDetVectorFinderPar::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFwDetVectorFinderPar.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HParCond::Streamer(R__b);
      R__b >> fCutX;
      R__b >> fCutY;
      R__b >> fLRCutChi2;
      R__b >> fHRCutChi2;
      R__b >> fLRErrU;
      R__b >> fHRErrU;
      R__b >> fTubesD;
      R__b >> nMaxBest;
      R__b >> nPass;
      R__b.CheckByteCount(R__s, R__c, HFwDetVectorFinderPar::IsA());
   } else {
      R__c = R__b.WriteVersion(HFwDetVectorFinderPar::IsA(), kTRUE);
      HParCond::Streamer(R__b);
      R__b << fCutX;
      R__b << fCutY;
      R__b << fLRCutChi2;
      R__b << fHRCutChi2;
      R__b << fLRErrU;
      R__b << fHRErrU;
      R__b << fTubesD;
      R__b << nMaxBest;
      R__b << nPass;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HFwDetVectorFinderPar::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFwDetVectorFinderPar.
      TClass *R__cl = ::HFwDetVectorFinderPar::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCutX", &fCutX);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCutY", &fCutY);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLRCutChi2", &fLRCutChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHRCutChi2", &fHRCutChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLRErrU", &fLRErrU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHRErrU", &fHRErrU);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTubesD", &fTubesD);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nMaxBest", &nMaxBest);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPass", &nPass);
      HParCond::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HFwDetVectorFinderPar(void *p) {
      return  p ? new(p) ::HFwDetVectorFinderPar : new ::HFwDetVectorFinderPar;
   }
   static void *newArray_HFwDetVectorFinderPar(Long_t nElements, void *p) {
      return p ? new(p) ::HFwDetVectorFinderPar[nElements] : new ::HFwDetVectorFinderPar[nElements];
   }
   // Wrapper around operator delete
   static void delete_HFwDetVectorFinderPar(void *p) {
      delete ((::HFwDetVectorFinderPar*)p);
   }
   static void deleteArray_HFwDetVectorFinderPar(void *p) {
      delete [] ((::HFwDetVectorFinderPar*)p);
   }
   static void destruct_HFwDetVectorFinderPar(void *p) {
      typedef ::HFwDetVectorFinderPar current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFwDetVectorFinderPar(TBuffer &buf, void *obj) {
      ((::HFwDetVectorFinderPar*)obj)->::HFwDetVectorFinderPar::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFwDetVectorFinderPar

//______________________________________________________________________________
void HVectorCand::Streamer(TBuffer &R__b)
{
   // Stream an object of class HVectorCand.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TLorentzVector::Streamer(R__b);
      R__b >> fNhits;
      R__b >> fNDF;
      R__b.ReadStaticArray((int*)fHitInds);
      R__b >> fTof;
      R__b >> fDistance;
      R__b.ReadStaticArrayDouble32(fCovar);
      {float R_Dummy; R__b >> R_Dummy; fChi2=Double32_t(R_Dummy);}
      dirVec.Streamer(R__b);
      refVec.Streamer(R__b);
      fLRbits.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HVectorCand::IsA());
   } else {
      R__c = R__b.WriteVersion(HVectorCand::IsA(), kTRUE);
      TLorentzVector::Streamer(R__b);
      R__b << fNhits;
      R__b << fNDF;
      R__b.WriteArray(fHitInds, 16);
      R__b << fTof;
      R__b << fDistance;
      R__b.WriteArrayDouble32(fCovar, 10);
      R__b << float(fChi2);
      dirVec.Streamer(R__b);
      refVec.Streamer(R__b);
      fLRbits.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HVectorCand::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HVectorCand.
      TClass *R__cl = ::HVectorCand::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNhits", &fNhits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNDF", &fNDF);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fHitInds[16]", fHitInds);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTof", &fTof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDistance", &fDistance);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCovar[10]", fCovar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fChi2", &fChi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dirVec", &dirVec);
      R__insp.InspectMember(dirVec, "dirVec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refVec", &refVec);
      R__insp.InspectMember(refVec, "refVec.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fLRbits", &fLRbits);
      R__insp.InspectMember(fLRbits, "fLRbits.");
      TLorentzVector::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HVectorCand(void *p) {
      return  p ? new(p) ::HVectorCand : new ::HVectorCand;
   }
   static void *newArray_HVectorCand(Long_t nElements, void *p) {
      return p ? new(p) ::HVectorCand[nElements] : new ::HVectorCand[nElements];
   }
   // Wrapper around operator delete
   static void delete_HVectorCand(void *p) {
      delete ((::HVectorCand*)p);
   }
   static void deleteArray_HVectorCand(void *p) {
      delete [] ((::HVectorCand*)p);
   }
   static void destruct_HVectorCand(void *p) {
      typedef ::HVectorCand current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HVectorCand(TBuffer &buf, void *obj) {
      ((::HVectorCand*)obj)->::HVectorCand::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HVectorCand

//______________________________________________________________________________
void HVectorCandSim::Streamer(TBuffer &R__b)
{
   // Stream an object of class HVectorCandSim.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HVectorCand::Streamer(R__b);
      R__b >> fTrack;
      R__b >> fRpcTrack;
      R__b >> fPx1;
      R__b >> fPy1;
      R__b >> fPz1;
      R__b >> fPx2;
      R__b >> fPy2;
      R__b >> fPz2;
      R__b >> fX1;
      R__b >> fY1;
      R__b >> fZ1;
      R__b >> fX2;
      R__b >> fY2;
      R__b >> fZ2;
      R__b.CheckByteCount(R__s, R__c, HVectorCandSim::IsA());
   } else {
      R__c = R__b.WriteVersion(HVectorCandSim::IsA(), kTRUE);
      HVectorCand::Streamer(R__b);
      R__b << fTrack;
      R__b << fRpcTrack;
      R__b << fPx1;
      R__b << fPy1;
      R__b << fPz1;
      R__b << fPx2;
      R__b << fPy2;
      R__b << fPz2;
      R__b << fX1;
      R__b << fY1;
      R__b << fZ1;
      R__b << fX2;
      R__b << fY2;
      R__b << fZ2;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HVectorCandSim::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HVectorCandSim.
      TClass *R__cl = ::HVectorCandSim::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTrack", &fTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRpcTrack", &fRpcTrack);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPx1", &fPx1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPy1", &fPy1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPz1", &fPz1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPx2", &fPx2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPy2", &fPy2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fPz2", &fPz2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX1", &fX1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY1", &fY1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ1", &fZ1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fX2", &fX2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fY2", &fY2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fZ2", &fZ2);
      HVectorCand::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HVectorCandSim(void *p) {
      return  p ? new(p) ::HVectorCandSim : new ::HVectorCandSim;
   }
   static void *newArray_HVectorCandSim(Long_t nElements, void *p) {
      return p ? new(p) ::HVectorCandSim[nElements] : new ::HVectorCandSim[nElements];
   }
   // Wrapper around operator delete
   static void delete_HVectorCandSim(void *p) {
      delete ((::HVectorCandSim*)p);
   }
   static void deleteArray_HVectorCandSim(void *p) {
      delete [] ((::HVectorCandSim*)p);
   }
   static void destruct_HVectorCandSim(void *p) {
      typedef ::HVectorCandSim current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HVectorCandSim(TBuffer &buf, void *obj) {
      ((::HVectorCandSim*)obj)->::HVectorCandSim::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HVectorCandSim

/********************************************************
* ../build/pc/FwDetDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableFwDetDict();

extern "C" void G__set_cpp_environmentFwDetDict() {
  G__cpp_reset_tagtableFwDetDict();
}
#include <new>
extern "C" int G__cpp_dllrevFwDetDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HFwDetDetector */
static int G__FwDetDict_190_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetDetector[n];
     } else {
       p = new((void*) gvp) HFwDetDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetDetector;
     } else {
       p = new((void*) gvp) HFwDetDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildCategory((Cat_t) G__int(libp->para[0]), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildCategory((Cat_t) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 4:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])));
      break;
   case 3:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 6:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Float_t) G__double(libp->para[5])));
      break;
   case 5:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 7:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildMatrixCategory(
(const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Float_t) G__double(libp->para[6])));
      break;
   case 6:
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildMatrixCategory((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HFwDetDetector*) G__getstructoffset())->buildLinearCategory((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HFwDetDetector*) G__getstructoffset())->getMaxModInSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_190_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_190_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetDetector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetDetector(*(HFwDetDetector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetDetector G__THFwDetDetector;
static int G__FwDetDict_190_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetDetector*) (soff+(sizeof(HFwDetDetector)*i)))->~G__THFwDetDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetDetector*) (soff))->~G__THFwDetDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_190_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetDetector* dest = (HFwDetDetector*) G__getstructoffset();
   *dest = *(HFwDetDetector*) libp->para[0].ref;
   const HFwDetDetector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetContFact */
static int G__FwDetDict_203_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetContFact* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetContFact[n];
     } else {
       p = new((void*) gvp) HFwDetContFact[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetContFact;
     } else {
       p = new((void*) gvp) HFwDetContFact;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetContFact::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetContFact::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetContFact::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetContFact::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetContFact*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetContFact::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetContFact::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetContFact::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_203_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetContFact::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_203_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetContFact* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetContFact(*(HFwDetContFact*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetContFact G__THFwDetContFact;
static int G__FwDetDict_203_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetContFact*) (soff+(sizeof(HFwDetContFact)*i)))->~G__THFwDetContFact();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetContFact*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetContFact*) (soff))->~G__THFwDetContFact();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_203_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetContFact* dest = (HFwDetContFact*) G__getstructoffset();
   *dest = *(HFwDetContFact*) libp->para[0].ref;
   const HFwDetContFact& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetParRootFileIo */
static int G__FwDetDict_243_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetParRootFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HFwDetParRootFileIo((HParRootFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetParRootFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetParRootFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetParRootFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetParRootFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetParRootFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetParRootFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetParRootFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetParRootFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_243_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetParRootFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_243_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetParRootFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetParRootFileIo(*(HFwDetParRootFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetParRootFileIo G__THFwDetParRootFileIo;
static int G__FwDetDict_243_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetParRootFileIo*) (soff+(sizeof(HFwDetParRootFileIo)*i)))->~G__THFwDetParRootFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetParRootFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetParRootFileIo*) (soff))->~G__THFwDetParRootFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_243_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetParRootFileIo* dest = (HFwDetParRootFileIo*) G__getstructoffset();
   *dest = *(HFwDetParRootFileIo*) libp->para[0].ref;
   const HFwDetParRootFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetParAsciiFileIo */
static int G__FwDetDict_253_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetParAsciiFileIo* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetParAsciiFileIo((fstream*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HFwDetParAsciiFileIo((fstream*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetParAsciiFileIo::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetParAsciiFileIo::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetParAsciiFileIo::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetParAsciiFileIo::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetParAsciiFileIo*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetParAsciiFileIo::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetParAsciiFileIo::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetParAsciiFileIo::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_253_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetParAsciiFileIo::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_253_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetParAsciiFileIo* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetParAsciiFileIo(*(HFwDetParAsciiFileIo*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetParAsciiFileIo G__THFwDetParAsciiFileIo;
static int G__FwDetDict_253_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetParAsciiFileIo*) (soff+(sizeof(HFwDetParAsciiFileIo)*i)))->~G__THFwDetParAsciiFileIo();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetParAsciiFileIo*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetParAsciiFileIo*) (soff))->~G__THFwDetParAsciiFileIo();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_253_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetParAsciiFileIo* dest = (HFwDetParAsciiFileIo*) G__getstructoffset();
   *dest = *(HFwDetParAsciiFileIo*) libp->para[0].ref;
   const HFwDetParAsciiFileIo& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetGeomPar */
static int G__FwDetDict_257_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetGeomPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetGeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetGeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetGeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetGeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetGeomPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetGeomPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetGeomPar[n];
       } else {
         p = new((void*) gvp) HFwDetGeomPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetGeomPar;
       } else {
         p = new((void*) gvp) HFwDetGeomPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetGeomPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetGeomPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetGeomPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetGeomPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetGeomPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetGeomPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetGeomPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetGeomPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_257_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetGeomPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_257_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetGeomPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetGeomPar(*(HFwDetGeomPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetGeomPar G__THFwDetGeomPar;
static int G__FwDetDict_257_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetGeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetGeomPar*) (soff+(sizeof(HFwDetGeomPar)*i)))->~G__THFwDetGeomPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetGeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetGeomPar*) (soff))->~G__THFwDetGeomPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_257_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetGeomPar* dest = (HFwDetGeomPar*) G__getstructoffset();
   *dest = *(HFwDetGeomPar*) libp->para[0].ref;
   const HFwDetGeomPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetTaskSet */
static int G__FwDetDict_262_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetTaskSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetTaskSet[n];
     } else {
       p = new((void*) gvp) HFwDetTaskSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetTaskSet;
     } else {
       p = new((void*) gvp) HFwDetTaskSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetTaskSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetTaskSet((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HFwDetTaskSet((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HFwDetTaskSet*) G__getstructoffset())->make((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HFwDetTaskSet*) G__getstructoffset())->make((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((HFwDetTaskSet*) G__getstructoffset())->make());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetTaskSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetTaskSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetTaskSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetTaskSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetTaskSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetTaskSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetTaskSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetTaskSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_262_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetTaskSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetTaskSet G__THFwDetTaskSet;
static int G__FwDetDict_262_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetTaskSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetTaskSet*) (soff+(sizeof(HFwDetTaskSet)*i)))->~G__THFwDetTaskSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetTaskSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetTaskSet*) (soff))->~G__THFwDetTaskSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcGeomPar */
static int G__FwDetDict_301_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcGeomPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcGeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetRpcGeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcGeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetRpcGeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcGeomPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetRpcGeomPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetRpcGeomPar[n];
       } else {
         p = new((void*) gvp) HFwDetRpcGeomPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetRpcGeomPar;
       } else {
         p = new((void*) gvp) HFwDetRpcGeomPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetRpcGeomPar*) G__getstructoffset())->printParam();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetRpcGeomPar*) G__getstructoffset())->getModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetRpcGeomPar*) G__getstructoffset())->getLayers((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcGeomPar*) G__getstructoffset())->getModuleZ((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcGeomPar*) G__getstructoffset())->getModulePhi((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcGeomPar*) G__getstructoffset())->getLayerY((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcGeomPar*) G__getstructoffset())->setModules((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcGeomPar*) G__getstructoffset())->setLayers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcGeomPar*) G__getstructoffset())->setModuleZ((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcGeomPar*) G__getstructoffset())->setModulePhi((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcGeomPar*) G__getstructoffset())->setLayerY((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcGeomPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcGeomPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcGeomPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcGeomPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcGeomPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcGeomPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcGeomPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcGeomPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_301_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcGeomPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_301_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetRpcGeomPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetRpcGeomPar(*(HFwDetRpcGeomPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcGeomPar G__THFwDetRpcGeomPar;
static int G__FwDetDict_301_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcGeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcGeomPar*) (soff+(sizeof(HFwDetRpcGeomPar)*i)))->~G__THFwDetRpcGeomPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcGeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcGeomPar*) (soff))->~G__THFwDetRpcGeomPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_301_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcGeomPar* dest = (HFwDetRpcGeomPar*) G__getstructoffset();
   *dest = *(HFwDetRpcGeomPar*) libp->para[0].ref;
   const HFwDetRpcGeomPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcCal */
static int G__FwDetDict_623_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcCal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcCal[n];
     } else {
       p = new((void*) gvp) HFwDetRpcCal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcCal;
     } else {
       p = new((void*) gvp) HFwDetRpcCal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetRpcCal*) G__getstructoffset())->getAddress(*(Char_t*) G__Charref(&libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(Char_t*) G__Charref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetRpcCal*) G__getstructoffset())->getHitsNum());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HFwDetRpcCal*) G__getstructoffset())->getHit((Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])
, *(Float_t*) G__Floatref(&libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcCal*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HFwDetRpcCal*) G__getstructoffset())->setHit((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HFwDetRpcCal*) G__getstructoffset())->addHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetRpcCal*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcCal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcCal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcCal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcCal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcCal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcCal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcCal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcCal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_623_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcCal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_623_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetRpcCal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetRpcCal(*(HFwDetRpcCal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcCal G__THFwDetRpcCal;
static int G__FwDetDict_623_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcCal*) (soff+(sizeof(HFwDetRpcCal)*i)))->~G__THFwDetRpcCal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcCal*) (soff))->~G__THFwDetRpcCal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_623_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcCal* dest = (HFwDetRpcCal*) G__getstructoffset();
   *dest = *(HFwDetRpcCal*) libp->para[0].ref;
   const HFwDetRpcCal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcCalSim */
static int G__FwDetDict_624_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcCalSim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcCalSim[n];
     } else {
       p = new((void*) gvp) HFwDetRpcCalSim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcCalSim;
     } else {
       p = new((void*) gvp) HFwDetRpcCalSim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HFwDetRpcCalSim*) G__getstructoffset())->setHit((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HFwDetRpcCalSim*) G__getstructoffset())->getHit((Int_t) G__int(libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HFwDetRpcCalSim*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HFwDetRpcCalSim*) G__getstructoffset())->getTrack((Int_t) G__int(libp->para[0]), *(Int_t*) G__Intref(&libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetRpcCalSim*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcCalSim::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcCalSim::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcCalSim::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcCalSim::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcCalSim*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcCalSim::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcCalSim::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcCalSim::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_624_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcCalSim::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_624_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetRpcCalSim* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetRpcCalSim(*(HFwDetRpcCalSim*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcCalSim G__THFwDetRpcCalSim;
static int G__FwDetDict_624_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcCalSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcCalSim*) (soff+(sizeof(HFwDetRpcCalSim)*i)))->~G__THFwDetRpcCalSim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcCalSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcCalSim*) (soff))->~G__THFwDetRpcCalSim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_624_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcCalSim* dest = (HFwDetRpcCalSim*) G__getstructoffset();
   *dest = *(HFwDetRpcCalSim*) libp->para[0].ref;
   const HFwDetRpcCalSim& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcDigiPar */
static int G__FwDetDict_627_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcDigiPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcDigiPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetRpcDigiPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcDigiPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetRpcDigiPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcDigiPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetRpcDigiPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetRpcDigiPar[n];
       } else {
         p = new((void*) gvp) HFwDetRpcDigiPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetRpcDigiPar;
       } else {
         p = new((void*) gvp) HFwDetRpcDigiPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcDigiPar*) G__getstructoffset())->getRpcRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetRpcDigiPar*) G__getstructoffset())->getNRpcCells());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcDigiPar*) G__getstructoffset())->setRpcRadius((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcDigiPar*) G__getstructoffset())->setNRpcCells((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcDigiPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcDigiPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcDigiPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcDigiPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcDigiPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcDigiPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcDigiPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcDigiPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_627_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcDigiPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_627_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetRpcDigiPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetRpcDigiPar(*(HFwDetRpcDigiPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcDigiPar G__THFwDetRpcDigiPar;
static int G__FwDetDict_627_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcDigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcDigiPar*) (soff+(sizeof(HFwDetRpcDigiPar)*i)))->~G__THFwDetRpcDigiPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcDigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcDigiPar*) (soff))->~G__THFwDetRpcDigiPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_627_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcDigiPar* dest = (HFwDetRpcDigiPar*) G__getstructoffset();
   *dest = *(HFwDetRpcDigiPar*) libp->para[0].ref;
   const HFwDetRpcDigiPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcDigitizer */
static int G__FwDetDict_629_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcDigitizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcDigitizer[n];
     } else {
       p = new((void*) gvp) HFwDetRpcDigitizer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcDigitizer;
     } else {
       p = new((void*) gvp) HFwDetRpcDigitizer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcDigitizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetRpcDigitizer((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HFwDetRpcDigitizer((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcDigitizer*) G__getstructoffset())->initVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HFwDetRpcDigitizer*) G__getstructoffset())->findStrip((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcDigitizer*) G__getstructoffset())->processHits(*(RpcTrackHits*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HFwDetRpcDigitizer*) G__getstructoffset())->calculateHit((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Float_t) G__double(libp->para[4]), (Int_t) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HFwDetRpcDigitizer*) G__getstructoffset())->fillHit(*(HFwDetRpcDigitizer::ClusterFields*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcDigitizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcDigitizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcDigitizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcDigitizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcDigitizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcDigitizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcDigitizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcDigitizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_629_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcDigitizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcDigitizer G__THFwDetRpcDigitizer;
static int G__FwDetDict_629_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcDigitizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcDigitizer*) (soff+(sizeof(HFwDetRpcDigitizer)*i)))->~G__THFwDetRpcDigitizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcDigitizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcDigitizer*) (soff))->~G__THFwDetRpcDigitizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcHit */
static int G__FwDetDict_632_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcHit* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcHit[n];
     } else {
       p = new((void*) gvp) HFwDetRpcHit[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcHit;
     } else {
       p = new((void*) gvp) HFwDetRpcHit;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHit*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHit*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHit*) G__getstructoffset())->getZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHit*) G__getstructoffset())->getTof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHit*) G__getstructoffset())->getP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetRpcHit*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHit*) G__getstructoffset())->getDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHit*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetRpcHit*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHit*) G__getstructoffset())->setP((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHit*) G__getstructoffset())->setTrack((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HFwDetRpcHit*) G__getstructoffset())->calcMomentum((Float_t) G__double(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) HFwDetRpcHit::calcMomentum((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetRpcHit*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcHit::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHit::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcHit::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcHit::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHit*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHit::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcHit::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHit::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_632_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcHit::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_632_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetRpcHit* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetRpcHit(*(HFwDetRpcHit*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcHit G__THFwDetRpcHit;
static int G__FwDetDict_632_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcHit*) (soff+(sizeof(HFwDetRpcHit)*i)))->~G__THFwDetRpcHit();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcHit*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcHit*) (soff))->~G__THFwDetRpcHit();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_632_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcHit* dest = (HFwDetRpcHit*) G__getstructoffset();
   *dest = *(HFwDetRpcHit*) libp->para[0].ref;
   const HFwDetRpcHit& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcHitFinderPar */
static int G__FwDetDict_633_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcHitFinderPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcHitFinderPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetRpcHitFinderPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcHitFinderPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetRpcHitFinderPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcHitFinderPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetRpcHitFinderPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetRpcHitFinderPar[n];
       } else {
         p = new((void*) gvp) HFwDetRpcHitFinderPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetRpcHitFinderPar;
       } else {
         p = new((void*) gvp) HFwDetRpcHitFinderPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHitFinderPar*) G__getstructoffset())->getMatchRadius());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetRpcHitFinderPar*) G__getstructoffset())->getMatchTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHitFinderPar*) G__getstructoffset())->setMatchRadius((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHitFinderPar*) G__getstructoffset())->setMatchTime((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetRpcHitFinderPar*) G__getstructoffset())->printParam();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcHitFinderPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHitFinderPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcHitFinderPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcHitFinderPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHitFinderPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHitFinderPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcHitFinderPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHitFinderPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_633_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcHitFinderPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_633_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetRpcHitFinderPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetRpcHitFinderPar(*(HFwDetRpcHitFinderPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcHitFinderPar G__THFwDetRpcHitFinderPar;
static int G__FwDetDict_633_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcHitFinderPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcHitFinderPar*) (soff+(sizeof(HFwDetRpcHitFinderPar)*i)))->~G__THFwDetRpcHitFinderPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcHitFinderPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcHitFinderPar*) (soff))->~G__THFwDetRpcHitFinderPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_633_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcHitFinderPar* dest = (HFwDetRpcHitFinderPar*) G__getstructoffset();
   *dest = *(HFwDetRpcHitFinderPar*) libp->para[0].ref;
   const HFwDetRpcHitFinderPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetRpcHitFinder */
static int G__FwDetDict_634_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcHitFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcHitFinder[n];
     } else {
       p = new((void*) gvp) HFwDetRpcHitFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetRpcHitFinder;
     } else {
       p = new((void*) gvp) HFwDetRpcHitFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetRpcHitFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetRpcHitFinder((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HFwDetRpcHitFinder((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHitFinder*) G__getstructoffset())->initVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HFwDetRpcHitFinder*) G__getstructoffset())->fillHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3])
, (Int_t) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetRpcHitFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHitFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetRpcHitFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetRpcHitFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetRpcHitFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHitFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcHitFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetRpcHitFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_634_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetRpcHitFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetRpcHitFinder G__THFwDetRpcHitFinder;
static int G__FwDetDict_634_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetRpcHitFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetRpcHitFinder*) (soff+(sizeof(HFwDetRpcHitFinder)*i)))->~G__THFwDetRpcHitFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetRpcHitFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetRpcHitFinder*) (soff))->~G__THFwDetRpcHitFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetScinCal */
static int G__FwDetDict_635_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinCal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinCal[n];
     } else {
       p = new((void*) gvp) HFwDetScinCal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinCal;
     } else {
       p = new((void*) gvp) HFwDetScinCal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetScinCal*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetScinCal*) G__getstructoffset())->getAddress(*(Char_t*) G__Charref(&libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(Char_t*) G__Charref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetScinCal*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCal*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCal*) G__getstructoffset())->setAddress((const Char_t) G__int(libp->para[0]), (const Char_t) G__int(libp->para[1])
, (const Char_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCal*) G__getstructoffset())->setHit((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetScinCal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinCal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetScinCal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetScinCal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinCal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinCal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinCal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_635_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinCal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_635_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetScinCal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetScinCal(*(HFwDetScinCal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetScinCal G__THFwDetScinCal;
static int G__FwDetDict_635_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetScinCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetScinCal*) (soff+(sizeof(HFwDetScinCal)*i)))->~G__THFwDetScinCal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetScinCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetScinCal*) (soff))->~G__THFwDetScinCal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_635_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinCal* dest = (HFwDetScinCal*) G__getstructoffset();
   *dest = *(HFwDetScinCal*) libp->para[0].ref;
   const HFwDetScinCal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetScinCalSim */
static int G__FwDetDict_636_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinCalSim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinCalSim[n];
     } else {
       p = new((void*) gvp) HFwDetScinCalSim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinCalSim;
     } else {
       p = new((void*) gvp) HFwDetScinCalSim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetScinCalSim*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetScinCalSim*) G__getstructoffset())->getAddress(*(Char_t*) G__Charref(&libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(Char_t*) G__Charref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetScinCalSim*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCalSim*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCalSim*) G__getstructoffset())->setAddress((const Char_t) G__int(libp->para[0]), (const Char_t) G__int(libp->para[1])
, (const Char_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCalSim*) G__getstructoffset())->setHit((const Float_t) G__double(libp->para[0]), (const Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetScinCalSim::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinCalSim::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetScinCalSim::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetScinCalSim::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinCalSim*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinCalSim::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinCalSim::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinCalSim::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_636_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinCalSim::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_636_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetScinCalSim* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetScinCalSim(*(HFwDetScinCalSim*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetScinCalSim G__THFwDetScinCalSim;
static int G__FwDetDict_636_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetScinCalSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetScinCalSim*) (soff+(sizeof(HFwDetScinCalSim)*i)))->~G__THFwDetScinCalSim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetScinCalSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetScinCalSim*) (soff))->~G__THFwDetScinCalSim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_636_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinCalSim* dest = (HFwDetScinCalSim*) G__getstructoffset();
   *dest = *(HFwDetScinCalSim*) libp->para[0].ref;
   const HFwDetScinCalSim& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetScinDigiPar */
static int G__FwDetDict_637_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinDigiPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinDigiPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetScinDigiPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinDigiPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetScinDigiPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinDigiPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetScinDigiPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetScinDigiPar[n];
       } else {
         p = new((void*) gvp) HFwDetScinDigiPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetScinDigiPar;
       } else {
         p = new((void*) gvp) HFwDetScinDigiPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetScinDigiPar*) G__getstructoffset())->getNScinCells());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetScinDigiPar*) G__getstructoffset())->getScinSize(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinDigiPar*) G__getstructoffset())->setNScinCells((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinDigiPar*) G__getstructoffset())->setScinSize((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetScinDigiPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinDigiPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetScinDigiPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetScinDigiPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinDigiPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinDigiPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinDigiPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinDigiPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_637_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinDigiPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_637_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetScinDigiPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetScinDigiPar(*(HFwDetScinDigiPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetScinDigiPar G__THFwDetScinDigiPar;
static int G__FwDetDict_637_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetScinDigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetScinDigiPar*) (soff+(sizeof(HFwDetScinDigiPar)*i)))->~G__THFwDetScinDigiPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetScinDigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetScinDigiPar*) (soff))->~G__THFwDetScinDigiPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_637_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinDigiPar* dest = (HFwDetScinDigiPar*) G__getstructoffset();
   *dest = *(HFwDetScinDigiPar*) libp->para[0].ref;
   const HFwDetScinDigiPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetScinDigitizer */
static int G__FwDetDict_638_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinDigitizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinDigitizer[n];
     } else {
       p = new((void*) gvp) HFwDetScinDigitizer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetScinDigitizer;
     } else {
       p = new((void*) gvp) HFwDetScinDigitizer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetScinDigitizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetScinDigitizer((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HFwDetScinDigitizer((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinDigitizer*) G__getstructoffset())->initVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetScinDigitizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinDigitizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetScinDigitizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetScinDigitizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetScinDigitizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinDigitizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinDigitizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetScinDigitizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_638_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetScinDigitizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetScinDigitizer G__THFwDetScinDigitizer;
static int G__FwDetDict_638_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetScinDigitizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetScinDigitizer*) (soff+(sizeof(HFwDetScinDigitizer)*i)))->~G__THFwDetScinDigitizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetScinDigitizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetScinDigitizer*) (soff))->~G__THFwDetScinDigitizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetStrawGeomPar */
static int G__FwDetDict_641_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawGeomPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawGeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetStrawGeomPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawGeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetStrawGeomPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawGeomPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetStrawGeomPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetStrawGeomPar[n];
       } else {
         p = new((void*) gvp) HFwDetStrawGeomPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetStrawGeomPar;
       } else {
         p = new((void*) gvp) HFwDetStrawGeomPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getLayers((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getStraws((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getStrawRadius((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getStrawPitch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getOffsetZ((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getOffsetX((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawGeomPar*) G__getstructoffset())->getLayerRotation((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setModules((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setLayers((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setStraws((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setStrawRadius((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setStrawPitch((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setOffsetZ((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setOffsetX((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->setLayerRotation((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetStrawGeomPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawGeomPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetStrawGeomPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetStrawGeomPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawGeomPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawGeomPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawGeomPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawGeomPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_641_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawGeomPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_641_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetStrawGeomPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetStrawGeomPar(*(HFwDetStrawGeomPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetStrawGeomPar G__THFwDetStrawGeomPar;
static int G__FwDetDict_641_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetStrawGeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetStrawGeomPar*) (soff+(sizeof(HFwDetStrawGeomPar)*i)))->~G__THFwDetStrawGeomPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetStrawGeomPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetStrawGeomPar*) (soff))->~G__THFwDetStrawGeomPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_641_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawGeomPar* dest = (HFwDetStrawGeomPar*) G__getstructoffset();
   *dest = *(HFwDetStrawGeomPar*) libp->para[0].ref;
   const HFwDetStrawGeomPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetStrawCal */
static int G__FwDetDict_643_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawCal* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawCal[n];
     } else {
       p = new((void*) gvp) HFwDetStrawCal[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawCal;
     } else {
       p = new((void*) gvp) HFwDetStrawCal;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetStrawCal*) G__getstructoffset())->getAddress(*(Char_t*) G__Charref(&libp->para[0]), *(Char_t*) G__Charref(&libp->para[1])
, *(Char_t*) G__Charref(&libp->para[2]), *(Int_t*) G__Intref(&libp->para[3])
, *(Char_t*) G__Charref(&libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetStrawCal*) G__getstructoffset())->getHit(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]), *(Float_t*) G__Floatref(&libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawCal*) G__getstructoffset())->getStation());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawCal*) G__getstructoffset())->getLayer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawCal*) G__getstructoffset())->getPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawCal*) G__getstructoffset())->getStraw());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawCal*) G__getstructoffset())->getTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawCal*) G__getstructoffset())->getU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawCal*) G__getstructoffset())->getUDconf());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCal*) G__getstructoffset())->setAddress((Char_t) G__int(libp->para[0]), (Char_t) G__int(libp->para[1])
, (Char_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Char_t) G__int(libp->para[4]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCal*) G__getstructoffset())->setHit((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]), (Float_t) G__double(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawCal*) G__getstructoffset())->getVPlane());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawCal::getVPlane((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetStrawCal::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawCal::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetStrawCal::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetStrawCal::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCal*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawCal::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawCal::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawCal::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_643_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawCal::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_643_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetStrawCal* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetStrawCal(*(HFwDetStrawCal*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetStrawCal G__THFwDetStrawCal;
static int G__FwDetDict_643_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetStrawCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetStrawCal*) (soff+(sizeof(HFwDetStrawCal)*i)))->~G__THFwDetStrawCal();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetStrawCal*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetStrawCal*) (soff))->~G__THFwDetStrawCal();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_643_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawCal* dest = (HFwDetStrawCal*) G__getstructoffset();
   *dest = *(HFwDetStrawCal*) libp->para[0].ref;
   const HFwDetStrawCal& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetStrawCalSim */
static int G__FwDetDict_644_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawCalSim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawCalSim[n];
     } else {
       p = new((void*) gvp) HFwDetStrawCalSim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawCalSim;
     } else {
       p = new((void*) gvp) HFwDetStrawCalSim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetStrawCalSim*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HFwDetStrawCalSim*) G__getstructoffset())->getToF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HFwDetStrawCalSim*) G__getstructoffset())->getDrift());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HFwDetStrawCalSim*) G__getstructoffset())->getEloss());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCalSim*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCalSim*) G__getstructoffset())->setToF((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCalSim*) G__getstructoffset())->setDrift((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCalSim*) G__getstructoffset())->setEloss((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HFwDetStrawCalSim*) G__getstructoffset())->getP());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetStrawCalSim*) G__getstructoffset())->getP(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCalSim*) G__getstructoffset())->setP((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HFwDetStrawCalSim*) G__getstructoffset())->getHitPos(*(Float_t*) G__Floatref(&libp->para[0]), *(Float_t*) G__Floatref(&libp->para[1])
, *(Float_t*) G__Floatref(&libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCalSim*) G__getstructoffset())->setHitPos((Float_t) G__double(libp->para[0]), (Float_t) G__double(libp->para[1])
, (Float_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetStrawCalSim::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawCalSim::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetStrawCalSim::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetStrawCalSim::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawCalSim*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawCalSim::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawCalSim::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawCalSim::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_644_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawCalSim::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_644_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetStrawCalSim* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetStrawCalSim(*(HFwDetStrawCalSim*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetStrawCalSim G__THFwDetStrawCalSim;
static int G__FwDetDict_644_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetStrawCalSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetStrawCalSim*) (soff+(sizeof(HFwDetStrawCalSim)*i)))->~G__THFwDetStrawCalSim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetStrawCalSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetStrawCalSim*) (soff))->~G__THFwDetStrawCalSim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_644_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawCalSim* dest = (HFwDetStrawCalSim*) G__getstructoffset();
   *dest = *(HFwDetStrawCalSim*) libp->para[0].ref;
   const HFwDetStrawCalSim& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetStrawDigiPar */
static int G__FwDetDict_645_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawDigiPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawDigiPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetStrawDigiPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawDigiPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetStrawDigiPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawDigiPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetStrawDigiPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetStrawDigiPar[n];
       } else {
         p = new((void*) gvp) HFwDetStrawDigiPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetStrawDigiPar;
       } else {
         p = new((void*) gvp) HFwDetStrawDigiPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getAnalogReso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getElossSlope());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getElossOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getTimeReso());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getDriftTimePar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getDriftRadiusPar((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getStartOffset());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getThreshold());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetStrawDigiPar*) G__getstructoffset())->getEfficiency());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setAnalogReso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setElossSlope((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setElossOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setTimeReso((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setDriftTimePar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setDriftRadiusPar((Int_t) G__int(libp->para[0]), (Float_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setStartOffset((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setThreshold((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->setEfficiency((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetStrawDigiPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawDigiPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetStrawDigiPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetStrawDigiPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigiPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawDigiPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawDigiPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawDigiPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_645_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawDigiPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_645_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetStrawDigiPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetStrawDigiPar(*(HFwDetStrawDigiPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetStrawDigiPar G__THFwDetStrawDigiPar;
static int G__FwDetDict_645_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetStrawDigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetStrawDigiPar*) (soff+(sizeof(HFwDetStrawDigiPar)*i)))->~G__THFwDetStrawDigiPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetStrawDigiPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetStrawDigiPar*) (soff))->~G__THFwDetStrawDigiPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_645_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawDigiPar* dest = (HFwDetStrawDigiPar*) G__getstructoffset();
   *dest = *(HFwDetStrawDigiPar*) libp->para[0].ref;
   const HFwDetStrawDigiPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetStrawDigitizer */
static int G__FwDetDict_646_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawDigitizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawDigitizer[n];
     } else {
       p = new((void*) gvp) HFwDetStrawDigitizer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetStrawDigitizer;
     } else {
       p = new((void*) gvp) HFwDetStrawDigitizer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetStrawDigitizer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetStrawDigitizer((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HFwDetStrawDigitizer((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigitizer*) G__getstructoffset())->initVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetStrawDigitizer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawDigitizer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetStrawDigitizer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetStrawDigitizer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetStrawDigitizer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawDigitizer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawDigitizer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetStrawDigitizer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_646_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetStrawDigitizer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetStrawDigitizer G__THFwDetStrawDigitizer;
static int G__FwDetDict_646_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetStrawDigitizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetStrawDigitizer*) (soff+(sizeof(HFwDetStrawDigitizer)*i)))->~G__THFwDetStrawDigitizer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetStrawDigitizer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetStrawDigitizer*) (soff))->~G__THFwDetStrawDigitizer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetVectorFinderPar */
static int G__FwDetDict_746_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetVectorFinderPar* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetVectorFinderPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HFwDetVectorFinderPar(
(const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1])
, (const Char_t*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetVectorFinderPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HFwDetVectorFinderPar((const Char_t*) G__int(libp->para[0]), (const Char_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetVectorFinderPar((const Char_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HFwDetVectorFinderPar((const Char_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetVectorFinderPar[n];
       } else {
         p = new((void*) gvp) HFwDetVectorFinderPar[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HFwDetVectorFinderPar;
       } else {
         p = new((void*) gvp) HFwDetVectorFinderPar;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getCutX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getCutY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getLRCutChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getHRCutChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getLRErrU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getHRErrU());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getTubesD());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getMaxBest());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFwDetVectorFinderPar*) G__getstructoffset())->getNpass());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setCutX((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setCutY((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setLRCutChi2((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setHRCutChi2((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setLRErrU((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setHRErrU((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setTubesD((const Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setMaxBest((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->setNpass((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetVectorFinderPar::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetVectorFinderPar::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetVectorFinderPar::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetVectorFinderPar::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinderPar*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetVectorFinderPar::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetVectorFinderPar::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetVectorFinderPar::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_746_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetVectorFinderPar::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_746_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HFwDetVectorFinderPar* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HFwDetVectorFinderPar(*(HFwDetVectorFinderPar*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetVectorFinderPar G__THFwDetVectorFinderPar;
static int G__FwDetDict_746_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetVectorFinderPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetVectorFinderPar*) (soff+(sizeof(HFwDetVectorFinderPar)*i)))->~G__THFwDetVectorFinderPar();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetVectorFinderPar*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetVectorFinderPar*) (soff))->~G__THFwDetVectorFinderPar();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_746_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetVectorFinderPar* dest = (HFwDetVectorFinderPar*) G__getstructoffset();
   *dest = *(HFwDetVectorFinderPar*) libp->para[0].ref;
   const HFwDetVectorFinderPar& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HVectorCand */
static int G__FwDetDict_747_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HVectorCand* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HVectorCand[n];
     } else {
       p = new((void*) gvp) HVectorCand[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HVectorCand;
     } else {
       p = new((void*) gvp) HVectorCand;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HVectorCand*) G__getstructoffset())->getNofHits());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HVectorCand*) G__getstructoffset())->getNDF());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getTx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getTy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HVectorCand*) G__getstructoffset())->getTof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HVectorCand*) G__getstructoffset())->getDistance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getHadesZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getHadesR());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getHadesTheta());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCand*) G__getstructoffset())->getHadesPhi());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HVectorCand*) G__getstructoffset())->getHadesParams((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HVectorCand*) G__getstructoffset())->getHitIndex((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TBits& obj = ((const HVectorCand*) G__getstructoffset())->getLR();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HVectorCand*) G__getstructoffset())->getParams((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TMatrixDSym* pobj;
         const TMatrixDSym xobj = ((const HVectorCand*) G__getstructoffset())->getCovarMatr();
         pobj = new TMatrixDSym(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setNDF((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setChi2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setZ((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setTof((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setDistance((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setLRbit((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HVectorCand*) G__getstructoffset())->addHit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setCovar(*((TMatrixDSym*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->setParams((Double_t*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->calc4vectorProperties((Double_t) G__double(libp->para[0]), (Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->calc4vectorProperties((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TVector3& obj = ((const HVectorCand*) G__getstructoffset())->getReferenceVector();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HVectorCand*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HVectorCand::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVectorCand::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HVectorCand::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HVectorCand::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCand*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVectorCand::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HVectorCand::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVectorCand::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_747_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HVectorCand::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_747_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HVectorCand* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HVectorCand(*(HVectorCand*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HVectorCand G__THVectorCand;
static int G__FwDetDict_747_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HVectorCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HVectorCand*) (soff+(sizeof(HVectorCand)*i)))->~G__THVectorCand();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HVectorCand*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HVectorCand*) (soff))->~G__THVectorCand();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_747_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HVectorCand* dest = (HVectorCand*) G__getstructoffset();
   *dest = *(HVectorCand*) libp->para[0].ref;
   const HVectorCand& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFwDetVectorFinder */
static int G__FwDetDict_749_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetVectorFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetVectorFinder[n];
     } else {
       p = new((void*) gvp) HFwDetVectorFinder[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HFwDetVectorFinder;
     } else {
       p = new((void*) gvp) HFwDetVectorFinder;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFwDetVectorFinder* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HFwDetVectorFinder((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HFwDetVectorFinder((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinder*) G__getstructoffset())->initVariables();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinder*) G__getstructoffset())->clear();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFwDetVectorFinder::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetVectorFinder::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFwDetVectorFinder::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFwDetVectorFinder::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFwDetVectorFinder*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetVectorFinder::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetVectorFinder::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFwDetVectorFinder::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_749_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFwDetVectorFinder::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFwDetVectorFinder G__THFwDetVectorFinder;
static int G__FwDetDict_749_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFwDetVectorFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFwDetVectorFinder*) (soff+(sizeof(HFwDetVectorFinder)*i)))->~G__THFwDetVectorFinder();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFwDetVectorFinder*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFwDetVectorFinder*) (soff))->~G__THFwDetVectorFinder();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HVectorCandSim */
static int G__FwDetDict_789_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HVectorCandSim* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HVectorCandSim[n];
     } else {
       p = new((void*) gvp) HVectorCandSim[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HVectorCandSim;
     } else {
       p = new((void*) gvp) HVectorCandSim;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HVectorCandSim*) G__getstructoffset())->getTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HVectorCandSim*) G__getstructoffset())->getRpcTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getPx1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getPy1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getPz1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getPx2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getPy2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getPz2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getX1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getY1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getZ1());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getX2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getY2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HVectorCandSim*) G__getstructoffset())->getZ2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setRpcTrack((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setPx1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setPy1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setPz1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setPx2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setPy2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setPz2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setX1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setY1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setZ1((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setX2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setY2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->setZ2((Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HVectorCandSim*) G__getstructoffset())->getSimTx());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((const HVectorCandSim*) G__getstructoffset())->getSimTy());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const HVectorCandSim*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HVectorCandSim::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVectorCandSim::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HVectorCandSim::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HVectorCandSim::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVectorCandSim*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVectorCandSim::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HVectorCandSim::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVectorCandSim::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__FwDetDict_789_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HVectorCandSim::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__FwDetDict_789_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HVectorCandSim* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HVectorCandSim(*(HVectorCandSim*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HVectorCandSim G__THVectorCandSim;
static int G__FwDetDict_789_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HVectorCandSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HVectorCandSim*) (soff+(sizeof(HVectorCandSim)*i)))->~G__THVectorCandSim();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HVectorCandSim*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HVectorCandSim*) (soff))->~G__THVectorCandSim();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__FwDetDict_789_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HVectorCandSim* dest = (HVectorCandSim*) G__getstructoffset();
   *dest = *(HVectorCandSim*) libp->para[0].ref;
   const HVectorCandSim& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HFwDetDetector */

/* HFwDetContFact */

/* HFwDetParRootFileIo */

/* HFwDetParAsciiFileIo */

/* HFwDetGeomPar */

/* HFwDetTaskSet */

/* HFwDetRpcGeomPar */

/* HFwDetRpcCal */

/* HFwDetRpcCalSim */

/* HFwDetRpcDigiPar */

/* HFwDetRpcDigitizer */

/* HFwDetRpcHit */

/* HFwDetRpcHitFinderPar */

/* HFwDetRpcHitFinder */

/* HFwDetScinCal */

/* HFwDetScinCalSim */

/* HFwDetScinDigiPar */

/* HFwDetScinDigitizer */

/* HFwDetStrawGeomPar */

/* HFwDetStrawCal */

/* HFwDetStrawCalSim */

/* HFwDetStrawDigiPar */

/* HFwDetStrawDigitizer */

/* HFwDetVectorFinderPar */

/* HVectorCand */

/* HFwDetVectorFinder */

/* HVectorCandSim */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncFwDetDict {
 public:
  G__Sizep2memfuncFwDetDict(): p(&G__Sizep2memfuncFwDetDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncFwDetDict::*p)();
};

size_t G__get_sizep2memfuncFwDetDict()
{
  G__Sizep2memfuncFwDetDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceFwDetDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector))) {
     HFwDetDetector *G__Lderived;
     G__Lderived=(HFwDetDetector*)0x1000;
     {
       HDetector *G__Lpbase=(HDetector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector),G__get_linked_tagnum(&G__FwDetDictLN_HDetector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact))) {
     HFwDetContFact *G__Lderived;
     G__Lderived=(HFwDetContFact*)0x1000;
     {
       HContFact *G__Lpbase=(HContFact*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact),G__get_linked_tagnum(&G__FwDetDictLN_HContFact),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo))) {
     HFwDetParRootFileIo *G__Lderived;
     G__Lderived=(HFwDetParRootFileIo*)0x1000;
     {
       HDetParRootFileIo *G__Lpbase=(HDetParRootFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo),G__get_linked_tagnum(&G__FwDetDictLN_HDetParRootFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo),G__get_linked_tagnum(&G__FwDetDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo))) {
     HFwDetParAsciiFileIo *G__Lderived;
     G__Lderived=(HFwDetParAsciiFileIo*)0x1000;
     {
       HDetParAsciiFileIo *G__Lpbase=(HDetParAsciiFileIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo),G__get_linked_tagnum(&G__FwDetDictLN_HDetParAsciiFileIo),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDetParIo *G__Lpbase=(HDetParIo*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo),G__get_linked_tagnum(&G__FwDetDictLN_HDetParIo),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar))) {
     HFwDetGeomPar *G__Lderived;
     G__Lderived=(HFwDetGeomPar*)0x1000;
     {
       HDetGeomPar *G__Lpbase=(HDetGeomPar*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_HDetGeomPar),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet))) {
     HFwDetTaskSet *G__Lderived;
     G__Lderived=(HFwDetTaskSet*)0x1000;
     {
       HTaskSet *G__Lpbase=(HTaskSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet),G__get_linked_tagnum(&G__FwDetDictLN_HTaskSet),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet),G__get_linked_tagnum(&G__FwDetDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar))) {
     HFwDetRpcGeomPar *G__Lderived;
     G__Lderived=(HFwDetRpcGeomPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal))) {
     HFwDetRpcCal *G__Lderived;
     G__Lderived=(HFwDetRpcCal*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim))) {
     HFwDetRpcCalSim *G__Lderived;
     G__Lderived=(HFwDetRpcCalSim*)0x1000;
     {
       HFwDetRpcCal *G__Lpbase=(HFwDetRpcCal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim),G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar))) {
     HFwDetRpcDigiPar *G__Lderived;
     G__Lderived=(HFwDetRpcDigiPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer))) {
     HFwDetRpcDigitizer *G__Lderived;
     G__Lderived=(HFwDetRpcDigitizer*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit))) {
     HFwDetRpcHit *G__Lderived;
     G__Lderived=(HFwDetRpcHit*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar))) {
     HFwDetRpcHitFinderPar *G__Lderived;
     G__Lderived=(HFwDetRpcHitFinderPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder))) {
     HFwDetRpcHitFinder *G__Lderived;
     G__Lderived=(HFwDetRpcHitFinder*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder),G__get_linked_tagnum(&G__FwDetDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder),G__get_linked_tagnum(&G__FwDetDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal))) {
     HFwDetScinCal *G__Lderived;
     G__Lderived=(HFwDetScinCal*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim))) {
     HFwDetScinCalSim *G__Lderived;
     G__Lderived=(HFwDetScinCalSim*)0x1000;
     {
       HFwDetScinCal *G__Lpbase=(HFwDetScinCal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim),G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar))) {
     HFwDetScinDigiPar *G__Lderived;
     G__Lderived=(HFwDetScinDigiPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer))) {
     HFwDetScinDigitizer *G__Lderived;
     G__Lderived=(HFwDetScinDigitizer*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar))) {
     HFwDetStrawGeomPar *G__Lderived;
     G__Lderived=(HFwDetStrawGeomPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal))) {
     HFwDetStrawCal *G__Lderived;
     G__Lderived=(HFwDetStrawCal*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim))) {
     HFwDetStrawCalSim *G__Lderived;
     G__Lderived=(HFwDetStrawCalSim*)0x1000;
     {
       HFwDetStrawCal *G__Lpbase=(HFwDetStrawCal*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim),G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar))) {
     HFwDetStrawDigiPar *G__Lderived;
     G__Lderived=(HFwDetStrawDigiPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer))) {
     HFwDetStrawDigitizer *G__Lderived;
     G__Lderived=(HFwDetStrawDigitizer*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar))) {
     HFwDetVectorFinderPar *G__Lderived;
     G__Lderived=(HFwDetVectorFinderPar*)0x1000;
     {
       HParCond *G__Lpbase=(HParCond*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_HParCond),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParSet *G__Lpbase=(HParSet*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_HParSet),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand))) {
     HVectorCand *G__Lderived;
     G__Lderived=(HVectorCand*)0x1000;
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand),G__get_linked_tagnum(&G__FwDetDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder))) {
     HFwDetVectorFinder *G__Lderived;
     G__Lderived=(HFwDetVectorFinder*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder),G__get_linked_tagnum(&G__FwDetDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder),G__get_linked_tagnum(&G__FwDetDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder),G__get_linked_tagnum(&G__FwDetDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_TLorentzVector))) {
     TLorentzVector *G__Lderived;
     G__Lderived=(TLorentzVector*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_TLorentzVector),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim))) {
     HVectorCandSim *G__Lderived;
     G__Lderived=(HVectorCandSim*)0x1000;
     {
       HVectorCand *G__Lpbase=(HVectorCand*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim),G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TLorentzVector *G__Lpbase=(TLorentzVector*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim),G__get_linked_tagnum(&G__FwDetDictLN_TLorentzVector),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim),G__get_linked_tagnum(&G__FwDetDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableFwDetDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__FwDetDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Cat_t",115,-1,0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixDSym",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<Int_t,Int_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_pairlEintcOintgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("HitPair",117,G__get_linked_tagnum(&G__FwDetDictLN_pairlEintcOintgR),0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("DoubletPair",117,G__get_linked_tagnum(&G__FwDetDictLN_pairlEintcOintgR),0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<Int_t,Int_t>",117,G__get_linked_tagnum(&G__FwDetDictLN_multimaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<int,int>",117,G__get_linked_tagnum(&G__FwDetDictLN_multimaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<int,int,less<int> >",117,G__get_linked_tagnum(&G__FwDetDictLN_multimaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HVectorCand*>",117,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TDecompLU*>",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTDecompLUmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTDecompLUmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TDecompLU*>",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTDecompLUmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTDecompLUmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TDecompLU*,less<int> >",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTDecompLUmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTDecompLUmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<Int_t,TMatrixDSym*>",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTMatrixTSymlEdoublegRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTMatrixTSymlEdoublegRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TMatrixTSym<double>*>",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTMatrixTSymlEdoublegRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTMatrixTSymlEdoublegRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,TMatrixTSym<double>*,less<int> >",117,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTMatrixTSymlEdoublegRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTMatrixTSymlEdoublegRmUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<DoubletPair>",117,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<int,int> >",117,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ComboSet>",117,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEComboSetcOallocatorlEComboSetgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEComboSetcOallocatorlEComboSetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEComboSetcOallocatorlEComboSetgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__FwDetDictLN_reverse_iteratorlEvectorlEComboSetcOallocatorlEComboSetgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEComboSetcOallocatorlEComboSetgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HFwDetDetector */
static void G__setup_memvarHFwDetDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector));
   { HFwDetDetector *p; p=(HFwDetDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetContFact */
static void G__setup_memvarHFwDetContFact(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact));
   { HFwDetContFact *p; p=(HFwDetContFact*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetParRootFileIo */
static void G__setup_memvarHFwDetParRootFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo));
   { HFwDetParRootFileIo *p; p=(HFwDetParRootFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetParAsciiFileIo */
static void G__setup_memvarHFwDetParAsciiFileIo(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo));
   { HFwDetParAsciiFileIo *p; p=(HFwDetParAsciiFileIo*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetGeomPar */
static void G__setup_memvarHFwDetGeomPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar));
   { HFwDetGeomPar *p; p=(HFwDetGeomPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetTaskSet */
static void G__setup_memvarHFwDetTaskSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet));
   { HFwDetTaskSet *p; p=(HFwDetTaskSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doStrawRaw=",0,"unpacker (exp)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doStrawCal=",0,"calibrater (exp), digitizer (sim)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doScinRaw=",0,"unpacker (exp)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doScinCal=",0,"calibrater (exp), digitizer (sim)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doRpcRaw=",0,"unpacker (exp)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doRpcCal=",0,"calibrater (exp), digitizer (sim)");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doRpcHitF=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"doVectorFinder=",0,"tracker (exp,sim)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcGeomPar */
static void G__setup_memvarHFwDetRpcGeomPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar));
   { HFwDetRpcGeomPar *p; p=(HFwDetRpcGeomPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nModules=",0,"number of modules (stations)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomParcLcLSingleModule),-1,-1,4,"sm_mods[2]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcCal */
static void G__setup_memvarHFwDetRpcCal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal));
   { HFwDetRpcCal *p; p=(HFwDetRpcCal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fModule=",0,"module number (0..1 for Rpc modules)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,2,"fLayer=",0,"geant cell number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fStrip=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTimeL[2]=",0,"time left");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTimeR[2]=",0,"time right");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fChargeL[2]=",0,"charge left");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fChargeR[2]=",0,"charge right");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nHitsNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcCalSim */
static void G__setup_memvarHFwDetRpcCalSim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim));
   { HFwDetRpcCalSim *p; p=(HFwDetRpcCalSim*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->nTrack)-(long)(p)),105,0,0,-1,G__defined_typename("Int_t"),-1,1,"nTrack[2]=",0,"geant track contributing to the hit");
   G__memvar_setup((void*)((long)(&p->fX)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fX[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fY)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fY[2]=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->fTof)-(long)(p)),102,0,0,-1,G__defined_typename("Float_t"),-1,1,"fTof[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcDigiPar */
static void G__setup_memvarHFwDetRpcDigiPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar));
   { HFwDetRpcDigiPar *p; p=(HFwDetRpcDigiPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nRpcCells=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"rpcRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcDigitizer */
static void G__setup_memvarHFwDetRpcDigitizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer));
   { HFwDetRpcDigitizer *p; p=(HFwDetRpcDigitizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pGeantFwDetCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pFwDetRpcCalCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar),-1,-1,4,"pFwDetRpcDigiPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar),-1,-1,4,"pFwDetRpcGeomPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"x=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"y=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sina[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"cosa[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"offset[2][2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HLocation),-1,-1,4,"fLoc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcHit */
static void G__setup_memvarHFwDetRpcHit(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit));
   { HFwDetRpcHit *p; p=(HFwDetRpcHit*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fX=",0,"pos coordinates");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fY=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fZ=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTof=",0,"time of flight");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fP=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrack=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcHitFinderPar */
static void G__setup_memvarHFwDetRpcHitFinderPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar));
   { HFwDetRpcHitFinderPar *p; p=(HFwDetRpcHitFinderPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMatchRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fMatchTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetRpcHitFinder */
static void G__setup_memvarHFwDetRpcHitFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder));
   { HFwDetRpcHitFinder *p; p=(HFwDetRpcHitFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pFwDetRpcCalCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pFwDetRpcHitCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar),-1,-1,4,"pFwDetRpcHitFinderPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar),-1,-1,4,"pFwDetRpcGeomPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"module=",0,"FwDet RPC module number (0...1)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"layer=",0,"FwDet RPC layer number (0...1)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"strip=",0,"FwDet RPC layer number (0...31)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HLocation),-1,-1,4,"fLoc=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMatchRadius=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fMatchTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"mod_z[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"avg_z=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetScinCal */
static void G__setup_memvarHFwDetScinCal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal));
   { HFwDetScinCal *p; p=(HFwDetScinCal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrack=",0,"geant track contributing to the hit");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fModule=",0,"module number (0..1 for Scin modules)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fGeantCell=",0,"geant cell number");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fScin=",0,"scintillator cell number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fElos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetScinCalSim */
static void G__setup_memvarHFwDetScinCalSim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim));
   { HFwDetScinCalSim *p; p=(HFwDetScinCalSim*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrack=",0,"geant track contributing to the hit");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fModule=",0,"module number (0..1 for Scin modules)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fGeantCell=",0,"geant cell number");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fScin=",0,"scintillator cell number");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fElos=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetScinDigiPar */
static void G__setup_memvarHFwDetScinDigiPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar));
   { HFwDetScinDigiPar *p; p=(HFwDetScinDigiPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nScinCells=",0,"number of scintillator cells");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TArrayF),-1,-1,2,"fScinSize=",0,"width and height of a single cell");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetScinDigitizer */
static void G__setup_memvarHFwDetScinDigitizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer));
   { HFwDetScinDigitizer *p; p=(HFwDetScinDigitizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"fGeantFwDetCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"fFwDetScinCalCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar),-1,-1,4,"fScinDigiPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HLocation),-1,-1,4,"fLoc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetStrawGeomPar */
static void G__setup_memvarHFwDetStrawGeomPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar));
   { HFwDetStrawGeomPar *p; p=(HFwDetStrawGeomPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nModules=",0,"number of modules (stations)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomParcLcLSingleModule),-1,-1,4,"sm_mods[2]=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetStrawCal */
static void G__setup_memvarHFwDetStrawCal(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal));
   { HFwDetStrawCal *p; p=(HFwDetStrawCal*)0x1000; if (p) { }
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fModule=",0,"module number (0 and 1 for Straw modules)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fLayer=",0,"layer number (0 - 3)");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fPlane=",0,"plane number inside layer (0 or 1)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fStraw=",0,"straw number in the plane");
   G__memvar_setup((void*)0,99,0,0,-1,G__defined_typename("Char_t"),-1,4,"fUpDown=",0,"up-down straw");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTime=",0,"hit detection time (tof + drift_time - start_offset)");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fADC=",0,"straw energy loss");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fU=",0,"U-coordinate in the lab system");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fZ=",0,"Z-coordinate in the lab system");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetStrawCalSim */
static void G__setup_memvarHFwDetStrawCalSim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim));
   { HFwDetStrawCalSim *p; p=(HFwDetStrawCalSim*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrack=",0,"geant track contributing to the hit");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fToF=",0,"ToF to the straw");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDriftRad=",0,"drifta radius");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fEloss=",0,"Eloss in the straw");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPx=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPy=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fPz=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fXhit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fYhit=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fZhit=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetStrawDigiPar */
static void G__setup_memvarHFwDetStrawDigiPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar));
   { HFwDetStrawDigiPar *p; p=(HFwDetStrawDigiPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fAnalogReso=",0,"energy loss resolution");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fElossSlope=",0,"slope and offset fo drif time conversion");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fElossOffset=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTimeReso=",0,"time measurement resolution");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TArrayF),-1,-1,2,"fDriftRadiusPars=",0,"params for time->radius conversion");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TArrayF),-1,-1,2,"fDriftTimePars=",0,"params for radius->time conversion");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fStartOffset=",0,"start derector offset");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fThreshold=",0,"detection threshold");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fEfficiency=",0,"detection efficiency");
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"dt_pars_num=5LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetStrawDigitizer */
static void G__setup_memvarHFwDetStrawDigitizer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer));
   { HFwDetStrawDigitizer *p; p=(HFwDetStrawDigitizer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pGeantFwDetCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pStrawCalCat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar),-1,-1,4,"pStrawDigiPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar),-1,-1,4,"pStrawGeomPar=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HLocation),-1,-1,4,"fLoc=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dt_p[5]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"sina[2][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"cosa[2][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetVectorFinderPar */
static void G__setup_memvarHFwDetVectorFinderPar(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar));
   { HFwDetVectorFinderPar *p; p=(HFwDetVectorFinderPar*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fCutX=",0,"cut parameter for X-cord");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fCutY=",0,"cut parameter for Y-cord");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fLRCutChi2=",0,"cut parameter for low-res Chi2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fHRCutChi2=",0,"cut parameter for high-res Chi2");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fLRErrU=",0,"low-res error of U-coordinate");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fHRErrU=",0,"high-res error of U-coordinate");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"fTubesD=",0,"distance betwen tubes from siliar views");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nMaxBest=",0,"maximum best combinations for a single track");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"nPass=",0,"number of reco passess");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HVectorCand */
static void G__setup_memvarHVectorCand(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand));
   { HVectorCand *p; p=(HVectorCand*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNhits=",0,"number of hits");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNDF=",0,"number of degrees of freedom");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fHitInds[16]=",0,"hit indices in planes");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTof=",0,"associated Tof, -1.0 if none");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fDistance=",0,"distance of flight");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fCovar[10]=",0,"covar. matrix");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double32_t"),-1,4,"fChi2=",0,"chi2");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TVector3),-1,-1,4,"dirVec=",0,"direction vector (momentum)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TVector3),-1,-1,4,"refVec=",0,"reference vector (anchor)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TBits),-1,-1,4,"fLRbits=",0,"bit pattern for left-right drift direction choice (L \"-\", R \"+\")");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFwDetVectorFinder */
static void G__setup_memvarHFwDetVectorFinder(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder));
   { HFwDetVectorFinder *p; p=(HFwDetVectorFinder*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pStrawHits=",0,"Input array of straw hits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pRpcHits=",0,"Input array of rpc hits");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HCategory),-1,-1,4,"pVectorCand=",0,"Output array of vectors");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar),-1,-1,4,"pStrawGeomPar=",0,"straw geometry parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar),-1,-1,4,"pStrawDigiPar=",0,"straw digitizer parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar),-1,-1,4,"pStrawVFPar=",0,"vector finder parameters");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,4,"isSimulation=",0,"flag to mark simulation run");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fNpass=",0,"Number of reco. passes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fIndx0[2]=",0,"start indices of vectors for different passes");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nModules=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nLayers[2]=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_multimaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR),G__defined_typename("multimap<Int_t,Int_t>"),-1,4,"fHitPl[2][8]=",0,"! hit indices on planes vs tube No");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR),G__defined_typename("vector<HVectorCand*>"),-1,4,"fVectors[3]=",0,"! track vectors for stations");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR),G__defined_typename("vector<HVectorCand*>"),-1,4,"fVectorsHigh[2]=",0,"! track vectors for stations (high resolution)");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fUz[16]=",0,"hit position");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fUzHit[16]=",0,"hit no.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fUzTube[16]=",0,"tube no.");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDz[16]=",0,"Z-dist. from the first layer");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fCosa[16]=",0,"cos of the stereo angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fSina[16]=",0,"sin of the stereo angle");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fDrift[16]=",0,"drift time");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ0[2]=",0,"Z-coord. of the first layers");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fLRErrU=",0,"hit meas. error for LR");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fHRErrU=",0,"hit meas. error for HR");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fErrU=",0,"hit meas. error");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fLRCutChi2=",0,"Chi2-cut");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fHRCutChi2=",0,"Chi2-cut");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fTubesD=",0,"distances between tubes");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCutX=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"fCutY=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fMinHits=",0,"Min. number of hits on track to do fit");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTDecompLUmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTDecompLUmUgRsPgRsPgR),G__defined_typename("map<Int_t,TDecompLU*>"),-1,4,"fLus=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_maplEintcOTMatrixTSymlEdoublegRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTMatrixTSymlEdoublegRmUgRsPgRsPgR),G__defined_typename("map<Int_t,TMatrixDSym*>"),-1,4,"fMatr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR),G__defined_typename("vector<DoubletPair>"),-1,4,"fHit[2][4]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand),-1,-1,4,"current_track=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"nMaxBest=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__FwDetDictLN_vectorlEComboSetcOallocatorlEComboSetgRsPgR),G__defined_typename("vector<ComboSet>"),-1,4,"combos=",0,"keeps combinations for best selection");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,4,"dt_p[5]=",0,"drift radius parameters");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HVectorCandSim */
static void G__setup_memvarHVectorCandSim(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim));
   { HVectorCandSim *p; p=(HVectorCandSim*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fTrack=",0,"track number");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fRpcTrack=",0,"the same but for RPC");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPx1=",0,"momentum of the hit in the first straw");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPy1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPz1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPx2=",0,"momentum of the hit in the last straw");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPy2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fPz2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX1=",0,"position of the hit in the first straw");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ1=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fX2=",0,"position of the hit in the last straw");
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fY2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"fZ2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__FwDetDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarFwDetDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHFwDetDetector(void) {
   /* HFwDetDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector));
   G__memfunc_setup("HFwDetDetector",1372,G__FwDetDict_190_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("activateParIo",1324,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("buildCategory",1358,G__FwDetDict_190_0_4, 85, G__get_linked_tagnum(&G__FwDetDictLN_HCategory), -1, 0, 2, 1, 1, 0, 
"s - 'Cat_t' 0 - cat g - 'Bool_t' 0 'kFALSE' simulation", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildMatrixCategory",1987,G__FwDetDict_190_0_5, 85, G__get_linked_tagnum(&G__FwDetDictLN_HCategory), -1, 0, 4, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - f - 'Float_t' 0 '0.5' fillRate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildMatrixCategory",1987,G__FwDetDict_190_0_6, 85, G__get_linked_tagnum(&G__FwDetDictLN_HCategory), -1, 0, 6, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - f - 'Float_t' 0 '0.5' fillRate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildMatrixCategory",1987,G__FwDetDict_190_0_7, 85, G__get_linked_tagnum(&G__FwDetDictLN_HCategory), -1, 0, 7, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"i - 'Int_t' 0 - - i - 'Int_t' 0 - - "
"f - 'Float_t' 0 '0.5' fillRate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildLinearCategory",1961,G__FwDetDict_190_0_8, 85, G__get_linked_tagnum(&G__FwDetDictLN_HCategory), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - i - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxModInSetup",1614,G__FwDetDict_190_0_9, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_190_0_10, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_190_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_190_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_190_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_190_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_190_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_190_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_190_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_190_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetDetector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetDetector", 1372, G__FwDetDict_190_0_22, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector), -1, 0, 1, 1, 1, 0, "u 'HFwDetDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetDetector", 1498, G__FwDetDict_190_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_190_0_24, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetDetector), -1, 1, 1, 1, 1, 0, "u 'HFwDetDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetContFact(void) {
   /* HFwDetContFact */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact));
   G__memfunc_setup("setAllContainers",1659,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetContFact",1332,G__FwDetDict_203_0_2, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("createContainer",1559,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_HParSet), -1, 0, 1, 1, 1, 0, "U 'HContainer' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_203_0_4, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetContFact::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_203_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetContFact::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_203_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetContFact::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_203_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetContFact::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_203_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_203_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetContFact::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_203_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetContFact::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_203_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetContFact::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_203_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetContFact::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetContFact", 1332, G__FwDetDict_203_0_16, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact), -1, 0, 1, 1, 1, 0, "u 'HFwDetContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetContFact", 1458, G__FwDetDict_203_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_203_0_18, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetContFact), -1, 1, 1, 1, 1, 0, "u 'HFwDetContFact' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetParRootFileIo(void) {
   /* HFwDetParRootFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo));
   G__memfunc_setup("HFwDetParRootFileIo",1825,G__FwDetDict_243_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo), -1, 0, 1, 1, 1, 0, "U 'HParRootFile' - 0 - f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_243_0_3, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetParRootFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_243_0_4, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetParRootFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_243_0_5, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetParRootFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_243_0_6, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetParRootFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_243_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_243_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetParRootFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_243_0_12, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetParRootFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_243_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetParRootFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_243_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetParRootFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetParRootFileIo", 1825, G__FwDetDict_243_0_15, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo), -1, 0, 1, 1, 1, 0, "u 'HFwDetParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetParRootFileIo", 1951, G__FwDetDict_243_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_243_0_17, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParRootFileIo), -1, 1, 1, 1, 1, 0, "u 'HFwDetParRootFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetParAsciiFileIo(void) {
   /* HFwDetParAsciiFileIo */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo));
   G__memfunc_setup("HFwDetParAsciiFileIo",1894,G__FwDetDict_253_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo), -1, 0, 1, 1, 1, 0, "U 'basic_fstream<char,char_traits<char> >' 'fstream' 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParSet' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParSet' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_253_0_4, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetParAsciiFileIo::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_253_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetParAsciiFileIo::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_253_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetParAsciiFileIo::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_253_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetParAsciiFileIo::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_253_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_253_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetParAsciiFileIo::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_253_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetParAsciiFileIo::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_253_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetParAsciiFileIo::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_253_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetParAsciiFileIo::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetParAsciiFileIo", 1894, G__FwDetDict_253_0_16, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo), -1, 0, 1, 1, 1, 0, "u 'HFwDetParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetParAsciiFileIo", 2020, G__FwDetDict_253_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_253_0_18, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetParAsciiFileIo), -1, 1, 1, 1, 1, 0, "u 'HFwDetParAsciiFileIo' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetGeomPar(void) {
   /* HFwDetGeomPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar));
   G__memfunc_setup("HFwDetGeomPar",1229,G__FwDetDict_257_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"FwDetGeomPar\"' name C - 'Char_t' 10 '\"FwDet geometry parameters\"' title "
"C - 'Char_t' 10 '\"GeomProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HParIo' - 0 - - I - 'Int_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModNumInMod",1383,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModNumInComp",1494,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCompNum",1023,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "u 'TString' - 11 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_257_0_7, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetGeomPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_257_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetGeomPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_257_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetGeomPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_257_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetGeomPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_257_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_257_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetGeomPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_257_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetGeomPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_257_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetGeomPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_257_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetGeomPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetGeomPar", 1229, G__FwDetDict_257_0_19, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetGeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetGeomPar", 1355, G__FwDetDict_257_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_257_0_21, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetGeomPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetGeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetTaskSet(void) {
   /* HFwDetTaskSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet));
   G__memfunc_setup("parseArguments",1489,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "u 'TString' - 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetTaskSet",1249,G__FwDetDict_262_0_2, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetTaskSet",1249,G__FwDetDict_262_0_3, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetTaskSet), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("make",414,G__FwDetDict_262_0_4, 85, G__get_linked_tagnum(&G__FwDetDictLN_HTask), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' select C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_262_0_5, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetTaskSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_262_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetTaskSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_262_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetTaskSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_262_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetTaskSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_262_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_262_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetTaskSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_262_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetTaskSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_262_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetTaskSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_262_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetTaskSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetTaskSet", 1375, G__FwDetDict_262_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcGeomPar(void) {
   /* HFwDetRpcGeomPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar));
   G__memfunc_setup("HFwDetRpcGeomPar",1522,G__FwDetDict_301_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"FwDetStrawGeomPar\"' name C - 'Char_t' 10 '\"Geometry parameters of the FwDet Straws\"' title "
"C - 'Char_t' 10 '\"FwDetStrawGeometry\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printParam",1054,G__FwDetDict_301_0_2, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModules",1049,G__FwDetDict_301_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayers",944,G__FwDetDict_301_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModuleZ",1024,G__FwDetDict_301_0_8, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getModulePhi",1223,G__FwDetDict_301_0_9, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayerY",918,G__FwDetDict_301_0_10, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModules",1061,G__FwDetDict_301_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayers",956,G__FwDetDict_301_0_12, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModuleZ",1036,G__FwDetDict_301_0_13, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModulePhi",1235,G__FwDetDict_301_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m f - 'Float_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayerY",930,G__FwDetDict_301_0_15, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"f - 'Float_t' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_301_0_16, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcGeomPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_301_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcGeomPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_301_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcGeomPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_301_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcGeomPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_301_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_301_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcGeomPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_301_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcGeomPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_301_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcGeomPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_301_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcGeomPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetRpcGeomPar", 1522, G__FwDetDict_301_0_28, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetRpcGeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcGeomPar", 1648, G__FwDetDict_301_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_301_0_30, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcGeomPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetRpcGeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcCal(void) {
   /* HFwDetRpcCal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal));
   G__memfunc_setup("HFwDetRpcCal",1111,G__FwDetDict_623_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__FwDetDict_623_0_2, 121, -1, -1, 0, 3, 1, 1, 8, 
"c - 'Char_t' 1 - m c - 'Char_t' 1 - l "
"c - 'Char_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitsNum",1032,G__FwDetDict_623_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__FwDetDict_623_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 1, 8, 
"i - 'Int_t' 0 - n f - 'Float_t' 1 - tl "
"f - 'Float_t' 1 - tr f - 'Float_t' 1 - ql "
"f - 'Float_t' 1 - qr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__FwDetDict_623_0_5, 121, -1, -1, 0, 3, 1, 1, 0, 
"c - 'Char_t' 0 - m c - 'Char_t' 0 - l "
"c - 'Char_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__FwDetDict_623_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 5, 1, 1, 0, 
"i - 'Int_t' 0 - n f - 'Float_t' 0 - tl "
"f - 'Float_t' 0 - tr f - 'Float_t' 0 - ql "
"f - 'Float_t' 0 - qr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHit",590,G__FwDetDict_623_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - tl f - 'Float_t' 0 - tr "
"f - 'Float_t' 0 - ql f - 'Float_t' 0 - qr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__FwDetDict_623_0_8, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_623_0_9, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcCal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_623_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcCal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_623_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcCal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_623_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcCal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_623_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_623_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcCal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_623_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcCal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_623_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcCal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_623_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcCal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetRpcCal", 1111, G__FwDetDict_623_0_21, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal), -1, 0, 1, 1, 1, 0, "u 'HFwDetRpcCal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcCal", 1237, G__FwDetDict_623_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_623_0_23, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCal), -1, 1, 1, 1, 1, 0, "u 'HFwDetRpcCal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcCalSim(void) {
   /* HFwDetRpcCalSim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim));
   G__memfunc_setup("HFwDetRpcCalSim",1408,G__FwDetDict_624_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__FwDetDict_624_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - n f - 'Float_t' 0 - x "
"f - 'Float_t' 0 - y f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__FwDetDict_624_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 8, 
"i - 'Int_t' 0 - n f - 'Float_t' 1 - x "
"f - 'Float_t' 1 - y f - 'Float_t' 1 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__FwDetDict_624_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - n i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__FwDetDict_624_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - n i - 'Int_t' 1 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__FwDetDict_624_0_6, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_624_0_7, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcCalSim::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_624_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcCalSim::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_624_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcCalSim::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_624_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcCalSim::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_624_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_624_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcCalSim::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_624_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcCalSim::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_624_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcCalSim::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_624_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcCalSim::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetRpcCalSim", 1408, G__FwDetDict_624_0_19, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim), -1, 0, 1, 1, 1, 0, "u 'HFwDetRpcCalSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcCalSim", 1534, G__FwDetDict_624_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_624_0_21, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcCalSim), -1, 1, 1, 1, 1, 0, "u 'HFwDetRpcCalSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcDigiPar(void) {
   /* HFwDetRpcDigiPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar));
   G__memfunc_setup("HFwDetRpcDigiPar",1511,G__FwDetDict_627_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"FwDetRpcDigiPar\"' name C - 'Char_t' 10 '\"Digitization parameters for Forward Rpc Detector\"' title "
"C - 'Char_t' 10 '\"FwDetRpcDigiProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRpcRadius",1229,G__FwDetDict_627_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNRpcCells",1190,G__FwDetDict_627_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRpcRadius",1241,G__FwDetDict_627_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNRpcCells",1202,G__FwDetDict_627_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_627_0_9, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcDigiPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_627_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcDigiPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_627_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcDigiPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_627_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcDigiPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_627_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_627_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcDigiPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_627_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcDigiPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_627_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcDigiPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_627_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcDigiPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetRpcDigiPar", 1511, G__FwDetDict_627_0_21, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetRpcDigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcDigiPar", 1637, G__FwDetDict_627_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_627_0_23, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigiPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetRpcDigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcDigitizer(void) {
   /* HFwDetRpcDigitizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer));
   G__memfunc_setup("HFwDetRpcDigitizer",1778,G__FwDetDict_629_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetRpcDigitizer",1778,G__FwDetDict_629_0_2, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcDigitizer), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initVariables",1357,G__FwDetDict_629_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("findStrip",947,G__FwDetDict_629_0_8, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processHits",1175,G__FwDetDict_629_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'RpcTrackHits' - 11 - rpc_track_hits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calculateHit",1235,G__FwDetDict_629_0_10, 103, -1, -1, 0, 6, 1, 1, 0, 
"i - 'Int_t' 0 - mod i - 'Int_t' 0 - lay "
"i - 'Int_t' 0 - s f - 'Float_t' 0 - a_y "
"f - 'Float_t' 0 - a_tof i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fillHit",716,G__FwDetDict_629_0_11, 103, -1, -1, 0, 1, 1, 1, 0, "u 'HFwDetRpcDigitizer::ClusterFields' - 11 - cf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_629_0_12, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcDigitizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_629_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcDigitizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_629_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcDigitizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_629_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcDigitizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_629_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_629_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcDigitizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_629_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcDigitizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_629_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcDigitizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_629_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcDigitizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcDigitizer", 1904, G__FwDetDict_629_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcHit(void) {
   /* HFwDetRpcHit */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit));
   G__memfunc_setup("HFwDetRpcHit",1132,G__FwDetDict_632_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__FwDetDict_632_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__FwDetDict_632_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__FwDetDict_632_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTof",617,G__FwDetDict_632_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getP",400,G__FwDetDict_632_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__FwDetDict_632_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDistance",1131,G__FwDetDict_632_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__FwDetDict_632_0_9, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z f - 'Float_t' 0 - tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__FwDetDict_632_0_10, 121, -1, -1, 0, 4, 1, 1, 8, 
"f - 'Float_t' 1 - x f - 'Float_t' 1 - y "
"f - 'Float_t' 1 - z f - 'Float_t' 1 - tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP",412,G__FwDetDict_632_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__FwDetDict_632_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcMomentum",1253,G__FwDetDict_632_0_13, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 0, "f - 'Float_t' 0 - mass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcMomentum",1253,G__FwDetDict_632_0_14, 102, -1, G__defined_typename("Float_t"), 0, 3, 3, 1, 0, 
"f - 'Float_t' 0 - l f - 'Float_t' 0 - t "
"f - 'Float_t' 0 - mass", (char*)NULL, (void*) G__func2void( (Float_t (*)(Float_t, Float_t, Float_t))(&HFwDetRpcHit::calcMomentum) ), 0);
   G__memfunc_setup("print",557,G__FwDetDict_632_0_15, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_632_0_16, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcHit::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_632_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHit::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_632_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcHit::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_632_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcHit::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_632_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_632_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHit::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_632_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcHit::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_632_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHit::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_632_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcHit::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetRpcHit", 1132, G__FwDetDict_632_0_28, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit), -1, 0, 1, 1, 1, 0, "u 'HFwDetRpcHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcHit", 1258, G__FwDetDict_632_0_29, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_632_0_30, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHit), -1, 1, 1, 1, 1, 0, "u 'HFwDetRpcHit' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcHitFinderPar(void) {
   /* HFwDetRpcHitFinderPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar));
   G__memfunc_setup("HFwDetRpcHitFinderPar",2023,G__FwDetDict_633_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"FwDetRpcHitFinderPar\"' name C - 'Char_t' 10 '\"Hit Finder parameters for Forward Rpc Detector\"' title "
"C - 'Char_t' 10 '\"FwDetRpcHitFinderProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatchRadius",1429,G__FwDetDict_633_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMatchTime",1212,G__FwDetDict_633_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMatchRadius",1441,G__FwDetDict_633_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMatchTime",1224,G__FwDetDict_633_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printParam",1054,G__FwDetDict_633_0_9, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_633_0_10, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcHitFinderPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_633_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHitFinderPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_633_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcHitFinderPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_633_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcHitFinderPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_633_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_633_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHitFinderPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_633_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcHitFinderPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_633_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHitFinderPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_633_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcHitFinderPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetRpcHitFinderPar", 2023, G__FwDetDict_633_0_22, (int) ('i'), 
G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetRpcHitFinderPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcHitFinderPar", 2149, G__FwDetDict_633_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_633_0_24, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinderPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetRpcHitFinderPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetRpcHitFinder(void) {
   /* HFwDetRpcHitFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder));
   G__memfunc_setup("HFwDetRpcHitFinder",1732,G__FwDetDict_634_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetRpcHitFinder",1732,G__FwDetDict_634_0_2, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetRpcHitFinder), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initVariables",1357,G__FwDetDict_634_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fillHit",716,G__FwDetDict_634_0_8, 103, -1, -1, 0, 5, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z f - 'Float_t' 0 - tof "
"i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_634_0_9, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetRpcHitFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_634_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHitFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_634_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetRpcHitFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_634_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetRpcHitFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_634_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_634_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHitFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_634_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcHitFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_634_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetRpcHitFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_634_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetRpcHitFinder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetRpcHitFinder", 1858, G__FwDetDict_634_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetScinCal(void) {
   /* HFwDetScinCal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal));
   G__memfunc_setup("HFwDetScinCal",1215,G__FwDetDict_635_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__FwDetDict_635_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__FwDetDict_635_0_3, 121, -1, -1, 0, 3, 1, 1, 8, 
"c - 'Char_t' 1 - m c - 'Char_t' 1 - c "
"c - 'Char_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__FwDetDict_635_0_4, 121, -1, -1, 0, 2, 1, 1, 8, 
"f - 'Float_t' 1 - time f - 'Float_t' 1 - elos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__FwDetDict_635_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__FwDetDict_635_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"c - 'Char_t' 10 - m c - 'Char_t' 10 - c "
"c - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__FwDetDict_635_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 10 - time f - 'Float_t' 10 - elos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_635_0_8, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetScinCal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_635_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinCal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_635_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetScinCal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_635_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetScinCal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_635_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_635_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinCal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_635_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinCal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_635_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinCal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_635_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinCal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetScinCal", 1215, G__FwDetDict_635_0_20, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal), -1, 0, 1, 1, 1, 0, "u 'HFwDetScinCal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetScinCal", 1341, G__FwDetDict_635_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_635_0_22, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCal), -1, 1, 1, 1, 1, 0, "u 'HFwDetScinCal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetScinCalSim(void) {
   /* HFwDetScinCalSim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim));
   G__memfunc_setup("HFwDetScinCalSim",1512,G__FwDetDict_636_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__FwDetDict_636_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__FwDetDict_636_0_3, 121, -1, -1, 0, 3, 1, 1, 8, 
"c - 'Char_t' 1 - m c - 'Char_t' 1 - c "
"c - 'Char_t' 1 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__FwDetDict_636_0_4, 121, -1, -1, 0, 2, 1, 1, 8, 
"f - 'Float_t' 1 - time f - 'Float_t' 1 - elos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__FwDetDict_636_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__FwDetDict_636_0_6, 121, -1, -1, 0, 3, 1, 1, 0, 
"c - 'Char_t' 10 - m c - 'Char_t' 10 - c "
"c - 'Char_t' 10 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__FwDetDict_636_0_7, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 10 - time f - 'Float_t' 10 - elos", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_636_0_8, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetScinCalSim::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_636_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinCalSim::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_636_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetScinCalSim::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_636_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetScinCalSim::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_636_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_636_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinCalSim::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_636_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinCalSim::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_636_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinCalSim::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_636_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinCalSim::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetScinCalSim", 1512, G__FwDetDict_636_0_20, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim), -1, 0, 1, 1, 1, 0, "u 'HFwDetScinCalSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetScinCalSim", 1638, G__FwDetDict_636_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_636_0_22, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinCalSim), -1, 1, 1, 1, 1, 0, "u 'HFwDetScinCalSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetScinDigiPar(void) {
   /* HFwDetScinDigiPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar));
   G__memfunc_setup("HFwDetScinDigiPar",1615,G__FwDetDict_637_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"FwDetScinDigiPar\"' name C - 'Char_t' 10 '\"Digitization parameters for Forward Scintillator Detector\"' title "
"C - 'Char_t' 10 '\"FwDetScinDigiProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNScinCells",1294,G__FwDetDict_637_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getScinSize",1128,G__FwDetDict_637_0_3, 121, -1, -1, 0, 2, 1, 1, 8, 
"f - 'Float_t' 1 - w f - 'Float_t' 1 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNScinCells",1306,G__FwDetDict_637_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setScinSize",1140,G__FwDetDict_637_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"f - 'Float_t' 0 - w f - 'Float_t' 0 - h", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_637_0_9, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetScinDigiPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_637_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinDigiPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_637_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetScinDigiPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_637_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetScinDigiPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_637_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_637_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinDigiPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_637_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinDigiPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_637_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinDigiPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_637_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinDigiPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetScinDigiPar", 1615, G__FwDetDict_637_0_21, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetScinDigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetScinDigiPar", 1741, G__FwDetDict_637_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_637_0_23, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigiPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetScinDigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetScinDigitizer(void) {
   /* HFwDetScinDigitizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer));
   G__memfunc_setup("HFwDetScinDigitizer",1882,G__FwDetDict_638_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetScinDigitizer",1882,G__FwDetDict_638_0_2, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetScinDigitizer), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initVariables",1357,G__FwDetDict_638_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_638_0_8, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetScinDigitizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_638_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinDigitizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_638_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetScinDigitizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_638_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetScinDigitizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_638_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_638_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinDigitizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_638_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinDigitizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_638_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetScinDigitizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_638_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetScinDigitizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetScinDigitizer", 2008, G__FwDetDict_638_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetStrawGeomPar(void) {
   /* HFwDetStrawGeomPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar));
   G__memfunc_setup("HFwDetStrawGeomPar",1758,G__FwDetDict_641_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"FwDetStrawGeomPar\"' name C - 'Char_t' 10 '\"Geometry parameters of the FwDet Straws\"' title "
"C - 'Char_t' 10 '\"FwDetStrawGeometry\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModules",1049,G__FwDetDict_641_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayers",944,G__FwDetDict_641_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStraws",964,G__FwDetDict_641_0_7, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStrawRadius",1465,G__FwDetDict_641_0_8, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStrawPitch",1353,G__FwDetDict_641_0_9, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOffsetZ",1025,G__FwDetDict_641_0_10, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOffsetX",1023,G__FwDetDict_641_0_11, 102, -1, G__defined_typename("Float_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayerRotation",1677,G__FwDetDict_641_0_12, 102, -1, G__defined_typename("Float_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setModules",1061,G__FwDetDict_641_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayers",956,G__FwDetDict_641_0_14, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStraws",976,G__FwDetDict_641_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStrawRadius",1477,G__FwDetDict_641_0_16, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"f - 'Float_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStrawPitch",1365,G__FwDetDict_641_0_17, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOffsetZ",1037,G__FwDetDict_641_0_18, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - p f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOffsetX",1035,G__FwDetDict_641_0_19, 121, -1, -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - p f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLayerRotation",1689,G__FwDetDict_641_0_20, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"f - 'Float_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_641_0_21, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetStrawGeomPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_641_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawGeomPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_641_0_23, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetStrawGeomPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_641_0_24, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetStrawGeomPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_641_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_641_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawGeomPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_641_0_30, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawGeomPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_641_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawGeomPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_641_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawGeomPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetStrawGeomPar", 1758, G__FwDetDict_641_0_33, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetStrawGeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetStrawGeomPar", 1884, G__FwDetDict_641_0_34, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_641_0_35, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawGeomPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetStrawGeomPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetStrawCal(void) {
   /* HFwDetStrawCal */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal));
   G__memfunc_setup("HFwDetStrawCal",1347,G__FwDetDict_643_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAddress",1030,G__FwDetDict_643_0_2, 121, -1, -1, 0, 5, 1, 1, 8, 
"c - 'Char_t' 1 - m c - 'Char_t' 1 - l "
"c - 'Char_t' 1 - p i - 'Int_t' 1 - s "
"c - 'Char_t' 1 - ud", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHit",613,G__FwDetDict_643_0_3, 121, -1, -1, 0, 4, 1, 1, 8, 
"f - 'Float_t' 1 - time f - 'Float_t' 1 - adc "
"f - 'Float_t' 1 - u f - 'Float_t' 1 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStation",1058,G__FwDetDict_643_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLayer",829,G__FwDetDict_643_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPlane",816,G__FwDetDict_643_0_6, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStraw",849,G__FwDetDict_643_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__FwDetDict_643_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getU",405,G__FwDetDict_643_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getUDconf",895,G__FwDetDict_643_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAddress",1042,G__FwDetDict_643_0_11, 121, -1, -1, 0, 5, 1, 1, 0, 
"c - 'Char_t' 0 - m c - 'Char_t' 0 - l "
"c - 'Char_t' 0 - p i - 'Int_t' 0 - s "
"c - 'Char_t' 0 - ud", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHit",625,G__FwDetDict_643_0_12, 121, -1, -1, 0, 4, 1, 1, 0, 
"f - 'Float_t' 0 - time f - 'Float_t' 0 - adc "
"f - 'Float_t' 0 - u f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVPlane",902,G__FwDetDict_643_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVPlane",902,G__FwDetDict_643_0_14, 105, -1, G__defined_typename("Int_t"), 0, 3, 3, 1, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - p", (char*)NULL, (void*) G__func2void( (Int_t (*)(Int_t, Int_t, Int_t))(&HFwDetStrawCal::getVPlane) ), 0);
   G__memfunc_setup("Class",502,G__FwDetDict_643_0_15, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetStrawCal::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_643_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawCal::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_643_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetStrawCal::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_643_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetStrawCal::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_643_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_643_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawCal::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_643_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawCal::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_643_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawCal::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_643_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawCal::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetStrawCal", 1347, G__FwDetDict_643_0_27, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal), -1, 0, 1, 1, 1, 0, "u 'HFwDetStrawCal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetStrawCal", 1473, G__FwDetDict_643_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_643_0_29, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCal), -1, 1, 1, 1, 1, 0, "u 'HFwDetStrawCal' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetStrawCalSim(void) {
   /* HFwDetStrawCalSim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim));
   G__memfunc_setup("HFwDetStrawCalSim",1644,G__FwDetDict_644_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__FwDetDict_644_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getToF",585,G__FwDetDict_644_0_3, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDrift",825,G__FwDetDict_644_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEloss",838,G__FwDetDict_644_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__FwDetDict_644_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - num", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setToF",597,G__FwDetDict_644_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - tof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDrift",837,G__FwDetDict_644_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - drift", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEloss",850,G__FwDetDict_644_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - eloss", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getP",400,G__FwDetDict_644_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getP",400,G__FwDetDict_644_0_11, 121, -1, -1, 0, 3, 1, 1, 8, 
"f - 'Float_t' 1 - x f - 'Float_t' 1 - y "
"f - 'Float_t' 1 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setP",412,G__FwDetDict_644_0_12, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitPos",919,G__FwDetDict_644_0_13, 121, -1, -1, 0, 3, 1, 1, 8, 
"f - 'Float_t' 1 - x f - 'Float_t' 1 - y "
"f - 'Float_t' 1 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHitPos",931,G__FwDetDict_644_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"f - 'Float_t' 0 - x f - 'Float_t' 0 - y "
"f - 'Float_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_644_0_15, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetStrawCalSim::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_644_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawCalSim::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_644_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetStrawCalSim::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_644_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetStrawCalSim::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_644_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_644_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawCalSim::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_644_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawCalSim::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_644_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawCalSim::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_644_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawCalSim::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetStrawCalSim", 1644, G__FwDetDict_644_0_27, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim), -1, 0, 1, 1, 1, 0, "u 'HFwDetStrawCalSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetStrawCalSim", 1770, G__FwDetDict_644_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_644_0_29, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawCalSim), -1, 1, 1, 1, 1, 0, "u 'HFwDetStrawCalSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetStrawDigiPar(void) {
   /* HFwDetStrawDigiPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar));
   G__memfunc_setup("HFwDetStrawDigiPar",1747,G__FwDetDict_645_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"FwDetStrawDigiPar\"' name C - 'Char_t' 10 '\"Digitization parameters for Forward Straw Detector\"' title "
"C - 'Char_t' 10 '\"FwDetDigiProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getAnalogReso",1323,G__FwDetDict_645_0_2, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElossSlope",1353,G__FwDetDict_645_0_3, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getElossOffset",1453,G__FwDetDict_645_0_4, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeReso",1128,G__FwDetDict_645_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDriftTimePar",1515,G__FwDetDict_645_0_6, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDriftRadiusPar",1732,G__FwDetDict_645_0_7, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getStartOffset",1461,G__FwDetDict_645_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getThreshold",1261,G__FwDetDict_645_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEfficiency",1333,G__FwDetDict_645_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setAnalogReso",1335,G__FwDetDict_645_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setElossSlope",1365,G__FwDetDict_645_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - s", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setElossOffset",1465,G__FwDetDict_645_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeReso",1140,G__FwDetDict_645_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDriftTimePar",1527,G__FwDetDict_645_0_15, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idx f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDriftRadiusPar",1744,G__FwDetDict_645_0_16, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - idx f - 'Float_t' 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setStartOffset",1473,G__FwDetDict_645_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - o", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setThreshold",1273,G__FwDetDict_645_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEfficiency",1345,G__FwDetDict_645_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__FwDetDict_645_0_23, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetStrawDigiPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_645_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawDigiPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_645_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetStrawDigiPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_645_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetStrawDigiPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_645_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_645_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawDigiPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_645_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawDigiPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_645_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawDigiPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_645_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawDigiPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetStrawDigiPar", 1747, G__FwDetDict_645_0_35, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetStrawDigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetStrawDigiPar", 1873, G__FwDetDict_645_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_645_0_37, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigiPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetStrawDigiPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetStrawDigitizer(void) {
   /* HFwDetStrawDigitizer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer));
   G__memfunc_setup("HFwDetStrawDigitizer",2014,G__FwDetDict_646_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetStrawDigitizer",2014,G__FwDetDict_646_0_2, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetStrawDigitizer), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initVariables",1357,G__FwDetDict_646_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("fillStrawCalSim",1521,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 4, 0, 
"u 'HFwDetStrawDigitizer::DigiFields' - 11 - df u 'HFwDetStrawDigitizer::GeantFields' - 11 - gf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcDriftTime",1307,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 4, 8, "f - 'Float_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_646_0_10, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetStrawDigitizer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_646_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawDigitizer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_646_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetStrawDigitizer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_646_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetStrawDigitizer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_646_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_646_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawDigitizer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_646_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawDigitizer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_646_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetStrawDigitizer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_646_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetStrawDigitizer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetStrawDigitizer", 2140, G__FwDetDict_646_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetVectorFinderPar(void) {
   /* HFwDetVectorFinderPar */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar));
   G__memfunc_setup("HFwDetVectorFinderPar",2064,G__FwDetDict_746_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 '\"VectorFinderPar\"' name C - 'Char_t' 10 '\"VectorFinder parameters\"' title "
"C - 'Char_t' 10 '\"VectorFinderParProduction\"' context", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clear",519,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("putParams",957,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getParams",932,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParamList' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCutX",708,G__FwDetDict_746_0_5, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCutY",709,G__FwDetDict_746_0_6, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLRCutChi2",1104,G__FwDetDict_746_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHRCutChi2",1100,G__FwDetDict_746_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLRErrU",860,G__FwDetDict_746_0_9, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHRErrU",856,G__FwDetDict_746_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTubesD",903,G__FwDetDict_746_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxBest",1012,G__FwDetDict_746_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNpass",837,G__FwDetDict_746_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCutX",720,G__FwDetDict_746_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - cutx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCutY",721,G__FwDetDict_746_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - cuty", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLRCutChi2",1116,G__FwDetDict_746_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHRCutChi2",1112,G__FwDetDict_746_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - chi2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLRErrU",872,G__FwDetDict_746_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHRErrU",868,G__FwDetDict_746_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - err", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTubesD",915,G__FwDetDict_746_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 10 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxBest",1024,G__FwDetDict_746_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - nbest", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNpass",849,G__FwDetDict_746_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - npass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_746_0_23, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetVectorFinderPar::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_746_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetVectorFinderPar::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_746_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetVectorFinderPar::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_746_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetVectorFinderPar::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_746_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_746_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetVectorFinderPar::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_746_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetVectorFinderPar::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_746_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetVectorFinderPar::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_746_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetVectorFinderPar::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HFwDetVectorFinderPar", 2064, G__FwDetDict_746_0_35, (int) ('i'), 
G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar), -1, 0, 1, 1, 1, 0, "u 'HFwDetVectorFinderPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetVectorFinderPar", 2190, G__FwDetDict_746_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_746_0_37, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinderPar), -1, 1, 1, 1, 1, 0, "u 'HFwDetVectorFinderPar' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHVectorCand(void) {
   /* HVectorCand */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand));
   G__memfunc_setup("HVectorCand",1073,G__FwDetDict_747_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNofHits",1019,G__FwDetDict_747_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNDF",536,G__FwDetDict_747_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__FwDetDict_747_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__FwDetDict_747_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__FwDetDict_747_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__FwDetDict_747_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTx",524,G__FwDetDict_747_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTy",525,G__FwDetDict_747_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTof",617,G__FwDetDict_747_0_10, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDistance",1131,G__FwDetDict_747_0_11, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHadesZ",895,G__FwDetDict_747_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHadesR",887,G__FwDetDict_747_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHadesTheta",1307,G__FwDetDict_747_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHadesPhi",1094,G__FwDetDict_747_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHadesParams",1417,G__FwDetDict_747_0_16, 121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - params", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHitIndex",1117,G__FwDetDict_747_0_17, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 0 - ihit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getLR",478,G__FwDetDict_747_0_18, 117, G__get_linked_tagnum(&G__FwDetDictLN_TBits), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParams",932,G__FwDetDict_747_0_19, 121, -1, -1, 0, 1, 1, 1, 8, "D - 'Double_t' 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCovarMatr",1231,G__FwDetDict_747_0_20, 117, G__get_linked_tagnum(&G__FwDetDictLN_TMatrixTSymlEdoublegR), G__defined_typename("TMatrixDSym"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setNDF",548,G__FwDetDict_747_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - ndf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__FwDetDict_747_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - c2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ",422,G__FwDetDict_747_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTof",629,G__FwDetDict_747_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDistance",1143,G__FwDetDict_747_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setLRbit",809,G__FwDetDict_747_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - indx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addHit",590,G__FwDetDict_747_0_27, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - indx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setCovar",839,G__FwDetDict_747_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMatrixTSym<double>' 'TMatrixDSym' 0 - matr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setParams",944,G__FwDetDict_747_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "D - 'Double_t' 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calc4vectorProperties",2183,G__FwDetDict_747_0_30, 121, -1, -1, 0, 2, 1, 1, 0, 
"d - 'Double_t' 0 - p d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calc4vectorProperties",2183,G__FwDetDict_747_0_31, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getReferenceVector",1858,G__FwDetDict_747_0_32, 117, G__get_linked_tagnum(&G__FwDetDictLN_TVector3), -1, 1, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__FwDetDict_747_0_33, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHadesParam",1302,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 0 - ipar", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_747_0_35, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HVectorCand::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_747_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVectorCand::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_747_0_37, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HVectorCand::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_747_0_38, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HVectorCand::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_747_0_42, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_747_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVectorCand::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_747_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HVectorCand::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_747_0_45, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVectorCand::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_747_0_46, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HVectorCand::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HVectorCand", 1073, G__FwDetDict_747_0_47, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand), -1, 0, 1, 1, 1, 0, "u 'HVectorCand' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HVectorCand", 1199, G__FwDetDict_747_0_48, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_747_0_49, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand), -1, 1, 1, 1, 1, 0, "u 'HVectorCand' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFwDetVectorFinder(void) {
   /* HFwDetVectorFinder */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder));
   G__memfunc_setup("HFwDetVectorFinder",1773,G__FwDetDict_749_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HFwDetVectorFinder",1773,G__FwDetDict_749_0_2, 105, G__get_linked_tagnum(&G__FwDetDictLN_HFwDetVectorFinder), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initVariables",1357,G__FwDetDict_749_0_3, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clear",519,G__FwDetDict_749_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("computeMatrix",1394,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHits",728,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeVectors",1156,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processDouble",1370,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 0 - m i - 'Int_t' 0 - l "
"i - 'Int_t' 0 - patt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addVector",924,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__FwDetDictLN_HVectorCand), -1, 0, 5, 1, 4, 0, 
"i - 'Int_t' 0 - ista i - 'Int_t' 0 - patt "
"d - 'Double_t' 0 - chi2 D - 'Double_t' 0 - pars "
"g - 'Bool_t' 0 'kTRUE' lowRes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrackId",1006,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HVectorCand' - 0 - vec", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findLine",809,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - patt D - 'Double_t' 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("findChi2",743,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 0 - patt D - 'Double_t' 0 - pars", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkParams",1122,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("highRes",714,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("processSingleHigh",1761,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 7, 1, 4, 0, 
"i - 'Int_t' 0 - ista i - 'Int_t' 0 - plane "
"i - 'Int_t' 0 - plane_limit i - 'Int_t' 0 - patt "
"i - 'Int_t' 0 - flag i - 'Int_t' 0 - nok "
"d - 'Double_t' 0 - uu[][3]", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("moveVectors",1181,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("storeVectors",1299,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - sel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergeVectors",1270,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("selectTracks",1256,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 0 - ipass", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("refit",538,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 7, 1, 4, 0, 
"i - 'Int_t' 0 - patt I - 'Int_t' 0 - hinds "
"D - 'Double_t' 0 - pars U 'TMatrixTSym<double>' 'TMatrixDSym' 0 - cov "
"I - 'Int_t' 0 - lr d - 'Double_t' 0 - tof "
"d - 'Double_t' 0 - tofl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 8, 1, 4, 0, 
"i - 'Int_t' 0 - ista0 U 'HVectorCand' - 0 - tr1 "
"U 'HVectorCand' - 0 - tr2 i - 'Int_t' 0 - indx1 "
"i - 'Int_t' 0 - indx2 D - 'Double_t' 0 - parOk "
"d - 'Double_t' 0 - c2 u 'TMatrixTSym<double>' 'TMatrixDSym' 1 - w2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("matchRpcHit",1111,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 4, 0, 
"D - 'Double_t' 0 - params d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcDriftRadius",1524,(G__InterfaceMethod) NULL, 102, -1, G__defined_typename("Float_t"), 0, 1, 1, 4, 8, "f - 'Float_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_749_0_28, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFwDetVectorFinder::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_749_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetVectorFinder::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_749_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFwDetVectorFinder::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_749_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFwDetVectorFinder::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_749_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_749_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetVectorFinder::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_749_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetVectorFinder::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_749_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFwDetVectorFinder::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_749_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFwDetVectorFinder::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HFwDetVectorFinder", 1899, G__FwDetDict_749_0_40, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHVectorCandSim(void) {
   /* HVectorCandSim */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim));
   G__memfunc_setup("HVectorCandSim",1370,G__FwDetDict_789_0_1, 105, G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__FwDetDict_789_0_2, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRpcTrack",1114,G__FwDetDict_789_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPx1",569,G__FwDetDict_789_0_4, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPy1",570,G__FwDetDict_789_0_5, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPz1",571,G__FwDetDict_789_0_6, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPx2",570,G__FwDetDict_789_0_7, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPy2",571,G__FwDetDict_789_0_8, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPz2",572,G__FwDetDict_789_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX1",457,G__FwDetDict_789_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY1",458,G__FwDetDict_789_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ1",459,G__FwDetDict_789_0_12, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX2",458,G__FwDetDict_789_0_13, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY2",459,G__FwDetDict_789_0_14, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ2",460,G__FwDetDict_789_0_15, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTrack",833,G__FwDetDict_789_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setRpcTrack",1126,G__FwDetDict_789_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - track", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPx1",581,G__FwDetDict_789_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - px", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPy1",582,G__FwDetDict_789_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPz1",583,G__FwDetDict_789_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPx2",582,G__FwDetDict_789_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - px", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPy2",583,G__FwDetDict_789_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - py", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPz2",584,G__FwDetDict_789_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - pz", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX1",469,G__FwDetDict_789_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY1",470,G__FwDetDict_789_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ1",471,G__FwDetDict_789_0_26, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setX2",470,G__FwDetDict_789_0_27, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setY2",471,G__FwDetDict_789_0_28, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - y", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setZ2",472,G__FwDetDict_789_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 0 - z", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSimTx",821,G__FwDetDict_789_0_30, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSimTy",822,G__FwDetDict_789_0_31, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__FwDetDict_789_0_32, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__FwDetDict_789_0_33, 85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HVectorCandSim::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__FwDetDict_789_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVectorCandSim::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__FwDetDict_789_0_35, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HVectorCandSim::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__FwDetDict_789_0_36, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HVectorCandSim::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__FwDetDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__FwDetDict_789_0_40, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__FwDetDict_789_0_41, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVectorCandSim::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__FwDetDict_789_0_42, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HVectorCandSim::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__FwDetDict_789_0_43, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVectorCandSim::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__FwDetDict_789_0_44, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HVectorCandSim::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HVectorCandSim", 1370, G__FwDetDict_789_0_45, (int) ('i'), G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim), -1, 0, 1, 1, 1, 0, "u 'HVectorCandSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HVectorCandSim", 1496, G__FwDetDict_789_0_46, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__FwDetDict_789_0_47, (int) ('u'), G__get_linked_tagnum(&G__FwDetDictLN_HVectorCandSim), -1, 1, 1, 1, 1, 0, "u 'HVectorCandSim' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncFwDetDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&catFwDetStrawCal),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catFwDetStrawCal=",0,(char*)NULL);
   G__memvar_setup((void*)(&catFwDetScinCal),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catFwDetScinCal=",0,(char*)NULL);
   G__memvar_setup((void*)(&catFwDetRpcCal),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catFwDetRpcCal=",0,(char*)NULL);
   G__memvar_setup((void*)(&catFwDetRpcHit),115,0,1,-1,G__defined_typename("Cat_t"),-1,1,"catFwDetRpcHit=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalFwDetDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcFwDetDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__FwDetDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR = { "basic_fstream<char,char_traits<char> >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HTask = { "HTask" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HCategory = { "HCategory" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HParIo = { "HParIo" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HDetector = { "HDetector" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetDetector = { "HFwDetDetector" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_HParSet = { "HParSet" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HContainer = { "HContainer" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HContFact = { "HContFact" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetContFact = { "HFwDetContFact" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HDetParIo = { "HDetParIo" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HParRootFile = { "HParRootFile" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HDetGeomPar = { "HDetGeomPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HDetParRootFileIo = { "HDetParRootFileIo" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetParRootFileIo = { "HFwDetParRootFileIo" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HDetParAsciiFileIo = { "HDetParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetParAsciiFileIo = { "HFwDetParAsciiFileIo" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetGeomPar = { "HFwDetGeomPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HTaskSet = { "HTaskSet" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetTaskSet = { "HFwDetTaskSet" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HParamList = { "HParamList" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HParCond = { "HParCond" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TArrayF = { "TArrayF" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcGeomPar = { "HFwDetRpcGeomPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcGeomParcLcLSingleModule = { "HFwDetRpcGeomPar::SingleModule" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_pairlEintcOintgR = { "pair<int,int>" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcCal = { "HFwDetRpcCal" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcCalSim = { "HFwDetRpcCalSim" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HLocation = { "HLocation" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HReconstructor = { "HReconstructor" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcDigiPar = { "HFwDetRpcDigiPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_RpcTrackHits = { "RpcTrackHits" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcDigitizer = { "HFwDetRpcDigitizer" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcDigitizercLcLClusterFields = { "HFwDetRpcDigitizer::ClusterFields" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcHit = { "HFwDetRpcHit" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcHitFinderPar = { "HFwDetRpcHitFinderPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetRpcHitFinder = { "HFwDetRpcHitFinder" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetScinCal = { "HFwDetScinCal" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetScinCalSim = { "HFwDetScinCalSim" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetScinDigiPar = { "HFwDetScinDigiPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetScinDigitizer = { "HFwDetScinDigitizer" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawGeomPar = { "HFwDetStrawGeomPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawGeomParcLcLSingleModule = { "HFwDetStrawGeomPar::SingleModule" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawCal = { "HFwDetStrawCal" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawCalSim = { "HFwDetStrawCalSim" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawDigiPar = { "HFwDetStrawDigiPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawDigitizer = { "HFwDetStrawDigitizer" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawDigitizercLcLGeantFields = { "HFwDetStrawDigitizer::GeantFields" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetStrawDigitizercLcLDigiFields = { "HFwDetStrawDigitizer::DigiFields" , 115 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetVectorFinderPar = { "HFwDetVectorFinderPar" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HVectorCand = { "HVectorCand" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HFwDetVectorFinder = { "HFwDetVectorFinder" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_multimaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR = { "multimap<int,int,less<int>,allocator<pair<const int,int> > >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR = { "vector<HVectorCand*,allocator<HVectorCand*> >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_reverse_iteratorlEvectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HVectorCand*,allocator<HVectorCand*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_maplEintcOTDecompLUmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTDecompLUmUgRsPgRsPgR = { "map<int,TDecompLU*,less<int>,allocator<pair<const int,TDecompLU*> > >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_maplEintcOTMatrixTSymlEdoublegRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTMatrixTSymlEdoublegRmUgRsPgRsPgR = { "map<int,TMatrixTSym<double>*,less<int>,allocator<pair<const int,TMatrixTSym<double>*> > >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR = { "vector<pair<int,int>,allocator<pair<int,int> > >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<int,int>,allocator<pair<int,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_vectorlEComboSetcOallocatorlEComboSetgRsPgR = { "vector<ComboSet,allocator<ComboSet> >" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_reverse_iteratorlEvectorlEComboSetcOallocatorlEComboSetgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ComboSet,allocator<ComboSet> >::iterator>" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TBits = { "TBits" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__FwDetDictLN_HVectorCandSim = { "HVectorCandSim" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableFwDetDict() {
  G__FwDetDictLN_TClass.tagnum = -1 ;
  G__FwDetDictLN_TBuffer.tagnum = -1 ;
  G__FwDetDictLN_TMemberInspector.tagnum = -1 ;
  G__FwDetDictLN_TObject.tagnum = -1 ;
  G__FwDetDictLN_TNamed.tagnum = -1 ;
  G__FwDetDictLN_TString.tagnum = -1 ;
  G__FwDetDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR.tagnum = -1 ;
  G__FwDetDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__FwDetDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FwDetDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FwDetDictLN_HTask.tagnum = -1 ;
  G__FwDetDictLN_HCategory.tagnum = -1 ;
  G__FwDetDictLN_HParIo.tagnum = -1 ;
  G__FwDetDictLN_HDetector.tagnum = -1 ;
  G__FwDetDictLN_HFwDetDetector.tagnum = -1 ;
  G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__FwDetDictLN_HParSet.tagnum = -1 ;
  G__FwDetDictLN_HContainer.tagnum = -1 ;
  G__FwDetDictLN_HContFact.tagnum = -1 ;
  G__FwDetDictLN_HFwDetContFact.tagnum = -1 ;
  G__FwDetDictLN_HDetParIo.tagnum = -1 ;
  G__FwDetDictLN_HParRootFile.tagnum = -1 ;
  G__FwDetDictLN_HDetGeomPar.tagnum = -1 ;
  G__FwDetDictLN_HDetParRootFileIo.tagnum = -1 ;
  G__FwDetDictLN_HFwDetParRootFileIo.tagnum = -1 ;
  G__FwDetDictLN_HDetParAsciiFileIo.tagnum = -1 ;
  G__FwDetDictLN_HFwDetParAsciiFileIo.tagnum = -1 ;
  G__FwDetDictLN_HFwDetGeomPar.tagnum = -1 ;
  G__FwDetDictLN_HTaskSet.tagnum = -1 ;
  G__FwDetDictLN_HFwDetTaskSet.tagnum = -1 ;
  G__FwDetDictLN_HParamList.tagnum = -1 ;
  G__FwDetDictLN_HParCond.tagnum = -1 ;
  G__FwDetDictLN_TArrayF.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcGeomPar.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcGeomParcLcLSingleModule.tagnum = -1 ;
  G__FwDetDictLN_pairlEintcOintgR.tagnum = -1 ;
  G__FwDetDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcCal.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcCalSim.tagnum = -1 ;
  G__FwDetDictLN_HLocation.tagnum = -1 ;
  G__FwDetDictLN_HReconstructor.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcDigiPar.tagnum = -1 ;
  G__FwDetDictLN_RpcTrackHits.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcDigitizer.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcDigitizercLcLClusterFields.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcHit.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcHitFinderPar.tagnum = -1 ;
  G__FwDetDictLN_HFwDetRpcHitFinder.tagnum = -1 ;
  G__FwDetDictLN_HFwDetScinCal.tagnum = -1 ;
  G__FwDetDictLN_HFwDetScinCalSim.tagnum = -1 ;
  G__FwDetDictLN_HFwDetScinDigiPar.tagnum = -1 ;
  G__FwDetDictLN_HFwDetScinDigitizer.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawGeomPar.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawGeomParcLcLSingleModule.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawCal.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawCalSim.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawDigiPar.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawDigitizer.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawDigitizercLcLGeantFields.tagnum = -1 ;
  G__FwDetDictLN_HFwDetStrawDigitizercLcLDigiFields.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__FwDetDictLN_HFwDetVectorFinderPar.tagnum = -1 ;
  G__FwDetDictLN_HVectorCand.tagnum = -1 ;
  G__FwDetDictLN_HFwDetVectorFinder.tagnum = -1 ;
  G__FwDetDictLN_multimaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_reverse_iteratorlEvectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FwDetDictLN_maplEintcOTDecompLUmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTDecompLUmUgRsPgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_maplEintcOTMatrixTSymlEdoublegRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTMatrixTSymlEdoublegRmUgRsPgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FwDetDictLN_vectorlEComboSetcOallocatorlEComboSetgRsPgR.tagnum = -1 ;
  G__FwDetDictLN_reverse_iteratorlEvectorlEComboSetcOallocatorlEComboSetgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__FwDetDictLN_TBits.tagnum = -1 ;
  G__FwDetDictLN_TVector3.tagnum = -1 ;
  G__FwDetDictLN_TLorentzVector.tagnum = -1 ;
  G__FwDetDictLN_HVectorCandSim.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableFwDetDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TString);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_basic_fstreamlEcharcOchar_traitslEchargRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HTask);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HCategory);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HParIo);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetDetector),sizeof(HFwDetDetector),-1,62720,"detector class for new forward detector",G__setup_memvarHFwDetDetector,G__setup_memfuncHFwDetDetector);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HParSet);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HContainer);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HContFact);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetContFact),sizeof(HFwDetContFact),-1,62720,"Factory for parameter containers in libFwdet",G__setup_memvarHFwDetContFact,G__setup_memfuncHFwDetContFact);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HDetParIo);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HParRootFile);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HDetGeomPar);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HDetParRootFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetParRootFileIo),sizeof(HFwDetParRootFileIo),-1,62464,"Class for parameter I/O from ROOT file for the Forward Detector",G__setup_memvarHFwDetParRootFileIo,G__setup_memfuncHFwDetParRootFileIo);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HDetParAsciiFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetParAsciiFileIo),sizeof(HFwDetParAsciiFileIo),-1,62464,"Class for parameter I/O from Ascii files for Forward Detector",G__setup_memvarHFwDetParAsciiFileIo,G__setup_memfuncHFwDetParAsciiFileIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetGeomPar),sizeof(HFwDetGeomPar),-1,62720,"Geometry parameter container for the Forward Detector",G__setup_memvarHFwDetGeomPar,G__setup_memfuncHFwDetGeomPar);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HTaskSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetTaskSet),sizeof(HFwDetTaskSet),-1,62720,"Set of tasks",G__setup_memvarHFwDetTaskSet,G__setup_memfuncHFwDetTaskSet);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HParamList);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HParCond);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TArrayF);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseDiaglEfloatgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcGeomPar),sizeof(HFwDetRpcGeomPar),-1,62720,"Geometry of a FwDet Straw",G__setup_memvarHFwDetRpcGeomPar,G__setup_memfuncHFwDetRpcGeomPar);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcGeomParcLcLSingleModule);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_pairlEintcOintgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcCal),sizeof(HFwDetRpcCal),-1,29952,(char*)NULL,G__setup_memvarHFwDetRpcCal,G__setup_memfuncHFwDetRpcCal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcCalSim),sizeof(HFwDetRpcCalSim),-1,29952,(char*)NULL,G__setup_memvarHFwDetRpcCalSim,G__setup_memfuncHFwDetRpcCalSim);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HLocation);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HReconstructor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcDigiPar),sizeof(HFwDetRpcDigiPar),-1,62720,"Container for the Forward Rpc Detector digitization",G__setup_memvarHFwDetRpcDigiPar,G__setup_memfuncHFwDetRpcDigiPar);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_RpcTrackHits);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcDigitizer),sizeof(HFwDetRpcDigitizer),-1,62720,(char*)NULL,G__setup_memvarHFwDetRpcDigitizer,G__setup_memfuncHFwDetRpcDigitizer);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcDigitizercLcLClusterFields);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcHit),sizeof(HFwDetRpcHit),-1,29952,(char*)NULL,G__setup_memvarHFwDetRpcHit,G__setup_memfuncHFwDetRpcHit);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcHitFinderPar),sizeof(HFwDetRpcHitFinderPar),-1,62720,"Container for the Forward Rpc Detector digitization",G__setup_memvarHFwDetRpcHitFinderPar,G__setup_memfuncHFwDetRpcHitFinderPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetRpcHitFinder),sizeof(HFwDetRpcHitFinder),-1,62720,(char*)NULL,G__setup_memvarHFwDetRpcHitFinder,G__setup_memfuncHFwDetRpcHitFinder);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetScinCal),sizeof(HFwDetScinCal),-1,29952,(char*)NULL,G__setup_memvarHFwDetScinCal,G__setup_memfuncHFwDetScinCal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetScinCalSim),sizeof(HFwDetScinCalSim),-1,29952,(char*)NULL,G__setup_memvarHFwDetScinCalSim,G__setup_memfuncHFwDetScinCalSim);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetScinDigiPar),sizeof(HFwDetScinDigiPar),-1,62720,"Container for the Forward Scintillator Detector digitization",G__setup_memvarHFwDetScinDigiPar,G__setup_memfuncHFwDetScinDigiPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetScinDigitizer),sizeof(HFwDetScinDigitizer),-1,62720,(char*)NULL,G__setup_memvarHFwDetScinDigitizer,G__setup_memfuncHFwDetScinDigitizer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawGeomPar),sizeof(HFwDetStrawGeomPar),-1,62720,"Geometry of a FwDet Straw",G__setup_memvarHFwDetStrawGeomPar,G__setup_memfuncHFwDetStrawGeomPar);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawGeomParcLcLSingleModule);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawCal),sizeof(HFwDetStrawCal),-1,29952,(char*)NULL,G__setup_memvarHFwDetStrawCal,G__setup_memfuncHFwDetStrawCal);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawCalSim),sizeof(HFwDetStrawCalSim),-1,29952,(char*)NULL,G__setup_memvarHFwDetStrawCalSim,G__setup_memfuncHFwDetStrawCalSim);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawDigiPar),sizeof(HFwDetStrawDigiPar),-1,62720,"Container for the Forward Straw Detector digitization",G__setup_memvarHFwDetStrawDigiPar,G__setup_memfuncHFwDetStrawDigiPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawDigitizer),sizeof(HFwDetStrawDigitizer),-1,62720,(char*)NULL,G__setup_memvarHFwDetStrawDigitizer,G__setup_memfuncHFwDetStrawDigitizer);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawDigitizercLcLGeantFields);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetStrawDigitizercLcLDigiFields);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TMatrixTSparseDiaglEdoublegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetVectorFinderPar),sizeof(HFwDetVectorFinderPar),-1,62720,(char*)NULL,G__setup_memvarHFwDetVectorFinderPar,G__setup_memfuncHFwDetVectorFinderPar);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HVectorCand),sizeof(HVectorCand),-1,62720,(char*)NULL,G__setup_memvarHVectorCand,G__setup_memfuncHVectorCand);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HFwDetVectorFinder),sizeof(HFwDetVectorFinder),-1,62720,(char*)NULL,G__setup_memvarHFwDetVectorFinder,G__setup_memfuncHFwDetVectorFinder);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_multimaplEintcOintcOlesslEintgRcOallocatorlEpairlEconstsPintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_vectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_reverse_iteratorlEvectorlEHVectorCandmUcOallocatorlEHVectorCandmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_maplEintcOTDecompLUmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTDecompLUmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_maplEintcOTMatrixTSymlEdoublegRmUcOlesslEintgRcOallocatorlEpairlEconstsPintcOTMatrixTSymlEdoublegRmUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_vectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_reverse_iteratorlEvectorlEpairlEintcOintgRcOallocatorlEpairlEintcOintgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_vectorlEComboSetcOallocatorlEComboSetgRsPgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_reverse_iteratorlEvectorlEComboSetcOallocatorlEComboSetgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TBits);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__FwDetDictLN_TLorentzVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__FwDetDictLN_HVectorCandSim),sizeof(HVectorCandSim),-1,62720,(char*)NULL,G__setup_memvarHVectorCandSim,G__setup_memfuncHVectorCandSim);
}
extern "C" void G__cpp_setupFwDetDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupFwDetDict()");
  G__set_cpp_environmentFwDetDict();
  G__cpp_setup_tagtableFwDetDict();

  G__cpp_setup_inheritanceFwDetDict();

  G__cpp_setup_typetableFwDetDict();

  G__cpp_setup_memvarFwDetDict();

  G__cpp_setup_memfuncFwDetDict();
  G__cpp_setup_globalFwDetDict();
  G__cpp_setup_funcFwDetDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncFwDetDict();
  return;
}
class G__cpp_setup_initFwDetDict {
  public:
    G__cpp_setup_initFwDetDict() { G__add_setup_func("FwDetDict",(G__incsetup)(&G__cpp_setupFwDetDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initFwDetDict() { G__remove_setup_func("FwDetDict"); }
};
G__cpp_setup_initFwDetDict G__cpp_setup_initializerFwDetDict;

