//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:46:18 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIRevtDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "RevtDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HldSockRemoteSource_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HldSockRemoteSource(void *p = 0);
   static void *newArray_HldSockRemoteSource(Long_t size, void *p);
   static void delete_HldSockRemoteSource(void *p);
   static void deleteArray_HldSockRemoteSource(void *p);
   static void destruct_HldSockRemoteSource(void *p);
   static void streamer_HldSockRemoteSource(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HldSockRemoteSource*)
   {
      ::HldSockRemoteSource *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HldSockRemoteSource >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HldSockRemoteSource", ::HldSockRemoteSource::Class_Version(), "././hldsockremotesource.h", 7,
                  typeid(::HldSockRemoteSource), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HldSockRemoteSource::Dictionary, isa_proxy, 0,
                  sizeof(::HldSockRemoteSource) );
      instance.SetNew(&new_HldSockRemoteSource);
      instance.SetNewArray(&newArray_HldSockRemoteSource);
      instance.SetDelete(&delete_HldSockRemoteSource);
      instance.SetDeleteArray(&deleteArray_HldSockRemoteSource);
      instance.SetDestructor(&destruct_HldSockRemoteSource);
      instance.SetStreamerFunc(&streamer_HldSockRemoteSource);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HldSockRemoteSource*)
   {
      return GenerateInitInstanceLocal((::HldSockRemoteSource*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HldSockRemoteSource*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HRevBuffer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HRevBuffer(void *p);
   static void deleteArray_HRevBuffer(void *p);
   static void destruct_HRevBuffer(void *p);
   static void streamer_HRevBuffer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HRevBuffer*)
   {
      ::HRevBuffer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HRevBuffer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HRevBuffer", ::HRevBuffer::Class_Version(), "././hrevbuffer.h", 22,
                  typeid(::HRevBuffer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HRevBuffer::Dictionary, isa_proxy, 0,
                  sizeof(::HRevBuffer) );
      instance.SetDelete(&delete_HRevBuffer);
      instance.SetDeleteArray(&deleteArray_HRevBuffer);
      instance.SetDestructor(&destruct_HRevBuffer);
      instance.SetStreamerFunc(&streamer_HRevBuffer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HRevBuffer*)
   {
      return GenerateInitInstanceLocal((::HRevBuffer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HRevBuffer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HldSockRemoteSource::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HldSockRemoteSource::Class_Name()
{
   return "HldSockRemoteSource";
}

//______________________________________________________________________________
const char *HldSockRemoteSource::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HldSockRemoteSource*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HldSockRemoteSource::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HldSockRemoteSource*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HldSockRemoteSource::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HldSockRemoteSource*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HldSockRemoteSource::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HldSockRemoteSource*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HRevBuffer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HRevBuffer::Class_Name()
{
   return "HRevBuffer";
}

//______________________________________________________________________________
const char *HRevBuffer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRevBuffer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HRevBuffer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRevBuffer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HRevBuffer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRevBuffer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HRevBuffer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRevBuffer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HldSockRemoteSource::Streamer(TBuffer &R__b)
{
   // Stream an object of class HldSockRemoteSource.

   HldSource::Streamer(R__b);
}

//______________________________________________________________________________
void HldSockRemoteSource::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HldSockRemoteSource.
      TClass *R__cl = ::HldSockRemoteSource::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "refId", &refId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "currNodeName", &currNodeName);
      R__insp.InspectMember(currNodeName, "currNodeName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*iter", &iter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evtMax", &evtMax);
      HldSource::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HldSockRemoteSource(void *p) {
      return  p ? new(p) ::HldSockRemoteSource : new ::HldSockRemoteSource;
   }
   static void *newArray_HldSockRemoteSource(Long_t nElements, void *p) {
      return p ? new(p) ::HldSockRemoteSource[nElements] : new ::HldSockRemoteSource[nElements];
   }
   // Wrapper around operator delete
   static void delete_HldSockRemoteSource(void *p) {
      delete ((::HldSockRemoteSource*)p);
   }
   static void deleteArray_HldSockRemoteSource(void *p) {
      delete [] ((::HldSockRemoteSource*)p);
   }
   static void destruct_HldSockRemoteSource(void *p) {
      typedef ::HldSockRemoteSource current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HldSockRemoteSource(TBuffer &buf, void *obj) {
      ((::HldSockRemoteSource*)obj)->::HldSockRemoteSource::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HldSockRemoteSource

//______________________________________________________________________________
void HRevBuffer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HRevBuffer.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HRevBuffer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HRevBuffer.
      TClass *R__cl = ::HRevBuffer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pTSocket", &pTSocket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iSocket", &iSocket);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iDebug", &iDebug);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBufNo1", &iBufNo1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBufNo2", &iBufNo2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iSwap", &iSwap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBufSizeAlloc", &iBufSizeAlloc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBufSize", &iBufSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iBufNo", &iBufNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iHeadPar", &iHeadPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvtMax", &iEvtMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvtNo", &iEvtNo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvtRel", &iEvtRel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvtBuf", &iEvtBuf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iEvtPar", &iEvtPar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*piBuf", &piBuf);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*piNextEvt", &piNextEvt);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HRevBuffer(void *p) {
      delete ((::HRevBuffer*)p);
   }
   static void deleteArray_HRevBuffer(void *p) {
      delete [] ((::HRevBuffer*)p);
   }
   static void destruct_HRevBuffer(void *p) {
      typedef ::HRevBuffer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HRevBuffer(TBuffer &buf, void *obj) {
      ((::HRevBuffer*)obj)->::HRevBuffer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HRevBuffer

/********************************************************
* ../build/pc/RevtDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableRevtDict();

extern "C" void G__set_cpp_environmentRevtDict() {
  G__cpp_reset_tagtableRevtDict();
}
#include <new>
extern "C" int G__cpp_dllrevRevtDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HldSockRemoteSource */
static int G__RevtDict_202_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HldSockRemoteSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HldSockRemoteSource[n];
     } else {
       p = new((void*) gvp) HldSockRemoteSource[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HldSockRemoteSource;
     } else {
       p = new((void*) gvp) HldSockRemoteSource;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HldSockRemoteSource* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HldSockRemoteSource((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HldSockRemoteSource((const Text_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HldSockRemoteSource((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HldSockRemoteSource((const Text_t*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HldSockRemoteSource*) G__getstructoffset())->getNodeName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HldSockRemoteSource*) G__getstructoffset())->setRefId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HldSockRemoteSource::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HldSockRemoteSource::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HldSockRemoteSource::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HldSockRemoteSource::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HldSockRemoteSource*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HldSockRemoteSource::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HldSockRemoteSource::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HldSockRemoteSource::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_202_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HldSockRemoteSource::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RevtDict_202_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HldSockRemoteSource* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HldSockRemoteSource(*(HldSockRemoteSource*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HldSockRemoteSource G__THldSockRemoteSource;
static int G__RevtDict_202_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HldSockRemoteSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HldSockRemoteSource*) (soff+(sizeof(HldSockRemoteSource)*i)))->~G__THldSockRemoteSource();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HldSockRemoteSource*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HldSockRemoteSource*) (soff))->~G__THldSockRemoteSource();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RevtDict_202_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HldSockRemoteSource* dest = (HldSockRemoteSource*) G__getstructoffset();
   *dest = *(HldSockRemoteSource*) libp->para[0].ref;
   const HldSockRemoteSource& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HRevBuffer */
static int G__RevtDict_244_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRevBuffer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HRevBuffer((Int_t) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HRevBuffer((Int_t) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRevBuffer*) G__getstructoffset())->RevOpen((const Char_t*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 72, (long) ((HRevBuffer*) G__getstructoffset())->RevGet((TSocket*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HRevBuffer*) G__getstructoffset())->RevBufsize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRevBuffer*) G__getstructoffset())->RevBufWait((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRevBuffer*) G__getstructoffset())->RevClose((TSocket*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HRevBuffer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRevBuffer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HRevBuffer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HRevBuffer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRevBuffer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRevBuffer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRevBuffer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRevBuffer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__RevtDict_244_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRevBuffer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__RevtDict_244_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HRevBuffer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HRevBuffer(*(HRevBuffer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HRevBuffer G__THRevBuffer;
static int G__RevtDict_244_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HRevBuffer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HRevBuffer*) (soff+(sizeof(HRevBuffer)*i)))->~G__THRevBuffer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HRevBuffer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HRevBuffer*) (soff))->~G__THRevBuffer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__RevtDict_244_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRevBuffer* dest = (HRevBuffer*) G__getstructoffset();
   *dest = *(HRevBuffer*) libp->para[0].ref;
   const HRevBuffer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HldSockRemoteSource */

/* HRevBuffer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncRevtDict {
 public:
  G__Sizep2memfuncRevtDict(): p(&G__Sizep2memfuncRevtDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncRevtDict::*p)();
};

size_t G__get_sizep2memfuncRevtDict()
{
  G__Sizep2memfuncRevtDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceRevtDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource))) {
     HldSockRemoteSource *G__Lderived;
     G__Lderived=(HldSockRemoteSource*)0x1000;
     {
       HldSource *G__Lpbase=(HldSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource),G__get_linked_tagnum(&G__RevtDictLN_HldSource),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HDataSource *G__Lpbase=(HDataSource*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource),G__get_linked_tagnum(&G__RevtDictLN_HDataSource),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource),G__get_linked_tagnum(&G__RevtDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer))) {
     HRevBuffer *G__Lderived;
     G__Lderived=(HRevBuffer*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer),G__get_linked_tagnum(&G__RevtDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableRevtDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__RevtDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RevtDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RevtDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RevtDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RevtDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__RevtDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RevtDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RevtDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RevtDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RevtDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__RevtDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__RevtDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__RevtDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RevtDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__RevtDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__RevtDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HldSockRemoteSource */
static void G__setup_memvarHldSockRemoteSource(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource));
   { HldSockRemoteSource *p; p=(HldSockRemoteSource*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"refId=",0,"Reference run id for initialization");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__RevtDictLN_TString),-1,-1,2,"currNodeName=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RevtDictLN_TIterator),-1,-1,2,"iter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"evtMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RevtDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HRevBuffer */
static void G__setup_memvarHRevBuffer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer));
   { HRevBuffer *p; p=(HRevBuffer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RevtDictLN_TSocket),-1,-1,4,"pTSocket=",0,"ptr socket of channel to event server");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iSocket=",0,"socket id of channel to event server");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iDebug=",0,"verbosity level (test)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iBufNo1=",0,"first buffer no. received (test)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iBufNo2=",0,"last buffer no. received (test)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iSwap=",0,"> 0: swap event data");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iBufSizeAlloc=",0,"allocated buffer size");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iBufSize=",0,"size current buffer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iBufNo=",0,"current buffer no.");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iHeadPar=",0,"no. of (4 byte) parms buffer header");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvtMax=",0,"no. of events requested");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvtNo=",0,"last event no. handled (absolute)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvtRel=",0,"last event no. handled (in cur. buffer)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvtBuf=",0,"no. of events in current buffer");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"iEvtPar=",0,"no. of parameters in event (incl header)");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"piBuf=",0,"ptr event buffer");
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"piNextEvt=",0,"ptr first element next event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__RevtDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarRevtDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHldSockRemoteSource(void) {
   /* HldSockRemoteSource */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource));
   G__memfunc_setup("HldSockRemoteSource",1925,G__RevtDict_202_0_1, 105, G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HldSockRemoteSource",1925,G__RevtDict_202_0_2, 105, G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - nodeName i - 'Int_t' 0 '10000000' evtMax", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getNextEvent",1249,(G__InterfaceMethod) NULL,105, G__get_linked_tagnum(&G__RevtDictLN_EDsState), -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' doUnpack", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getNodeName",1095,G__RevtDict_202_0_5, 67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentRunId",1541,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCurrentRefId",1517,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setRefId",790,G__RevtDict_202_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - r", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentFileName",1828,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__RevtDict_202_0_10, 85, G__get_linked_tagnum(&G__RevtDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HldSockRemoteSource::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RevtDict_202_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HldSockRemoteSource::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RevtDict_202_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HldSockRemoteSource::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RevtDict_202_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HldSockRemoteSource::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RevtDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RevtDict_202_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RevtDict_202_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HldSockRemoteSource::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RevtDict_202_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HldSockRemoteSource::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RevtDict_202_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HldSockRemoteSource::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RevtDict_202_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HldSockRemoteSource::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HldSockRemoteSource", 1925, G__RevtDict_202_0_22, (int) ('i'), G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource), -1, 0, 1, 1, 1, 0, "u 'HldSockRemoteSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HldSockRemoteSource", 2051, G__RevtDict_202_0_23, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RevtDict_202_0_24, (int) ('u'), G__get_linked_tagnum(&G__RevtDictLN_HldSockRemoteSource), -1, 1, 1, 1, 1, 0, "u 'HldSockRemoteSource' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHRevBuffer(void) {
   /* HRevBuffer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer));
   G__memfunc_setup("HRevBuffer",975,G__RevtDict_244_0_1, 105, G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - iMode", "constructor", (void*) NULL, 0);
   G__memfunc_setup("RevOpen",703,G__RevtDict_244_0_2, 85, G__get_linked_tagnum(&G__RevtDictLN_TSocket), -1, 0, 3, 1, 1, 0, 
"C - 'Char_t' 10 - pNode i - 'Int_t' 0 - iPort "
"i - 'Int_t' 0 - iEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RevGet",589,G__RevtDict_244_0_3, 72, -1, G__defined_typename("UInt_t"), 0, 2, 1, 1, 0, 
"U 'TSocket' - 0 - pSocket i - 'Int_t' 0 - iFlush", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RevBufsize",1029,G__RevtDict_244_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RevBufWait",991,G__RevtDict_244_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - iWait", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("RevClose",803,G__RevtDict_244_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TSocket' - 0 - pSocket", "input Socket ptr ", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__RevtDict_244_0_7, 85, G__get_linked_tagnum(&G__RevtDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HRevBuffer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__RevtDict_244_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRevBuffer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__RevtDict_244_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HRevBuffer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__RevtDict_244_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HRevBuffer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__RevtDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__RevtDict_244_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__RevtDict_244_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRevBuffer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__RevtDict_244_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRevBuffer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__RevtDict_244_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRevBuffer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__RevtDict_244_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRevBuffer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HRevBuffer", 975, G__RevtDict_244_0_19, (int) ('i'), G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer), -1, 0, 1, 1, 1, 0, "u 'HRevBuffer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HRevBuffer", 1101, G__RevtDict_244_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__RevtDict_244_0_21, (int) ('u'), G__get_linked_tagnum(&G__RevtDictLN_HRevBuffer), -1, 1, 1, 1, 1, 0, "u 'HRevBuffer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncRevtDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalRevtDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcRevtDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__RevtDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_EDsState = { "EDsState" , 101 , -1 };
G__linked_taginfo G__RevtDictLN_HDataSource = { "HDataSource" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_TIterator = { "TIterator" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__RevtDictLN_HldSource = { "HldSource" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_HldSockRemoteSource = { "HldSockRemoteSource" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_TSocket = { "TSocket" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__RevtDictLN_HRevBuffer = { "HRevBuffer" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableRevtDict() {
  G__RevtDictLN_TClass.tagnum = -1 ;
  G__RevtDictLN_TBuffer.tagnum = -1 ;
  G__RevtDictLN_TMemberInspector.tagnum = -1 ;
  G__RevtDictLN_TObject.tagnum = -1 ;
  G__RevtDictLN_TString.tagnum = -1 ;
  G__RevtDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__RevtDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__RevtDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RevtDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__RevtDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RevtDictLN_EDsState.tagnum = -1 ;
  G__RevtDictLN_HDataSource.tagnum = -1 ;
  G__RevtDictLN_TIterator.tagnum = -1 ;
  G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__RevtDictLN_HldSource.tagnum = -1 ;
  G__RevtDictLN_HldSockRemoteSource.tagnum = -1 ;
  G__RevtDictLN_TSocket.tagnum = -1 ;
  G__RevtDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__RevtDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__RevtDictLN_HRevBuffer.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableRevtDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__RevtDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_TString);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_EDsState);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_HDataSource);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_TIterator);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_HldSource);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RevtDictLN_HldSockRemoteSource),sizeof(HldSockRemoteSource),-1,62720,"Data source to read rpc buffers;",G__setup_memvarHldSockRemoteSource,G__setup_memfuncHldSockRemoteSource);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_TSocket);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__RevtDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__RevtDictLN_HRevBuffer),sizeof(HRevBuffer),-1,62464,"prototype for remote event buffer",G__setup_memvarHRevBuffer,G__setup_memfuncHRevBuffer);
}
extern "C" void G__cpp_setupRevtDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupRevtDict()");
  G__set_cpp_environmentRevtDict();
  G__cpp_setup_tagtableRevtDict();

  G__cpp_setup_inheritanceRevtDict();

  G__cpp_setup_typetableRevtDict();

  G__cpp_setup_memvarRevtDict();

  G__cpp_setup_memfuncRevtDict();
  G__cpp_setup_globalRevtDict();
  G__cpp_setup_funcRevtDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncRevtDict();
  return;
}
class G__cpp_setup_initRevtDict {
  public:
    G__cpp_setup_initRevtDict() { G__add_setup_func("RevtDict",(G__incsetup)(&G__cpp_setupRevtDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initRevtDict() { G__remove_setup_func("RevtDict"); }
};
G__cpp_setup_initRevtDict G__cpp_setup_initializerRevtDict;

