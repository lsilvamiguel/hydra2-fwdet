//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Mon Mar 27 16:44:44 2017

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME dOdOdIbuilddIpcdIEventHandlingDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "EventHandlingDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HTree_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HTree(void *p = 0);
   static void *newArray_HTree(Long_t size, void *p);
   static void delete_HTree(void *p);
   static void deleteArray_HTree(void *p);
   static void destruct_HTree(void *p);
   static void directoryAutoAdd_HTree(void *obj, TDirectory *dir);
   static void streamer_HTree(TBuffer &buf, void *obj);
   static Long64_t merge_HTree(void *obj, TCollection *coll,TFileMergeInfo *info);
   static void reset_HTree(void *obj, TFileMergeInfo *info);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTree*)
   {
      ::HTree *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTree >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTree", ::HTree::Class_Version(), "./eventhandling/htree.h", 7,
                  typeid(::HTree), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTree::Dictionary, isa_proxy, 0,
                  sizeof(::HTree) );
      instance.SetNew(&new_HTree);
      instance.SetNewArray(&newArray_HTree);
      instance.SetDelete(&delete_HTree);
      instance.SetDeleteArray(&deleteArray_HTree);
      instance.SetDestructor(&destruct_HTree);
      instance.SetDirectoryAutoAdd(&directoryAutoAdd_HTree);
      instance.SetStreamerFunc(&streamer_HTree);
      instance.SetMerge(&merge_HTree);
      instance.SetResetAfterMerge(&reset_HTree);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTree*)
   {
      return GenerateInitInstanceLocal((::HTree*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTree*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HEvent(void *p);
   static void deleteArray_HEvent(void *p);
   static void destruct_HEvent(void *p);
   static void streamer_HEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEvent*)
   {
      ::HEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEvent", ::HEvent::Class_Version(), "./eventhandling/hevent.h", 18,
                  typeid(::HEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEvent::Dictionary, isa_proxy, 1,
                  sizeof(::HEvent) );
      instance.SetDelete(&delete_HEvent);
      instance.SetDeleteArray(&deleteArray_HEvent);
      instance.SetDestructor(&destruct_HEvent);
      instance.SetStreamerFunc(&streamer_HEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEvent*)
   {
      return GenerateInitInstanceLocal((::HEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTask_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HTask(void *p);
   static void deleteArray_HTask(void *p);
   static void destruct_HTask(void *p);
   static void streamer_HTask(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTask*)
   {
      ::HTask *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTask >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTask", ::HTask::Class_Version(), "./eventhandling/htask.h", 14,
                  typeid(::HTask), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTask::Dictionary, isa_proxy, 0,
                  sizeof(::HTask) );
      instance.SetDelete(&delete_HTask);
      instance.SetDeleteArray(&deleteArray_HTask);
      instance.SetDestructor(&destruct_HTask);
      instance.SetStreamerFunc(&streamer_HTask);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTask*)
   {
      return GenerateInitInstanceLocal((::HTask*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTask*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTaskSet_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HTaskSet(void *p = 0);
   static void *newArray_HTaskSet(Long_t size, void *p);
   static void delete_HTaskSet(void *p);
   static void deleteArray_HTaskSet(void *p);
   static void destruct_HTaskSet(void *p);
   static void streamer_HTaskSet(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTaskSet*)
   {
      ::HTaskSet *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTaskSet >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTaskSet", ::HTaskSet::Class_Version(), "./eventhandling/htaskset.h", 9,
                  typeid(::HTaskSet), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTaskSet::Dictionary, isa_proxy, 1,
                  sizeof(::HTaskSet) );
      instance.SetNew(&new_HTaskSet);
      instance.SetNewArray(&newArray_HTaskSet);
      instance.SetDelete(&delete_HTaskSet);
      instance.SetDeleteArray(&deleteArray_HTaskSet);
      instance.SetDestructor(&destruct_HTaskSet);
      instance.SetStreamerFunc(&streamer_HTaskSet);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTaskSet*)
   {
      return GenerateInitInstanceLocal((::HTaskSet*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTaskSet*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HSpectrometer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HSpectrometer(void *p = 0);
   static void *newArray_HSpectrometer(Long_t size, void *p);
   static void delete_HSpectrometer(void *p);
   static void deleteArray_HSpectrometer(void *p);
   static void destruct_HSpectrometer(void *p);
   static void streamer_HSpectrometer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HSpectrometer*)
   {
      ::HSpectrometer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HSpectrometer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HSpectrometer", ::HSpectrometer::Class_Version(), "./eventhandling/hspectrometer.h", 11,
                  typeid(::HSpectrometer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HSpectrometer::Dictionary, isa_proxy, 1,
                  sizeof(::HSpectrometer) );
      instance.SetNew(&new_HSpectrometer);
      instance.SetNewArray(&newArray_HSpectrometer);
      instance.SetDelete(&delete_HSpectrometer);
      instance.SetDeleteArray(&deleteArray_HSpectrometer);
      instance.SetDestructor(&destruct_HSpectrometer);
      instance.SetStreamerFunc(&streamer_HSpectrometer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HSpectrometer*)
   {
      return GenerateInitInstanceLocal((::HSpectrometer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HSpectrometer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void Hades_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_Hades(void *p = 0);
   static void *newArray_Hades(Long_t size, void *p);
   static void delete_Hades(void *p);
   static void deleteArray_Hades(void *p);
   static void destruct_Hades(void *p);
   static void streamer_Hades(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::Hades*)
   {
      ::Hades *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Hades >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Hades", ::Hades::Class_Version(), "./eventhandling/hades.h", 37,
                  typeid(::Hades), ::ROOT::DefineBehavior(ptr, ptr),
                  &::Hades::Dictionary, isa_proxy, 1,
                  sizeof(::Hades) );
      instance.SetNew(&new_Hades);
      instance.SetNewArray(&newArray_Hades);
      instance.SetDelete(&delete_Hades);
      instance.SetDeleteArray(&deleteArray_Hades);
      instance.SetDestructor(&destruct_Hades);
      instance.SetStreamerFunc(&streamer_Hades);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::Hades*)
   {
      return GenerateInitInstanceLocal((::Hades*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Hades*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HDetector_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HDetector(void *p = 0);
   static void *newArray_HDetector(Long_t size, void *p);
   static void delete_HDetector(void *p);
   static void deleteArray_HDetector(void *p);
   static void destruct_HDetector(void *p);
   static void streamer_HDetector(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HDetector*)
   {
      ::HDetector *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HDetector >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HDetector", ::HDetector::Class_Version(), "./eventhandling/hdetector.h", 13,
                  typeid(::HDetector), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HDetector::Dictionary, isa_proxy, 0,
                  sizeof(::HDetector) );
      instance.SetNew(&new_HDetector);
      instance.SetNewArray(&newArray_HDetector);
      instance.SetDelete(&delete_HDetector);
      instance.SetDeleteArray(&deleteArray_HDetector);
      instance.SetDestructor(&destruct_HDetector);
      instance.SetStreamerFunc(&streamer_HDetector);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HDetector*)
   {
      return GenerateInitInstanceLocal((::HDetector*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HDetector*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HEventHeader_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HEventHeader(void *p = 0);
   static void *newArray_HEventHeader(Long_t size, void *p);
   static void delete_HEventHeader(void *p);
   static void deleteArray_HEventHeader(void *p);
   static void destruct_HEventHeader(void *p);
   static void streamer_HEventHeader(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HEventHeader*)
   {
      ::HEventHeader *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HEventHeader >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HEventHeader", ::HEventHeader::Class_Version(), "./eventhandling/heventheader.h", 37,
                  typeid(::HEventHeader), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HEventHeader::Dictionary, isa_proxy, 1,
                  sizeof(::HEventHeader) );
      instance.SetNew(&new_HEventHeader);
      instance.SetNewArray(&newArray_HEventHeader);
      instance.SetDelete(&delete_HEventHeader);
      instance.SetDeleteArray(&deleteArray_HEventHeader);
      instance.SetDestructor(&destruct_HEventHeader);
      instance.SetStreamerFunc(&streamer_HEventHeader);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HEventHeader*)
   {
      return GenerateInitInstanceLocal((::HEventHeader*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HEventHeader*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HVertex_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HVertex(void *p = 0);
   static void *newArray_HVertex(Long_t size, void *p);
   static void delete_HVertex(void *p);
   static void deleteArray_HVertex(void *p);
   static void destruct_HVertex(void *p);
   static void streamer_HVertex(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HVertex*)
   {
      ::HVertex *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HVertex >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HVertex", ::HVertex::Class_Version(), "./eventhandling/heventheader.h", 7,
                  typeid(::HVertex), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HVertex::Dictionary, isa_proxy, 1,
                  sizeof(::HVertex) );
      instance.SetNew(&new_HVertex);
      instance.SetNewArray(&newArray_HVertex);
      instance.SetDelete(&delete_HVertex);
      instance.SetDeleteArray(&deleteArray_HVertex);
      instance.SetDestructor(&destruct_HVertex);
      instance.SetStreamerFunc(&streamer_HVertex);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HVertex*)
   {
      return GenerateInitInstanceLocal((::HVertex*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HVertex*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HPartialEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HPartialEvent(void *p = 0);
   static void *newArray_HPartialEvent(Long_t size, void *p);
   static void delete_HPartialEvent(void *p);
   static void deleteArray_HPartialEvent(void *p);
   static void destruct_HPartialEvent(void *p);
   static void streamer_HPartialEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HPartialEvent*)
   {
      ::HPartialEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HPartialEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HPartialEvent", ::HPartialEvent::Class_Version(), "./eventhandling/hpartialevent.h", 14,
                  typeid(::HPartialEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HPartialEvent::Dictionary, isa_proxy, 1,
                  sizeof(::HPartialEvent) );
      instance.SetNew(&new_HPartialEvent);
      instance.SetNewArray(&newArray_HPartialEvent);
      instance.SetDelete(&delete_HPartialEvent);
      instance.SetDeleteArray(&deleteArray_HPartialEvent);
      instance.SetDestructor(&destruct_HPartialEvent);
      instance.SetStreamerFunc(&streamer_HPartialEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HPartialEvent*)
   {
      return GenerateInitInstanceLocal((::HPartialEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HPartialEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HRecEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HRecEvent(void *p = 0);
   static void *newArray_HRecEvent(Long_t size, void *p);
   static void delete_HRecEvent(void *p);
   static void deleteArray_HRecEvent(void *p);
   static void destruct_HRecEvent(void *p);
   static void streamer_HRecEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HRecEvent*)
   {
      ::HRecEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HRecEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HRecEvent", ::HRecEvent::Class_Version(), "./eventhandling/hrecevent.h", 13,
                  typeid(::HRecEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HRecEvent::Dictionary, isa_proxy, 1,
                  sizeof(::HRecEvent) );
      instance.SetNew(&new_HRecEvent);
      instance.SetNewArray(&newArray_HRecEvent);
      instance.SetDelete(&delete_HRecEvent);
      instance.SetDeleteArray(&deleteArray_HRecEvent);
      instance.SetDestructor(&destruct_HRecEvent);
      instance.SetStreamerFunc(&streamer_HRecEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HRecEvent*)
   {
      return GenerateInitInstanceLocal((::HRecEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HRecEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HReconstructor_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HReconstructor(void *p);
   static void deleteArray_HReconstructor(void *p);
   static void destruct_HReconstructor(void *p);
   static void streamer_HReconstructor(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HReconstructor*)
   {
      ::HReconstructor *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HReconstructor >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HReconstructor", ::HReconstructor::Class_Version(), "./eventhandling/hreconstructor.h", 10,
                  typeid(::HReconstructor), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HReconstructor::Dictionary, isa_proxy, 0,
                  sizeof(::HReconstructor) );
      instance.SetDelete(&delete_HReconstructor);
      instance.SetDeleteArray(&deleteArray_HReconstructor);
      instance.SetDestructor(&destruct_HReconstructor);
      instance.SetStreamerFunc(&streamer_HReconstructor);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HReconstructor*)
   {
      return GenerateInitInstanceLocal((::HReconstructor*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HReconstructor*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParallelEvent_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HParallelEvent(void *p = 0);
   static void *newArray_HParallelEvent(Long_t size, void *p);
   static void delete_HParallelEvent(void *p);
   static void deleteArray_HParallelEvent(void *p);
   static void destruct_HParallelEvent(void *p);
   static void streamer_HParallelEvent(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParallelEvent*)
   {
      ::HParallelEvent *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParallelEvent >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParallelEvent", ::HParallelEvent::Class_Version(), "./eventhandling/hparallelevent.h", 20,
                  typeid(::HParallelEvent), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParallelEvent::Dictionary, isa_proxy, 0,
                  sizeof(::HParallelEvent) );
      instance.SetNew(&new_HParallelEvent);
      instance.SetNewArray(&newArray_HParallelEvent);
      instance.SetDelete(&delete_HParallelEvent);
      instance.SetDeleteArray(&deleteArray_HParallelEvent);
      instance.SetDestructor(&destruct_HParallelEvent);
      instance.SetStreamerFunc(&streamer_HParallelEvent);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParallelEvent*)
   {
      return GenerateInitInstanceLocal((::HParallelEvent*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParallelEvent*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HTree::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTree::Class_Name()
{
   return "HTree";
}

//______________________________________________________________________________
const char *HTree::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTree*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTree::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTree*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTree::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTree*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTree::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTree*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEvent::Class_Name()
{
   return "HEvent";
}

//______________________________________________________________________________
const char *HEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTask::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTask::Class_Name()
{
   return "HTask";
}

//______________________________________________________________________________
const char *HTask::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTask*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTask::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTask*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTask::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTask*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTask::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTask*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTaskSet::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTaskSet::Class_Name()
{
   return "HTaskSet";
}

//______________________________________________________________________________
const char *HTaskSet::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTaskSet*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTaskSet::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTaskSet*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTaskSet::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTaskSet*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTaskSet::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTaskSet*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HSpectrometer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HSpectrometer::Class_Name()
{
   return "HSpectrometer";
}

//______________________________________________________________________________
const char *HSpectrometer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSpectrometer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HSpectrometer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HSpectrometer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HSpectrometer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSpectrometer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HSpectrometer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HSpectrometer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr Hades::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *Hades::Class_Name()
{
   return "Hades";
}

//______________________________________________________________________________
const char *Hades::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Hades*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Hades::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::Hades*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Hades::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Hades*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Hades::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::Hades*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HDetector::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HDetector::Class_Name()
{
   return "HDetector";
}

//______________________________________________________________________________
const char *HDetector::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetector*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HDetector::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDetector*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HDetector::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetector*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HDetector::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDetector*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HEventHeader::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HEventHeader::Class_Name()
{
   return "HEventHeader";
}

//______________________________________________________________________________
const char *HEventHeader::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEventHeader*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HEventHeader::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HEventHeader*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HEventHeader::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEventHeader*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HEventHeader::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HEventHeader*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HVertex::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HVertex::Class_Name()
{
   return "HVertex";
}

//______________________________________________________________________________
const char *HVertex::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HVertex*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HVertex::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HVertex*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HVertex::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HVertex*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HVertex::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HVertex*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HPartialEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HPartialEvent::Class_Name()
{
   return "HPartialEvent";
}

//______________________________________________________________________________
const char *HPartialEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPartialEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HPartialEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPartialEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HPartialEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPartialEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HPartialEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPartialEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HRecEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HRecEvent::Class_Name()
{
   return "HRecEvent";
}

//______________________________________________________________________________
const char *HRecEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRecEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HRecEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HRecEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HRecEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRecEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HRecEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HRecEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HReconstructor::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HReconstructor::Class_Name()
{
   return "HReconstructor";
}

//______________________________________________________________________________
const char *HReconstructor::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HReconstructor*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HReconstructor::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HReconstructor*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HReconstructor::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HReconstructor*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HReconstructor::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HReconstructor*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParallelEvent::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParallelEvent::Class_Name()
{
   return "HParallelEvent";
}

//______________________________________________________________________________
const char *HParallelEvent::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParallelEvent*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParallelEvent::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParallelEvent*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParallelEvent::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParallelEvent*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParallelEvent::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParallelEvent*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HEventHeader::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEventHeader.
      TClass *R__cl = ::HEventHeader::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertex", &fVertex);
      R__insp.InspectMember(fVertex, "fVertex.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertexCluster", &fVertexCluster);
      R__insp.InspectMember(fVertexCluster, "fVertexCluster.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVertexReco", &fVertexReco);
      R__insp.InspectMember(fVertexReco, "fVertexReco.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeInSpill", &timeInSpill);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "downscaling", &downscaling);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "downscalingFlag", &downscalingFlag);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fDate", &fDate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fErrorBit", &fErrorBit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventDecoding", &fEventDecoding);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventPad", &fEventPad);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventRunNumber", &fEventRunNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventSeqNumber", &fEventSeqNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fEventSize", &fEventSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fId", &fId);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTBit", &fTBit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTime", &fTime);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fVersion", &fVersion);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerDecision", &triggerDecision);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "triggerDecisionEmu", &triggerDecisionEmu);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HEventHeader(void *p) {
      return  p ? new(p) ::HEventHeader : new ::HEventHeader;
   }
   static void *newArray_HEventHeader(Long_t nElements, void *p) {
      return p ? new(p) ::HEventHeader[nElements] : new ::HEventHeader[nElements];
   }
   // Wrapper around operator delete
   static void delete_HEventHeader(void *p) {
      delete ((::HEventHeader*)p);
   }
   static void deleteArray_HEventHeader(void *p) {
      delete [] ((::HEventHeader*)p);
   }
   static void destruct_HEventHeader(void *p) {
      typedef ::HEventHeader current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEventHeader(TBuffer &buf, void *obj) {
      ((::HEventHeader*)obj)->::HEventHeader::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEventHeader

//______________________________________________________________________________
void HVertex::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HVertex.
      TClass *R__cl = ::HVertex::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "pos", &pos);
      R__insp.InspectMember(pos, "pos.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iterations", &iterations);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sumOfWeights", &sumOfWeights);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HVertex(void *p) {
      return  p ? new(p) ::HVertex : new ::HVertex;
   }
   static void *newArray_HVertex(Long_t nElements, void *p) {
      return p ? new(p) ::HVertex[nElements] : new ::HVertex[nElements];
   }
   // Wrapper around operator delete
   static void delete_HVertex(void *p) {
      delete ((::HVertex*)p);
   }
   static void deleteArray_HVertex(void *p) {
      delete [] ((::HVertex*)p);
   }
   static void destruct_HVertex(void *p) {
      typedef ::HVertex current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HVertex(TBuffer &buf, void *obj) {
      ((::HVertex*)obj)->::HVertex::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HVertex

//______________________________________________________________________________
void Hades::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Hades.
      TClass *R__cl = ::Hades::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputSizeLimit", &fOutputSizeLimit);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCycleNumber", &fCycleNumber);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputFileName", &fOutputFileName);
      R__insp.InspectMember(fOutputFileName, "fOutputFileName.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fFirstEventLoop", &fFirstEventLoop);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fSplitLevel", &fSplitLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fDataSource", &fDataSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fSecondDataSource", &fSecondDataSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHldOutput", &fHldOutput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentEvent", &fCurrentEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTask", &fTask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fOutputFile", &fOutputFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*setup", &setup);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*rtdb", &rtdb);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTaskList", &fTaskList);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "quiet", &quiet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCounter", &fCounter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*oldHdlr", &oldHdlr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*msgHandler", &msgHandler);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "reqEvents", &reqEvents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "enableCloseInput", &enableCloseInput);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimer", &fTimer);
      R__insp.InspectMember(fTimer, "fTimer.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isHldSource", &isHldSource);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "writeHades", &writeHades);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "evIdMap[16]", evIdMap);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "treeBufferSize", &treeBufferSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTaskListStatus", &fTaskListStatus);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fgeantMedia", &fgeantMedia);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fsrckeeper", &fsrckeeper);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fbeamtimeID", &fbeamtimeID);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fObjectsAddedToOutput", &fObjectsAddedToOutput);
      R__insp.InspectMember(fObjectsAddedToOutput, "fObjectsAddedToOutput.");
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_Hades(void *p) {
      return  p ? new(p) ::Hades : new ::Hades;
   }
   static void *newArray_Hades(Long_t nElements, void *p) {
      return p ? new(p) ::Hades[nElements] : new ::Hades[nElements];
   }
   // Wrapper around operator delete
   static void delete_Hades(void *p) {
      delete ((::Hades*)p);
   }
   static void deleteArray_Hades(void *p) {
      delete [] ((::Hades*)p);
   }
   static void destruct_Hades(void *p) {
      typedef ::Hades current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Hades(TBuffer &buf, void *obj) {
      ((::Hades*)obj)->::Hades::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::Hades

//______________________________________________________________________________
void HReconstructor::Streamer(TBuffer &R__b)
{
   // Stream an object of class HReconstructor.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      HTask::Streamer(R__b);
      R__b >> fHistograms;
      R__b >> fActive;
      fOutputs.Streamer(R__b);
      fTimer.Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HReconstructor::IsA());
   } else {
      R__c = R__b.WriteVersion(HReconstructor::IsA(), kTRUE);
      HTask::Streamer(R__b);
      R__b << fHistograms;
      R__b << fActive;
      fOutputs.Streamer(R__b);
      fTimer.Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HReconstructor::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HReconstructor.
      TClass *R__cl = ::HReconstructor::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHistograms", &fHistograms);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fActive", &fActive);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fOutputs", &fOutputs);
      R__insp.InspectMember(fOutputs, "fOutputs.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTimer", &fTimer);
      R__insp.InspectMember(fTimer, "fTimer.");
      HTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HReconstructor(void *p) {
      delete ((::HReconstructor*)p);
   }
   static void deleteArray_HReconstructor(void *p) {
      delete [] ((::HReconstructor*)p);
   }
   static void destruct_HReconstructor(void *p) {
      typedef ::HReconstructor current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HReconstructor(TBuffer &buf, void *obj) {
      ((::HReconstructor*)obj)->::HReconstructor::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HReconstructor

//______________________________________________________________________________
void HTask::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTask.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> owner;
      R__b >> manual;
      R__b >> isInitialised;
      R__b >> isConnected;
      R__b >> fIsTimed;
      R__b.CheckByteCount(R__s, R__c, HTask::IsA());
   } else {
      R__c = R__b.WriteVersion(HTask::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << owner;
      R__b << manual;
      R__b << isInitialised;
      R__b << isConnected;
      R__b << fIsTimed;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HTask::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTask.
      TClass *R__cl = ::HTask::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*owner", &owner);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "manual", &manual);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isInitialised", &isInitialised);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isConnected", &isConnected);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fIsTimed", &fIsTimed);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HTask(void *p) {
      delete ((::HTask*)p);
   }
   static void deleteArray_HTask(void *p) {
      delete [] ((::HTask*)p);
   }
   static void destruct_HTask(void *p) {
      typedef ::HTask current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTask(TBuffer &buf, void *obj) {
      ((::HTask*)obj)->::HTask::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTask

//______________________________________________________________________________
void HTaskSet::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTaskSet.
      TClass *R__cl = ::HTaskSet::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fTasks", &fTasks);
      R__insp.InspectMember(fTasks, "fTasks.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fNextTask", &fNextTask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFirstTask", &fFirstTask);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ids[8]", ids);
      HTask::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HTaskSet(void *p) {
      return  p ? new(p) ::HTaskSet : new ::HTaskSet;
   }
   static void *newArray_HTaskSet(Long_t nElements, void *p) {
      return p ? new(p) ::HTaskSet[nElements] : new ::HTaskSet[nElements];
   }
   // Wrapper around operator delete
   static void delete_HTaskSet(void *p) {
      delete ((::HTaskSet*)p);
   }
   static void deleteArray_HTaskSet(void *p) {
      delete [] ((::HTaskSet*)p);
   }
   static void destruct_HTaskSet(void *p) {
      typedef ::HTaskSet current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTaskSet(TBuffer &buf, void *obj) {
      ((::HTaskSet*)obj)->::HTaskSet::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTaskSet

//______________________________________________________________________________
void HEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HEvent.
      TClass *R__cl = ::HEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fName", &fName);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTitle", &fTitle);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HEvent(void *p) {
      delete ((::HEvent*)p);
   }
   static void deleteArray_HEvent(void *p) {
      delete [] ((::HEvent*)p);
   }
   static void destruct_HEvent(void *p) {
      typedef ::HEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HEvent(TBuffer &buf, void *obj) {
      ((::HEvent*)obj)->::HEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HEvent

//______________________________________________________________________________
void HRecEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HRecEvent.
      TClass *R__cl = ::HRecEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecLevel", &fRecLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fNTracks", &fNTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHeader", &fHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTracks", &fTracks);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fPartialEvs", &fPartialEvs);
      HEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HRecEvent(void *p) {
      return  p ? new(p) ::HRecEvent : new ::HRecEvent;
   }
   static void *newArray_HRecEvent(Long_t nElements, void *p) {
      return p ? new(p) ::HRecEvent[nElements] : new ::HRecEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_HRecEvent(void *p) {
      delete ((::HRecEvent*)p);
   }
   static void deleteArray_HRecEvent(void *p) {
      delete [] ((::HRecEvent*)p);
   }
   static void destruct_HRecEvent(void *p) {
      typedef ::HRecEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HRecEvent(TBuffer &buf, void *obj) {
      ((::HRecEvent*)obj)->::HRecEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HRecEvent

//______________________________________________________________________________
void HPartialEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HPartialEvent.
      TClass *R__cl = ::HPartialEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fRecLevel", &fRecLevel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fBaseCategory", &fBaseCategory);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fHeader", &fHeader);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCategories", &fCategories);
      HEvent::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HPartialEvent(void *p) {
      return  p ? new(p) ::HPartialEvent : new ::HPartialEvent;
   }
   static void *newArray_HPartialEvent(Long_t nElements, void *p) {
      return p ? new(p) ::HPartialEvent[nElements] : new ::HPartialEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_HPartialEvent(void *p) {
      delete ((::HPartialEvent*)p);
   }
   static void deleteArray_HPartialEvent(void *p) {
      delete [] ((::HPartialEvent*)p);
   }
   static void destruct_HPartialEvent(void *p) {
      typedef ::HPartialEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HPartialEvent(TBuffer &buf, void *obj) {
      ((::HPartialEvent*)obj)->::HPartialEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HPartialEvent

//______________________________________________________________________________
void HParallelEvent::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParallelEvent.

   TNamed::Streamer(R__b);
}

//______________________________________________________________________________
void HParallelEvent::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParallelEvent.
      TClass *R__cl = ::HParallelEvent::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fCurrentEvent", &fCurrentEvent);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fTree", &fTree);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*fFile", &fFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fCursor", &fCursor);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParallelEvent(void *p) {
      return  p ? new(p) ::HParallelEvent : new ::HParallelEvent;
   }
   static void *newArray_HParallelEvent(Long_t nElements, void *p) {
      return p ? new(p) ::HParallelEvent[nElements] : new ::HParallelEvent[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParallelEvent(void *p) {
      delete ((::HParallelEvent*)p);
   }
   static void deleteArray_HParallelEvent(void *p) {
      delete [] ((::HParallelEvent*)p);
   }
   static void destruct_HParallelEvent(void *p) {
      typedef ::HParallelEvent current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParallelEvent(TBuffer &buf, void *obj) {
      ((::HParallelEvent*)obj)->::HParallelEvent::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParallelEvent

//______________________________________________________________________________
void HTree::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTree.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TTree::Streamer(R__b);
      R__b.CheckByteCount(R__s, R__c, HTree::IsA());
   } else {
      R__c = R__b.WriteVersion(HTree::IsA(), kTRUE);
      TTree::Streamer(R__b);
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HTree::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTree.
      TClass *R__cl = ::HTree::IsA();
      if (R__cl || R__insp.IsA()) { }
      TTree::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HTree(void *p) {
      return  p ? new(p) ::HTree : new ::HTree;
   }
   static void *newArray_HTree(Long_t nElements, void *p) {
      return p ? new(p) ::HTree[nElements] : new ::HTree[nElements];
   }
   // Wrapper around operator delete
   static void delete_HTree(void *p) {
      delete ((::HTree*)p);
   }
   static void deleteArray_HTree(void *p) {
      delete [] ((::HTree*)p);
   }
   static void destruct_HTree(void *p) {
      typedef ::HTree current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around the directory auto add.
   static void directoryAutoAdd_HTree(void *p, TDirectory *dir) {
      ((::HTree*)p)->DirectoryAutoAdd(dir);
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTree(TBuffer &buf, void *obj) {
      ((::HTree*)obj)->::HTree::Streamer(buf);
   }
   // Wrapper around the merge function.
   static Long64_t merge_HTree(void *obj,TCollection *coll,TFileMergeInfo *info) {
      return ((::HTree*)obj)->Merge(coll,info);
   }
   // Wrapper around the Reset function.
   static void reset_HTree(void *obj,TFileMergeInfo *info) {
      ((::HTree*)obj)->ResetAfterMerge(info);
   }
} // end of namespace ROOTDict for class ::HTree

//______________________________________________________________________________
void HDetector::Streamer(TBuffer &R__b)
{
   // Stream an object of class HDetector.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      TNamed::Streamer(R__b);
      R__b >> maxSectors;
      R__b >> maxModules;
      R__b >> maxComponents;
      R__b >> modules;
      R__b.CheckByteCount(R__s, R__c, HDetector::IsA());
   } else {
      R__c = R__b.WriteVersion(HDetector::IsA(), kTRUE);
      TNamed::Streamer(R__b);
      R__b << maxSectors;
      R__b << maxModules;
      R__b << maxComponents;
      R__b << modules;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void HDetector::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HDetector.
      TClass *R__cl = ::HDetector::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxSectors", &maxSectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxModules", &maxModules);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "maxComponents", &maxComponents);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*modules", &modules);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HDetector(void *p) {
      return  p ? new(p) ::HDetector : new ::HDetector;
   }
   static void *newArray_HDetector(Long_t nElements, void *p) {
      return p ? new(p) ::HDetector[nElements] : new ::HDetector[nElements];
   }
   // Wrapper around operator delete
   static void delete_HDetector(void *p) {
      delete ((::HDetector*)p);
   }
   static void deleteArray_HDetector(void *p) {
      delete [] ((::HDetector*)p);
   }
   static void destruct_HDetector(void *p) {
      typedef ::HDetector current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HDetector(TBuffer &buf, void *obj) {
      ((::HDetector*)obj)->::HDetector::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HDetector

//______________________________________________________________________________
void HSpectrometer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HSpectrometer.
      TClass *R__cl = ::HSpectrometer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*detectors", &detectors);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "changed", &changed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*shapes", &shapes);
      TNamed::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HSpectrometer(void *p) {
      return  p ? new(p) ::HSpectrometer : new ::HSpectrometer;
   }
   static void *newArray_HSpectrometer(Long_t nElements, void *p) {
      return p ? new(p) ::HSpectrometer[nElements] : new ::HSpectrometer[nElements];
   }
   // Wrapper around operator delete
   static void delete_HSpectrometer(void *p) {
      delete ((::HSpectrometer*)p);
   }
   static void deleteArray_HSpectrometer(void *p) {
      delete [] ((::HSpectrometer*)p);
   }
   static void destruct_HSpectrometer(void *p) {
      typedef ::HSpectrometer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HSpectrometer(TBuffer &buf, void *obj) {
      ((::HSpectrometer*)obj)->::HSpectrometer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HSpectrometer

/********************************************************
* ../build/pc/EventHandlingDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableEventHandlingDict();

extern "C" void G__set_cpp_environmentEventHandlingDict() {
  G__cpp_reset_tagtableEventHandlingDict();
}
#include <new>
extern "C" int G__cpp_dllrevEventHandlingDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HTree */
static int G__EventHandlingDict_498_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTree[n];
     } else {
       p = new((void*) gvp) HTree[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTree;
     } else {
       p = new((void*) gvp) HTree;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTree* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTree(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HTree(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTree((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HTree((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HTree));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTree*) G__getstructoffset())->printContainerSizes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTree::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTree::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTree::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTree::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTree*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTree::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTree::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTree::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_498_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTree::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTree G__THTree;
static int G__EventHandlingDict_498_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTree*) (soff+(sizeof(HTree)*i)))->~G__THTree();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTree*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTree*) (soff))->~G__THTree();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEvent */
static int G__EventHandlingDict_544_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HEvent*) G__getstructoffset())->getCategory((Cat_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HEvent*) G__getstructoffset())->addCategory((Cat_t) G__int(libp->para[0]), (HCategory*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HEvent*) G__getstructoffset())->removeCategory((Cat_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEvent*) G__getstructoffset())->makeBranch((TBranch*) G__int(libp->para[0]), (HTree*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEvent*) G__getstructoffset())->activateBranch((TTree*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEvent*) G__getstructoffset())->clearAll((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HEvent*) G__getstructoffset())->getHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_544_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEvent G__THEvent;
static int G__EventHandlingDict_544_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEvent*) (soff+(sizeof(HEvent)*i)))->~G__THEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEvent*) (soff))->~G__THEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_544_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEvent* dest = (HEvent*) G__getstructoffset();
   *dest = *(HEvent*) libp->para[0].ref;
   const HEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTask */
static int G__EventHandlingDict_546_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HTask*) G__getstructoffset())->connectTask((HTask*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTask*) G__getstructoffset())->next(*(Int_t*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTask*) G__getstructoffset())->getTask((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HTask*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HTask*) G__getstructoffset())->reinit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HTask*) G__getstructoffset())->finalize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTask*) G__getstructoffset())->getConnections();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTask*) G__getstructoffset())->getComposite());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTask*) G__getstructoffset())->getOwner());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTask*) G__getstructoffset())->setOwner((HTask*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HTask*) G__getstructoffset())->setConnections());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTask*) G__getstructoffset())->setManual();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTask*) G__getstructoffset())->isTimed((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTask*) G__getstructoffset())->resetTimer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTask*) G__getstructoffset())->printTimer();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTask::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTask::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTask::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTask::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTask*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTask::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTask::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTask::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_546_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTask::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTask G__THTask;
static int G__EventHandlingDict_546_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTask*) (soff+(sizeof(HTask)*i)))->~G__THTask();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTask*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTask*) (soff))->~G__THTask();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_546_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTask* dest = (HTask*) G__getstructoffset();
   *dest = *(HTask*) libp->para[0].ref;
   const HTask& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTaskSet */
static int G__EventHandlingDict_547_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTaskSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTaskSet[n];
     } else {
       p = new((void*) gvp) HTaskSet[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTaskSet;
     } else {
       p = new((void*) gvp) HTaskSet;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTaskSet* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HTaskSet((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HTaskSet((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->add((HTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->connect((HTask*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->connect((HTask*) G__int(libp->para[0]), (HTask*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->connect((HTask*) G__int(libp->para[0]), (HTask*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->connect((HTask*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->connect((HTask*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->connect((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((HTaskSet*) G__getstructoffset())->connect((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HTaskSet*) G__getstructoffset())->make((const Char_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HTaskSet*) G__getstructoffset())->make((const Char_t*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((HTaskSet*) G__getstructoffset())->make());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTaskSet*) G__getstructoffset())->next(*(Int_t*) G__Intref(&libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTaskSet*) G__getstructoffset())->operator()(*(Int_t*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTaskSet*) G__getstructoffset())->getSetOfTask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTaskSet*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HTaskSet*) G__getstructoffset())->isTimed((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HTaskSet*) G__getstructoffset())->isTimed();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 8:
      ((HTaskSet*) G__getstructoffset())->setIds(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]), (Int_t) G__int(libp->para[7]));
      G__setnull(result7);
      break;
   case 7:
      ((HTaskSet*) G__getstructoffset())->setIds(
(Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5])
, (Int_t) G__int(libp->para[6]));
      G__setnull(result7);
      break;
   case 6:
      ((HTaskSet*) G__getstructoffset())->setIds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]), (Int_t) G__int(libp->para[5]));
      G__setnull(result7);
      break;
   case 5:
      ((HTaskSet*) G__getstructoffset())->setIds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])
, (Int_t) G__int(libp->para[4]));
      G__setnull(result7);
      break;
   case 4:
      ((HTaskSet*) G__getstructoffset())->setIds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
      G__setnull(result7);
      break;
   case 3:
      ((HTaskSet*) G__getstructoffset())->setIds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HTaskSet*) G__getstructoffset())->setIds((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HTaskSet*) G__getstructoffset())->setIds((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((HTaskSet*) G__getstructoffset())->getIds(*(Int_t*) G__Intref(&libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTaskSet::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTaskSet::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTaskSet::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTaskSet::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTaskSet*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTaskSet::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTaskSet::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTaskSet::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_547_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTaskSet::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTaskSet G__THTaskSet;
static int G__EventHandlingDict_547_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTaskSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTaskSet*) (soff+(sizeof(HTaskSet)*i)))->~G__THTaskSet();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTaskSet*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTaskSet*) (soff))->~G__THTaskSet();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HSpectrometer */
static int G__EventHandlingDict_548_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSpectrometer* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HSpectrometer[n];
     } else {
       p = new((void*) gvp) HSpectrometer[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HSpectrometer;
     } else {
       p = new((void*) gvp) HSpectrometer;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSpectrometer*) G__getstructoffset())->addDetector((HDetector*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HSpectrometer*) G__getstructoffset())->getDetector((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSpectrometer*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSpectrometer*) G__getstructoffset())->activateParIo((HParIo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSpectrometer*) G__getstructoffset())->write());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSpectrometer*) G__getstructoffset())->write((HParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HSpectrometer*) G__getstructoffset())->hasChanged());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HSpectrometer*) G__getstructoffset())->setChanged((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HSpectrometer*) G__getstructoffset())->setChanged();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HSpectrometer*) G__getstructoffset())->getListOfDetectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HSpectrometer*) G__getstructoffset())->getShapes());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSpectrometer*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HSpectrometer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpectrometer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HSpectrometer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HSpectrometer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HSpectrometer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpectrometer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSpectrometer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HSpectrometer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_548_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HSpectrometer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventHandlingDict_548_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HSpectrometer* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HSpectrometer(*(HSpectrometer*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HSpectrometer G__THSpectrometer;
static int G__EventHandlingDict_548_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HSpectrometer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HSpectrometer*) (soff+(sizeof(HSpectrometer)*i)))->~G__THSpectrometer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HSpectrometer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HSpectrometer*) (soff))->~G__THSpectrometer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_548_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HSpectrometer* dest = (HSpectrometer*) G__getstructoffset();
   *dest = *(HSpectrometer*) libp->para[0].ref;
   const HSpectrometer& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Hades */
static int G__EventHandlingDict_549_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Hades* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Hades[n];
     } else {
       p = new((void*) gvp) Hades[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new Hades;
     } else {
       p = new((void*) gvp) Hades;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_Hades));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Hades::instance());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->init((Bool_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->init());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->eventLoop((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])
, (Double_t) G__double(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->eventLoop((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->eventLoop((Int_t) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->eventLoop());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hades*) G__getstructoffset())->makeCounter((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hades*) G__getstructoffset())->makeCounter();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hades*) G__getstructoffset())->setQuietMode((UChar_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hades*) G__getstructoffset())->setQuietMode();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getNumberOfRequestedEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getEventCounter());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->resetEventCounter();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getEmbeddingMode());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setEmbeddingMode((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getEmbeddingDebug());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setEmbeddingDebug((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Hades::getEmbeddingRealTrackId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Hades::setEmbeddingRealTrackId((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->getForceNoSkip());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hades*) G__getstructoffset())->setForceNoSkip((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hades*) G__getstructoffset())->setForceNoSkip();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setBeamTimeID((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getBeamTimeID());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getRuntimeDb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getSetup());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getMsg());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getGeantMedia());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getSrcKeeper());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         HEvent*& obj = ((Hades*) G__getstructoffset())->getCurrentEvent();
         result7->ref = (long) (&obj);
         G__letint(result7, 'U', (long)obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setEvent((HEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setDataSource((HDataSource*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Hades*) G__getstructoffset())->getDataSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setSecondDataSource((HDataSource*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hades*) G__getstructoffset())->setEnableCloseInput((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hades*) G__getstructoffset())->setEnableCloseInput();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Hades*) G__getstructoffset())->getSecondDataSource());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getTask((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getTask());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getTaskSet((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getTaskSet((const Char_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->initTasks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->reinitTasks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->finalizeTasks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->executeTasks());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getTaskList());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getTaskListStatus());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->closeOutput();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setOutputSizeLimit((Size_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((Hades*) G__getstructoffset())->getOutputSizeLimit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setSplitLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getSplitLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->getTreeBufferSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->setTreeBufferSize((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->setOutputFile((Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])
, (Text_t*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getOutputFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->setHldOutput((Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Option_t*) G__int(libp->para[2])));
      break;
   case 2:
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->setHldOutput((Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->setHldOutput((Text_t*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const Hades*) G__getstructoffset())->getHldOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((Hades*) G__getstructoffset())->setWriteHades((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((Hades*) G__getstructoffset())->setWriteHades();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->addObjectToOutput((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((Hades*) G__getstructoffset())->getTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->makeTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->activateTree((TTree*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->setAlgorithmLayout((Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->setEventLayout((Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->setConfig((Text_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((Hades*) G__getstructoffset())->mapId((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->isCalibration());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((Hades*) G__getstructoffset())->isReal());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->printDefinedTaskSets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->defineTaskSets();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Hades::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hades::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Hades::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Hades::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Hades*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hades::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Hades::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Hades::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_549_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Hades::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Hades G__THades;
static int G__EventHandlingDict_549_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Hades*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Hades*) (soff+(sizeof(Hades)*i)))->~G__THades();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Hades*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Hades*) (soff))->~G__THades();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HDetector */
static int G__EventHandlingDict_555_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HDetector[n];
     } else {
       p = new((void*) gvp) HDetector[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HDetector;
     } else {
       p = new((void*) gvp) HDetector;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetector* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HDetector((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) HDetector((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HDetector*) G__getstructoffset())->getMaxSectors());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HDetector*) G__getstructoffset())->getMaxModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HDetector*) G__getstructoffset())->getMaxComponents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetector*) G__getstructoffset())->isSectorActive((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HDetector*) G__getstructoffset())->setMaxSectors((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HDetector*) G__getstructoffset())->setMaxSectors();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetector*) G__getstructoffset())->setModules((Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 73, (long) ((HDetector*) G__getstructoffset())->getModules());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HDetector*) G__getstructoffset())->getModule((Int_t) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetector*) G__getstructoffset())->init());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HDetector*) G__getstructoffset())->write((HParIo*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetector*) G__getstructoffset())->activateParIo((HParIo*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetector*) G__getstructoffset())->print();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HDetector*) G__getstructoffset())->buildTask((const Text_t*) G__int(libp->para[0]), (Option_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HDetector*) G__getstructoffset())->buildCategory((Cat_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HDetector::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetector::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HDetector::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HDetector::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDetector*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetector::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetector::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDetector::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_555_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDetector::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventHandlingDict_555_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HDetector* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HDetector(*(HDetector*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HDetector G__THDetector;
static int G__EventHandlingDict_555_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HDetector*) (soff+(sizeof(HDetector)*i)))->~G__THDetector();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HDetector*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HDetector*) (soff))->~G__THDetector();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_555_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDetector* dest = (HDetector*) G__getstructoffset();
   *dest = *(HDetector*) libp->para[0].ref;
   const HDetector& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HEventHeader */
static int G__EventHandlingDict_558_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEventHeader* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEventHeader[n];
     } else {
       p = new((void*) gvp) HEventHeader[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HEventHeader;
     } else {
       p = new((void*) gvp) HEventHeader;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setDate((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setDownscaling((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setDownscalingFlag((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setErrorBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setEventDecoding((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setEventPad((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setEventRunNumber((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setEventSeqNumber((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setEventSize((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setId((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setMuEmuTriggerDecision((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setTBit((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setTime((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setTimeInSpill((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setTriggerDecision((UInt_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->setVersion((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HEventHeader*) G__getstructoffset())->isTBit((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HEventHeader*) G__getstructoffset())->getVertexZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HEventHeader*) G__getstructoffset())->getVertexClusterZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HEventHeader*) G__getstructoffset())->getVertexRecoZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HVertex& obj = ((HEventHeader*) G__getstructoffset())->getVertex();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HVertex& obj = ((HEventHeader*) G__getstructoffset())->getVertexCluster();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HVertex& obj = ((HEventHeader*) G__getstructoffset())->getVertexReco();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HEventHeader*) G__getstructoffset())->getTimeInSpill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getDate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getDownscaling());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getDownscalingFlag());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getErrorBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getEventDecoding());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getEventPad());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getEventRunNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getEventSeqNumber());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getEventSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getMuEmuTriggerDecision());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getTBit());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getTime());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getTriggerDecision());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 104, (long) ((HEventHeader*) G__getstructoffset())->getVersion());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HEventHeader*) G__getstructoffset())->isNewDAQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HEventHeader*) G__getstructoffset())->isOldDAQ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HEventHeader::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEventHeader::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HEventHeader::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HEventHeader::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HEventHeader*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEventHeader::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEventHeader::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HEventHeader::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_558_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HEventHeader::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventHandlingDict_558_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HEventHeader* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HEventHeader(*(HEventHeader*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HEventHeader G__THEventHeader;
static int G__EventHandlingDict_558_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HEventHeader*) (soff+(sizeof(HEventHeader)*i)))->~G__THEventHeader();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HEventHeader*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HEventHeader*) (soff))->~G__THEventHeader();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_558_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HEventHeader* dest = (HEventHeader*) G__getstructoffset();
   *dest = *(HEventHeader*) libp->para[0].ref;
   const HEventHeader& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HVertex */
static int G__EventHandlingDict_560_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HVertex* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HVertex[n];
     } else {
       p = new((void*) gvp) HVertex[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HVertex;
     } else {
       p = new((void*) gvp) HVertex;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVertex*) G__getstructoffset())->setPos(*(HGeomVector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVertex*) G__getstructoffset())->setIterations((Short_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVertex*) G__getstructoffset())->setChi2((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVertex*) G__getstructoffset())->setSumOfWeights((Float_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((HVertex*) G__getstructoffset())->getIterations());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HVertex*) G__getstructoffset())->getChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HVertex*) G__getstructoffset())->getSumOfWeights());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HVertex*) G__getstructoffset())->getX());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HVertex*) G__getstructoffset())->getY());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((HVertex*) G__getstructoffset())->getZ());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HGeomVector& obj = ((HVertex*) G__getstructoffset())->getPos();
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HVertex::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVertex::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HVertex::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HVertex::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HVertex*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVertex::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HVertex::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HVertex::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_560_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HVertex::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventHandlingDict_560_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HVertex* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HVertex(*(HVertex*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HVertex G__THVertex;
static int G__EventHandlingDict_560_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HVertex*) (soff+(sizeof(HVertex)*i)))->~G__THVertex();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HVertex*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HVertex*) (soff))->~G__THVertex();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_560_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HVertex* dest = (HVertex*) G__getstructoffset();
   *dest = *(HVertex*) libp->para[0].ref;
   const HVertex& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HPartialEvent */
static int G__EventHandlingDict_561_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HPartialEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HPartialEvent[n];
     } else {
       p = new((void*) gvp) HPartialEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HPartialEvent;
     } else {
       p = new((void*) gvp) HPartialEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HPartialEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HPartialEvent(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Cat_t) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) HPartialEvent(
(const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (Cat_t) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) ((HPartialEvent*) G__getstructoffset())->getBaseCat());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPartialEvent*) G__getstructoffset())->addCategory((Cat_t) G__int(libp->para[0]), (HCategory*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HPartialEvent*) G__getstructoffset())->getCategories());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPartialEvent*) G__getstructoffset())->setRecLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HPartialEvent*) G__getstructoffset())->getRecLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPartialEvent*) G__getstructoffset())->setSubHeader((TObject*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HPartialEvent*) G__getstructoffset())->getSubHeader());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPartialEvent*) G__getstructoffset())->isEmpty());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPartialEvent*) G__getstructoffset())->setExpandedStreamer((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPartialEvent*) G__getstructoffset())->hasExpandedStreamer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPartialEvent*) G__getstructoffset())->setPersistency((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HPartialEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPartialEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HPartialEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPartialEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPartialEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPartialEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPartialEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPartialEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_561_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPartialEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventHandlingDict_561_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HPartialEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HPartialEvent(*(HPartialEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HPartialEvent G__THPartialEvent;
static int G__EventHandlingDict_561_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HPartialEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HPartialEvent*) (soff+(sizeof(HPartialEvent)*i)))->~G__THPartialEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HPartialEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HPartialEvent*) (soff))->~G__THPartialEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_561_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HPartialEvent* dest = (HPartialEvent*) G__getstructoffset();
   *dest = *(HPartialEvent*) libp->para[0].ref;
   const HPartialEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HRecEvent */
static int G__EventHandlingDict_563_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRecEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRecEvent[n];
     } else {
       p = new((void*) gvp) HRecEvent[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HRecEvent;
     } else {
       p = new((void*) gvp) HRecEvent;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRecEvent*) G__getstructoffset())->newTrack());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRecEvent*) G__getstructoffset())->addTrack(*(HTrack*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRecEvent*) G__getstructoffset())->getTrack((UInt_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRecEvent*) G__getstructoffset())->clearTracks();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRecEvent*) G__getstructoffset())->setRecLevel((Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HRecEvent*) G__getstructoffset())->getRecLevel());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRecEvent*) G__getstructoffset())->addPartialEvent((Cat_t) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1])
, (const Text_t*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRecEvent*) G__getstructoffset())->addPartialEvent((HPartialEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRecEvent*) G__getstructoffset())->getPartialEvents());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HRecEvent*) G__getstructoffset())->getPartialEvent((Cat_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRecEvent*) G__getstructoffset())->removePartialEvent((Cat_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRecEvent*) G__getstructoffset())->merge((HRecEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRecEvent*) G__getstructoffset())->setExpandedStreamer((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HRecEvent*) G__getstructoffset())->hasExpandedStreamer());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HRecEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRecEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HRecEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HRecEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HRecEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRecEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRecEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HRecEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_563_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HRecEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventHandlingDict_563_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HRecEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HRecEvent(*(HRecEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HRecEvent G__THRecEvent;
static int G__EventHandlingDict_563_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HRecEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HRecEvent*) (soff+(sizeof(HRecEvent)*i)))->~G__THRecEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HRecEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HRecEvent*) (soff))->~G__THRecEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_563_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HRecEvent* dest = (HRecEvent*) G__getstructoffset();
   *dest = *(HRecEvent*) libp->para[0].ref;
   const HRecEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HReconstructor */
static int G__EventHandlingDict_564_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HReconstructor*) G__getstructoffset())->execute());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HReconstructor*) G__getstructoffset())->connectTask((HTask*) G__int(libp->para[0]), (Int_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HReconstructor*) G__getstructoffset())->connectTask((HTask*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TObjArray* pobj;
         TObjArray xobj = ((HReconstructor*) G__getstructoffset())->getTable();
         pobj = new TObjArray(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReconstructor*) G__getstructoffset())->setActive((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HReconstructor*) G__getstructoffset())->isTimed((Bool_t) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HReconstructor*) G__getstructoffset())->isTimed();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HReconstructor::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HReconstructor::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HReconstructor::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HReconstructor::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HReconstructor*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HReconstructor::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HReconstructor::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HReconstructor::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_564_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HReconstructor::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HReconstructor G__THReconstructor;
static int G__EventHandlingDict_564_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HReconstructor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HReconstructor*) (soff+(sizeof(HReconstructor)*i)))->~G__THReconstructor();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HReconstructor*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HReconstructor*) (soff))->~G__THReconstructor();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParallelEvent */
static int G__EventHandlingDict_565_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParallelEvent* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParallelEvent((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HParallelEvent((const Text_t*) G__int(libp->para[0]), (const Text_t*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParallelEvent((const Text_t*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HParallelEvent((const Text_t*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HParallelEvent[n];
       } else {
         p = new((void*) gvp) HParallelEvent[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HParallelEvent;
       } else {
         p = new((void*) gvp) HParallelEvent;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParallelEvent*) G__getstructoffset())->getRecEvent());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParallelEvent*) G__getstructoffset())->getTree());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParallelEvent*) G__getstructoffset())->getFile());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParallelEvent*) G__getstructoffset())->getEntry((Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParallelEvent*) G__getstructoffset())->getCursor());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HParallelEvent*) G__getstructoffset())->setInputFile(*((TString*) G__int(libp->para[0])), (Bool_t) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HParallelEvent*) G__getstructoffset())->setInputFile(*((TString*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParallelEvent*) G__getstructoffset())->closeInputFile();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParallelEvent*) G__getstructoffset())->mergeGeantEvent((HRecEvent*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParallelEvent::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParallelEvent::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParallelEvent::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParallelEvent::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParallelEvent*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParallelEvent::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParallelEvent::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParallelEvent::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__EventHandlingDict_565_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParallelEvent::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__EventHandlingDict_565_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParallelEvent* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParallelEvent(*(HParallelEvent*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParallelEvent G__THParallelEvent;
static int G__EventHandlingDict_565_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParallelEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParallelEvent*) (soff+(sizeof(HParallelEvent)*i)))->~G__THParallelEvent();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParallelEvent*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParallelEvent*) (soff))->~G__THParallelEvent();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__EventHandlingDict_565_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParallelEvent* dest = (HParallelEvent*) G__getstructoffset();
   *dest = *(HParallelEvent*) libp->para[0].ref;
   const HParallelEvent& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HTree */

/* HEvent */

/* HTask */

/* HTaskSet */

/* HSpectrometer */

/* Hades */

/* HDetector */

/* HEventHeader */

/* HVertex */

/* HPartialEvent */

/* HRecEvent */

/* HReconstructor */

/* HParallelEvent */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncEventHandlingDict {
 public:
  G__Sizep2memfuncEventHandlingDict(): p(&G__Sizep2memfuncEventHandlingDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncEventHandlingDict::*p)();
};

size_t G__get_sizep2memfuncEventHandlingDict()
{
  G__Sizep2memfuncEventHandlingDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceEventHandlingDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree))) {
     HTree *G__Lderived;
     G__Lderived=(HTree*)0x1000;
     {
       TTree *G__Lpbase=(TTree*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),G__get_linked_tagnum(&G__EventHandlingDictLN_TTree),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),G__get_linked_tagnum(&G__EventHandlingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttLine *G__Lpbase=(TAttLine*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),G__get_linked_tagnum(&G__EventHandlingDictLN_TAttLine),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttFill *G__Lpbase=(TAttFill*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),G__get_linked_tagnum(&G__EventHandlingDictLN_TAttFill),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TAttMarker *G__Lpbase=(TAttMarker*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),G__get_linked_tagnum(&G__EventHandlingDictLN_TAttMarker),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent))) {
     HEvent *G__Lderived;
     G__Lderived=(HEvent*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HTask))) {
     HTask *G__Lderived;
     G__Lderived=(HTask*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTask),G__get_linked_tagnum(&G__EventHandlingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTask),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet))) {
     HTaskSet *G__Lderived;
     G__Lderived=(HTaskSet*)0x1000;
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet),G__get_linked_tagnum(&G__EventHandlingDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet),G__get_linked_tagnum(&G__EventHandlingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer))) {
     HSpectrometer *G__Lderived;
     G__Lderived=(HSpectrometer*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer),G__get_linked_tagnum(&G__EventHandlingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_Hades))) {
     Hades *G__Lderived;
     G__Lderived=(Hades*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_Hades),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector))) {
     HDetector *G__Lderived;
     G__Lderived=(HDetector*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector),G__get_linked_tagnum(&G__EventHandlingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader))) {
     HEventHeader *G__Lderived;
     G__Lderived=(HEventHeader*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex))) {
     HVertex *G__Lderived;
     G__Lderived=(HVertex*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent))) {
     HPartialEvent *G__Lderived;
     G__Lderived=(HPartialEvent*)0x1000;
     {
       HEvent *G__Lpbase=(HEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent),G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent))) {
     HRecEvent *G__Lderived;
     G__Lderived=(HRecEvent*)0x1000;
     {
       HEvent *G__Lpbase=(HEvent*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent),G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HReconstructor))) {
     HReconstructor *G__Lderived;
     G__Lderived=(HReconstructor*)0x1000;
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HReconstructor),G__get_linked_tagnum(&G__EventHandlingDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HReconstructor),G__get_linked_tagnum(&G__EventHandlingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HReconstructor),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent))) {
     HParallelEvent *G__Lderived;
     G__Lderived=(HParallelEvent*)0x1000;
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent),G__get_linked_tagnum(&G__EventHandlingDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent),G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableEventHandlingDict() {

   /* Setting up typedef entry */
   G__search_typename2("Char_t",99,-1,0,-1);
   G__setnewtype(-1,"Signed Character 1 byte (char)",0);
   G__search_typename2("UChar_t",98,-1,0,-1);
   G__setnewtype(-1,"Unsigned Character 1 byte (unsigned char)",0);
   G__search_typename2("Short_t",115,-1,0,-1);
   G__setnewtype(-1,"Signed Short integer 2 bytes (short)",0);
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("UInt_t",104,-1,0,-1);
   G__setnewtype(-1,"Unsigned integer 4 bytes (unsigned int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Text_t",99,-1,0,-1);
   G__setnewtype(-1,"General string (char)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("Option_t",99,-1,256,-1);
   G__setnewtype(-1,"Option string (const char)",0);
   G__search_typename2("Size_t",102,-1,0,-1);
   G__setnewtype(-1,"Attribute size (float)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventHandlingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventHandlingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventHandlingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__EventHandlingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__EventHandlingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__EventHandlingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("Cat_t",115,-1,0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HTree */
static void G__setup_memvarHTree(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree));
   { HTree *p; p=(HTree*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEvent */
static void G__setup_memvarHEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent));
   { HEvent *p; p=(HEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TString),-1,-1,2,"fName=",0,"! Event's name");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TString),-1,-1,2,"fTitle=",0,"! Event's title");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTask */
static void G__setup_memvarHTask(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTask));
   { HTask *p; p=(HTask*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HTask),-1,-1,2,"owner=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"manual=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isInitialised=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isConnected=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fIsTimed=",0,"timer flag");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTaskSet */
static void G__setup_memvarHTaskSet(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet));
   { HTaskSet *p; p=(HTaskSet*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TOrdCollection),-1,-1,2,"fTasks=",0,"Tasks in this set");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HTask),-1,-1,2,"fNextTask=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HTask),-1,-1,2,"fFirstTask=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"ids[8]=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HSpectrometer */
static void G__setup_memvarHSpectrometer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer));
   { HSpectrometer *p; p=(HSpectrometer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TList),-1,-1,2,"detectors=",0,"List of detectors");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"changed=",0,"! flag is kTRUE if the setup changes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HGeomShapes),-1,-1,2,"shapes=",0,"! shape class containing the different shapes");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* Hades */
static void G__setup_memvarHades(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_Hades));
   { Hades *p; p=(Hades*)0x1000; if (p) { }
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Size_t"),-1,2,"fOutputSizeLimit=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCycleNumber=",0,"Number of current output file");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TString),-1,-1,2,"fOutputFileName=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fFirstEventLoop=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fSplitLevel=",0,"Indicates the split level (0,1,2)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HDataSource),-1,-1,2,"fDataSource=",0,"! Data source where data are taken from");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HDataSource),-1,-1,2,"fSecondDataSource=",0,"! 2nd data source where data are taken from");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HldFileOutput),-1,-1,2,"fHldOutput=",0,"! Hld file output");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent),-1,-1,2,"fCurrentEvent=",0,"Event under reconstruction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet),-1,-1,2,"fTask=",0,"Task for each event.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TFile),-1,-1,2,"fOutputFile=",0,"! File used to store the output tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer),-1,-1,2,"setup=",0,"! Spectrometer s setup.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),-1,-1,2,"fTree=",0,"Output tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HRuntimeDb),-1,-1,2,"rtdb=",0,"! Runtime database of reconstruction parameters.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray),-1,-1,2,"fTaskList=",0,"List of Task for each type of events.");
   G__memvar_setup((void*)0,98,0,0,-1,G__defined_typename("UChar_t"),-1,2,"quiet=",0,"1 - quiet mode, 2 - silence mode");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fCounter=",0,"Counter display for event loop");
   G__memvar_setup((void*)0,89,0,0,-1,G__defined_typename("ErrorHandlerFunc_t"),-1,2,"oldHdlr=",0,"! Original ROOT error handler");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HMessageMgr),-1,-1,2,"msgHandler=",0,"! Message handler with three different outputs");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"reqEvents=",0,"! number of requested events from eventloop");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"enableCloseInput=",0,"! Enable closing oracle input");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TStopwatch),-1,-1,2,"fTimer=",0,"! Timer for event loop stoping by time quota");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"EventCounter=",0,"! Event counter, can be retrieved via gHades->getEventCounter()");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"doEmbedding=",0,"! embedding mode flag 0=No embedding,");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"doEmbeddingDebug=",0,"! embedding mode flag 0=No debug, 1=empty real data category before sim data");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-2,2,"forceNoSkip=",0,"! kTRUE = don't skip events in unpackers when trigger tag mismatch is detected");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isHldSource=",0,"! special mode for 2. source");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"writeHades=",0,"! write Hades object to output file");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"evIdMap[16]=",0,"! look-up table for event id mapping");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"treeBufferSize=",0,"! size of the buffer of a branch (default 8000)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fTaskListStatus=",0,"! store the return value of the tasklist");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-2,2,"fembeddingRealTrackId=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HGeantMedia),-1,-1,2,"fgeantMedia=",0,"! pointer to geantmedia object for sim");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HSrcKeeper),-1,-1,2,"fsrckeeper=",0,"! pointer to HSrcKeeper");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,2,"fbeamtimeID=",0,"! beam time identifier ( see  Particle::eBeamTime )");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray),-1,-1,2,"fObjectsAddedToOutput=",0,"! objects which should be written to each outputfile");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HDetector */
static void G__setup_memvarHDetector(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector));
   { HDetector *p; p=(HDetector*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"maxSectors=",0,"maximum number of sectors (-1 for detectors outside any sector)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"maxModules=",0,"maximum number of modules per sector");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"maxComponents=",0,"maximum number of components per module");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TArrayI),-1,-1,2,"modules=",0,"Module's array.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HEventHeader */
static void G__setup_memvarHEventHeader(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader));
   { HEventHeader *p; p=(HEventHeader*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex),-1,-1,4,"fVertex=",0,"Vertex information (x, y, z (in mm) in lab system)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex),-1,-1,4,"fVertexCluster=",0,"Vertex information (x, y, z (in mm) in lab system from Clusters)");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex),-1,-1,4,"fVertexReco=",0,"Vertex information (x, y, z (in mm) in lab system from Clusters)");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"timeInSpill=",0,"Time in spill");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"downscaling=",0,"DAQ downscaling factor");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"downscalingFlag=",0,"DAQ downscaling flag (bit 4 of EvtId)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fDate=",0,"Date in DAQ format");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fErrorBit=",0,"Error bit (the MSB of EvtId)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventDecoding=",0,"Decoding flag");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventPad=",0,"64 bit alignment");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventRunNumber=",0,"Run number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventSeqNumber=",0,"Event number");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fEventSize=",0,"Event size in bytes");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fId=",0,"Event id (bits 0...3 of EvtId)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fTBit=",0,"Trigger bits (8 bits of LVL1 trigger box)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fTime=",0,"Time in DAQ format");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"fVersion=",0,"Version info (bits 12...15 of EvtId)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"triggerDecision=",0,"LVL2 decision in lower 16 bit (bits 5...7 of EvtId)");
   G__memvar_setup((void*)0,104,0,0,-1,G__defined_typename("UInt_t"),-1,4,"triggerDecisionEmu=",0,"MU emulation of LVL2 decission ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HVertex */
static void G__setup_memvarHVertex(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex));
   { HVertex *p; p=(HVertex*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HGeomVector),-1,-1,2,"pos=",0,"Vertex position");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Short_t"),-1,2,"iterations=",0,"Iterations until convergence. < 0, if no convergence");
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,102,0,0,-1,G__defined_typename("Float_t"),-1,2,"sumOfWeights=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HPartialEvent */
static void G__setup_memvarHPartialEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent));
   { HPartialEvent *p; p=(HPartialEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRecLevel=",0,"Reconstruction level of the event");
   G__memvar_setup((void*)0,115,0,0,-1,G__defined_typename("Cat_t"),-1,2,"fBaseCategory=",0,"Identifier for the first category stored in this partial event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TObject),-1,-1,2,"fHeader=",0,"Sub event's header.");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray),-1,-1,2,"fCategories=",0,"! Categories ");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HRecEvent */
static void G__setup_memvarHRecEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent));
   { HRecEvent *p; p=(HRecEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fRecLevel=",0,"Reconstruction level for this event");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"fNTracks=",0,"Number of reconstructed tracks in this event (not used!)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader),-1,-1,2,"fHeader=",0,"! Event header");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClonesArray),-1,-1,2,"fTracks=",0,"Reconstructed tracks for this event (not used!)");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray),-1,-1,2,"fPartialEvs=",0,"! List of partial events in this event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HReconstructor */
static void G__setup_memvarHReconstructor(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HReconstructor));
   { HReconstructor *p; p=(HReconstructor*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TList),-1,-1,2,"fHistograms=",0,"List of histograms generated by this reconstructor.");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"fActive=",0,"Active flag");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray),-1,-1,2,"fOutputs=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TStopwatch),-1,-1,2,"fTimer=",0,"Task timer");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParallelEvent */
static void G__setup_memvarHParallelEvent(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent));
   { HParallelEvent *p; p=(HParallelEvent*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent),-1,-1,4,"fCurrentEvent=",0,"! Event under reconstruction");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_HTree),-1,-1,4,"fTree=",0,"! input tree for event");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TFile),-1,-1,4,"fFile=",0,"! inputfile");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"fCursor=",0,"! entry pointer to current event in tree");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarEventHandlingDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHTree(void) {
   /* HTree */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTree));
   G__memfunc_setup("HTree",472,G__EventHandlingDict_498_0_1, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HTree",472,G__EventHandlingDict_498_0_2, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HTree), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title "
"i - 'Int_t' 0 '0' maxvirtualsize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetBranch",878,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TBranch), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printContainerSizes",2014,G__EventHandlingDict_498_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MakeCode",761,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Char_t' 10 '0' filename", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventHandlingDict_498_0_6, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTree::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_498_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTree::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_498_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTree::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_498_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTree::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_498_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_498_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTree::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_498_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTree::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_498_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTree::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_498_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTree::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HTree", 598, G__EventHandlingDict_498_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEvent(void) {
   /* HEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent));
   G__memfunc_setup("GetName",673,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("GetTitle",802,(G__InterfaceMethod) NULL,67, -1, G__defined_typename("Text_t"), 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getCategory",1150,G__EventHandlingDict_544_0_5, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HCategory), -1, 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - aCat", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("addCategory",1127,G__EventHandlingDict_544_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"s - 'Cat_t' 0 - aCat U 'HCategory' - 0 - cat "
"C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("removeCategory",1484,G__EventHandlingDict_544_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - aCat", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("makeBranch",1004,G__EventHandlingDict_544_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TBranch' - 0 - parent U 'HTree' - 0 - tree", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("activateBranch",1439,G__EventHandlingDict_544_0_9, 121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree i - 'Int_t' 0 - splitLevel", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("clearAll",800,G__EventHandlingDict_544_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getHeader",905,G__EventHandlingDict_544_0_11, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventHandlingDict_544_0_12, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_544_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_544_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_544_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_544_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_544_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_544_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_544_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_544_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEvent::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HEvent", 712, G__EventHandlingDict_544_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_544_0_25, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent), -1, 1, 1, 1, 1, 0, "u 'HEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTask(void) {
   /* HTask */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTask));
   G__memfunc_setup("connectTask",1149,G__EventHandlingDict_546_0_1, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HTask' - 0 - task i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("next",447,G__EventHandlingDict_546_0_4, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 1 - errCode", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getTask",723,G__EventHandlingDict_546_0_5, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("init",436,G__EventHandlingDict_546_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("reinit",651,G__EventHandlingDict_546_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,G__EventHandlingDict_546_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getConnections",1475,G__EventHandlingDict_546_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getComposite",1267,G__EventHandlingDict_546_0_10, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getOwner",843,G__EventHandlingDict_546_0_11, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setOwner",855,G__EventHandlingDict_546_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HTask' - 0 - atask", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setConnections",1487,G__EventHandlingDict_546_0_13, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setManual",938,G__EventHandlingDict_546_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTimed",719,G__EventHandlingDict_546_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - -", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("resetTimer",1060,G__EventHandlingDict_546_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("printTimer",1070,G__EventHandlingDict_546_0_17, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("Class",502,G__EventHandlingDict_546_0_18, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTask::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_546_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTask::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_546_0_20, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTask::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_546_0_21, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTask::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_546_0_25, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_546_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTask::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_546_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTask::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_546_0_28, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTask::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_546_0_29, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTask::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HTask", 601, G__EventHandlingDict_546_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_546_0_31, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 1, 1, 1, 1, 0, "u 'HTask' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTaskSet(void) {
   /* HTaskSet */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet));
   G__memfunc_setup("HTaskSet",775,(G__InterfaceMethod) NULL, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet), -1, 0, 1, 1, 4, 0, "u 'HTaskSet' - 1 - ts", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HTaskSet",775,G__EventHandlingDict_547_0_2, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HTaskSet",775,G__EventHandlingDict_547_0_3, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,G__EventHandlingDict_547_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HTask' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__EventHandlingDict_547_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HTask' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__EventHandlingDict_547_0_9, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'HTask' - 0 - - U 'HTask' - 0 - - "
"i - 'Int_t' 0 'kGOFORWARD' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__EventHandlingDict_547_0_10, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"U 'HTask' - 0 - - C - 'Text_t' 10 - where "
"i - 'Int_t' 0 'kGOFORWARD' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__EventHandlingDict_547_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - task C - 'Text_t' 10 - where "
"i - 'Int_t' 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connectTask",1149,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HTask' - 0 - - i - 'Int_t' 0 - n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("make",414,G__EventHandlingDict_547_0_14, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 2, 1, 1, 0, 
"C - 'Char_t' 10 '\"\"' select C - 'Option_t' 10 '\"\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("next",447,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 1 - errCode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("next",447,G__EventHandlingDict_547_0_16, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 1 - errCode i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator()",957,G__EventHandlingDict_547_0_17, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 1 - errCode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getComposite",1267,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getSetOfTask",1204,G__EventHandlingDict_547_0_19, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TOrdCollection), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTask",723,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__EventHandlingDict_547_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isTimed",719,G__EventHandlingDict_547_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resetTimer",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printTimer",1070,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setIds",620,G__EventHandlingDict_547_0_27, 121, -1, -1, 0, 8, 1, 1, 0, 
"i - 'Int_t' 0 - i0 i - 'Int_t' 0 '-1' i1 "
"i - 'Int_t' 0 '-1' i2 i - 'Int_t' 0 '-1' i3 "
"i - 'Int_t' 0 '-1' i4 i - 'Int_t' 0 '-1' i5 "
"i - 'Int_t' 0 '-1' i6 i - 'Int_t' 0 '-1' i7", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIds",608,G__EventHandlingDict_547_0_28, 73, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 1 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_547_0_29, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTaskSet::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_547_0_30, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTaskSet::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_547_0_31, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTaskSet::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_547_0_32, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTaskSet::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_547_0_36, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_547_0_37, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTaskSet::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_547_0_38, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTaskSet::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_547_0_39, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTaskSet::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_547_0_40, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTaskSet::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HTaskSet", 901, G__EventHandlingDict_547_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHSpectrometer(void) {
   /* HSpectrometer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer));
   G__memfunc_setup("HSpectrometer",1349,G__EventHandlingDict_548_0_1, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addDetector",1123,G__EventHandlingDict_548_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HDetector' - 0 - det", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDetector",1146,G__EventHandlingDict_548_0_3, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,G__EventHandlingDict_548_0_4, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("activateParIo",1324,G__EventHandlingDict_548_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__EventHandlingDict_548_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,G__EventHandlingDict_548_0_7, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - io", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasChanged",998,G__EventHandlingDict_548_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChanged",1014,G__EventHandlingDict_548_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' f", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getListOfDetectors",1854,G__EventHandlingDict_548_0_10, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TList), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getShapes",932,G__EventHandlingDict_548_0_11, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HGeomShapes), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("print",557,G__EventHandlingDict_548_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_548_0_13, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HSpectrometer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_548_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpectrometer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_548_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HSpectrometer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_548_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HSpectrometer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_548_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_548_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpectrometer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_548_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSpectrometer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_548_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HSpectrometer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_548_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HSpectrometer::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HSpectrometer", 1349, G__EventHandlingDict_548_0_25, (int) ('i'), G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer), -1, 0, 1, 1, 1, 0, "u 'HSpectrometer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HSpectrometer", 1475, G__EventHandlingDict_548_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_548_0_27, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer), -1, 1, 1, 1, 1, 0, "u 'HSpectrometer' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHades(void) {
   /* Hades */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_Hades));
   G__memfunc_setup("recreateOutput",1500,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 2, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initTaskSetsIDs",1510,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 2, 0, "i - 'Int_t' 0 - version", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentRunId",1541,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 2, 0, "U 'HDataSource' - 0 - source", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Hades",485,G__EventHandlingDict_549_0_4, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_Hades), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("instance",853,G__EventHandlingDict_549_0_5, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_Hades), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Hades* (*)())(&Hades::instance) ), 0);
   G__memfunc_setup("init",436,G__EventHandlingDict_549_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kFALSE' externInit", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("eventLoop",956,G__EventHandlingDict_549_0_7, 105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"i - 'Int_t' 0 'kMaxInt' nEvents i - 'Int_t' 0 '0' firstEvent "
"d - 'Double_t' 0 '1.e+20' timeQuota", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("makeCounter",1150,G__EventHandlingDict_549_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '1000' counter", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setQuietMode",1241,G__EventHandlingDict_549_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "b - 'UChar_t' 0 '1' mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNumberOfRequestedEvents",2693,G__EventHandlingDict_549_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventCounter",1570,G__EventHandlingDict_549_0_11, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("resetEventCounter",1797,G__EventHandlingDict_549_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEmbeddingMode",1604,G__EventHandlingDict_549_0_13, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmbeddingMode",1616,G__EventHandlingDict_549_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEmbeddingDebug",1702,G__EventHandlingDict_549_0_15, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEmbeddingDebug",1714,G__EventHandlingDict_549_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - mode", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEmbeddingRealTrackId",2277,G__EventHandlingDict_549_0_17, 105, -1, G__defined_typename("Int_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Int_t (*)())(&Hades::getEmbeddingRealTrackId) ), 0);
   G__memfunc_setup("setEmbeddingRealTrackId",2289,G__EventHandlingDict_549_0_18, 121, -1, -1, 0, 1, 3, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) G__func2void( (void (*)(Int_t))(&Hades::setEmbeddingRealTrackId) ), 0);
   G__memfunc_setup("getForceNoSkip",1411,G__EventHandlingDict_549_0_19, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setForceNoSkip",1423,G__EventHandlingDict_549_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' noskip", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setBeamTimeID",1245,G__EventHandlingDict_549_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBeamTimeID",1233,G__EventHandlingDict_549_0_22, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRuntimeDb",1226,G__EventHandlingDict_549_0_23, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HRuntimeDb), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSetup",849,G__EventHandlingDict_549_0_24, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HSpectrometer), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMsg",615,G__EventHandlingDict_549_0_25, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HMessageMgr), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getGeantMedia",1295,G__EventHandlingDict_549_0_26, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HGeantMedia), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSrcKeeper",1220,G__EventHandlingDict_549_0_27, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HSrcKeeper), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCurrentEvent",1573,G__EventHandlingDict_549_0_28, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HEvent), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEvent",846,G__EventHandlingDict_549_0_29, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HEvent' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDataSource",1335,G__EventHandlingDict_549_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HDataSource' - 0 - dataS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDataSource",1323,G__EventHandlingDict_549_0_31, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HDataSource), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSecondDataSource",1939,G__EventHandlingDict_549_0_32, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HDataSource' - 0 - dataS", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEnableCloseInput",1945,G__EventHandlingDict_549_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSecondDataSource",1927,G__EventHandlingDict_549_0_34, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HDataSource), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTask",723,G__EventHandlingDict_549_0_35, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - taskName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTask",723,G__EventHandlingDict_549_0_36, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaskSet",1023,G__EventHandlingDict_549_0_37, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - nEvtId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaskSet",1023,G__EventHandlingDict_549_0_38, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTaskSet), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - evtTypeName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("initTasks",954,G__EventHandlingDict_549_0_39, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reinitTasks",1169,G__EventHandlingDict_549_0_40, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("finalizeTasks",1368,G__EventHandlingDict_549_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("executeTasks",1273,G__EventHandlingDict_549_0_42, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaskList",1135,G__EventHandlingDict_549_0_43, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray), -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTaskListStatus",1779,G__EventHandlingDict_549_0_44, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeOutput",1191,G__EventHandlingDict_549_0_45, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutputSizeLimit",1911,G__EventHandlingDict_549_0_46, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Size_t' 0 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutputSizeLimit",1899,G__EventHandlingDict_549_0_47, 102, -1, G__defined_typename("Size_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSplitLevel",1360,G__EventHandlingDict_549_0_48, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - splitLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSplitLevel",1348,G__EventHandlingDict_549_0_49, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTreeBufferSize",1733,G__EventHandlingDict_549_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTreeBufferSize",1745,G__EventHandlingDict_549_0_51, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - size", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setOutputFile",1373,G__EventHandlingDict_549_0_52, 103, -1, G__defined_typename("Bool_t"), 0, 4, 1, 1, 0, 
"C - 'Text_t' 0 - name C - 'Option_t' 10 - opt "
"C - 'Text_t' 0 - title i - 'Int_t' 0 - comp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getOutputFile",1361,G__EventHandlingDict_549_0_53, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setHldOutput",1269,G__EventHandlingDict_549_0_54, 103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"C - 'Text_t' 0 - - C - 'Text_t' 10 '\"f_\"' fileSuffix "
"C - 'Option_t' 10 '\"NEW\"' option", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHldOutput",1257,G__EventHandlingDict_549_0_55, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HldFileOutput), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setWriteHades",1340,G__EventHandlingDict_549_0_56, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' write", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addObjectToOutput",1748,G__EventHandlingDict_549_0_57, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - obj", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTree",720,G__EventHandlingDict_549_0_58, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeTree",814,G__EventHandlingDict_549_0_59, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("activateTree",1249,G__EventHandlingDict_549_0_60, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setAlgorithmLayout",1905,G__EventHandlingDict_549_0_63, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Text_t' 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventLayout",1484,G__EventHandlingDict_549_0_64, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Text_t' 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setConfig",930,G__EventHandlingDict_549_0_65, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "C - 'Text_t' 0 - fileName", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mapId",491,G__EventHandlingDict_549_0_66, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isCalibration",1348,G__EventHandlingDict_549_0_67, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isReal",608,G__EventHandlingDict_549_0_68, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("printDefinedTaskSets",2062,G__EventHandlingDict_549_0_69, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("defineTaskSets",1437,G__EventHandlingDict_549_0_70, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_549_0_71, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Hades::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_549_0_72, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hades::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_549_0_73, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Hades::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_549_0_74, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Hades::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_549_0_78, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_549_0_79, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hades::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_549_0_80, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Hades::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_549_0_81, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Hades::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_549_0_82, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Hades::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~Hades", 611, G__EventHandlingDict_549_0_83, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHDetector(void) {
   /* HDetector */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector));
   G__memfunc_setup("HDetector",898,G__EventHandlingDict_555_0_1, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HDetector",898,G__EventHandlingDict_555_0_2, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - name C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxSectors",1353,G__EventHandlingDict_555_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxModules",1343,G__EventHandlingDict_555_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMaxComponents",1676,G__EventHandlingDict_555_0_5, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isSectorActive",1448,G__EventHandlingDict_555_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - sector", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMaxSectors",1365,G__EventHandlingDict_555_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 '6' sec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setModules",1061,G__EventHandlingDict_555_0_8, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - sec I - 'Int_t' 0 - modules", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModules",1049,G__EventHandlingDict_555_0_9, 73, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getModule",934,G__EventHandlingDict_555_0_10, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 0, 
"i - 'Int_t' 0 - sector i - 'Int_t' 0 - mod", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("init",436,G__EventHandlingDict_555_0_11, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,G__EventHandlingDict_555_0_12, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateParIo",1324,G__EventHandlingDict_555_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HParIo' - 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("print",557,G__EventHandlingDict_555_0_14, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("buildTask",931,G__EventHandlingDict_555_0_15, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 - - C - 'Option_t' 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("buildCategory",1358,G__EventHandlingDict_555_0_16, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HCategory), -1, 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventHandlingDict_555_0_17, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HDetector::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_555_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetector::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_555_0_19, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HDetector::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_555_0_20, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HDetector::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_555_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_555_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetector::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_555_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetector::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_555_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDetector::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_555_0_28, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDetector::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HDetector", 898, G__EventHandlingDict_555_0_29, (int) ('i'), G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector), -1, 0, 1, 1, 1, 0, "u 'HDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HDetector", 1024, G__EventHandlingDict_555_0_30, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_555_0_31, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HDetector), -1, 1, 1, 1, 1, 0, "u 'HDetector' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHEventHeader(void) {
   /* HEventHeader */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader));
   G__memfunc_setup("HEventHeader",1171,G__EventHandlingDict_558_0_1, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDate",714,G__EventHandlingDict_558_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - date", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDownscaling",1477,G__EventHandlingDict_558_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - d", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setDownscalingFlag",1855,G__EventHandlingDict_558_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - df", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setErrorBit",1141,G__EventHandlingDict_558_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - eb", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventDecoding",1643,G__EventHandlingDict_558_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - eventDecod", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventPad",1123,G__EventHandlingDict_558_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - evPad", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventRunNumber",1772,G__EventHandlingDict_558_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - evFileNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventSeqNumber",1760,G__EventHandlingDict_558_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - evSeqNr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setEventSize",1257,G__EventHandlingDict_558_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - eventSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setId",505,G__EventHandlingDict_558_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMuEmuTriggerDecision",2359,G__EventHandlingDict_558_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - td", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTBit",703,G__EventHandlingDict_558_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - bits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTime",731,G__EventHandlingDict_558_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - time", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTimeInSpill",1430,G__EventHandlingDict_558_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setTriggerDecision",1870,G__EventHandlingDict_558_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - td", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setVersion",1074,G__EventHandlingDict_558_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - v", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isTBit",591,G__EventHandlingDict_558_0_18, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexZ",1048,G__EventHandlingDict_558_0_19, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexClusterZ",1786,G__EventHandlingDict_558_0_20, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexRecoZ",1441,G__EventHandlingDict_558_0_21, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertex",958,G__EventHandlingDict_558_0_22, 117, G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexCluster",1696,G__EventHandlingDict_558_0_23, 117, G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVertexReco",1351,G__EventHandlingDict_558_0_24, 117, G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTimeInSpill",1418,G__EventHandlingDict_558_0_25, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDate",702,G__EventHandlingDict_558_0_26, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDownscaling",1465,G__EventHandlingDict_558_0_27, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getDownscalingFlag",1843,G__EventHandlingDict_558_0_28, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getErrorBit",1129,G__EventHandlingDict_558_0_29, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventDecoding",1631,G__EventHandlingDict_558_0_30, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventPad",1111,G__EventHandlingDict_558_0_31, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventRunNumber",1760,G__EventHandlingDict_558_0_32, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventSeqNumber",1748,G__EventHandlingDict_558_0_33, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventSize",1245,G__EventHandlingDict_558_0_34, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__EventHandlingDict_558_0_35, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getMuEmuTriggerDecision",2347,G__EventHandlingDict_558_0_36, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTBit",691,G__EventHandlingDict_558_0_37, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTime",719,G__EventHandlingDict_558_0_38, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTriggerDecision",1858,G__EventHandlingDict_558_0_39, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getVersion",1062,G__EventHandlingDict_558_0_40, 104, -1, G__defined_typename("UInt_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isNewDAQ",732,G__EventHandlingDict_558_0_41, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "new DAQ version (>= Sep03)", (void*) NULL, 0);
   G__memfunc_setup("isOldDAQ",721,G__EventHandlingDict_558_0_42, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", "old DAQ version (< Sep03)", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_558_0_43, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HEventHeader::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_558_0_44, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEventHeader::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_558_0_45, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HEventHeader::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_558_0_46, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HEventHeader::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_558_0_50, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_558_0_51, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEventHeader::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_558_0_52, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEventHeader::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_558_0_53, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HEventHeader::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_558_0_54, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HEventHeader::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HEventHeader", 1171, G__EventHandlingDict_558_0_55, (int) ('i'), G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader), -1, 0, 1, 1, 1, 0, "u 'HEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HEventHeader", 1297, G__EventHandlingDict_558_0_56, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_558_0_57, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader), -1, 1, 1, 1, 1, 0, "u 'HEventHeader' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHVertex(void) {
   /* HVertex */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex));
   G__memfunc_setup("HVertex",710,G__EventHandlingDict_560_0_1, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPos",638,G__EventHandlingDict_560_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HGeomVector' - 1 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setIterations",1390,G__EventHandlingDict_560_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "s - 'Short_t' 0 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__EventHandlingDict_560_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - c", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSumOfWeights",1553,G__EventHandlingDict_560_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - 'Float_t' 0 - sw", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getIterations",1378,G__EventHandlingDict_560_0_6, 115, -1, G__defined_typename("Short_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__EventHandlingDict_560_0_7, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSumOfWeights",1541,G__EventHandlingDict_560_0_8, 102, -1, G__defined_typename("Float_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getX",408,G__EventHandlingDict_560_0_9, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getY",409,G__EventHandlingDict_560_0_10, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getZ",410,G__EventHandlingDict_560_0_11, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPos",626,G__EventHandlingDict_560_0_12, 117, G__get_linked_tagnum(&G__EventHandlingDictLN_HGeomVector), -1, 1, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_560_0_13, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HVertex::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_560_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVertex::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_560_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HVertex::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_560_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HVertex::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_560_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_560_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVertex::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_560_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HVertex::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_560_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HVertex::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_560_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HVertex::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HVertex", 710, G__EventHandlingDict_560_0_25, (int) ('i'), G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex), -1, 0, 1, 1, 1, 0, "u 'HVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HVertex", 836, G__EventHandlingDict_560_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_560_0_27, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HVertex), -1, 1, 1, 1, 1, 0, "u 'HVertex' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHPartialEvent(void) {
   /* HPartialEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent));
   G__memfunc_setup("HPartialEvent",1303,G__EventHandlingDict_561_0_1, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HPartialEvent",1303,G__EventHandlingDict_561_0_2, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent), -1, 0, 3, 1, 1, 0, 
"C - 'Text_t' 10 - aName C - 'Text_t' 10 - aTitle "
"s - 'Cat_t' 0 - aBaseCat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getBaseCat",979,G__EventHandlingDict_561_0_3, 115, -1, G__defined_typename("Cat_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeBranch",1004,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TBranch' - 0 - parent U 'HTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateBranch",1439,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree i - 'Int_t' 0 - splitLevel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("addCategory",1127,G__EventHandlingDict_561_0_6, 121, -1, -1, 0, 2, 1, 1, 0, 
"s - 'Cat_t' 0 - aCat U 'HCategory' - 0 - category", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCategories",1350,G__EventHandlingDict_561_0_7, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCategory",1150,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HCategory), -1, 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - aCat", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("addCategory",1127,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"s - 'Cat_t' 0 - aCat U 'HCategory' - 0 - cat "
"C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("removeCategory",1484,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - aCat", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setRecLevel",1118,G__EventHandlingDict_561_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aRecLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecLevel",1106,G__EventHandlingDict_561_0_12, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSubHeader",1215,G__EventHandlingDict_561_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TObject' - 0 - header", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSubHeader",1203,G__EventHandlingDict_561_0_14, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TObject), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clearAll",800,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isEmpty",747,G__EventHandlingDict_561_0_17, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setExpandedStreamer",1976,G__EventHandlingDict_561_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasExpandedStreamer",1960,G__EventHandlingDict_561_0_20, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setPersistency",1509,G__EventHandlingDict_561_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - fPersistency", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_561_0_23, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HPartialEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_561_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPartialEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_561_0_25, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HPartialEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_561_0_26, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HPartialEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_561_0_30, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_561_0_31, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPartialEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_561_0_32, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPartialEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_561_0_33, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPartialEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_561_0_34, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPartialEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HPartialEvent", 1303, G__EventHandlingDict_561_0_35, (int) ('i'), G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent), -1, 0, 1, 1, 1, 0, "u 'HPartialEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HPartialEvent", 1429, G__EventHandlingDict_561_0_36, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_561_0_37, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent), -1, 1, 1, 1, 1, 0, "u 'HPartialEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHRecEvent(void) {
   /* HRecEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent));
   G__memfunc_setup("HRecEvent",868,G__EventHandlingDict_563_0_1, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("makeBranch",1004,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TBranch' - 0 - parent U 'HTree' - 0 - tree", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("activateBranch",1439,(G__InterfaceMethod) NULL,121, -1, -1, 0, 2, 1, 1, 0, 
"U 'TTree' - 0 - tree i - 'Int_t' 0 - splitLevel", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("newTrack",831,G__EventHandlingDict_563_0_4, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTrack), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addTrack",798,G__EventHandlingDict_563_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HTrack' - 1 - aTrack", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTrack",821,G__EventHandlingDict_563_0_6, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTrack), -1, 0, 1, 1, 1, 0, "h - 'UInt_t' 0 - aId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("clearTracks",1135,G__EventHandlingDict_563_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHeader",905,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HEventHeader), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setRecLevel",1118,G__EventHandlingDict_563_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - aRecLevel", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecLevel",1106,G__EventHandlingDict_563_0_10, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPartialEvent",1528,G__EventHandlingDict_563_0_11, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent), -1, 0, 3, 1, 1, 0, 
"s - 'Cat_t' 0 - eventCat C - 'Text_t' 10 - name "
"C - 'Text_t' 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPartialEvent",1528,G__EventHandlingDict_563_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HPartialEvent' - 0 - -", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPartialEvents",1666,G__EventHandlingDict_563_0_13, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPartialEvent",1551,G__EventHandlingDict_563_0_14, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HPartialEvent), -1, 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - idx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removePartialEvent",1885,G__EventHandlingDict_563_0_15, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - cat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("merge",528,G__EventHandlingDict_563_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HRecEvent' - 0 - ev", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCategory",1150,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HCategory), -1, 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - aCat", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("addCategory",1127,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 3, 1, 1, 0, 
"s - 'Cat_t' 0 - aCat U 'HCategory' - 0 - cat "
"C - 'Option_t' 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("removeCategory",1484,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "s - 'Cat_t' 0 - aCat", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Clear",487,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "C - 'Option_t' 10 '\"\"' opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("clearAll",800,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 0 - level", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setExpandedStreamer",1976,G__EventHandlingDict_563_0_24, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - t", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("hasExpandedStreamer",1960,G__EventHandlingDict_563_0_25, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_563_0_26, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HRecEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_563_0_27, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRecEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_563_0_28, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HRecEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_563_0_29, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HRecEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_563_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_563_0_34, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRecEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_563_0_35, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRecEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_563_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HRecEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_563_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HRecEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HRecEvent", 868, G__EventHandlingDict_563_0_38, (int) ('i'), G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent), -1, 0, 1, 1, 1, 0, "u 'HRecEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HRecEvent", 994, G__EventHandlingDict_563_0_39, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_563_0_40, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent), -1, 1, 1, 1, 1, 0, "u 'HRecEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHReconstructor(void) {
   /* HReconstructor */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HReconstructor));
   G__memfunc_setup("execute",755,G__EventHandlingDict_564_0_3, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("next",447,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "i - 'Int_t' 1 - errCode", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getTask",723,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 1, 1, 1, 0, "C - 'Char_t' 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("connectTask",1149,G__EventHandlingDict_564_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"U 'HTask' - 0 - task i - 'Int_t' 0 '0' n", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getTable",808,G__EventHandlingDict_564_0_7, 117, G__get_linked_tagnum(&G__EventHandlingDictLN_TObjArray), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getConnections",1475,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getComposite",1267,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTask), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("setActive",936,G__EventHandlingDict_564_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 - state", "*MENU*", (void*) NULL, 0);
   G__memfunc_setup("IsFolder",792,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Browse",626,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "U 'TBrowser' - 0 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isTimed",719,G__EventHandlingDict_564_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - 'Bool_t' 0 'kTRUE' flag", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("resetTimer",1060,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("printTimer",1070,(G__InterfaceMethod) NULL,121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__EventHandlingDict_564_0_16, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HReconstructor::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_564_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HReconstructor::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_564_0_18, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HReconstructor::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_564_0_19, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HReconstructor::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_564_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_564_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HReconstructor::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_564_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HReconstructor::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_564_0_26, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HReconstructor::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_564_0_27, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HReconstructor::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HReconstructor", 1603, G__EventHandlingDict_564_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParallelEvent(void) {
   /* HParallelEvent */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent));
   G__memfunc_setup("activateTree",1249,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'TTree' - 0 - tree", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParallelEvent",1399,G__EventHandlingDict_565_0_2, 105, G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent), -1, 0, 2, 1, 1, 0, 
"C - 'Text_t' 10 '\"\"' name C - 'Text_t' 10 '\"\"' title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getRecEvent",1116,G__EventHandlingDict_565_0_3, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HRecEvent), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTree",720,G__EventHandlingDict_565_0_4, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_HTree), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getFile",704,G__EventHandlingDict_565_0_5, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TFile), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEntry",850,G__EventHandlingDict_565_0_6, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 0, "i - 'Int_t' 0 - eventN", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCursor",958,G__EventHandlingDict_565_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setInputFile",1244,G__EventHandlingDict_565_0_8, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"u 'TString' - 0 - name g - 'Bool_t' 0 'kTRUE' print", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("closeInputFile",1446,G__EventHandlingDict_565_0_9, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("mergeGeantEvent",1537,G__EventHandlingDict_565_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HRecEvent' - 0 - targetEvent", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__EventHandlingDict_565_0_11, 85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParallelEvent::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__EventHandlingDict_565_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParallelEvent::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__EventHandlingDict_565_0_13, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParallelEvent::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__EventHandlingDict_565_0_14, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParallelEvent::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__EventHandlingDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__EventHandlingDict_565_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__EventHandlingDict_565_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParallelEvent::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__EventHandlingDict_565_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParallelEvent::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__EventHandlingDict_565_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParallelEvent::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__EventHandlingDict_565_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParallelEvent::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParallelEvent", 1399, G__EventHandlingDict_565_0_23, (int) ('i'), G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent), -1, 0, 1, 1, 1, 0, "u 'HParallelEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParallelEvent", 1525, G__EventHandlingDict_565_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__EventHandlingDict_565_0_25, (int) ('u'), G__get_linked_tagnum(&G__EventHandlingDictLN_HParallelEvent), -1, 1, 1, 1, 1, 0, "u 'HParallelEvent' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncEventHandlingDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
   G__memvar_setup((void*)(&gTree),85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_TTree),-1,-1,1,"gTree=",0,(char*)NULL);
   G__memvar_setup((void*)(&gHades),85,0,0,G__get_linked_tagnum(&G__EventHandlingDictLN_Hades),-1,-1,1,"gHades=",0,(char*)NULL);
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalEventHandlingDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcEventHandlingDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__EventHandlingDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TList = { "TList" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TBrowser = { "TBrowser" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TObjArray = { "TObjArray" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TClonesArray = { "TClonesArray" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TAttFill = { "TAttFill" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TBranch = { "TBranch" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TAttLine = { "TAttLine" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TAttMarker = { "TAttMarker" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TArrayI = { "TArrayI" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HTree = { "HTree" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TStopwatch = { "TStopwatch" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HDataSource = { "HDataSource" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HldFileOutput = { "HldFileOutput" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HEvent = { "HEvent" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HRuntimeDb = { "HRuntimeDb" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HTask = { "HTask" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HTaskSet = { "HTaskSet" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HSpectrometer = { "HSpectrometer" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_Hades = { "Hades" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HMessageMgr = { "HMessageMgr" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HGeantMedia = { "HGeantMedia" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HSrcKeeper = { "HSrcKeeper" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HCategory = { "HCategory" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HParIo = { "HParIo" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HDetector = { "HDetector" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HEventHeader = { "HEventHeader" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HGeomVector = { "HGeomVector" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HVertex = { "HVertex" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HPartialEvent = { "HPartialEvent" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HTrack = { "HTrack" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HRecEvent = { "HRecEvent" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HReconstructor = { "HReconstructor" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HParallelEvent = { "HParallelEvent" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_HGeomShapes = { "HGeomShapes" , 99 , -1 };
G__linked_taginfo G__EventHandlingDictLN_TOrdCollection = { "TOrdCollection" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableEventHandlingDict() {
  G__EventHandlingDictLN_TClass.tagnum = -1 ;
  G__EventHandlingDictLN_TBuffer.tagnum = -1 ;
  G__EventHandlingDictLN_TMemberInspector.tagnum = -1 ;
  G__EventHandlingDictLN_TObject.tagnum = -1 ;
  G__EventHandlingDictLN_TNamed.tagnum = -1 ;
  G__EventHandlingDictLN_TString.tagnum = -1 ;
  G__EventHandlingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__EventHandlingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventHandlingDictLN_TList.tagnum = -1 ;
  G__EventHandlingDictLN_TBrowser.tagnum = -1 ;
  G__EventHandlingDictLN_TObjArray.tagnum = -1 ;
  G__EventHandlingDictLN_TClonesArray.tagnum = -1 ;
  G__EventHandlingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__EventHandlingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__EventHandlingDictLN_TAttFill.tagnum = -1 ;
  G__EventHandlingDictLN_TTree.tagnum = -1 ;
  G__EventHandlingDictLN_TFile.tagnum = -1 ;
  G__EventHandlingDictLN_TBranch.tagnum = -1 ;
  G__EventHandlingDictLN_TAttLine.tagnum = -1 ;
  G__EventHandlingDictLN_TAttMarker.tagnum = -1 ;
  G__EventHandlingDictLN_TArrayI.tagnum = -1 ;
  G__EventHandlingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__EventHandlingDictLN_HTree.tagnum = -1 ;
  G__EventHandlingDictLN_TStopwatch.tagnum = -1 ;
  G__EventHandlingDictLN_HDataSource.tagnum = -1 ;
  G__EventHandlingDictLN_HldFileOutput.tagnum = -1 ;
  G__EventHandlingDictLN_HEvent.tagnum = -1 ;
  G__EventHandlingDictLN_HRuntimeDb.tagnum = -1 ;
  G__EventHandlingDictLN_HTask.tagnum = -1 ;
  G__EventHandlingDictLN_HTaskSet.tagnum = -1 ;
  G__EventHandlingDictLN_HSpectrometer.tagnum = -1 ;
  G__EventHandlingDictLN_Hades.tagnum = -1 ;
  G__EventHandlingDictLN_HMessageMgr.tagnum = -1 ;
  G__EventHandlingDictLN_HGeantMedia.tagnum = -1 ;
  G__EventHandlingDictLN_HSrcKeeper.tagnum = -1 ;
  G__EventHandlingDictLN_HCategory.tagnum = -1 ;
  G__EventHandlingDictLN_HParIo.tagnum = -1 ;
  G__EventHandlingDictLN_HDetector.tagnum = -1 ;
  G__EventHandlingDictLN_HEventHeader.tagnum = -1 ;
  G__EventHandlingDictLN_HGeomVector.tagnum = -1 ;
  G__EventHandlingDictLN_HVertex.tagnum = -1 ;
  G__EventHandlingDictLN_HPartialEvent.tagnum = -1 ;
  G__EventHandlingDictLN_HTrack.tagnum = -1 ;
  G__EventHandlingDictLN_HRecEvent.tagnum = -1 ;
  G__EventHandlingDictLN_HReconstructor.tagnum = -1 ;
  G__EventHandlingDictLN_HParallelEvent.tagnum = -1 ;
  G__EventHandlingDictLN_HGeomShapes.tagnum = -1 ;
  G__EventHandlingDictLN_TOrdCollection.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableEventHandlingDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TString);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TList);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TBrowser);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TObjArray);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TClonesArray);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TAttFill);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TBranch);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TAttLine);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TAttMarker);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TArrayI);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HTree),sizeof(HTree),-1,62720,"TTree implementing a modified split algorithm",G__setup_memvarHTree,G__setup_memfuncHTree);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TStopwatch);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HDataSource);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HldFileOutput);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HEvent),sizeof(HEvent),-1,128262,"Base class for the HADES event",G__setup_memvarHEvent,G__setup_memfuncHEvent);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HRuntimeDb);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HTask),sizeof(HTask),-1,62729,"ABC for a task",G__setup_memvarHTask,G__setup_memfuncHTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HTaskSet),sizeof(HTaskSet),-1,128768,"Set of tasks",G__setup_memvarHTaskSet,G__setup_memfuncHTaskSet);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HSpectrometer),sizeof(HSpectrometer),-1,128256,"Class for the spectrometer configuration",G__setup_memvarHSpectrometer,G__setup_memfuncHSpectrometer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_Hades),sizeof(Hades),-1,95488,"Control class for Hades reconstruction",G__setup_memvarHades,G__setup_memfuncHades);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HMessageMgr);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HGeantMedia);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HSrcKeeper);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HCategory);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HParIo);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HDetector),sizeof(HDetector),-1,62720,"Detector's descriptor.",G__setup_memvarHDetector,G__setup_memfuncHDetector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HEventHeader),sizeof(HEventHeader),-1,95488,"HADES event header class",G__setup_memvarHEventHeader,G__setup_memfuncHEventHeader);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HGeomVector);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HVertex),sizeof(HVertex),-1,95488,"Event primary vertex",G__setup_memvarHVertex,G__setup_memfuncHVertex);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HPartialEvent),sizeof(HPartialEvent),-1,128256,"Event data corresponding to each main detector",G__setup_memvarHPartialEvent,G__setup_memfuncHPartialEvent);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HTrack);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HRecEvent),sizeof(HRecEvent),-1,128256,"A HADES event under reconstruction",G__setup_memvarHRecEvent,G__setup_memfuncHRecEvent);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HReconstructor),sizeof(HReconstructor),-1,62723,"Reconstruction algorithm Class ",G__setup_memvarHReconstructor,G__setup_memfuncHReconstructor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HParallelEvent),sizeof(HParallelEvent),-1,62720,"A task to create an fitered  root output",G__setup_memvarHParallelEvent,G__setup_memfuncHParallelEvent);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_HGeomShapes);
   G__get_linked_tagnum_fwd(&G__EventHandlingDictLN_TOrdCollection);
}
extern "C" void G__cpp_setupEventHandlingDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupEventHandlingDict()");
  G__set_cpp_environmentEventHandlingDict();
  G__cpp_setup_tagtableEventHandlingDict();

  G__cpp_setup_inheritanceEventHandlingDict();

  G__cpp_setup_typetableEventHandlingDict();

  G__cpp_setup_memvarEventHandlingDict();

  G__cpp_setup_memfuncEventHandlingDict();
  G__cpp_setup_globalEventHandlingDict();
  G__cpp_setup_funcEventHandlingDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncEventHandlingDict();
  return;
}
class G__cpp_setup_initEventHandlingDict {
  public:
    G__cpp_setup_initEventHandlingDict() { G__add_setup_func("EventHandlingDict",(G__incsetup)(&G__cpp_setupEventHandlingDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initEventHandlingDict() { G__remove_setup_func("EventHandlingDict"); }
};
G__cpp_setup_initEventHandlingDict G__cpp_setup_initializerEventHandlingDict;

